syntax="proto3";

package api;

import "google/api/annotations.proto";


message Bytes {
    bytes bits =1;
}

message Bool {
    bool answer =1;
}

message StringArray {
    repeated string strings=1;
}

message StringMap {
    map<string, string> string_map=1;
}

message Empty {}

message Identifier {
    string id=1;
}

message Message {
    string value = 1;
}

message Secret {
    string text =1;
}

service UtilityService {
    rpc Echo(Message) returns (Message) {
        option (google.api.http) = {
      post: "/utility/echo"
      body: "*"
    };
    }
    rpc EchoSpanish(Message) returns (Message) {
        option (google.api.http) = {
      post: "/utility/echo/spanish"
      body: "*"
    };
    }
    rpc EchoChinese(Message) returns (Message) {
        option (google.api.http) = {
      post: "/utility/echo/chinese"
      body: "*"
    };
    }
    rpc EchoEnglish(Message) returns (Message) {
        option (google.api.http) = {
      post: "/utility/echo/english"
      body: "*"
    };
    }
    rpc EchoHindi(Message) returns (Message) {
        option (google.api.http) = {
      post: "/utility/echo/hindi"
      body: "*"
    };
    }
    rpc EchoArabic(Message) returns (Message) {
        option (google.api.http) = {
      post: "/utility/echo/arabic"
      body: "*"
    };
    }
    rpc MarshalJSON(Bytes) returns (Bytes) {
        option (google.api.http) = {
      post: "/utility/marshal/json"
      body: "*"
    };
    }
    rpc MarshalYAML(Bytes) returns (Bytes) {
        option (google.api.http) = {
      post: "/utility/marshal/yaml"
      body: "*"
    };
    }
    rpc MarshalXML(Bytes) returns (Bytes) {
        option (google.api.http) = {
      post: "/utility/marshal/xml"
      body: "*"
    };
    }
    rpc Render(RenderRequest) returns (Bytes) {
        option (google.api.http) = {
      post: "/utility/render"
      body: "*"
    };
    }

}

service ContactService {
    rpc SendSMS(SMS) returns (Bytes) {
        option (google.api.http) = {
      post: "/contact/sms/{to}"
      body: "*"
    };
    }
    rpc SendSMSBlast(SMSBlast) returns (stream Bytes) {
        option (google.api.http) = {
      post: "/contact/sms/blast"
      body: "*"
    };
    }
    rpc GetSMS(Identifier) returns (Bytes) {
        option (google.api.http) = {
      post: "/contact/sms/{id}"
      body: "*"
    };
    }
    rpc SendEmail(EmailRequest) returns (Message) {
        option (google.api.http) = {
      post: "/contact/email/{email.address}"
      body: "*"
    };
    }
    rpc SendEmailBlast(EmailBlastRequest) returns (stream Message) {
        option (google.api.http) = {
      post: "/contact/email/blast"
      body: "*"
    };
    }
    rpc SendCall(Call) returns (Bytes) {
        option (google.api.http) = {
      post: "/contact/call/{to}"
      body: "*"
    };
    }
    rpc SendCallBlast(CallBlast) returns (stream Bytes) {
        option (google.api.http) = {
      post: "/contact/call/blast"
      body: "*"
    };
    }
    rpc SearchPhoneNumber(SearchPhoneNumberRequest) returns (stream PhoneNumber) {
          option (google.api.http) = {
      post: "/contact/numbers/{state}"
      body: "*"
    };
    }

}

service PaymentService {
    rpc Subscribe(SubscribeRequest) returns (Bytes) {
        option (google.api.http) = {
      post: "/payment/subscribe/{email}"
      body: "*"
    };
    }
    rpc Unsubscribe(UnSubscribeRequest) returns (Bytes) {
        option (google.api.http) = {
      post: "/payment/unsubscribe/{email}"
      body: "*"
    };
    }
    rpc PurchasePhoneNumber(PhoneNumber) returns (PhoneNumberResource) {
        option (google.api.http) = {
      post: "/payment/number/{phone_number}"
      body: "*"
    };
    }
}

service ResourceService {
    rpc GetResource(ResourceRequest) returns (Bytes) {
        option (google.api.http) = {
      post: "/resource"
      body: "*"
    };
    }
}

service UserService {
    rpc QueryUsers(TokenQuery) returns (stream User) {
        option (google.api.http) = {
      post: "/resource/user/query"
      body: "*"
    };
    }
    rpc CreateUser(Bytes) returns (User) {
        option (google.api.http) = {
      post: "/resource/user/create"
      body: "*"
    };
    }
    rpc GetUser(Identifier) returns (User) {
        option (google.api.http) = {
      post: "/resource/user/get"
      body: "*"
    };
    }
    rpc DeleteUser(Identifier) returns (User) {
        option (google.api.http) = {
      post: "/resource/user/get"
      body: "*"
    };
    }
    rpc UpdateUser(IDBody) returns (User) {
        option (google.api.http) = {
      post: "/resource/user/update"
      body: "*"
    };
    }
    rpc UserExists(Identifier) returns (Bool) {
        option (google.api.http) = {
      post: "/resource/user/exists"
      body: "*"
    };
    }
    rpc UserRoles(Identifier) returns (stream Role) {
        option (google.api.http) = {
      post: "/resource/user/roles"
      body: "*"
    };
    }
    rpc AssignRole(IDStrings) returns (stream Role) {
        option (google.api.http) = {
      post: "/resource/user/roles"
      body: "*"
    };
    }


}

message ResourceRequest {
    Token token= 1;
    HTTPMethod method=2;
    string domain=3;
    URL url =4;
    StringMap form =5;
    Bytes body =6;
}

message SubscribeRequest {
    string email=1;
    Plan plan =2;
    Card card =3;
}

message UnSubscribeRequest {
    string email=1;
    Plan plan =2;
}

message Card {
    string number=1;
    string exp_month=2;
    string exp_year =3;
    string cvc=4;
}


message SMS {
    string service =1;
    string to =2;
    Message message=3;
    string mediaURL =4;
    string callback=5;
    string app=6;
}

message SMSBlast {
    string service =1;
    StringArray to =2;
    Message message=3;
    string mediaURL =4;
    string callback=5;
    string app=6;
}

message EmailRequest {
    string from_name =1;
    string from_email =2;
    Email email =3;
}

message EmailBlastRequest {
    string from_name =1;
    string from_email =2;
    EmailBlast blast =3;
}

message EmailBlast {
    StringMap name_address =1;
    string subject =2;
    string plain=3;
    string html=4;
}

message Email {
    string name =1;
    string address =2;
    string subject =3;
    string plain=4;
    string html=5;
}

message Call {
    string from=1;
    string to =2;
    string app=3;
}

message CallBlast {
    string from=1;
    StringArray to =2;
    string app=3;
}


message User {
    string user_id=1;
    string name=2;
    string given_name=3;
    string family_name=4;
    string gender =5;
    string birthdate=6;
    string email=7;
    string phone_number=8;
    string picture=9;
    StringMap user_metadata=10;
    StringMap app_metadata=11;
    string last_ip =12;
    bool blocked =13;
    string nickname =14;
    StringArray multifactor=15;
    string created_at=17;
    string updated_at=18;
    bool phone_verified=19;
    bool email_verified=20;
    string password=21;
    repeated Identity identities =22;
}

message Identity{
    string connection =1;
    string user_id=2;
    string provider=3;
    string isSocial=4;
}

message Auth {
    string domain =1;
    string client_id=2;
    string client_secret=3;
    string redirect=4;
    repeated Scope scopes=5;
}


message Template {
    string name =1;
    string text =2;
}

message JSONWebKeys {
    string kty =1;
    string kid =2;
    string use =3;
    string n =4;
    string e =5;
    StringArray x5c =6;
}

message Jwks {
    repeated JSONWebKeys keys=1;
}

enum Scope {
    OPENID =0;
    PROFILE =1;
    EMAIL =2;
    READ_USERS=3;
    READ_USER_IDP_TOKENS=4;
    CREATE_USERS=5;
    READ_STATS=6;
    READ_EMAIL_TEMPLATES =7;
    UPDATE_EMAIL_TEMPLATES=8;
    CREATE_EMAIL_TEMPLATES=9;
    READ_RULES =10;
    UPDATE_RULES=11;
    CREATE_RULES=12;
    DELETE_RULES=13;
    READ_ROLES =14;
    UPDATE_ROLES=15;
    CREATE_ROLES=16;
    DELETE_ROLES=17;
    READ_LOGS=18;
}

enum URL {
    USER_INFOURL =0;
    TOKENURL =1;
    AUTHORIZEURL =2;
    USERSURL=3;
    CLIENTSURL=4;
    GRANTSURL=5;
    RULESURL=6;
    ROLESURL =7;
    LOGSURL=8;
    STATSURL=9;
    CONNECTIONSURL =10;
    TENANTSURL=11;
    EMAIL_TEMPLATEURL=12;
    EMAILURL =13;
    SEARCH_USERSURL=14;
    DEVICEURL =18;
    JWKSURL =19;
    CLIENT_GRANTSURL =20;
}

enum HTTPMethod {
    GET =0;
    POST=1;
    PATCH=2;
}

enum Plan {
    FREE =0;
    BASIC=1;
    PREMIUM=2;
}

message HTTPRequest {
    HTTPMethod method=1;
    string url =2;
    StringMap form =3;
    Bytes body =4;
}

message RenderRequest {
    Template template=1;
    Bytes data=2;
}

message SearchPhoneNumberRequest {
    string state =1;
    NumberCapabilities capabilities =2;
    int64 total_results=3;
}

message PhoneNumber {
    string friendly_name=1;
    string phone_number=2;
    string region=3;
    NumberCapabilities capabilities =4;
}

message NumberCapabilities {
    bool voice =1;
    bool sms=2;
    bool mms=3;
}

message PhoneNumberResource {
   PhoneNumber number=1;
   string id =2;
   string uri=3;
}

message Token {
    string access_token=1;
    string token_type=2;
    string refresh_token =3;
    string expiry =4;
    string id_token=5;
}

message Query {
    string lucene =1;
}

message TokenQuery {
    Token token =1;
    Query  query =2;
}

message IDBody {
    Identifier id =1;
    Bytes  body =2;
}

message IDStrings {
    Identifier id =1;
    StringArray  strings =2;
}

message Role {
    string id=1;
    string name=2;
    string description=3;
}
