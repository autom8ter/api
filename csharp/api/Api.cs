// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Api {

  /// <summary>Holder for reflection information generated from api.proto</summary>
  public static partial class ApiReflection {

    #region Descriptor
    /// <summary>File descriptor for api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglhcGkucHJvdG8SA2FwaRocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90",
            "bxoTY29tbW9uL2NvbW1vbi5wcm90byIxCg1DYXRlZ29yeVF1ZXJ5EiAKCGNh",
            "dGVnb3J5GAEgASgLMg4uY29tbW9uLlN0cmluZyJTCg1Eb2N1bWVudFF1ZXJ5",
            "EiAKCGNhdGVnb3J5GAEgASgLMg4uY29tbW9uLlN0cmluZxIgCgRuYW1lGAIg",
            "ASgLMhIuY29tbW9uLklkZW50aWZpZXIiUgoTQWRkVXNlclJvbGVzUmVxdWVz",
            "dBIhCgVlbWFpbBgBIAEoCzISLmNvbW1vbi5JZGVudGlmaWVyEhgKBXJvbGVz",
            "GAIgAygLMgkuYXBpLlJvbGUicAoQU3Vic2NyaWJlUmVxdWVzdBIhCgVlbWFp",
            "bBgBIAEoCzISLmNvbW1vbi5JZGVudGlmaWVyEiAKBHBsYW4YAiABKAsyEi5j",
            "b21tb24uSWRlbnRpZmllchIXCgRjYXJkGAMgASgLMgkuYXBpLkNhcmQiVQoS",
            "VW5TdWJzY3JpYmVSZXF1ZXN0EiEKBWVtYWlsGAEgASgLMhIuY29tbW9uLklk",
            "ZW50aWZpZXISHAoEcGxhbhgCIAEoCzIOLmNvbW1vbi5TdHJpbmcijAEKBENh",
            "cmQSIgoGbnVtYmVyGAEgASgLMhIuY29tbW9uLklkZW50aWZpZXISIQoJZXhw",
            "X21vbnRoGAIgASgLMg4uY29tbW9uLlN0cmluZxIgCghleHBfeWVhchgDIAEo",
            "CzIOLmNvbW1vbi5TdHJpbmcSGwoDY3ZjGAQgASgLMg4uY29tbW9uLlN0cmlu",
            "ZyL7BQoEVXNlchIjCgd1c2VyX2lkGAEgASgLMhIuY29tbW9uLklkZW50aWZp",
            "ZXISHAoEbmFtZRgCIAEoCzIOLmNvbW1vbi5TdHJpbmcSIgoKZ2l2ZW5fbmFt",
            "ZRgDIAEoCzIOLmNvbW1vbi5TdHJpbmcSIwoLZmFtaWx5X25hbWUYBCABKAsy",
            "Di5jb21tb24uU3RyaW5nEh4KBmdlbmRlchgFIAEoCzIOLmNvbW1vbi5TdHJp",
            "bmcSIQoJYmlydGhkYXRlGAYgASgLMg4uY29tbW9uLlN0cmluZxIhCgVlbWFp",
            "bBgHIAEoCzISLmNvbW1vbi5JZGVudGlmaWVyEigKDHBob25lX251bWJlchgI",
            "IAEoCzISLmNvbW1vbi5JZGVudGlmaWVyEh8KB3BpY3R1cmUYCSABKAsyDi5j",
            "b21tb24uU3RyaW5nEiAKCG5pY2tuYW1lGA4gASgLMg4uY29tbW9uLlN0cmlu",
            "ZxIoCg11c2VyX21ldGFkYXRhGAogASgLMhEuY29tbW9uLlN0cmluZ01hcBIn",
            "CgxhcHBfbWV0YWRhdGEYCyABKAsyES5jb21tb24uU3RyaW5nTWFwEh8KB2xh",
            "c3RfaXAYDCABKAsyDi5jb21tb24uU3RyaW5nEh0KB2Jsb2NrZWQYDSABKAsy",
            "DC5jb21tb24uQm9vbBIoCgttdWx0aWZhY3RvchgPIAEoCzITLmNvbW1vbi5T",
            "dHJpbmdBcnJheRIiCgpjcmVhdGVkX2F0GBEgASgLMg4uY29tbW9uLlN0cmlu",
            "ZxIiCgp1cGRhdGVkX2F0GBIgASgLMg4uY29tbW9uLlN0cmluZxIkCg5waG9u",
            "ZV92ZXJpZmllZBgTIAEoCzIMLmNvbW1vbi5Cb29sEiQKDmVtYWlsX3Zlcmlm",
            "aWVkGBQgASgLMgwuY29tbW9uLkJvb2wSIAoIcGFzc3dvcmQYFSABKAsyDi5j",
            "b21tb24uU3RyaW5nEiEKCmlkZW50aXRpZXMYFiADKAsyDS5hcGkuSWRlbnRp",
            "dHkijgEKDFVzZXJNZXRhZGF0YRIeCgZzdGF0dXMYASABKAsyDi5jb21tb24u",
            "U3RyaW5nEh4KA2JpbxgCIAEoCzIRLmNvbW1vbi5TdHJpbmdNYXASHQoHYWRk",
            "cmVzcxgDIAEoCzIMLmFwaS5BZGRyZXNzEh8KBHRhZ3MYBCABKAsyES5jb21t",
            "b24uU3RyaW5nTWFwIqEBCgdBZGRyZXNzEhwKBGNpdHkYASABKAsyDi5jb21t",
            "b24uU3RyaW5nEh0KBXN0YXRlGAIgASgLMg4uY29tbW9uLlN0cmluZxIdCgVs",
            "aW5lMRgDIAEoCzIOLmNvbW1vbi5TdHJpbmcSHQoFbGluZTIYBCABKAsyDi5j",
            "b21tb24uU3RyaW5nEhsKA3ppcBgFIAEoCzIOLmNvbW1vbi5TdHJpbmcilQEK",
            "C0FwcE1ldGFkYXRhEiMKC2Rlc2NyaXB0aW9uGAEgASgLMg4uY29tbW9uLlN0",
            "cmluZxInCg9hY2NvdW50X2JhbGFuY2UYAiABKAsyDi5jb21tb24uU3RyaW5n",
            "EhcKBHBsYW4YAyABKAsyCS5hcGkuUGxhbhIfCgR0YWdzGAQgASgLMhEuY29t",
            "bW9uLlN0cmluZ01hcCLGAQoEUGxhbhIeCgJpZBgBIAEoCzISLmNvbW1vbi5J",
            "ZGVudGlmaWVyEhwKBmFjdGl2ZRgCIAEoCzIMLmNvbW1vbi5Cb29sEh0KBmFt",
            "b3VudBgDIAEoCzINLmNvbW1vbi5JbnQ2NBIgCghpbnRlcnZhbBgEIAEoCzIO",
            "LmNvbW1vbi5TdHJpbmcSIAoIbmlja25hbWUYBSABKAsyDi5jb21tb24uU3Ry",
            "aW5nEh0KB3Byb2R1Y3QYBiABKAsyDC5hcGkuUHJvZHVjdCJrCgdQcm9kdWN0",
            "Eh4KAmlkGAEgASgLMhIuY29tbW9uLklkZW50aWZpZXISIwoLZGVzY3JpcHRp",
            "b24YAiABKAsyDi5jb21tb24uU3RyaW5nEhsKA3VybBgDIAEoCzIOLmNvbW1v",
            "bi5TdHJpbmcilQEKCElkZW50aXR5EiIKCmNvbm5lY3Rpb24YASABKAsyDi5j",
            "b21tb24uU3RyaW5nEiMKB3VzZXJfaWQYAiABKAsyEi5jb21tb24uSWRlbnRp",
            "ZmllchIgCghwcm92aWRlchgDIAEoCzIOLmNvbW1vbi5TdHJpbmcSHgoIaXNT",
            "b2NpYWwYBCABKAsyDC5jb21tb24uQm9vbCJpCgRSb2xlEh4KAmlkGAEgASgL",
            "MhIuY29tbW9uLklkZW50aWZpZXISHAoEbmFtZRgCIAEoCzIOLmNvbW1vbi5T",
            "dHJpbmcSIwoLZGVzY3JpcHRpb24YAyABKAsyDi5jb21tb24uU3RyaW5nIvwB",
            "CgZPQXV0aDISIQoJY2xpZW50X2lkGAEgASgLMg4uY29tbW9uLlN0cmluZxIl",
            "Cg1jbGllbnRfc2VjcmV0GAIgASgLMg4uY29tbW9uLlN0cmluZxIhCgl0b2tl",
            "bl91cmwYAyABKAsyDi5jb21tb24uU3RyaW5nEiAKCGF1dGhfdXJsGAQgASgL",
            "Mg4uY29tbW9uLlN0cmluZxIjCgZzY29wZXMYBSABKAsyEy5jb21tb24uU3Ry",
            "aW5nQXJyYXkSIAoIcmVkaXJlY3QYBiABKAsyDi5jb21tb24uU3RyaW5nEhwK",
            "BGNvZGUYByABKAsyDi5jb21tb24uU3RyaW5nItEBChFDbGllbnRDcmVkZW50",
            "aWFscxIhCgljbGllbnRfaWQYASABKAsyDi5jb21tb24uU3RyaW5nEiUKDWNs",
            "aWVudF9zZWNyZXQYAiABKAsyDi5jb21tb24uU3RyaW5nEiEKCXRva2VuX3Vy",
            "bBgDIAEoCzIOLmNvbW1vbi5TdHJpbmcSIwoGc2NvcGVzGAQgASgLMhMuY29t",
            "bW9uLlN0cmluZ0FycmF5EioKD2VuZHBvaW50X3BhcmFtcxgFIAEoCzIRLmNv",
            "bW1vbi5TdHJpbmdNYXAiiwIKA0pXVBIdCgVlbWFpbBgBIAEoCzIOLmNvbW1v",
            "bi5TdHJpbmcSEwoLcHJpdmF0ZV9rZXkYAiABKAwSJAoMcHJpdmVfa2V5X2lk",
            "GAMgASgLMg4uY29tbW9uLlN0cmluZxIfCgdzdWJqZWN0GAQgASgLMg4uY29t",
            "bW9uLlN0cmluZxIjCgZzY29wZXMYBSABKAsyEy5jb21tb24uU3RyaW5nQXJy",
            "YXkSIQoJdG9rZW5fdXJsGAYgASgLMg4uY29tbW9uLlN0cmluZxIfCgdleHBp",
            "cmVzGAcgASgLMg4uY29tbW9uLlN0cmluZxIgCghhdWRpZW5jZRgIIAEoCzIO",
            "LmNvbW1vbi5TdHJpbmciPAoVRGVmYXVsdEdDUENyZWRlbnRpYWxzEiMKBnNj",
            "b3BlcxgBIAEoCzITLmNvbW1vbi5TdHJpbmdBcnJheSJGCgVRdWVyeRIdCgVx",
            "dWVyeRgEIAEoCzIOLmNvbW1vbi5TdHJpbmcSHgoGZmllbGRzGAUgASgLMg4u",
            "Y29tbW9uLlN0cmluZyK4AgoFRXZlbnQSHAoEZGF0ZRgBIAEoCzIOLmNvbW1v",
            "bi5TdHJpbmcSHAoEdHlwZRgCIAEoCzIOLmNvbW1vbi5TdHJpbmcSIQoJY2xp",
            "ZW50X2lkGAMgASgLMg4uY29tbW9uLlN0cmluZxIjCgtjbGllbnRfbmFtZRgE",
            "IAEoCzIOLmNvbW1vbi5TdHJpbmcSGgoCaXAYBSABKAsyDi5jb21tb24uU3Ry",
            "aW5nEiUKDWxvY2F0aW9uX2luZm8YBiABKAsyDi5jb21tb24uU3RyaW5nEh8K",
            "B2RldGFpbHMYByABKAsyDi5jb21tb24uU3RyaW5nEh8KB3VzZXJfaWQYCCAB",
            "KAsyDi5jb21tb24uU3RyaW5nEiYKC2Fubm90YXRpb25zGAkgASgLMhEuY29t",
            "bW9uLlN0cmluZ01hcCKMAQoKRXZlbnRRdWVyeRIcCgRkYXRlGAEgASgLMg4u",
            "Y29tbW9uLlN0cmluZxIcCgR0eXBlGAIgASgLMg4uY29tbW9uLlN0cmluZxIh",
            "CgljbGllbnRfaWQYAyABKAsyDi5jb21tb24uU3RyaW5nEh8KB3VzZXJfaWQY",
            "BCABKAsyDi5jb21tb24uU3RyaW5nIsABCgtKU09OV2ViS2V5cxIbCgNrdHkY",
            "ASABKAsyDi5jb21tb24uU3RyaW5nEh8KA2tpZBgCIAEoCzISLmNvbW1vbi5J",
            "ZGVudGlmaWVyEhsKA3VzZRgDIAEoCzIOLmNvbW1vbi5TdHJpbmcSGQoBbhgE",
            "IAEoCzIOLmNvbW1vbi5TdHJpbmcSGQoBZRgFIAEoCzIOLmNvbW1vbi5TdHJp",
            "bmcSIAoDeDVjGAYgASgLMhMuY29tbW9uLlN0cmluZ0FycmF5IiYKBEp3a3MS",
            "HgoEa2V5cxgBIAMoCzIQLmFwaS5KU09OV2ViS2V5cyJrCghEb2N1bWVudBIg",
            "CghjYXRlZ29yeRgBIAEoCzIOLmNvbW1vbi5TdHJpbmcSHAoEbmFtZRgCIAEo",
            "CzIOLmNvbW1vbi5TdHJpbmcSHwoEZGF0YRgDIAEoCzIRLmNvbW1vbi5TdHJp",
            "bmdNYXAySQoMRGVidWdTZXJ2aWNlEjkKBEVjaG8SDi5jb21tb24uU3RyaW5n",
            "Gg4uY29tbW9uLlN0cmluZyIRgtPkkwILIgYvZGVidWc6ASoypwEKE1N1YnNj",
            "cmlwdGlvblNlcnZpY2USRAoJU3Vic2NyaWJlEhUuYXBpLlN1YnNjcmliZVJl",
            "cXVlc3QaCS5hcGkuVXNlciIVgtPkkwIPIgovc3Vic2NyaWJlOgEqEkoKC1Vu",
            "c3Vic2NyaWJlEhcuYXBpLlVuU3Vic2NyaWJlUmVxdWVzdBoJLmFwaS5Vc2Vy",
            "IheC0+STAhEiDC91bnN1YnNjcmliZToBKjJcChVBdXRoZW50aWNhdGlvblNl",
            "cnZpY2USQwoHR2V0VXNlchIRLmNvbW1vbi5BdXRoVG9rZW4aCS5hcGkuVXNl",
            "ciIagtPkkwIUIg8vYXV0aGVudGljYXRpb246ASoymAMKC1VzZXJTZXJ2aWNl",
            "EkgKClF1ZXJ5VXNlcnMSCi5hcGkuUXVlcnkaCS5hcGkuVXNlciIhgtPkkwIb",
            "IhYvbWFuYWdlbWVudC91c2VyL3F1ZXJ5OgEqMAESSQoHR2V0VXNlchISLmNv",
            "bW1vbi5JZGVudGlmaWVyGgkuYXBpLlVzZXIiH4LT5JMCGSIUL21hbmFnZW1l",
            "bnQvdXNlci9nZXQ6ASoSRgoKVXBkYXRlVXNlchIJLmFwaS5Vc2VyGgkuYXBp",
            "LlVzZXIiIoLT5JMCHCIXL21hbmFnZW1lbnQvdXNlci91cGRhdGU6ASoSTwoJ",
            "VXNlclJvbGVzEhIuY29tbW9uLklkZW50aWZpZXIaCS5hcGkuUm9sZSIhgtPk",
            "kwIbIhYvbWFuYWdlbWVudC91c2VyL3JvbGVzOgEqMAESWwoMQWRkVXNlclJv",
            "bGVzEhguYXBpLkFkZFVzZXJSb2xlc1JlcXVlc3QaDi5jb21tb24uU3RyaW5n",
            "IiGC0+STAhsiFi9tYW5hZ2VtZW50L3VzZXIvcm9sZXM6ASoyTgoMRXZlbnRT",
            "ZXJ2aWNlEj4KCUdldEV2ZW50cxIPLmFwaS5FdmVudFF1ZXJ5GgouYXBpLkV2",
            "ZW50IhKC0+STAgwiBy9ldmVudHM6ASowATKDAwoPRG9jdW1lbnRTZXJ2aWNl",
            "EkcKC0dldERvY3VtZW50EhIuYXBpLkRvY3VtZW50UXVlcnkaDS5hcGkuRG9j",
            "dW1lbnQiFYLT5JMCDyIKL2RvY3VtZW50czoBKhJECgZVcGRhdGUSDS5hcGku",
            "RG9jdW1lbnQaDS5jb21tb24uRW1wdHkiHILT5JMCFiIRL2RvY3VtZW50cy91",
            "cGRhdGU6ASoSRAoGQ3JlYXRlEg0uYXBpLkRvY3VtZW50Gg0uY29tbW9uLkVt",
            "cHR5IhyC0+STAhYiES9kb2N1bWVudHMvY3JlYXRlOgEqEkkKBkRlbGV0ZRIS",
            "LmFwaS5Eb2N1bWVudFF1ZXJ5Gg0uY29tbW9uLkVtcHR5IhyC0+STAhYiES9k",
            "b2N1bWVudHMvY3JlYXRlOgEqElAKDUxpc3REb2N1bWVudHMSEi5hcGkuQ2F0",
            "ZWdvcnlRdWVyeRoNLmFwaS5Eb2N1bWVudCIagtPkkwIUIg8vZG9jdW1lbnRz",
            "L2xpc3Q6ASowAWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Common.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.CategoryQuery), global::Api.CategoryQuery.Parser, new[]{ "Category" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.DocumentQuery), global::Api.DocumentQuery.Parser, new[]{ "Category", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.AddUserRolesRequest), global::Api.AddUserRolesRequest.Parser, new[]{ "Email", "Roles" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.SubscribeRequest), global::Api.SubscribeRequest.Parser, new[]{ "Email", "Plan", "Card" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.UnSubscribeRequest), global::Api.UnSubscribeRequest.Parser, new[]{ "Email", "Plan" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Card), global::Api.Card.Parser, new[]{ "Number", "ExpMonth", "ExpYear", "Cvc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.User), global::Api.User.Parser, new[]{ "UserId", "Name", "GivenName", "FamilyName", "Gender", "Birthdate", "Email", "PhoneNumber", "Picture", "Nickname", "UserMetadata", "AppMetadata", "LastIp", "Blocked", "Multifactor", "CreatedAt", "UpdatedAt", "PhoneVerified", "EmailVerified", "Password", "Identities" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.UserMetadata), global::Api.UserMetadata.Parser, new[]{ "Status", "Bio", "Address", "Tags" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Address), global::Api.Address.Parser, new[]{ "City", "State", "Line1", "Line2", "Zip" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.AppMetadata), global::Api.AppMetadata.Parser, new[]{ "Description", "AccountBalance", "Plan", "Tags" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Plan), global::Api.Plan.Parser, new[]{ "Id", "Active", "Amount", "Interval", "Nickname", "Product" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Product), global::Api.Product.Parser, new[]{ "Id", "Description", "Url" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Identity), global::Api.Identity.Parser, new[]{ "Connection", "UserId", "Provider", "IsSocial" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Role), global::Api.Role.Parser, new[]{ "Id", "Name", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.OAuth2), global::Api.OAuth2.Parser, new[]{ "ClientId", "ClientSecret", "TokenUrl", "AuthUrl", "Scopes", "Redirect", "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ClientCredentials), global::Api.ClientCredentials.Parser, new[]{ "ClientId", "ClientSecret", "TokenUrl", "Scopes", "EndpointParams" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.JWT), global::Api.JWT.Parser, new[]{ "Email", "PrivateKey", "PriveKeyId", "Subject", "Scopes", "TokenUrl", "Expires", "Audience" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.DefaultGCPCredentials), global::Api.DefaultGCPCredentials.Parser, new[]{ "Scopes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Query), global::Api.Query.Parser, new[]{ "Query_", "Fields" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Event), global::Api.Event.Parser, new[]{ "Date", "Type", "ClientId", "ClientName", "Ip", "LocationInfo", "Details", "UserId", "Annotations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.EventQuery), global::Api.EventQuery.Parser, new[]{ "Date", "Type", "ClientId", "UserId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.JSONWebKeys), global::Api.JSONWebKeys.Parser, new[]{ "Kty", "Kid", "Use", "N", "E", "X5C" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Jwks), global::Api.Jwks.Parser, new[]{ "Keys" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Document), global::Api.Document.Parser, new[]{ "Category", "Name", "Data" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CategoryQuery : pb::IMessage<CategoryQuery> {
    private static readonly pb::MessageParser<CategoryQuery> _parser = new pb::MessageParser<CategoryQuery>(() => new CategoryQuery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CategoryQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryQuery(CategoryQuery other) : this() {
      category_ = other.category_ != null ? other.category_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CategoryQuery Clone() {
      return new CategoryQuery(this);
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 1;
    private global::Common.String category_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CategoryQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CategoryQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Category, other.Category)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (category_ != null) hash ^= Category.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (category_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Category);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (category_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Category);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CategoryQuery other) {
      if (other == null) {
        return;
      }
      if (other.category_ != null) {
        if (category_ == null) {
          category_ = new global::Common.String();
        }
        Category.MergeFrom(other.Category);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (category_ == null) {
              category_ = new global::Common.String();
            }
            input.ReadMessage(category_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DocumentQuery : pb::IMessage<DocumentQuery> {
    private static readonly pb::MessageParser<DocumentQuery> _parser = new pb::MessageParser<DocumentQuery>(() => new DocumentQuery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DocumentQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentQuery(DocumentQuery other) : this() {
      category_ = other.category_ != null ? other.category_.Clone() : null;
      name_ = other.name_ != null ? other.name_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DocumentQuery Clone() {
      return new DocumentQuery(this);
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 1;
    private global::Common.String category_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private global::Common.Identifier name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Identifier Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DocumentQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DocumentQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Category, other.Category)) return false;
      if (!object.Equals(Name, other.Name)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (category_ != null) hash ^= Category.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (category_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Category);
      }
      if (name_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (category_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Category);
      }
      if (name_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DocumentQuery other) {
      if (other == null) {
        return;
      }
      if (other.category_ != null) {
        if (category_ == null) {
          category_ = new global::Common.String();
        }
        Category.MergeFrom(other.Category);
      }
      if (other.name_ != null) {
        if (name_ == null) {
          name_ = new global::Common.Identifier();
        }
        Name.MergeFrom(other.Name);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (category_ == null) {
              category_ = new global::Common.String();
            }
            input.ReadMessage(category_);
            break;
          }
          case 18: {
            if (name_ == null) {
              name_ = new global::Common.Identifier();
            }
            input.ReadMessage(name_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AddUserRolesRequest : pb::IMessage<AddUserRolesRequest> {
    private static readonly pb::MessageParser<AddUserRolesRequest> _parser = new pb::MessageParser<AddUserRolesRequest>(() => new AddUserRolesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddUserRolesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUserRolesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUserRolesRequest(AddUserRolesRequest other) : this() {
      email_ = other.email_ != null ? other.email_.Clone() : null;
      roles_ = other.roles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddUserRolesRequest Clone() {
      return new AddUserRolesRequest(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private global::Common.Identifier email_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Identifier Email {
      get { return email_; }
      set {
        email_ = value;
      }
    }

    /// <summary>Field number for the "roles" field.</summary>
    public const int RolesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Api.Role> _repeated_roles_codec
        = pb::FieldCodec.ForMessage(18, global::Api.Role.Parser);
    private readonly pbc::RepeatedField<global::Api.Role> roles_ = new pbc::RepeatedField<global::Api.Role>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Role> Roles {
      get { return roles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddUserRolesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddUserRolesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Email, other.Email)) return false;
      if(!roles_.Equals(other.roles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (email_ != null) hash ^= Email.GetHashCode();
      hash ^= roles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (email_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Email);
      }
      roles_.WriteTo(output, _repeated_roles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (email_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Email);
      }
      size += roles_.CalculateSize(_repeated_roles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddUserRolesRequest other) {
      if (other == null) {
        return;
      }
      if (other.email_ != null) {
        if (email_ == null) {
          email_ = new global::Common.Identifier();
        }
        Email.MergeFrom(other.Email);
      }
      roles_.Add(other.roles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (email_ == null) {
              email_ = new global::Common.Identifier();
            }
            input.ReadMessage(email_);
            break;
          }
          case 18: {
            roles_.AddEntriesFrom(input, _repeated_roles_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeRequest : pb::IMessage<SubscribeRequest> {
    private static readonly pb::MessageParser<SubscribeRequest> _parser = new pb::MessageParser<SubscribeRequest>(() => new SubscribeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest(SubscribeRequest other) : this() {
      email_ = other.email_ != null ? other.email_.Clone() : null;
      plan_ = other.plan_ != null ? other.plan_.Clone() : null;
      card_ = other.card_ != null ? other.card_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest Clone() {
      return new SubscribeRequest(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private global::Common.Identifier email_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Identifier Email {
      get { return email_; }
      set {
        email_ = value;
      }
    }

    /// <summary>Field number for the "plan" field.</summary>
    public const int PlanFieldNumber = 2;
    private global::Common.Identifier plan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Identifier Plan {
      get { return plan_; }
      set {
        plan_ = value;
      }
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 3;
    private global::Api.Card card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Card Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Email, other.Email)) return false;
      if (!object.Equals(Plan, other.Plan)) return false;
      if (!object.Equals(Card, other.Card)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (email_ != null) hash ^= Email.GetHashCode();
      if (plan_ != null) hash ^= Plan.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (email_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Email);
      }
      if (plan_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Plan);
      }
      if (card_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Card);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (email_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Email);
      }
      if (plan_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Plan);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeRequest other) {
      if (other == null) {
        return;
      }
      if (other.email_ != null) {
        if (email_ == null) {
          email_ = new global::Common.Identifier();
        }
        Email.MergeFrom(other.Email);
      }
      if (other.plan_ != null) {
        if (plan_ == null) {
          plan_ = new global::Common.Identifier();
        }
        Plan.MergeFrom(other.Plan);
      }
      if (other.card_ != null) {
        if (card_ == null) {
          card_ = new global::Api.Card();
        }
        Card.MergeFrom(other.Card);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (email_ == null) {
              email_ = new global::Common.Identifier();
            }
            input.ReadMessage(email_);
            break;
          }
          case 18: {
            if (plan_ == null) {
              plan_ = new global::Common.Identifier();
            }
            input.ReadMessage(plan_);
            break;
          }
          case 26: {
            if (card_ == null) {
              card_ = new global::Api.Card();
            }
            input.ReadMessage(card_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnSubscribeRequest : pb::IMessage<UnSubscribeRequest> {
    private static readonly pb::MessageParser<UnSubscribeRequest> _parser = new pb::MessageParser<UnSubscribeRequest>(() => new UnSubscribeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnSubscribeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnSubscribeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnSubscribeRequest(UnSubscribeRequest other) : this() {
      email_ = other.email_ != null ? other.email_.Clone() : null;
      plan_ = other.plan_ != null ? other.plan_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnSubscribeRequest Clone() {
      return new UnSubscribeRequest(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private global::Common.Identifier email_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Identifier Email {
      get { return email_; }
      set {
        email_ = value;
      }
    }

    /// <summary>Field number for the "plan" field.</summary>
    public const int PlanFieldNumber = 2;
    private global::Common.String plan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Plan {
      get { return plan_; }
      set {
        plan_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnSubscribeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnSubscribeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Email, other.Email)) return false;
      if (!object.Equals(Plan, other.Plan)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (email_ != null) hash ^= Email.GetHashCode();
      if (plan_ != null) hash ^= Plan.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (email_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Email);
      }
      if (plan_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Plan);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (email_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Email);
      }
      if (plan_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Plan);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnSubscribeRequest other) {
      if (other == null) {
        return;
      }
      if (other.email_ != null) {
        if (email_ == null) {
          email_ = new global::Common.Identifier();
        }
        Email.MergeFrom(other.Email);
      }
      if (other.plan_ != null) {
        if (plan_ == null) {
          plan_ = new global::Common.String();
        }
        Plan.MergeFrom(other.Plan);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (email_ == null) {
              email_ = new global::Common.Identifier();
            }
            input.ReadMessage(email_);
            break;
          }
          case 18: {
            if (plan_ == null) {
              plan_ = new global::Common.String();
            }
            input.ReadMessage(plan_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Card : pb::IMessage<Card> {
    private static readonly pb::MessageParser<Card> _parser = new pb::MessageParser<Card>(() => new Card());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Card> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Card() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Card(Card other) : this() {
      number_ = other.number_ != null ? other.number_.Clone() : null;
      expMonth_ = other.expMonth_ != null ? other.expMonth_.Clone() : null;
      expYear_ = other.expYear_ != null ? other.expYear_.Clone() : null;
      cvc_ = other.cvc_ != null ? other.cvc_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Card Clone() {
      return new Card(this);
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 1;
    private global::Common.Identifier number_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Identifier Number {
      get { return number_; }
      set {
        number_ = value;
      }
    }

    /// <summary>Field number for the "exp_month" field.</summary>
    public const int ExpMonthFieldNumber = 2;
    private global::Common.String expMonth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String ExpMonth {
      get { return expMonth_; }
      set {
        expMonth_ = value;
      }
    }

    /// <summary>Field number for the "exp_year" field.</summary>
    public const int ExpYearFieldNumber = 3;
    private global::Common.String expYear_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String ExpYear {
      get { return expYear_; }
      set {
        expYear_ = value;
      }
    }

    /// <summary>Field number for the "cvc" field.</summary>
    public const int CvcFieldNumber = 4;
    private global::Common.String cvc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Cvc {
      get { return cvc_; }
      set {
        cvc_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Card);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Card other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Number, other.Number)) return false;
      if (!object.Equals(ExpMonth, other.ExpMonth)) return false;
      if (!object.Equals(ExpYear, other.ExpYear)) return false;
      if (!object.Equals(Cvc, other.Cvc)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (number_ != null) hash ^= Number.GetHashCode();
      if (expMonth_ != null) hash ^= ExpMonth.GetHashCode();
      if (expYear_ != null) hash ^= ExpYear.GetHashCode();
      if (cvc_ != null) hash ^= Cvc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (number_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Number);
      }
      if (expMonth_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ExpMonth);
      }
      if (expYear_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExpYear);
      }
      if (cvc_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Cvc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (number_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Number);
      }
      if (expMonth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpMonth);
      }
      if (expYear_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpYear);
      }
      if (cvc_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cvc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Card other) {
      if (other == null) {
        return;
      }
      if (other.number_ != null) {
        if (number_ == null) {
          number_ = new global::Common.Identifier();
        }
        Number.MergeFrom(other.Number);
      }
      if (other.expMonth_ != null) {
        if (expMonth_ == null) {
          expMonth_ = new global::Common.String();
        }
        ExpMonth.MergeFrom(other.ExpMonth);
      }
      if (other.expYear_ != null) {
        if (expYear_ == null) {
          expYear_ = new global::Common.String();
        }
        ExpYear.MergeFrom(other.ExpYear);
      }
      if (other.cvc_ != null) {
        if (cvc_ == null) {
          cvc_ = new global::Common.String();
        }
        Cvc.MergeFrom(other.Cvc);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (number_ == null) {
              number_ = new global::Common.Identifier();
            }
            input.ReadMessage(number_);
            break;
          }
          case 18: {
            if (expMonth_ == null) {
              expMonth_ = new global::Common.String();
            }
            input.ReadMessage(expMonth_);
            break;
          }
          case 26: {
            if (expYear_ == null) {
              expYear_ = new global::Common.String();
            }
            input.ReadMessage(expYear_);
            break;
          }
          case 34: {
            if (cvc_ == null) {
              cvc_ = new global::Common.String();
            }
            input.ReadMessage(cvc_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class User : pb::IMessage<User> {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      userId_ = other.userId_ != null ? other.userId_.Clone() : null;
      name_ = other.name_ != null ? other.name_.Clone() : null;
      givenName_ = other.givenName_ != null ? other.givenName_.Clone() : null;
      familyName_ = other.familyName_ != null ? other.familyName_.Clone() : null;
      gender_ = other.gender_ != null ? other.gender_.Clone() : null;
      birthdate_ = other.birthdate_ != null ? other.birthdate_.Clone() : null;
      email_ = other.email_ != null ? other.email_.Clone() : null;
      phoneNumber_ = other.phoneNumber_ != null ? other.phoneNumber_.Clone() : null;
      picture_ = other.picture_ != null ? other.picture_.Clone() : null;
      nickname_ = other.nickname_ != null ? other.nickname_.Clone() : null;
      userMetadata_ = other.userMetadata_ != null ? other.userMetadata_.Clone() : null;
      appMetadata_ = other.appMetadata_ != null ? other.appMetadata_.Clone() : null;
      lastIp_ = other.lastIp_ != null ? other.lastIp_.Clone() : null;
      blocked_ = other.blocked_ != null ? other.blocked_.Clone() : null;
      multifactor_ = other.multifactor_ != null ? other.multifactor_.Clone() : null;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      updatedAt_ = other.updatedAt_ != null ? other.updatedAt_.Clone() : null;
      phoneVerified_ = other.phoneVerified_ != null ? other.phoneVerified_.Clone() : null;
      emailVerified_ = other.emailVerified_ != null ? other.emailVerified_.Clone() : null;
      password_ = other.password_ != null ? other.password_.Clone() : null;
      identities_ = other.identities_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private global::Common.Identifier userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Identifier UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private global::Common.String name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "given_name" field.</summary>
    public const int GivenNameFieldNumber = 3;
    private global::Common.String givenName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String GivenName {
      get { return givenName_; }
      set {
        givenName_ = value;
      }
    }

    /// <summary>Field number for the "family_name" field.</summary>
    public const int FamilyNameFieldNumber = 4;
    private global::Common.String familyName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String FamilyName {
      get { return familyName_; }
      set {
        familyName_ = value;
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 5;
    private global::Common.String gender_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Gender {
      get { return gender_; }
      set {
        gender_ = value;
      }
    }

    /// <summary>Field number for the "birthdate" field.</summary>
    public const int BirthdateFieldNumber = 6;
    private global::Common.String birthdate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Birthdate {
      get { return birthdate_; }
      set {
        birthdate_ = value;
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 7;
    private global::Common.Identifier email_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Identifier Email {
      get { return email_; }
      set {
        email_ = value;
      }
    }

    /// <summary>Field number for the "phone_number" field.</summary>
    public const int PhoneNumberFieldNumber = 8;
    private global::Common.Identifier phoneNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Identifier PhoneNumber {
      get { return phoneNumber_; }
      set {
        phoneNumber_ = value;
      }
    }

    /// <summary>Field number for the "picture" field.</summary>
    public const int PictureFieldNumber = 9;
    private global::Common.String picture_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Picture {
      get { return picture_; }
      set {
        picture_ = value;
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 14;
    private global::Common.String nickname_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Nickname {
      get { return nickname_; }
      set {
        nickname_ = value;
      }
    }

    /// <summary>Field number for the "user_metadata" field.</summary>
    public const int UserMetadataFieldNumber = 10;
    private global::Common.StringMap userMetadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.StringMap UserMetadata {
      get { return userMetadata_; }
      set {
        userMetadata_ = value;
      }
    }

    /// <summary>Field number for the "app_metadata" field.</summary>
    public const int AppMetadataFieldNumber = 11;
    private global::Common.StringMap appMetadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.StringMap AppMetadata {
      get { return appMetadata_; }
      set {
        appMetadata_ = value;
      }
    }

    /// <summary>Field number for the "last_ip" field.</summary>
    public const int LastIpFieldNumber = 12;
    private global::Common.String lastIp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String LastIp {
      get { return lastIp_; }
      set {
        lastIp_ = value;
      }
    }

    /// <summary>Field number for the "blocked" field.</summary>
    public const int BlockedFieldNumber = 13;
    private global::Common.Bool blocked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Bool Blocked {
      get { return blocked_; }
      set {
        blocked_ = value;
      }
    }

    /// <summary>Field number for the "multifactor" field.</summary>
    public const int MultifactorFieldNumber = 15;
    private global::Common.StringArray multifactor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.StringArray Multifactor {
      get { return multifactor_; }
      set {
        multifactor_ = value;
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 17;
    private global::Common.String createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 18;
    private global::Common.String updatedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = value;
      }
    }

    /// <summary>Field number for the "phone_verified" field.</summary>
    public const int PhoneVerifiedFieldNumber = 19;
    private global::Common.Bool phoneVerified_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Bool PhoneVerified {
      get { return phoneVerified_; }
      set {
        phoneVerified_ = value;
      }
    }

    /// <summary>Field number for the "email_verified" field.</summary>
    public const int EmailVerifiedFieldNumber = 20;
    private global::Common.Bool emailVerified_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Bool EmailVerified {
      get { return emailVerified_; }
      set {
        emailVerified_ = value;
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 21;
    private global::Common.String password_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Password {
      get { return password_; }
      set {
        password_ = value;
      }
    }

    /// <summary>Field number for the "identities" field.</summary>
    public const int IdentitiesFieldNumber = 22;
    private static readonly pb::FieldCodec<global::Api.Identity> _repeated_identities_codec
        = pb::FieldCodec.ForMessage(178, global::Api.Identity.Parser);
    private readonly pbc::RepeatedField<global::Api.Identity> identities_ = new pbc::RepeatedField<global::Api.Identity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Identity> Identities {
      get { return identities_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(UserId, other.UserId)) return false;
      if (!object.Equals(Name, other.Name)) return false;
      if (!object.Equals(GivenName, other.GivenName)) return false;
      if (!object.Equals(FamilyName, other.FamilyName)) return false;
      if (!object.Equals(Gender, other.Gender)) return false;
      if (!object.Equals(Birthdate, other.Birthdate)) return false;
      if (!object.Equals(Email, other.Email)) return false;
      if (!object.Equals(PhoneNumber, other.PhoneNumber)) return false;
      if (!object.Equals(Picture, other.Picture)) return false;
      if (!object.Equals(Nickname, other.Nickname)) return false;
      if (!object.Equals(UserMetadata, other.UserMetadata)) return false;
      if (!object.Equals(AppMetadata, other.AppMetadata)) return false;
      if (!object.Equals(LastIp, other.LastIp)) return false;
      if (!object.Equals(Blocked, other.Blocked)) return false;
      if (!object.Equals(Multifactor, other.Multifactor)) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      if (!object.Equals(UpdatedAt, other.UpdatedAt)) return false;
      if (!object.Equals(PhoneVerified, other.PhoneVerified)) return false;
      if (!object.Equals(EmailVerified, other.EmailVerified)) return false;
      if (!object.Equals(Password, other.Password)) return false;
      if(!identities_.Equals(other.identities_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (userId_ != null) hash ^= UserId.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (givenName_ != null) hash ^= GivenName.GetHashCode();
      if (familyName_ != null) hash ^= FamilyName.GetHashCode();
      if (gender_ != null) hash ^= Gender.GetHashCode();
      if (birthdate_ != null) hash ^= Birthdate.GetHashCode();
      if (email_ != null) hash ^= Email.GetHashCode();
      if (phoneNumber_ != null) hash ^= PhoneNumber.GetHashCode();
      if (picture_ != null) hash ^= Picture.GetHashCode();
      if (nickname_ != null) hash ^= Nickname.GetHashCode();
      if (userMetadata_ != null) hash ^= UserMetadata.GetHashCode();
      if (appMetadata_ != null) hash ^= AppMetadata.GetHashCode();
      if (lastIp_ != null) hash ^= LastIp.GetHashCode();
      if (blocked_ != null) hash ^= Blocked.GetHashCode();
      if (multifactor_ != null) hash ^= Multifactor.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (updatedAt_ != null) hash ^= UpdatedAt.GetHashCode();
      if (phoneVerified_ != null) hash ^= PhoneVerified.GetHashCode();
      if (emailVerified_ != null) hash ^= EmailVerified.GetHashCode();
      if (password_ != null) hash ^= Password.GetHashCode();
      hash ^= identities_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (userId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(UserId);
      }
      if (name_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Name);
      }
      if (givenName_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(GivenName);
      }
      if (familyName_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FamilyName);
      }
      if (gender_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Gender);
      }
      if (birthdate_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Birthdate);
      }
      if (email_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Email);
      }
      if (phoneNumber_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(PhoneNumber);
      }
      if (picture_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Picture);
      }
      if (userMetadata_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(UserMetadata);
      }
      if (appMetadata_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(AppMetadata);
      }
      if (lastIp_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(LastIp);
      }
      if (blocked_ != null) {
        output.WriteRawTag(106);
        output.WriteMessage(Blocked);
      }
      if (nickname_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(Nickname);
      }
      if (multifactor_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(Multifactor);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(CreatedAt);
      }
      if (updatedAt_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(UpdatedAt);
      }
      if (phoneVerified_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(PhoneVerified);
      }
      if (emailVerified_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(EmailVerified);
      }
      if (password_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Password);
      }
      identities_.WriteTo(output, _repeated_identities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (userId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserId);
      }
      if (name_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Name);
      }
      if (givenName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GivenName);
      }
      if (familyName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FamilyName);
      }
      if (gender_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Gender);
      }
      if (birthdate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Birthdate);
      }
      if (email_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Email);
      }
      if (phoneNumber_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PhoneNumber);
      }
      if (picture_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Picture);
      }
      if (nickname_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Nickname);
      }
      if (userMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMetadata);
      }
      if (appMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppMetadata);
      }
      if (lastIp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastIp);
      }
      if (blocked_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Blocked);
      }
      if (multifactor_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Multifactor);
      }
      if (createdAt_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (updatedAt_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UpdatedAt);
      }
      if (phoneVerified_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(PhoneVerified);
      }
      if (emailVerified_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(EmailVerified);
      }
      if (password_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Password);
      }
      size += identities_.CalculateSize(_repeated_identities_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.userId_ != null) {
        if (userId_ == null) {
          userId_ = new global::Common.Identifier();
        }
        UserId.MergeFrom(other.UserId);
      }
      if (other.name_ != null) {
        if (name_ == null) {
          name_ = new global::Common.String();
        }
        Name.MergeFrom(other.Name);
      }
      if (other.givenName_ != null) {
        if (givenName_ == null) {
          givenName_ = new global::Common.String();
        }
        GivenName.MergeFrom(other.GivenName);
      }
      if (other.familyName_ != null) {
        if (familyName_ == null) {
          familyName_ = new global::Common.String();
        }
        FamilyName.MergeFrom(other.FamilyName);
      }
      if (other.gender_ != null) {
        if (gender_ == null) {
          gender_ = new global::Common.String();
        }
        Gender.MergeFrom(other.Gender);
      }
      if (other.birthdate_ != null) {
        if (birthdate_ == null) {
          birthdate_ = new global::Common.String();
        }
        Birthdate.MergeFrom(other.Birthdate);
      }
      if (other.email_ != null) {
        if (email_ == null) {
          email_ = new global::Common.Identifier();
        }
        Email.MergeFrom(other.Email);
      }
      if (other.phoneNumber_ != null) {
        if (phoneNumber_ == null) {
          phoneNumber_ = new global::Common.Identifier();
        }
        PhoneNumber.MergeFrom(other.PhoneNumber);
      }
      if (other.picture_ != null) {
        if (picture_ == null) {
          picture_ = new global::Common.String();
        }
        Picture.MergeFrom(other.Picture);
      }
      if (other.nickname_ != null) {
        if (nickname_ == null) {
          nickname_ = new global::Common.String();
        }
        Nickname.MergeFrom(other.Nickname);
      }
      if (other.userMetadata_ != null) {
        if (userMetadata_ == null) {
          userMetadata_ = new global::Common.StringMap();
        }
        UserMetadata.MergeFrom(other.UserMetadata);
      }
      if (other.appMetadata_ != null) {
        if (appMetadata_ == null) {
          appMetadata_ = new global::Common.StringMap();
        }
        AppMetadata.MergeFrom(other.AppMetadata);
      }
      if (other.lastIp_ != null) {
        if (lastIp_ == null) {
          lastIp_ = new global::Common.String();
        }
        LastIp.MergeFrom(other.LastIp);
      }
      if (other.blocked_ != null) {
        if (blocked_ == null) {
          blocked_ = new global::Common.Bool();
        }
        Blocked.MergeFrom(other.Blocked);
      }
      if (other.multifactor_ != null) {
        if (multifactor_ == null) {
          multifactor_ = new global::Common.StringArray();
        }
        Multifactor.MergeFrom(other.Multifactor);
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          createdAt_ = new global::Common.String();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      if (other.updatedAt_ != null) {
        if (updatedAt_ == null) {
          updatedAt_ = new global::Common.String();
        }
        UpdatedAt.MergeFrom(other.UpdatedAt);
      }
      if (other.phoneVerified_ != null) {
        if (phoneVerified_ == null) {
          phoneVerified_ = new global::Common.Bool();
        }
        PhoneVerified.MergeFrom(other.PhoneVerified);
      }
      if (other.emailVerified_ != null) {
        if (emailVerified_ == null) {
          emailVerified_ = new global::Common.Bool();
        }
        EmailVerified.MergeFrom(other.EmailVerified);
      }
      if (other.password_ != null) {
        if (password_ == null) {
          password_ = new global::Common.String();
        }
        Password.MergeFrom(other.Password);
      }
      identities_.Add(other.identities_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (userId_ == null) {
              userId_ = new global::Common.Identifier();
            }
            input.ReadMessage(userId_);
            break;
          }
          case 18: {
            if (name_ == null) {
              name_ = new global::Common.String();
            }
            input.ReadMessage(name_);
            break;
          }
          case 26: {
            if (givenName_ == null) {
              givenName_ = new global::Common.String();
            }
            input.ReadMessage(givenName_);
            break;
          }
          case 34: {
            if (familyName_ == null) {
              familyName_ = new global::Common.String();
            }
            input.ReadMessage(familyName_);
            break;
          }
          case 42: {
            if (gender_ == null) {
              gender_ = new global::Common.String();
            }
            input.ReadMessage(gender_);
            break;
          }
          case 50: {
            if (birthdate_ == null) {
              birthdate_ = new global::Common.String();
            }
            input.ReadMessage(birthdate_);
            break;
          }
          case 58: {
            if (email_ == null) {
              email_ = new global::Common.Identifier();
            }
            input.ReadMessage(email_);
            break;
          }
          case 66: {
            if (phoneNumber_ == null) {
              phoneNumber_ = new global::Common.Identifier();
            }
            input.ReadMessage(phoneNumber_);
            break;
          }
          case 74: {
            if (picture_ == null) {
              picture_ = new global::Common.String();
            }
            input.ReadMessage(picture_);
            break;
          }
          case 82: {
            if (userMetadata_ == null) {
              userMetadata_ = new global::Common.StringMap();
            }
            input.ReadMessage(userMetadata_);
            break;
          }
          case 90: {
            if (appMetadata_ == null) {
              appMetadata_ = new global::Common.StringMap();
            }
            input.ReadMessage(appMetadata_);
            break;
          }
          case 98: {
            if (lastIp_ == null) {
              lastIp_ = new global::Common.String();
            }
            input.ReadMessage(lastIp_);
            break;
          }
          case 106: {
            if (blocked_ == null) {
              blocked_ = new global::Common.Bool();
            }
            input.ReadMessage(blocked_);
            break;
          }
          case 114: {
            if (nickname_ == null) {
              nickname_ = new global::Common.String();
            }
            input.ReadMessage(nickname_);
            break;
          }
          case 122: {
            if (multifactor_ == null) {
              multifactor_ = new global::Common.StringArray();
            }
            input.ReadMessage(multifactor_);
            break;
          }
          case 138: {
            if (createdAt_ == null) {
              createdAt_ = new global::Common.String();
            }
            input.ReadMessage(createdAt_);
            break;
          }
          case 146: {
            if (updatedAt_ == null) {
              updatedAt_ = new global::Common.String();
            }
            input.ReadMessage(updatedAt_);
            break;
          }
          case 154: {
            if (phoneVerified_ == null) {
              phoneVerified_ = new global::Common.Bool();
            }
            input.ReadMessage(phoneVerified_);
            break;
          }
          case 162: {
            if (emailVerified_ == null) {
              emailVerified_ = new global::Common.Bool();
            }
            input.ReadMessage(emailVerified_);
            break;
          }
          case 170: {
            if (password_ == null) {
              password_ = new global::Common.String();
            }
            input.ReadMessage(password_);
            break;
          }
          case 178: {
            identities_.AddEntriesFrom(input, _repeated_identities_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserMetadata : pb::IMessage<UserMetadata> {
    private static readonly pb::MessageParser<UserMetadata> _parser = new pb::MessageParser<UserMetadata>(() => new UserMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMetadata(UserMetadata other) : this() {
      status_ = other.status_ != null ? other.status_.Clone() : null;
      bio_ = other.bio_ != null ? other.bio_.Clone() : null;
      address_ = other.address_ != null ? other.address_.Clone() : null;
      tags_ = other.tags_ != null ? other.tags_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMetadata Clone() {
      return new UserMetadata(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Common.String status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "bio" field.</summary>
    public const int BioFieldNumber = 2;
    private global::Common.StringMap bio_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.StringMap Bio {
      get { return bio_; }
      set {
        bio_ = value;
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 3;
    private global::Api.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 4;
    private global::Common.StringMap tags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.StringMap Tags {
      get { return tags_; }
      set {
        tags_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Status, other.Status)) return false;
      if (!object.Equals(Bio, other.Bio)) return false;
      if (!object.Equals(Address, other.Address)) return false;
      if (!object.Equals(Tags, other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (status_ != null) hash ^= Status.GetHashCode();
      if (bio_ != null) hash ^= Bio.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (tags_ != null) hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (status_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Status);
      }
      if (bio_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Bio);
      }
      if (address_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Address);
      }
      if (tags_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Tags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (bio_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bio);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (tags_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserMetadata other) {
      if (other == null) {
        return;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          status_ = new global::Common.String();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.bio_ != null) {
        if (bio_ == null) {
          bio_ = new global::Common.StringMap();
        }
        Bio.MergeFrom(other.Bio);
      }
      if (other.address_ != null) {
        if (address_ == null) {
          address_ = new global::Api.Address();
        }
        Address.MergeFrom(other.Address);
      }
      if (other.tags_ != null) {
        if (tags_ == null) {
          tags_ = new global::Common.StringMap();
        }
        Tags.MergeFrom(other.Tags);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (status_ == null) {
              status_ = new global::Common.String();
            }
            input.ReadMessage(status_);
            break;
          }
          case 18: {
            if (bio_ == null) {
              bio_ = new global::Common.StringMap();
            }
            input.ReadMessage(bio_);
            break;
          }
          case 26: {
            if (address_ == null) {
              address_ = new global::Api.Address();
            }
            input.ReadMessage(address_);
            break;
          }
          case 34: {
            if (tags_ == null) {
              tags_ = new global::Common.StringMap();
            }
            input.ReadMessage(tags_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Address : pb::IMessage<Address> {
    private static readonly pb::MessageParser<Address> _parser = new pb::MessageParser<Address>(() => new Address());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Address> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address(Address other) : this() {
      city_ = other.city_ != null ? other.city_.Clone() : null;
      state_ = other.state_ != null ? other.state_.Clone() : null;
      line1_ = other.line1_ != null ? other.line1_.Clone() : null;
      line2_ = other.line2_ != null ? other.line2_.Clone() : null;
      zip_ = other.zip_ != null ? other.zip_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address Clone() {
      return new Address(this);
    }

    /// <summary>Field number for the "city" field.</summary>
    public const int CityFieldNumber = 1;
    private global::Common.String city_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String City {
      get { return city_; }
      set {
        city_ = value;
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private global::Common.String state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "line1" field.</summary>
    public const int Line1FieldNumber = 3;
    private global::Common.String line1_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Line1 {
      get { return line1_; }
      set {
        line1_ = value;
      }
    }

    /// <summary>Field number for the "line2" field.</summary>
    public const int Line2FieldNumber = 4;
    private global::Common.String line2_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Line2 {
      get { return line2_; }
      set {
        line2_ = value;
      }
    }

    /// <summary>Field number for the "zip" field.</summary>
    public const int ZipFieldNumber = 5;
    private global::Common.String zip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Zip {
      get { return zip_; }
      set {
        zip_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Address);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Address other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(City, other.City)) return false;
      if (!object.Equals(State, other.State)) return false;
      if (!object.Equals(Line1, other.Line1)) return false;
      if (!object.Equals(Line2, other.Line2)) return false;
      if (!object.Equals(Zip, other.Zip)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (city_ != null) hash ^= City.GetHashCode();
      if (state_ != null) hash ^= State.GetHashCode();
      if (line1_ != null) hash ^= Line1.GetHashCode();
      if (line2_ != null) hash ^= Line2.GetHashCode();
      if (zip_ != null) hash ^= Zip.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (city_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(City);
      }
      if (state_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(State);
      }
      if (line1_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Line1);
      }
      if (line2_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Line2);
      }
      if (zip_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Zip);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (city_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(City);
      }
      if (state_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(State);
      }
      if (line1_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Line1);
      }
      if (line2_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Line2);
      }
      if (zip_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Zip);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Address other) {
      if (other == null) {
        return;
      }
      if (other.city_ != null) {
        if (city_ == null) {
          city_ = new global::Common.String();
        }
        City.MergeFrom(other.City);
      }
      if (other.state_ != null) {
        if (state_ == null) {
          state_ = new global::Common.String();
        }
        State.MergeFrom(other.State);
      }
      if (other.line1_ != null) {
        if (line1_ == null) {
          line1_ = new global::Common.String();
        }
        Line1.MergeFrom(other.Line1);
      }
      if (other.line2_ != null) {
        if (line2_ == null) {
          line2_ = new global::Common.String();
        }
        Line2.MergeFrom(other.Line2);
      }
      if (other.zip_ != null) {
        if (zip_ == null) {
          zip_ = new global::Common.String();
        }
        Zip.MergeFrom(other.Zip);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (city_ == null) {
              city_ = new global::Common.String();
            }
            input.ReadMessage(city_);
            break;
          }
          case 18: {
            if (state_ == null) {
              state_ = new global::Common.String();
            }
            input.ReadMessage(state_);
            break;
          }
          case 26: {
            if (line1_ == null) {
              line1_ = new global::Common.String();
            }
            input.ReadMessage(line1_);
            break;
          }
          case 34: {
            if (line2_ == null) {
              line2_ = new global::Common.String();
            }
            input.ReadMessage(line2_);
            break;
          }
          case 42: {
            if (zip_ == null) {
              zip_ = new global::Common.String();
            }
            input.ReadMessage(zip_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppMetadata : pb::IMessage<AppMetadata> {
    private static readonly pb::MessageParser<AppMetadata> _parser = new pb::MessageParser<AppMetadata>(() => new AppMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppMetadata(AppMetadata other) : this() {
      description_ = other.description_ != null ? other.description_.Clone() : null;
      accountBalance_ = other.accountBalance_ != null ? other.accountBalance_.Clone() : null;
      plan_ = other.plan_ != null ? other.plan_.Clone() : null;
      tags_ = other.tags_ != null ? other.tags_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppMetadata Clone() {
      return new AppMetadata(this);
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 1;
    private global::Common.String description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }

    /// <summary>Field number for the "account_balance" field.</summary>
    public const int AccountBalanceFieldNumber = 2;
    private global::Common.String accountBalance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String AccountBalance {
      get { return accountBalance_; }
      set {
        accountBalance_ = value;
      }
    }

    /// <summary>Field number for the "plan" field.</summary>
    public const int PlanFieldNumber = 3;
    private global::Api.Plan plan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Plan Plan {
      get { return plan_; }
      set {
        plan_ = value;
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 4;
    private global::Common.StringMap tags_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.StringMap Tags {
      get { return tags_; }
      set {
        tags_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Description, other.Description)) return false;
      if (!object.Equals(AccountBalance, other.AccountBalance)) return false;
      if (!object.Equals(Plan, other.Plan)) return false;
      if (!object.Equals(Tags, other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (description_ != null) hash ^= Description.GetHashCode();
      if (accountBalance_ != null) hash ^= AccountBalance.GetHashCode();
      if (plan_ != null) hash ^= Plan.GetHashCode();
      if (tags_ != null) hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (description_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Description);
      }
      if (accountBalance_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AccountBalance);
      }
      if (plan_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Plan);
      }
      if (tags_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Tags);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (description_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Description);
      }
      if (accountBalance_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccountBalance);
      }
      if (plan_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Plan);
      }
      if (tags_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Tags);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppMetadata other) {
      if (other == null) {
        return;
      }
      if (other.description_ != null) {
        if (description_ == null) {
          description_ = new global::Common.String();
        }
        Description.MergeFrom(other.Description);
      }
      if (other.accountBalance_ != null) {
        if (accountBalance_ == null) {
          accountBalance_ = new global::Common.String();
        }
        AccountBalance.MergeFrom(other.AccountBalance);
      }
      if (other.plan_ != null) {
        if (plan_ == null) {
          plan_ = new global::Api.Plan();
        }
        Plan.MergeFrom(other.Plan);
      }
      if (other.tags_ != null) {
        if (tags_ == null) {
          tags_ = new global::Common.StringMap();
        }
        Tags.MergeFrom(other.Tags);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (description_ == null) {
              description_ = new global::Common.String();
            }
            input.ReadMessage(description_);
            break;
          }
          case 18: {
            if (accountBalance_ == null) {
              accountBalance_ = new global::Common.String();
            }
            input.ReadMessage(accountBalance_);
            break;
          }
          case 26: {
            if (plan_ == null) {
              plan_ = new global::Api.Plan();
            }
            input.ReadMessage(plan_);
            break;
          }
          case 34: {
            if (tags_ == null) {
              tags_ = new global::Common.StringMap();
            }
            input.ReadMessage(tags_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Plan : pb::IMessage<Plan> {
    private static readonly pb::MessageParser<Plan> _parser = new pb::MessageParser<Plan>(() => new Plan());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Plan> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Plan() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Plan(Plan other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      active_ = other.active_ != null ? other.active_.Clone() : null;
      amount_ = other.amount_ != null ? other.amount_.Clone() : null;
      interval_ = other.interval_ != null ? other.interval_.Clone() : null;
      nickname_ = other.nickname_ != null ? other.nickname_.Clone() : null;
      product_ = other.product_ != null ? other.product_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Plan Clone() {
      return new Plan(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Common.Identifier id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Identifier Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "active" field.</summary>
    public const int ActiveFieldNumber = 2;
    private global::Common.Bool active_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Bool Active {
      get { return active_; }
      set {
        active_ = value;
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private global::Common.Int64 amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Int64 Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "interval" field.</summary>
    public const int IntervalFieldNumber = 4;
    private global::Common.String interval_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Interval {
      get { return interval_; }
      set {
        interval_ = value;
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 5;
    private global::Common.String nickname_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Nickname {
      get { return nickname_; }
      set {
        nickname_ = value;
      }
    }

    /// <summary>Field number for the "product" field.</summary>
    public const int ProductFieldNumber = 6;
    private global::Api.Product product_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Product Product {
      get { return product_; }
      set {
        product_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Plan);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Plan other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(Active, other.Active)) return false;
      if (!object.Equals(Amount, other.Amount)) return false;
      if (!object.Equals(Interval, other.Interval)) return false;
      if (!object.Equals(Nickname, other.Nickname)) return false;
      if (!object.Equals(Product, other.Product)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (active_ != null) hash ^= Active.GetHashCode();
      if (amount_ != null) hash ^= Amount.GetHashCode();
      if (interval_ != null) hash ^= Interval.GetHashCode();
      if (nickname_ != null) hash ^= Nickname.GetHashCode();
      if (product_ != null) hash ^= Product.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (active_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Active);
      }
      if (amount_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Amount);
      }
      if (interval_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Interval);
      }
      if (nickname_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Nickname);
      }
      if (product_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Product);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (active_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Active);
      }
      if (amount_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Amount);
      }
      if (interval_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Interval);
      }
      if (nickname_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Nickname);
      }
      if (product_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Product);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Plan other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::Common.Identifier();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.active_ != null) {
        if (active_ == null) {
          active_ = new global::Common.Bool();
        }
        Active.MergeFrom(other.Active);
      }
      if (other.amount_ != null) {
        if (amount_ == null) {
          amount_ = new global::Common.Int64();
        }
        Amount.MergeFrom(other.Amount);
      }
      if (other.interval_ != null) {
        if (interval_ == null) {
          interval_ = new global::Common.String();
        }
        Interval.MergeFrom(other.Interval);
      }
      if (other.nickname_ != null) {
        if (nickname_ == null) {
          nickname_ = new global::Common.String();
        }
        Nickname.MergeFrom(other.Nickname);
      }
      if (other.product_ != null) {
        if (product_ == null) {
          product_ = new global::Api.Product();
        }
        Product.MergeFrom(other.Product);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              id_ = new global::Common.Identifier();
            }
            input.ReadMessage(id_);
            break;
          }
          case 18: {
            if (active_ == null) {
              active_ = new global::Common.Bool();
            }
            input.ReadMessage(active_);
            break;
          }
          case 26: {
            if (amount_ == null) {
              amount_ = new global::Common.Int64();
            }
            input.ReadMessage(amount_);
            break;
          }
          case 34: {
            if (interval_ == null) {
              interval_ = new global::Common.String();
            }
            input.ReadMessage(interval_);
            break;
          }
          case 42: {
            if (nickname_ == null) {
              nickname_ = new global::Common.String();
            }
            input.ReadMessage(nickname_);
            break;
          }
          case 50: {
            if (product_ == null) {
              product_ = new global::Api.Product();
            }
            input.ReadMessage(product_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Product : pb::IMessage<Product> {
    private static readonly pb::MessageParser<Product> _parser = new pb::MessageParser<Product>(() => new Product());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Product> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Product() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Product(Product other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      description_ = other.description_ != null ? other.description_.Clone() : null;
      url_ = other.url_ != null ? other.url_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Product Clone() {
      return new Product(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Common.Identifier id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Identifier Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private global::Common.String description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 3;
    private global::Common.String url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Url {
      get { return url_; }
      set {
        url_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Product);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Product other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(Description, other.Description)) return false;
      if (!object.Equals(Url, other.Url)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (url_ != null) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (description_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Description);
      }
      if (url_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (description_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Description);
      }
      if (url_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Product other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::Common.Identifier();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.description_ != null) {
        if (description_ == null) {
          description_ = new global::Common.String();
        }
        Description.MergeFrom(other.Description);
      }
      if (other.url_ != null) {
        if (url_ == null) {
          url_ = new global::Common.String();
        }
        Url.MergeFrom(other.Url);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              id_ = new global::Common.Identifier();
            }
            input.ReadMessage(id_);
            break;
          }
          case 18: {
            if (description_ == null) {
              description_ = new global::Common.String();
            }
            input.ReadMessage(description_);
            break;
          }
          case 26: {
            if (url_ == null) {
              url_ = new global::Common.String();
            }
            input.ReadMessage(url_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Identity : pb::IMessage<Identity> {
    private static readonly pb::MessageParser<Identity> _parser = new pb::MessageParser<Identity>(() => new Identity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Identity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identity(Identity other) : this() {
      connection_ = other.connection_ != null ? other.connection_.Clone() : null;
      userId_ = other.userId_ != null ? other.userId_.Clone() : null;
      provider_ = other.provider_ != null ? other.provider_.Clone() : null;
      isSocial_ = other.isSocial_ != null ? other.isSocial_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identity Clone() {
      return new Identity(this);
    }

    /// <summary>Field number for the "connection" field.</summary>
    public const int ConnectionFieldNumber = 1;
    private global::Common.String connection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Connection {
      get { return connection_; }
      set {
        connection_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private global::Common.Identifier userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Identifier UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "provider" field.</summary>
    public const int ProviderFieldNumber = 3;
    private global::Common.String provider_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Provider {
      get { return provider_; }
      set {
        provider_ = value;
      }
    }

    /// <summary>Field number for the "isSocial" field.</summary>
    public const int IsSocialFieldNumber = 4;
    private global::Common.Bool isSocial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Bool IsSocial {
      get { return isSocial_; }
      set {
        isSocial_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Identity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Identity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Connection, other.Connection)) return false;
      if (!object.Equals(UserId, other.UserId)) return false;
      if (!object.Equals(Provider, other.Provider)) return false;
      if (!object.Equals(IsSocial, other.IsSocial)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (connection_ != null) hash ^= Connection.GetHashCode();
      if (userId_ != null) hash ^= UserId.GetHashCode();
      if (provider_ != null) hash ^= Provider.GetHashCode();
      if (isSocial_ != null) hash ^= IsSocial.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (connection_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Connection);
      }
      if (userId_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UserId);
      }
      if (provider_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Provider);
      }
      if (isSocial_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(IsSocial);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (connection_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Connection);
      }
      if (userId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserId);
      }
      if (provider_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Provider);
      }
      if (isSocial_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IsSocial);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Identity other) {
      if (other == null) {
        return;
      }
      if (other.connection_ != null) {
        if (connection_ == null) {
          connection_ = new global::Common.String();
        }
        Connection.MergeFrom(other.Connection);
      }
      if (other.userId_ != null) {
        if (userId_ == null) {
          userId_ = new global::Common.Identifier();
        }
        UserId.MergeFrom(other.UserId);
      }
      if (other.provider_ != null) {
        if (provider_ == null) {
          provider_ = new global::Common.String();
        }
        Provider.MergeFrom(other.Provider);
      }
      if (other.isSocial_ != null) {
        if (isSocial_ == null) {
          isSocial_ = new global::Common.Bool();
        }
        IsSocial.MergeFrom(other.IsSocial);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (connection_ == null) {
              connection_ = new global::Common.String();
            }
            input.ReadMessage(connection_);
            break;
          }
          case 18: {
            if (userId_ == null) {
              userId_ = new global::Common.Identifier();
            }
            input.ReadMessage(userId_);
            break;
          }
          case 26: {
            if (provider_ == null) {
              provider_ = new global::Common.String();
            }
            input.ReadMessage(provider_);
            break;
          }
          case 34: {
            if (isSocial_ == null) {
              isSocial_ = new global::Common.Bool();
            }
            input.ReadMessage(isSocial_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Role : pb::IMessage<Role> {
    private static readonly pb::MessageParser<Role> _parser = new pb::MessageParser<Role>(() => new Role());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Role> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Role() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Role(Role other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      name_ = other.name_ != null ? other.name_.Clone() : null;
      description_ = other.description_ != null ? other.description_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Role Clone() {
      return new Role(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Common.Identifier id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Identifier Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private global::Common.String name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private global::Common.String description_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Description {
      get { return description_; }
      set {
        description_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Role);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Role other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(Name, other.Name)) return false;
      if (!object.Equals(Description, other.Description)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (description_ != null) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (name_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Name);
      }
      if (description_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (name_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Name);
      }
      if (description_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Role other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::Common.Identifier();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.name_ != null) {
        if (name_ == null) {
          name_ = new global::Common.String();
        }
        Name.MergeFrom(other.Name);
      }
      if (other.description_ != null) {
        if (description_ == null) {
          description_ = new global::Common.String();
        }
        Description.MergeFrom(other.Description);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              id_ = new global::Common.Identifier();
            }
            input.ReadMessage(id_);
            break;
          }
          case 18: {
            if (name_ == null) {
              name_ = new global::Common.String();
            }
            input.ReadMessage(name_);
            break;
          }
          case 26: {
            if (description_ == null) {
              description_ = new global::Common.String();
            }
            input.ReadMessage(description_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class OAuth2 : pb::IMessage<OAuth2> {
    private static readonly pb::MessageParser<OAuth2> _parser = new pb::MessageParser<OAuth2>(() => new OAuth2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OAuth2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OAuth2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OAuth2(OAuth2 other) : this() {
      clientId_ = other.clientId_ != null ? other.clientId_.Clone() : null;
      clientSecret_ = other.clientSecret_ != null ? other.clientSecret_.Clone() : null;
      tokenUrl_ = other.tokenUrl_ != null ? other.tokenUrl_.Clone() : null;
      authUrl_ = other.authUrl_ != null ? other.authUrl_.Clone() : null;
      scopes_ = other.scopes_ != null ? other.scopes_.Clone() : null;
      redirect_ = other.redirect_ != null ? other.redirect_.Clone() : null;
      code_ = other.code_ != null ? other.code_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OAuth2 Clone() {
      return new OAuth2(this);
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private global::Common.String clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "client_secret" field.</summary>
    public const int ClientSecretFieldNumber = 2;
    private global::Common.String clientSecret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String ClientSecret {
      get { return clientSecret_; }
      set {
        clientSecret_ = value;
      }
    }

    /// <summary>Field number for the "token_url" field.</summary>
    public const int TokenUrlFieldNumber = 3;
    private global::Common.String tokenUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String TokenUrl {
      get { return tokenUrl_; }
      set {
        tokenUrl_ = value;
      }
    }

    /// <summary>Field number for the "auth_url" field.</summary>
    public const int AuthUrlFieldNumber = 4;
    private global::Common.String authUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String AuthUrl {
      get { return authUrl_; }
      set {
        authUrl_ = value;
      }
    }

    /// <summary>Field number for the "scopes" field.</summary>
    public const int ScopesFieldNumber = 5;
    private global::Common.StringArray scopes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.StringArray Scopes {
      get { return scopes_; }
      set {
        scopes_ = value;
      }
    }

    /// <summary>Field number for the "redirect" field.</summary>
    public const int RedirectFieldNumber = 6;
    private global::Common.String redirect_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Redirect {
      get { return redirect_; }
      set {
        redirect_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 7;
    private global::Common.String code_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OAuth2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OAuth2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ClientId, other.ClientId)) return false;
      if (!object.Equals(ClientSecret, other.ClientSecret)) return false;
      if (!object.Equals(TokenUrl, other.TokenUrl)) return false;
      if (!object.Equals(AuthUrl, other.AuthUrl)) return false;
      if (!object.Equals(Scopes, other.Scopes)) return false;
      if (!object.Equals(Redirect, other.Redirect)) return false;
      if (!object.Equals(Code, other.Code)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (clientId_ != null) hash ^= ClientId.GetHashCode();
      if (clientSecret_ != null) hash ^= ClientSecret.GetHashCode();
      if (tokenUrl_ != null) hash ^= TokenUrl.GetHashCode();
      if (authUrl_ != null) hash ^= AuthUrl.GetHashCode();
      if (scopes_ != null) hash ^= Scopes.GetHashCode();
      if (redirect_ != null) hash ^= Redirect.GetHashCode();
      if (code_ != null) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (clientId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ClientId);
      }
      if (clientSecret_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ClientSecret);
      }
      if (tokenUrl_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TokenUrl);
      }
      if (authUrl_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(AuthUrl);
      }
      if (scopes_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Scopes);
      }
      if (redirect_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Redirect);
      }
      if (code_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (clientId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientId);
      }
      if (clientSecret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientSecret);
      }
      if (tokenUrl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenUrl);
      }
      if (authUrl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AuthUrl);
      }
      if (scopes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scopes);
      }
      if (redirect_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Redirect);
      }
      if (code_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OAuth2 other) {
      if (other == null) {
        return;
      }
      if (other.clientId_ != null) {
        if (clientId_ == null) {
          clientId_ = new global::Common.String();
        }
        ClientId.MergeFrom(other.ClientId);
      }
      if (other.clientSecret_ != null) {
        if (clientSecret_ == null) {
          clientSecret_ = new global::Common.String();
        }
        ClientSecret.MergeFrom(other.ClientSecret);
      }
      if (other.tokenUrl_ != null) {
        if (tokenUrl_ == null) {
          tokenUrl_ = new global::Common.String();
        }
        TokenUrl.MergeFrom(other.TokenUrl);
      }
      if (other.authUrl_ != null) {
        if (authUrl_ == null) {
          authUrl_ = new global::Common.String();
        }
        AuthUrl.MergeFrom(other.AuthUrl);
      }
      if (other.scopes_ != null) {
        if (scopes_ == null) {
          scopes_ = new global::Common.StringArray();
        }
        Scopes.MergeFrom(other.Scopes);
      }
      if (other.redirect_ != null) {
        if (redirect_ == null) {
          redirect_ = new global::Common.String();
        }
        Redirect.MergeFrom(other.Redirect);
      }
      if (other.code_ != null) {
        if (code_ == null) {
          code_ = new global::Common.String();
        }
        Code.MergeFrom(other.Code);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (clientId_ == null) {
              clientId_ = new global::Common.String();
            }
            input.ReadMessage(clientId_);
            break;
          }
          case 18: {
            if (clientSecret_ == null) {
              clientSecret_ = new global::Common.String();
            }
            input.ReadMessage(clientSecret_);
            break;
          }
          case 26: {
            if (tokenUrl_ == null) {
              tokenUrl_ = new global::Common.String();
            }
            input.ReadMessage(tokenUrl_);
            break;
          }
          case 34: {
            if (authUrl_ == null) {
              authUrl_ = new global::Common.String();
            }
            input.ReadMessage(authUrl_);
            break;
          }
          case 42: {
            if (scopes_ == null) {
              scopes_ = new global::Common.StringArray();
            }
            input.ReadMessage(scopes_);
            break;
          }
          case 50: {
            if (redirect_ == null) {
              redirect_ = new global::Common.String();
            }
            input.ReadMessage(redirect_);
            break;
          }
          case 58: {
            if (code_ == null) {
              code_ = new global::Common.String();
            }
            input.ReadMessage(code_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClientCredentials : pb::IMessage<ClientCredentials> {
    private static readonly pb::MessageParser<ClientCredentials> _parser = new pb::MessageParser<ClientCredentials>(() => new ClientCredentials());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientCredentials> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientCredentials() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientCredentials(ClientCredentials other) : this() {
      clientId_ = other.clientId_ != null ? other.clientId_.Clone() : null;
      clientSecret_ = other.clientSecret_ != null ? other.clientSecret_.Clone() : null;
      tokenUrl_ = other.tokenUrl_ != null ? other.tokenUrl_.Clone() : null;
      scopes_ = other.scopes_ != null ? other.scopes_.Clone() : null;
      endpointParams_ = other.endpointParams_ != null ? other.endpointParams_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientCredentials Clone() {
      return new ClientCredentials(this);
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private global::Common.String clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "client_secret" field.</summary>
    public const int ClientSecretFieldNumber = 2;
    private global::Common.String clientSecret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String ClientSecret {
      get { return clientSecret_; }
      set {
        clientSecret_ = value;
      }
    }

    /// <summary>Field number for the "token_url" field.</summary>
    public const int TokenUrlFieldNumber = 3;
    private global::Common.String tokenUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String TokenUrl {
      get { return tokenUrl_; }
      set {
        tokenUrl_ = value;
      }
    }

    /// <summary>Field number for the "scopes" field.</summary>
    public const int ScopesFieldNumber = 4;
    private global::Common.StringArray scopes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.StringArray Scopes {
      get { return scopes_; }
      set {
        scopes_ = value;
      }
    }

    /// <summary>Field number for the "endpoint_params" field.</summary>
    public const int EndpointParamsFieldNumber = 5;
    private global::Common.StringMap endpointParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.StringMap EndpointParams {
      get { return endpointParams_; }
      set {
        endpointParams_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientCredentials);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientCredentials other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ClientId, other.ClientId)) return false;
      if (!object.Equals(ClientSecret, other.ClientSecret)) return false;
      if (!object.Equals(TokenUrl, other.TokenUrl)) return false;
      if (!object.Equals(Scopes, other.Scopes)) return false;
      if (!object.Equals(EndpointParams, other.EndpointParams)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (clientId_ != null) hash ^= ClientId.GetHashCode();
      if (clientSecret_ != null) hash ^= ClientSecret.GetHashCode();
      if (tokenUrl_ != null) hash ^= TokenUrl.GetHashCode();
      if (scopes_ != null) hash ^= Scopes.GetHashCode();
      if (endpointParams_ != null) hash ^= EndpointParams.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (clientId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ClientId);
      }
      if (clientSecret_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ClientSecret);
      }
      if (tokenUrl_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TokenUrl);
      }
      if (scopes_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Scopes);
      }
      if (endpointParams_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EndpointParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (clientId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientId);
      }
      if (clientSecret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientSecret);
      }
      if (tokenUrl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenUrl);
      }
      if (scopes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scopes);
      }
      if (endpointParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndpointParams);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientCredentials other) {
      if (other == null) {
        return;
      }
      if (other.clientId_ != null) {
        if (clientId_ == null) {
          clientId_ = new global::Common.String();
        }
        ClientId.MergeFrom(other.ClientId);
      }
      if (other.clientSecret_ != null) {
        if (clientSecret_ == null) {
          clientSecret_ = new global::Common.String();
        }
        ClientSecret.MergeFrom(other.ClientSecret);
      }
      if (other.tokenUrl_ != null) {
        if (tokenUrl_ == null) {
          tokenUrl_ = new global::Common.String();
        }
        TokenUrl.MergeFrom(other.TokenUrl);
      }
      if (other.scopes_ != null) {
        if (scopes_ == null) {
          scopes_ = new global::Common.StringArray();
        }
        Scopes.MergeFrom(other.Scopes);
      }
      if (other.endpointParams_ != null) {
        if (endpointParams_ == null) {
          endpointParams_ = new global::Common.StringMap();
        }
        EndpointParams.MergeFrom(other.EndpointParams);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (clientId_ == null) {
              clientId_ = new global::Common.String();
            }
            input.ReadMessage(clientId_);
            break;
          }
          case 18: {
            if (clientSecret_ == null) {
              clientSecret_ = new global::Common.String();
            }
            input.ReadMessage(clientSecret_);
            break;
          }
          case 26: {
            if (tokenUrl_ == null) {
              tokenUrl_ = new global::Common.String();
            }
            input.ReadMessage(tokenUrl_);
            break;
          }
          case 34: {
            if (scopes_ == null) {
              scopes_ = new global::Common.StringArray();
            }
            input.ReadMessage(scopes_);
            break;
          }
          case 42: {
            if (endpointParams_ == null) {
              endpointParams_ = new global::Common.StringMap();
            }
            input.ReadMessage(endpointParams_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class JWT : pb::IMessage<JWT> {
    private static readonly pb::MessageParser<JWT> _parser = new pb::MessageParser<JWT>(() => new JWT());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JWT> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JWT() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JWT(JWT other) : this() {
      email_ = other.email_ != null ? other.email_.Clone() : null;
      privateKey_ = other.privateKey_;
      priveKeyId_ = other.priveKeyId_ != null ? other.priveKeyId_.Clone() : null;
      subject_ = other.subject_ != null ? other.subject_.Clone() : null;
      scopes_ = other.scopes_ != null ? other.scopes_.Clone() : null;
      tokenUrl_ = other.tokenUrl_ != null ? other.tokenUrl_.Clone() : null;
      expires_ = other.expires_ != null ? other.expires_.Clone() : null;
      audience_ = other.audience_ != null ? other.audience_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JWT Clone() {
      return new JWT(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private global::Common.String email_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Email {
      get { return email_; }
      set {
        email_ = value;
      }
    }

    /// <summary>Field number for the "private_key" field.</summary>
    public const int PrivateKeyFieldNumber = 2;
    private pb::ByteString privateKey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PrivateKey {
      get { return privateKey_; }
      set {
        privateKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "prive_key_id" field.</summary>
    public const int PriveKeyIdFieldNumber = 3;
    private global::Common.String priveKeyId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String PriveKeyId {
      get { return priveKeyId_; }
      set {
        priveKeyId_ = value;
      }
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 4;
    private global::Common.String subject_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Subject {
      get { return subject_; }
      set {
        subject_ = value;
      }
    }

    /// <summary>Field number for the "scopes" field.</summary>
    public const int ScopesFieldNumber = 5;
    private global::Common.StringArray scopes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.StringArray Scopes {
      get { return scopes_; }
      set {
        scopes_ = value;
      }
    }

    /// <summary>Field number for the "token_url" field.</summary>
    public const int TokenUrlFieldNumber = 6;
    private global::Common.String tokenUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String TokenUrl {
      get { return tokenUrl_; }
      set {
        tokenUrl_ = value;
      }
    }

    /// <summary>Field number for the "expires" field.</summary>
    public const int ExpiresFieldNumber = 7;
    private global::Common.String expires_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Expires {
      get { return expires_; }
      set {
        expires_ = value;
      }
    }

    /// <summary>Field number for the "audience" field.</summary>
    public const int AudienceFieldNumber = 8;
    private global::Common.String audience_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Audience {
      get { return audience_; }
      set {
        audience_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JWT);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JWT other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Email, other.Email)) return false;
      if (PrivateKey != other.PrivateKey) return false;
      if (!object.Equals(PriveKeyId, other.PriveKeyId)) return false;
      if (!object.Equals(Subject, other.Subject)) return false;
      if (!object.Equals(Scopes, other.Scopes)) return false;
      if (!object.Equals(TokenUrl, other.TokenUrl)) return false;
      if (!object.Equals(Expires, other.Expires)) return false;
      if (!object.Equals(Audience, other.Audience)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (email_ != null) hash ^= Email.GetHashCode();
      if (PrivateKey.Length != 0) hash ^= PrivateKey.GetHashCode();
      if (priveKeyId_ != null) hash ^= PriveKeyId.GetHashCode();
      if (subject_ != null) hash ^= Subject.GetHashCode();
      if (scopes_ != null) hash ^= Scopes.GetHashCode();
      if (tokenUrl_ != null) hash ^= TokenUrl.GetHashCode();
      if (expires_ != null) hash ^= Expires.GetHashCode();
      if (audience_ != null) hash ^= Audience.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (email_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Email);
      }
      if (PrivateKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(PrivateKey);
      }
      if (priveKeyId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(PriveKeyId);
      }
      if (subject_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Subject);
      }
      if (scopes_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Scopes);
      }
      if (tokenUrl_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(TokenUrl);
      }
      if (expires_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Expires);
      }
      if (audience_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Audience);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (email_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Email);
      }
      if (PrivateKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PrivateKey);
      }
      if (priveKeyId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PriveKeyId);
      }
      if (subject_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Subject);
      }
      if (scopes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scopes);
      }
      if (tokenUrl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenUrl);
      }
      if (expires_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Expires);
      }
      if (audience_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Audience);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JWT other) {
      if (other == null) {
        return;
      }
      if (other.email_ != null) {
        if (email_ == null) {
          email_ = new global::Common.String();
        }
        Email.MergeFrom(other.Email);
      }
      if (other.PrivateKey.Length != 0) {
        PrivateKey = other.PrivateKey;
      }
      if (other.priveKeyId_ != null) {
        if (priveKeyId_ == null) {
          priveKeyId_ = new global::Common.String();
        }
        PriveKeyId.MergeFrom(other.PriveKeyId);
      }
      if (other.subject_ != null) {
        if (subject_ == null) {
          subject_ = new global::Common.String();
        }
        Subject.MergeFrom(other.Subject);
      }
      if (other.scopes_ != null) {
        if (scopes_ == null) {
          scopes_ = new global::Common.StringArray();
        }
        Scopes.MergeFrom(other.Scopes);
      }
      if (other.tokenUrl_ != null) {
        if (tokenUrl_ == null) {
          tokenUrl_ = new global::Common.String();
        }
        TokenUrl.MergeFrom(other.TokenUrl);
      }
      if (other.expires_ != null) {
        if (expires_ == null) {
          expires_ = new global::Common.String();
        }
        Expires.MergeFrom(other.Expires);
      }
      if (other.audience_ != null) {
        if (audience_ == null) {
          audience_ = new global::Common.String();
        }
        Audience.MergeFrom(other.Audience);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (email_ == null) {
              email_ = new global::Common.String();
            }
            input.ReadMessage(email_);
            break;
          }
          case 18: {
            PrivateKey = input.ReadBytes();
            break;
          }
          case 26: {
            if (priveKeyId_ == null) {
              priveKeyId_ = new global::Common.String();
            }
            input.ReadMessage(priveKeyId_);
            break;
          }
          case 34: {
            if (subject_ == null) {
              subject_ = new global::Common.String();
            }
            input.ReadMessage(subject_);
            break;
          }
          case 42: {
            if (scopes_ == null) {
              scopes_ = new global::Common.StringArray();
            }
            input.ReadMessage(scopes_);
            break;
          }
          case 50: {
            if (tokenUrl_ == null) {
              tokenUrl_ = new global::Common.String();
            }
            input.ReadMessage(tokenUrl_);
            break;
          }
          case 58: {
            if (expires_ == null) {
              expires_ = new global::Common.String();
            }
            input.ReadMessage(expires_);
            break;
          }
          case 66: {
            if (audience_ == null) {
              audience_ = new global::Common.String();
            }
            input.ReadMessage(audience_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DefaultGCPCredentials : pb::IMessage<DefaultGCPCredentials> {
    private static readonly pb::MessageParser<DefaultGCPCredentials> _parser = new pb::MessageParser<DefaultGCPCredentials>(() => new DefaultGCPCredentials());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DefaultGCPCredentials> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefaultGCPCredentials() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefaultGCPCredentials(DefaultGCPCredentials other) : this() {
      scopes_ = other.scopes_ != null ? other.scopes_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefaultGCPCredentials Clone() {
      return new DefaultGCPCredentials(this);
    }

    /// <summary>Field number for the "scopes" field.</summary>
    public const int ScopesFieldNumber = 1;
    private global::Common.StringArray scopes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.StringArray Scopes {
      get { return scopes_; }
      set {
        scopes_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DefaultGCPCredentials);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DefaultGCPCredentials other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Scopes, other.Scopes)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (scopes_ != null) hash ^= Scopes.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (scopes_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Scopes);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (scopes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scopes);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DefaultGCPCredentials other) {
      if (other == null) {
        return;
      }
      if (other.scopes_ != null) {
        if (scopes_ == null) {
          scopes_ = new global::Common.StringArray();
        }
        Scopes.MergeFrom(other.Scopes);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (scopes_ == null) {
              scopes_ = new global::Common.StringArray();
            }
            input.ReadMessage(scopes_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Query : pb::IMessage<Query> {
    private static readonly pb::MessageParser<Query> _parser = new pb::MessageParser<Query>(() => new Query());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Query> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query(Query other) : this() {
      query_ = other.query_ != null ? other.query_.Clone() : null;
      fields_ = other.fields_ != null ? other.fields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query Clone() {
      return new Query(this);
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int Query_FieldNumber = 4;
    private global::Common.String query_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Query_ {
      get { return query_; }
      set {
        query_ = value;
      }
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 5;
    private global::Common.String fields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Fields {
      get { return fields_; }
      set {
        fields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Query);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Query other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Query_, other.Query_)) return false;
      if (!object.Equals(Fields, other.Fields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (query_ != null) hash ^= Query_.GetHashCode();
      if (fields_ != null) hash ^= Fields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (query_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Query_);
      }
      if (fields_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Fields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (query_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Query_);
      }
      if (fields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Query other) {
      if (other == null) {
        return;
      }
      if (other.query_ != null) {
        if (query_ == null) {
          query_ = new global::Common.String();
        }
        Query_.MergeFrom(other.Query_);
      }
      if (other.fields_ != null) {
        if (fields_ == null) {
          fields_ = new global::Common.String();
        }
        Fields.MergeFrom(other.Fields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 34: {
            if (query_ == null) {
              query_ = new global::Common.String();
            }
            input.ReadMessage(query_);
            break;
          }
          case 42: {
            if (fields_ == null) {
              fields_ = new global::Common.String();
            }
            input.ReadMessage(fields_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Event : pb::IMessage<Event> {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event(Event other) : this() {
      date_ = other.date_ != null ? other.date_.Clone() : null;
      type_ = other.type_ != null ? other.type_.Clone() : null;
      clientId_ = other.clientId_ != null ? other.clientId_.Clone() : null;
      clientName_ = other.clientName_ != null ? other.clientName_.Clone() : null;
      ip_ = other.ip_ != null ? other.ip_.Clone() : null;
      locationInfo_ = other.locationInfo_ != null ? other.locationInfo_.Clone() : null;
      details_ = other.details_ != null ? other.details_.Clone() : null;
      userId_ = other.userId_ != null ? other.userId_.Clone() : null;
      annotations_ = other.annotations_ != null ? other.annotations_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 1;
    private global::Common.String date_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Date {
      get { return date_; }
      set {
        date_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Common.String type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 3;
    private global::Common.String clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "client_name" field.</summary>
    public const int ClientNameFieldNumber = 4;
    private global::Common.String clientName_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String ClientName {
      get { return clientName_; }
      set {
        clientName_ = value;
      }
    }

    /// <summary>Field number for the "ip" field.</summary>
    public const int IpFieldNumber = 5;
    private global::Common.String ip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Ip {
      get { return ip_; }
      set {
        ip_ = value;
      }
    }

    /// <summary>Field number for the "location_info" field.</summary>
    public const int LocationInfoFieldNumber = 6;
    private global::Common.String locationInfo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String LocationInfo {
      get { return locationInfo_; }
      set {
        locationInfo_ = value;
      }
    }

    /// <summary>Field number for the "details" field.</summary>
    public const int DetailsFieldNumber = 7;
    private global::Common.String details_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Details {
      get { return details_; }
      set {
        details_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 8;
    private global::Common.String userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    /// <summary>Field number for the "annotations" field.</summary>
    public const int AnnotationsFieldNumber = 9;
    private global::Common.StringMap annotations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.StringMap Annotations {
      get { return annotations_; }
      set {
        annotations_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Date, other.Date)) return false;
      if (!object.Equals(Type, other.Type)) return false;
      if (!object.Equals(ClientId, other.ClientId)) return false;
      if (!object.Equals(ClientName, other.ClientName)) return false;
      if (!object.Equals(Ip, other.Ip)) return false;
      if (!object.Equals(LocationInfo, other.LocationInfo)) return false;
      if (!object.Equals(Details, other.Details)) return false;
      if (!object.Equals(UserId, other.UserId)) return false;
      if (!object.Equals(Annotations, other.Annotations)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (date_ != null) hash ^= Date.GetHashCode();
      if (type_ != null) hash ^= Type.GetHashCode();
      if (clientId_ != null) hash ^= ClientId.GetHashCode();
      if (clientName_ != null) hash ^= ClientName.GetHashCode();
      if (ip_ != null) hash ^= Ip.GetHashCode();
      if (locationInfo_ != null) hash ^= LocationInfo.GetHashCode();
      if (details_ != null) hash ^= Details.GetHashCode();
      if (userId_ != null) hash ^= UserId.GetHashCode();
      if (annotations_ != null) hash ^= Annotations.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (date_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Date);
      }
      if (type_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Type);
      }
      if (clientId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ClientId);
      }
      if (clientName_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ClientName);
      }
      if (ip_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Ip);
      }
      if (locationInfo_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(LocationInfo);
      }
      if (details_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Details);
      }
      if (userId_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(UserId);
      }
      if (annotations_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Annotations);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (date_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Date);
      }
      if (type_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (clientId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientId);
      }
      if (clientName_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientName);
      }
      if (ip_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ip);
      }
      if (locationInfo_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LocationInfo);
      }
      if (details_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Details);
      }
      if (userId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserId);
      }
      if (annotations_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Annotations);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      if (other.date_ != null) {
        if (date_ == null) {
          date_ = new global::Common.String();
        }
        Date.MergeFrom(other.Date);
      }
      if (other.type_ != null) {
        if (type_ == null) {
          type_ = new global::Common.String();
        }
        Type.MergeFrom(other.Type);
      }
      if (other.clientId_ != null) {
        if (clientId_ == null) {
          clientId_ = new global::Common.String();
        }
        ClientId.MergeFrom(other.ClientId);
      }
      if (other.clientName_ != null) {
        if (clientName_ == null) {
          clientName_ = new global::Common.String();
        }
        ClientName.MergeFrom(other.ClientName);
      }
      if (other.ip_ != null) {
        if (ip_ == null) {
          ip_ = new global::Common.String();
        }
        Ip.MergeFrom(other.Ip);
      }
      if (other.locationInfo_ != null) {
        if (locationInfo_ == null) {
          locationInfo_ = new global::Common.String();
        }
        LocationInfo.MergeFrom(other.LocationInfo);
      }
      if (other.details_ != null) {
        if (details_ == null) {
          details_ = new global::Common.String();
        }
        Details.MergeFrom(other.Details);
      }
      if (other.userId_ != null) {
        if (userId_ == null) {
          userId_ = new global::Common.String();
        }
        UserId.MergeFrom(other.UserId);
      }
      if (other.annotations_ != null) {
        if (annotations_ == null) {
          annotations_ = new global::Common.StringMap();
        }
        Annotations.MergeFrom(other.Annotations);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (date_ == null) {
              date_ = new global::Common.String();
            }
            input.ReadMessage(date_);
            break;
          }
          case 18: {
            if (type_ == null) {
              type_ = new global::Common.String();
            }
            input.ReadMessage(type_);
            break;
          }
          case 26: {
            if (clientId_ == null) {
              clientId_ = new global::Common.String();
            }
            input.ReadMessage(clientId_);
            break;
          }
          case 34: {
            if (clientName_ == null) {
              clientName_ = new global::Common.String();
            }
            input.ReadMessage(clientName_);
            break;
          }
          case 42: {
            if (ip_ == null) {
              ip_ = new global::Common.String();
            }
            input.ReadMessage(ip_);
            break;
          }
          case 50: {
            if (locationInfo_ == null) {
              locationInfo_ = new global::Common.String();
            }
            input.ReadMessage(locationInfo_);
            break;
          }
          case 58: {
            if (details_ == null) {
              details_ = new global::Common.String();
            }
            input.ReadMessage(details_);
            break;
          }
          case 66: {
            if (userId_ == null) {
              userId_ = new global::Common.String();
            }
            input.ReadMessage(userId_);
            break;
          }
          case 74: {
            if (annotations_ == null) {
              annotations_ = new global::Common.StringMap();
            }
            input.ReadMessage(annotations_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EventQuery : pb::IMessage<EventQuery> {
    private static readonly pb::MessageParser<EventQuery> _parser = new pb::MessageParser<EventQuery>(() => new EventQuery());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EventQuery> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventQuery() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventQuery(EventQuery other) : this() {
      date_ = other.date_ != null ? other.date_.Clone() : null;
      type_ = other.type_ != null ? other.type_.Clone() : null;
      clientId_ = other.clientId_ != null ? other.clientId_.Clone() : null;
      userId_ = other.userId_ != null ? other.userId_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EventQuery Clone() {
      return new EventQuery(this);
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 1;
    private global::Common.String date_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Date {
      get { return date_; }
      set {
        date_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Common.String type_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 3;
    private global::Common.String clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 4;
    private global::Common.String userId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String UserId {
      get { return userId_; }
      set {
        userId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EventQuery);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EventQuery other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Date, other.Date)) return false;
      if (!object.Equals(Type, other.Type)) return false;
      if (!object.Equals(ClientId, other.ClientId)) return false;
      if (!object.Equals(UserId, other.UserId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (date_ != null) hash ^= Date.GetHashCode();
      if (type_ != null) hash ^= Type.GetHashCode();
      if (clientId_ != null) hash ^= ClientId.GetHashCode();
      if (userId_ != null) hash ^= UserId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (date_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Date);
      }
      if (type_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Type);
      }
      if (clientId_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ClientId);
      }
      if (userId_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UserId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (date_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Date);
      }
      if (type_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Type);
      }
      if (clientId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientId);
      }
      if (userId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EventQuery other) {
      if (other == null) {
        return;
      }
      if (other.date_ != null) {
        if (date_ == null) {
          date_ = new global::Common.String();
        }
        Date.MergeFrom(other.Date);
      }
      if (other.type_ != null) {
        if (type_ == null) {
          type_ = new global::Common.String();
        }
        Type.MergeFrom(other.Type);
      }
      if (other.clientId_ != null) {
        if (clientId_ == null) {
          clientId_ = new global::Common.String();
        }
        ClientId.MergeFrom(other.ClientId);
      }
      if (other.userId_ != null) {
        if (userId_ == null) {
          userId_ = new global::Common.String();
        }
        UserId.MergeFrom(other.UserId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (date_ == null) {
              date_ = new global::Common.String();
            }
            input.ReadMessage(date_);
            break;
          }
          case 18: {
            if (type_ == null) {
              type_ = new global::Common.String();
            }
            input.ReadMessage(type_);
            break;
          }
          case 26: {
            if (clientId_ == null) {
              clientId_ = new global::Common.String();
            }
            input.ReadMessage(clientId_);
            break;
          }
          case 34: {
            if (userId_ == null) {
              userId_ = new global::Common.String();
            }
            input.ReadMessage(userId_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class JSONWebKeys : pb::IMessage<JSONWebKeys> {
    private static readonly pb::MessageParser<JSONWebKeys> _parser = new pb::MessageParser<JSONWebKeys>(() => new JSONWebKeys());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JSONWebKeys> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JSONWebKeys() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JSONWebKeys(JSONWebKeys other) : this() {
      kty_ = other.kty_ != null ? other.kty_.Clone() : null;
      kid_ = other.kid_ != null ? other.kid_.Clone() : null;
      use_ = other.use_ != null ? other.use_.Clone() : null;
      n_ = other.n_ != null ? other.n_.Clone() : null;
      e_ = other.e_ != null ? other.e_.Clone() : null;
      x5C_ = other.x5C_ != null ? other.x5C_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JSONWebKeys Clone() {
      return new JSONWebKeys(this);
    }

    /// <summary>Field number for the "kty" field.</summary>
    public const int KtyFieldNumber = 1;
    private global::Common.String kty_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Kty {
      get { return kty_; }
      set {
        kty_ = value;
      }
    }

    /// <summary>Field number for the "kid" field.</summary>
    public const int KidFieldNumber = 2;
    private global::Common.Identifier kid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Identifier Kid {
      get { return kid_; }
      set {
        kid_ = value;
      }
    }

    /// <summary>Field number for the "use" field.</summary>
    public const int UseFieldNumber = 3;
    private global::Common.String use_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Use {
      get { return use_; }
      set {
        use_ = value;
      }
    }

    /// <summary>Field number for the "n" field.</summary>
    public const int NFieldNumber = 4;
    private global::Common.String n_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String N {
      get { return n_; }
      set {
        n_ = value;
      }
    }

    /// <summary>Field number for the "e" field.</summary>
    public const int EFieldNumber = 5;
    private global::Common.String e_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String E {
      get { return e_; }
      set {
        e_ = value;
      }
    }

    /// <summary>Field number for the "x5c" field.</summary>
    public const int X5CFieldNumber = 6;
    private global::Common.StringArray x5C_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.StringArray X5C {
      get { return x5C_; }
      set {
        x5C_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JSONWebKeys);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JSONWebKeys other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Kty, other.Kty)) return false;
      if (!object.Equals(Kid, other.Kid)) return false;
      if (!object.Equals(Use, other.Use)) return false;
      if (!object.Equals(N, other.N)) return false;
      if (!object.Equals(E, other.E)) return false;
      if (!object.Equals(X5C, other.X5C)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (kty_ != null) hash ^= Kty.GetHashCode();
      if (kid_ != null) hash ^= Kid.GetHashCode();
      if (use_ != null) hash ^= Use.GetHashCode();
      if (n_ != null) hash ^= N.GetHashCode();
      if (e_ != null) hash ^= E.GetHashCode();
      if (x5C_ != null) hash ^= X5C.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (kty_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Kty);
      }
      if (kid_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Kid);
      }
      if (use_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Use);
      }
      if (n_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(N);
      }
      if (e_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(E);
      }
      if (x5C_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(X5C);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (kty_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Kty);
      }
      if (kid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Kid);
      }
      if (use_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Use);
      }
      if (n_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(N);
      }
      if (e_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(E);
      }
      if (x5C_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(X5C);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JSONWebKeys other) {
      if (other == null) {
        return;
      }
      if (other.kty_ != null) {
        if (kty_ == null) {
          kty_ = new global::Common.String();
        }
        Kty.MergeFrom(other.Kty);
      }
      if (other.kid_ != null) {
        if (kid_ == null) {
          kid_ = new global::Common.Identifier();
        }
        Kid.MergeFrom(other.Kid);
      }
      if (other.use_ != null) {
        if (use_ == null) {
          use_ = new global::Common.String();
        }
        Use.MergeFrom(other.Use);
      }
      if (other.n_ != null) {
        if (n_ == null) {
          n_ = new global::Common.String();
        }
        N.MergeFrom(other.N);
      }
      if (other.e_ != null) {
        if (e_ == null) {
          e_ = new global::Common.String();
        }
        E.MergeFrom(other.E);
      }
      if (other.x5C_ != null) {
        if (x5C_ == null) {
          x5C_ = new global::Common.StringArray();
        }
        X5C.MergeFrom(other.X5C);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (kty_ == null) {
              kty_ = new global::Common.String();
            }
            input.ReadMessage(kty_);
            break;
          }
          case 18: {
            if (kid_ == null) {
              kid_ = new global::Common.Identifier();
            }
            input.ReadMessage(kid_);
            break;
          }
          case 26: {
            if (use_ == null) {
              use_ = new global::Common.String();
            }
            input.ReadMessage(use_);
            break;
          }
          case 34: {
            if (n_ == null) {
              n_ = new global::Common.String();
            }
            input.ReadMessage(n_);
            break;
          }
          case 42: {
            if (e_ == null) {
              e_ = new global::Common.String();
            }
            input.ReadMessage(e_);
            break;
          }
          case 50: {
            if (x5C_ == null) {
              x5C_ = new global::Common.StringArray();
            }
            input.ReadMessage(x5C_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Jwks : pb::IMessage<Jwks> {
    private static readonly pb::MessageParser<Jwks> _parser = new pb::MessageParser<Jwks>(() => new Jwks());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Jwks> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Jwks() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Jwks(Jwks other) : this() {
      keys_ = other.keys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Jwks Clone() {
      return new Jwks(this);
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.JSONWebKeys> _repeated_keys_codec
        = pb::FieldCodec.ForMessage(10, global::Api.JSONWebKeys.Parser);
    private readonly pbc::RepeatedField<global::Api.JSONWebKeys> keys_ = new pbc::RepeatedField<global::Api.JSONWebKeys>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.JSONWebKeys> Keys {
      get { return keys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Jwks);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Jwks other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!keys_.Equals(other.keys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= keys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      keys_.WriteTo(output, _repeated_keys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += keys_.CalculateSize(_repeated_keys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Jwks other) {
      if (other == null) {
        return;
      }
      keys_.Add(other.keys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            keys_.AddEntriesFrom(input, _repeated_keys_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Document : pb::IMessage<Document> {
    private static readonly pb::MessageParser<Document> _parser = new pb::MessageParser<Document>(() => new Document());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Document> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Document() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Document(Document other) : this() {
      category_ = other.category_ != null ? other.category_.Clone() : null;
      name_ = other.name_ != null ? other.name_.Clone() : null;
      data_ = other.data_ != null ? other.data_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Document Clone() {
      return new Document(this);
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 1;
    private global::Common.String category_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Category {
      get { return category_; }
      set {
        category_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private global::Common.String name_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Name {
      get { return name_; }
      set {
        name_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 3;
    private global::Common.StringMap data_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.StringMap Data {
      get { return data_; }
      set {
        data_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Document);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Document other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Category, other.Category)) return false;
      if (!object.Equals(Name, other.Name)) return false;
      if (!object.Equals(Data, other.Data)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (category_ != null) hash ^= Category.GetHashCode();
      if (name_ != null) hash ^= Name.GetHashCode();
      if (data_ != null) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (category_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Category);
      }
      if (name_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Name);
      }
      if (data_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (category_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Category);
      }
      if (name_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Name);
      }
      if (data_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Document other) {
      if (other == null) {
        return;
      }
      if (other.category_ != null) {
        if (category_ == null) {
          category_ = new global::Common.String();
        }
        Category.MergeFrom(other.Category);
      }
      if (other.name_ != null) {
        if (name_ == null) {
          name_ = new global::Common.String();
        }
        Name.MergeFrom(other.Name);
      }
      if (other.data_ != null) {
        if (data_ == null) {
          data_ = new global::Common.StringMap();
        }
        Data.MergeFrom(other.Data);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (category_ == null) {
              category_ = new global::Common.String();
            }
            input.ReadMessage(category_);
            break;
          }
          case 18: {
            if (name_ == null) {
              name_ = new global::Common.String();
            }
            input.ReadMessage(name_);
            break;
          }
          case 26: {
            if (data_ == null) {
              data_ = new global::Common.StringMap();
            }
            input.ReadMessage(data_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
