// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	common "github.com/autom8ter/api/common"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Plan int32

const (
	Plan_FREE    Plan = 0
	Plan_BASIC   Plan = 1
	Plan_PREMIUM Plan = 2
)

var Plan_name = map[int32]string{
	0: "FREE",
	1: "BASIC",
	2: "PREMIUM",
}

var Plan_value = map[string]int32{
	"FREE":    0,
	"BASIC":   1,
	"PREMIUM": 2,
}

func (x Plan) String() string {
	return proto.EnumName(Plan_name, int32(x))
}

func (Plan) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

type Fax struct {
	To                   *common.String `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	From                 *common.String `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	MediaUrl             *common.String `protobuf:"bytes,3,opt,name=media_url,json=mediaUrl,proto3" json:"media_url,omitempty"`
	Quality              *common.String `protobuf:"bytes,4,opt,name=quality,proto3" json:"quality,omitempty"`
	Callback             *common.String `protobuf:"bytes,5,opt,name=callback,proto3" json:"callback,omitempty"`
	StoreMedia           bool           `protobuf:"varint,6,opt,name=store_media,json=storeMedia,proto3" json:"store_media,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Fax) Reset()         { *m = Fax{} }
func (m *Fax) String() string { return proto.CompactTextString(m) }
func (*Fax) ProtoMessage()    {}
func (*Fax) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *Fax) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fax.Unmarshal(m, b)
}
func (m *Fax) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fax.Marshal(b, m, deterministic)
}
func (m *Fax) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fax.Merge(m, src)
}
func (m *Fax) XXX_Size() int {
	return xxx_messageInfo_Fax.Size(m)
}
func (m *Fax) XXX_DiscardUnknown() {
	xxx_messageInfo_Fax.DiscardUnknown(m)
}

var xxx_messageInfo_Fax proto.InternalMessageInfo

func (m *Fax) GetTo() *common.String {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *Fax) GetFrom() *common.String {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *Fax) GetMediaUrl() *common.String {
	if m != nil {
		return m.MediaUrl
	}
	return nil
}

func (m *Fax) GetQuality() *common.String {
	if m != nil {
		return m.Quality
	}
	return nil
}

func (m *Fax) GetCallback() *common.String {
	if m != nil {
		return m.Callback
	}
	return nil
}

func (m *Fax) GetStoreMedia() bool {
	if m != nil {
		return m.StoreMedia
	}
	return false
}

type FaxBlast struct {
	To                   *common.StringArray `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	From                 *common.String      `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	MediaUrl             *common.String      `protobuf:"bytes,3,opt,name=media_url,json=mediaUrl,proto3" json:"media_url,omitempty"`
	Quality              *common.String      `protobuf:"bytes,4,opt,name=quality,proto3" json:"quality,omitempty"`
	Callback             *common.String      `protobuf:"bytes,5,opt,name=callback,proto3" json:"callback,omitempty"`
	StoreMedia           bool                `protobuf:"varint,6,opt,name=store_media,json=storeMedia,proto3" json:"store_media,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *FaxBlast) Reset()         { *m = FaxBlast{} }
func (m *FaxBlast) String() string { return proto.CompactTextString(m) }
func (*FaxBlast) ProtoMessage()    {}
func (*FaxBlast) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *FaxBlast) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaxBlast.Unmarshal(m, b)
}
func (m *FaxBlast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaxBlast.Marshal(b, m, deterministic)
}
func (m *FaxBlast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaxBlast.Merge(m, src)
}
func (m *FaxBlast) XXX_Size() int {
	return xxx_messageInfo_FaxBlast.Size(m)
}
func (m *FaxBlast) XXX_DiscardUnknown() {
	xxx_messageInfo_FaxBlast.DiscardUnknown(m)
}

var xxx_messageInfo_FaxBlast proto.InternalMessageInfo

func (m *FaxBlast) GetTo() *common.StringArray {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *FaxBlast) GetFrom() *common.String {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *FaxBlast) GetMediaUrl() *common.String {
	if m != nil {
		return m.MediaUrl
	}
	return nil
}

func (m *FaxBlast) GetQuality() *common.String {
	if m != nil {
		return m.Quality
	}
	return nil
}

func (m *FaxBlast) GetCallback() *common.String {
	if m != nil {
		return m.Callback
	}
	return nil
}

func (m *FaxBlast) GetStoreMedia() bool {
	if m != nil {
		return m.StoreMedia
	}
	return false
}

type SubscribeRequest struct {
	Email                *common.String `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Plan                 Plan           `protobuf:"varint,2,opt,name=plan,proto3,enum=api.Plan" json:"plan,omitempty"`
	Card                 *Card          `protobuf:"bytes,3,opt,name=card,proto3" json:"card,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(m, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

func (m *SubscribeRequest) GetEmail() *common.String {
	if m != nil {
		return m.Email
	}
	return nil
}

func (m *SubscribeRequest) GetPlan() Plan {
	if m != nil {
		return m.Plan
	}
	return Plan_FREE
}

func (m *SubscribeRequest) GetCard() *Card {
	if m != nil {
		return m.Card
	}
	return nil
}

type UnSubscribeRequest struct {
	Email                *common.String `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Plan                 Plan           `protobuf:"varint,2,opt,name=plan,proto3,enum=api.Plan" json:"plan,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UnSubscribeRequest) Reset()         { *m = UnSubscribeRequest{} }
func (m *UnSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*UnSubscribeRequest) ProtoMessage()    {}
func (*UnSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *UnSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnSubscribeRequest.Unmarshal(m, b)
}
func (m *UnSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *UnSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnSubscribeRequest.Merge(m, src)
}
func (m *UnSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_UnSubscribeRequest.Size(m)
}
func (m *UnSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnSubscribeRequest proto.InternalMessageInfo

func (m *UnSubscribeRequest) GetEmail() *common.String {
	if m != nil {
		return m.Email
	}
	return nil
}

func (m *UnSubscribeRequest) GetPlan() Plan {
	if m != nil {
		return m.Plan
	}
	return Plan_FREE
}

type Card struct {
	Number               *common.String `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	ExpMonth             *common.String `protobuf:"bytes,2,opt,name=exp_month,json=expMonth,proto3" json:"exp_month,omitempty"`
	ExpYear              *common.String `protobuf:"bytes,3,opt,name=exp_year,json=expYear,proto3" json:"exp_year,omitempty"`
	Cvc                  *common.String `protobuf:"bytes,4,opt,name=cvc,proto3" json:"cvc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Card) Reset()         { *m = Card{} }
func (m *Card) String() string { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()    {}
func (*Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *Card) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Card.Unmarshal(m, b)
}
func (m *Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Card.Marshal(b, m, deterministic)
}
func (m *Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Card.Merge(m, src)
}
func (m *Card) XXX_Size() int {
	return xxx_messageInfo_Card.Size(m)
}
func (m *Card) XXX_DiscardUnknown() {
	xxx_messageInfo_Card.DiscardUnknown(m)
}

var xxx_messageInfo_Card proto.InternalMessageInfo

func (m *Card) GetNumber() *common.String {
	if m != nil {
		return m.Number
	}
	return nil
}

func (m *Card) GetExpMonth() *common.String {
	if m != nil {
		return m.ExpMonth
	}
	return nil
}

func (m *Card) GetExpYear() *common.String {
	if m != nil {
		return m.ExpYear
	}
	return nil
}

func (m *Card) GetCvc() *common.String {
	if m != nil {
		return m.Cvc
	}
	return nil
}

type SMS struct {
	Service              *common.String `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	To                   *common.String `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Message              *common.String `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	MediaURL             *common.String `protobuf:"bytes,4,opt,name=mediaURL,proto3" json:"mediaURL,omitempty"`
	Callback             *common.String `protobuf:"bytes,5,opt,name=callback,proto3" json:"callback,omitempty"`
	App                  *common.String `protobuf:"bytes,6,opt,name=app,proto3" json:"app,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *SMS) Reset()         { *m = SMS{} }
func (m *SMS) String() string { return proto.CompactTextString(m) }
func (*SMS) ProtoMessage()    {}
func (*SMS) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *SMS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMS.Unmarshal(m, b)
}
func (m *SMS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMS.Marshal(b, m, deterministic)
}
func (m *SMS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMS.Merge(m, src)
}
func (m *SMS) XXX_Size() int {
	return xxx_messageInfo_SMS.Size(m)
}
func (m *SMS) XXX_DiscardUnknown() {
	xxx_messageInfo_SMS.DiscardUnknown(m)
}

var xxx_messageInfo_SMS proto.InternalMessageInfo

func (m *SMS) GetService() *common.String {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *SMS) GetTo() *common.String {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *SMS) GetMessage() *common.String {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SMS) GetMediaURL() *common.String {
	if m != nil {
		return m.MediaURL
	}
	return nil
}

func (m *SMS) GetCallback() *common.String {
	if m != nil {
		return m.Callback
	}
	return nil
}

func (m *SMS) GetApp() *common.String {
	if m != nil {
		return m.App
	}
	return nil
}

type SMSBlast struct {
	Service              *common.String      `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	To                   *common.StringArray `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Message              *common.String      `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	MediaURL             *common.String      `protobuf:"bytes,4,opt,name=mediaURL,proto3" json:"mediaURL,omitempty"`
	Callback             *common.String      `protobuf:"bytes,5,opt,name=callback,proto3" json:"callback,omitempty"`
	App                  *common.String      `protobuf:"bytes,6,opt,name=app,proto3" json:"app,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SMSBlast) Reset()         { *m = SMSBlast{} }
func (m *SMSBlast) String() string { return proto.CompactTextString(m) }
func (*SMSBlast) ProtoMessage()    {}
func (*SMSBlast) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *SMSBlast) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMSBlast.Unmarshal(m, b)
}
func (m *SMSBlast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMSBlast.Marshal(b, m, deterministic)
}
func (m *SMSBlast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMSBlast.Merge(m, src)
}
func (m *SMSBlast) XXX_Size() int {
	return xxx_messageInfo_SMSBlast.Size(m)
}
func (m *SMSBlast) XXX_DiscardUnknown() {
	xxx_messageInfo_SMSBlast.DiscardUnknown(m)
}

var xxx_messageInfo_SMSBlast proto.InternalMessageInfo

func (m *SMSBlast) GetService() *common.String {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *SMSBlast) GetTo() *common.StringArray {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *SMSBlast) GetMessage() *common.String {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SMSBlast) GetMediaURL() *common.String {
	if m != nil {
		return m.MediaURL
	}
	return nil
}

func (m *SMSBlast) GetCallback() *common.String {
	if m != nil {
		return m.Callback
	}
	return nil
}

func (m *SMSBlast) GetApp() *common.String {
	if m != nil {
		return m.App
	}
	return nil
}

type EmailRequest struct {
	FromName             *common.String `protobuf:"bytes,1,opt,name=from_name,json=fromName,proto3" json:"from_name,omitempty"`
	FromEmail            *common.String `protobuf:"bytes,2,opt,name=from_email,json=fromEmail,proto3" json:"from_email,omitempty"`
	Email                *Email         `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *EmailRequest) Reset()         { *m = EmailRequest{} }
func (m *EmailRequest) String() string { return proto.CompactTextString(m) }
func (*EmailRequest) ProtoMessage()    {}
func (*EmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *EmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailRequest.Unmarshal(m, b)
}
func (m *EmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailRequest.Marshal(b, m, deterministic)
}
func (m *EmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailRequest.Merge(m, src)
}
func (m *EmailRequest) XXX_Size() int {
	return xxx_messageInfo_EmailRequest.Size(m)
}
func (m *EmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmailRequest proto.InternalMessageInfo

func (m *EmailRequest) GetFromName() *common.String {
	if m != nil {
		return m.FromName
	}
	return nil
}

func (m *EmailRequest) GetFromEmail() *common.String {
	if m != nil {
		return m.FromEmail
	}
	return nil
}

func (m *EmailRequest) GetEmail() *Email {
	if m != nil {
		return m.Email
	}
	return nil
}

type EmailBlastRequest struct {
	FromName             *common.String `protobuf:"bytes,1,opt,name=from_name,json=fromName,proto3" json:"from_name,omitempty"`
	FromEmail            *common.String `protobuf:"bytes,2,opt,name=from_email,json=fromEmail,proto3" json:"from_email,omitempty"`
	Blast                *EmailBlast    `protobuf:"bytes,3,opt,name=blast,proto3" json:"blast,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *EmailBlastRequest) Reset()         { *m = EmailBlastRequest{} }
func (m *EmailBlastRequest) String() string { return proto.CompactTextString(m) }
func (*EmailBlastRequest) ProtoMessage()    {}
func (*EmailBlastRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *EmailBlastRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailBlastRequest.Unmarshal(m, b)
}
func (m *EmailBlastRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailBlastRequest.Marshal(b, m, deterministic)
}
func (m *EmailBlastRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailBlastRequest.Merge(m, src)
}
func (m *EmailBlastRequest) XXX_Size() int {
	return xxx_messageInfo_EmailBlastRequest.Size(m)
}
func (m *EmailBlastRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailBlastRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmailBlastRequest proto.InternalMessageInfo

func (m *EmailBlastRequest) GetFromName() *common.String {
	if m != nil {
		return m.FromName
	}
	return nil
}

func (m *EmailBlastRequest) GetFromEmail() *common.String {
	if m != nil {
		return m.FromEmail
	}
	return nil
}

func (m *EmailBlastRequest) GetBlast() *EmailBlast {
	if m != nil {
		return m.Blast
	}
	return nil
}

type EmailBlast struct {
	NameAddress          *common.StringMap `protobuf:"bytes,1,opt,name=name_address,json=nameAddress,proto3" json:"name_address,omitempty"`
	Subject              *common.String    `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Plain                *common.String    `protobuf:"bytes,3,opt,name=plain,proto3" json:"plain,omitempty"`
	Html                 *common.String    `protobuf:"bytes,4,opt,name=html,proto3" json:"html,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EmailBlast) Reset()         { *m = EmailBlast{} }
func (m *EmailBlast) String() string { return proto.CompactTextString(m) }
func (*EmailBlast) ProtoMessage()    {}
func (*EmailBlast) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

func (m *EmailBlast) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailBlast.Unmarshal(m, b)
}
func (m *EmailBlast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailBlast.Marshal(b, m, deterministic)
}
func (m *EmailBlast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailBlast.Merge(m, src)
}
func (m *EmailBlast) XXX_Size() int {
	return xxx_messageInfo_EmailBlast.Size(m)
}
func (m *EmailBlast) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailBlast.DiscardUnknown(m)
}

var xxx_messageInfo_EmailBlast proto.InternalMessageInfo

func (m *EmailBlast) GetNameAddress() *common.StringMap {
	if m != nil {
		return m.NameAddress
	}
	return nil
}

func (m *EmailBlast) GetSubject() *common.String {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *EmailBlast) GetPlain() *common.String {
	if m != nil {
		return m.Plain
	}
	return nil
}

func (m *EmailBlast) GetHtml() *common.String {
	if m != nil {
		return m.Html
	}
	return nil
}

type Email struct {
	Name                 *common.String `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address              *common.String `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Subject              *common.String `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	Plain                *common.String `protobuf:"bytes,4,opt,name=plain,proto3" json:"plain,omitempty"`
	Html                 *common.String `protobuf:"bytes,5,opt,name=html,proto3" json:"html,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Email) Reset()         { *m = Email{} }
func (m *Email) String() string { return proto.CompactTextString(m) }
func (*Email) ProtoMessage()    {}
func (*Email) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}

func (m *Email) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Email.Unmarshal(m, b)
}
func (m *Email) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Email.Marshal(b, m, deterministic)
}
func (m *Email) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Email.Merge(m, src)
}
func (m *Email) XXX_Size() int {
	return xxx_messageInfo_Email.Size(m)
}
func (m *Email) XXX_DiscardUnknown() {
	xxx_messageInfo_Email.DiscardUnknown(m)
}

var xxx_messageInfo_Email proto.InternalMessageInfo

func (m *Email) GetName() *common.String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Email) GetAddress() *common.String {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Email) GetSubject() *common.String {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *Email) GetPlain() *common.String {
	if m != nil {
		return m.Plain
	}
	return nil
}

func (m *Email) GetHtml() *common.String {
	if m != nil {
		return m.Html
	}
	return nil
}

type Call struct {
	From                 *common.String `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   *common.String `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	App                  *common.String `protobuf:"bytes,3,opt,name=app,proto3" json:"app,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Call) Reset()         { *m = Call{} }
func (m *Call) String() string { return proto.CompactTextString(m) }
func (*Call) ProtoMessage()    {}
func (*Call) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}

func (m *Call) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Call.Unmarshal(m, b)
}
func (m *Call) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Call.Marshal(b, m, deterministic)
}
func (m *Call) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Call.Merge(m, src)
}
func (m *Call) XXX_Size() int {
	return xxx_messageInfo_Call.Size(m)
}
func (m *Call) XXX_DiscardUnknown() {
	xxx_messageInfo_Call.DiscardUnknown(m)
}

var xxx_messageInfo_Call proto.InternalMessageInfo

func (m *Call) GetFrom() *common.String {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *Call) GetTo() *common.String {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *Call) GetApp() *common.String {
	if m != nil {
		return m.App
	}
	return nil
}

type CallBlast struct {
	From                 *common.String      `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   *common.StringArray `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	App                  *common.String      `protobuf:"bytes,3,opt,name=app,proto3" json:"app,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CallBlast) Reset()         { *m = CallBlast{} }
func (m *CallBlast) String() string { return proto.CompactTextString(m) }
func (*CallBlast) ProtoMessage()    {}
func (*CallBlast) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}

func (m *CallBlast) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallBlast.Unmarshal(m, b)
}
func (m *CallBlast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallBlast.Marshal(b, m, deterministic)
}
func (m *CallBlast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallBlast.Merge(m, src)
}
func (m *CallBlast) XXX_Size() int {
	return xxx_messageInfo_CallBlast.Size(m)
}
func (m *CallBlast) XXX_DiscardUnknown() {
	xxx_messageInfo_CallBlast.DiscardUnknown(m)
}

var xxx_messageInfo_CallBlast proto.InternalMessageInfo

func (m *CallBlast) GetFrom() *common.String {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *CallBlast) GetTo() *common.StringArray {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *CallBlast) GetApp() *common.String {
	if m != nil {
		return m.App
	}
	return nil
}

type User struct {
	UserId               *common.Identifier  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name                 *common.String      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GivenName            *common.String      `protobuf:"bytes,3,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	FamilyName           *common.String      `protobuf:"bytes,4,opt,name=family_name,json=familyName,proto3" json:"family_name,omitempty"`
	Gender               *common.String      `protobuf:"bytes,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Birthdate            *common.String      `protobuf:"bytes,6,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	Email                *common.Identifier  `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber          *common.Identifier  `protobuf:"bytes,8,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Picture              *common.String      `protobuf:"bytes,9,opt,name=picture,proto3" json:"picture,omitempty"`
	UserMetadata         *common.StringMap   `protobuf:"bytes,10,opt,name=user_metadata,json=userMetadata,proto3" json:"user_metadata,omitempty"`
	AppMetadata          *common.StringMap   `protobuf:"bytes,11,opt,name=app_metadata,json=appMetadata,proto3" json:"app_metadata,omitempty"`
	LastIp               *common.String      `protobuf:"bytes,12,opt,name=last_ip,json=lastIp,proto3" json:"last_ip,omitempty"`
	Blocked              bool                `protobuf:"varint,13,opt,name=blocked,proto3" json:"blocked,omitempty"`
	Nickname             *common.String      `protobuf:"bytes,14,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Multifactor          *common.StringArray `protobuf:"bytes,15,opt,name=multifactor,proto3" json:"multifactor,omitempty"`
	CreatedAt            *common.String      `protobuf:"bytes,17,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *common.String      `protobuf:"bytes,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	PhoneVerified        bool                `protobuf:"varint,19,opt,name=phone_verified,json=phoneVerified,proto3" json:"phone_verified,omitempty"`
	EmailVerified        bool                `protobuf:"varint,20,opt,name=email_verified,json=emailVerified,proto3" json:"email_verified,omitempty"`
	Password             *common.String      `protobuf:"bytes,21,opt,name=password,proto3" json:"password,omitempty"`
	Identities           []*Identity         `protobuf:"bytes,22,rep,name=identities,proto3" json:"identities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUserId() *common.Identifier {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *User) GetName() *common.String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *User) GetGivenName() *common.String {
	if m != nil {
		return m.GivenName
	}
	return nil
}

func (m *User) GetFamilyName() *common.String {
	if m != nil {
		return m.FamilyName
	}
	return nil
}

func (m *User) GetGender() *common.String {
	if m != nil {
		return m.Gender
	}
	return nil
}

func (m *User) GetBirthdate() *common.String {
	if m != nil {
		return m.Birthdate
	}
	return nil
}

func (m *User) GetEmail() *common.Identifier {
	if m != nil {
		return m.Email
	}
	return nil
}

func (m *User) GetPhoneNumber() *common.Identifier {
	if m != nil {
		return m.PhoneNumber
	}
	return nil
}

func (m *User) GetPicture() *common.String {
	if m != nil {
		return m.Picture
	}
	return nil
}

func (m *User) GetUserMetadata() *common.StringMap {
	if m != nil {
		return m.UserMetadata
	}
	return nil
}

func (m *User) GetAppMetadata() *common.StringMap {
	if m != nil {
		return m.AppMetadata
	}
	return nil
}

func (m *User) GetLastIp() *common.String {
	if m != nil {
		return m.LastIp
	}
	return nil
}

func (m *User) GetBlocked() bool {
	if m != nil {
		return m.Blocked
	}
	return false
}

func (m *User) GetNickname() *common.String {
	if m != nil {
		return m.Nickname
	}
	return nil
}

func (m *User) GetMultifactor() *common.StringArray {
	if m != nil {
		return m.Multifactor
	}
	return nil
}

func (m *User) GetCreatedAt() *common.String {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *User) GetUpdatedAt() *common.String {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *User) GetPhoneVerified() bool {
	if m != nil {
		return m.PhoneVerified
	}
	return false
}

func (m *User) GetEmailVerified() bool {
	if m != nil {
		return m.EmailVerified
	}
	return false
}

func (m *User) GetPassword() *common.String {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *User) GetIdentities() []*Identity {
	if m != nil {
		return m.Identities
	}
	return nil
}

type Identity struct {
	Connection           *common.String     `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	UserId               *common.Identifier `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Provider             *common.String     `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	IsSocial             bool               `protobuf:"varint,4,opt,name=isSocial,proto3" json:"isSocial,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Identity) Reset()         { *m = Identity{} }
func (m *Identity) String() string { return proto.CompactTextString(m) }
func (*Identity) ProtoMessage()    {}
func (*Identity) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}

func (m *Identity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Identity.Unmarshal(m, b)
}
func (m *Identity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Identity.Marshal(b, m, deterministic)
}
func (m *Identity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Identity.Merge(m, src)
}
func (m *Identity) XXX_Size() int {
	return xxx_messageInfo_Identity.Size(m)
}
func (m *Identity) XXX_DiscardUnknown() {
	xxx_messageInfo_Identity.DiscardUnknown(m)
}

var xxx_messageInfo_Identity proto.InternalMessageInfo

func (m *Identity) GetConnection() *common.String {
	if m != nil {
		return m.Connection
	}
	return nil
}

func (m *Identity) GetUserId() *common.Identifier {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *Identity) GetProvider() *common.String {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *Identity) GetIsSocial() bool {
	if m != nil {
		return m.IsSocial
	}
	return false
}

type Auth struct {
	Config               *common.Config   `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	TokenSet             *common.TokenSet `protobuf:"bytes,3,opt,name=token_set,json=tokenSet,proto3" json:"token_set,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Auth) Reset()         { *m = Auth{} }
func (m *Auth) String() string { return proto.CompactTextString(m) }
func (*Auth) ProtoMessage()    {}
func (*Auth) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}

func (m *Auth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Auth.Unmarshal(m, b)
}
func (m *Auth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Auth.Marshal(b, m, deterministic)
}
func (m *Auth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Auth.Merge(m, src)
}
func (m *Auth) XXX_Size() int {
	return xxx_messageInfo_Auth.Size(m)
}
func (m *Auth) XXX_DiscardUnknown() {
	xxx_messageInfo_Auth.DiscardUnknown(m)
}

var xxx_messageInfo_Auth proto.InternalMessageInfo

func (m *Auth) GetConfig() *common.Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *Auth) GetTokenSet() *common.TokenSet {
	if m != nil {
		return m.TokenSet
	}
	return nil
}

type JSONWebKeys struct {
	Kty                  *common.String      `protobuf:"bytes,1,opt,name=kty,proto3" json:"kty,omitempty"`
	Kid                  *common.Identifier  `protobuf:"bytes,2,opt,name=kid,proto3" json:"kid,omitempty"`
	Use                  *common.String      `protobuf:"bytes,3,opt,name=use,proto3" json:"use,omitempty"`
	N                    *common.String      `protobuf:"bytes,4,opt,name=n,proto3" json:"n,omitempty"`
	E                    *common.String      `protobuf:"bytes,5,opt,name=e,proto3" json:"e,omitempty"`
	X5C                  *common.StringArray `protobuf:"bytes,6,opt,name=x5c,proto3" json:"x5c,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *JSONWebKeys) Reset()         { *m = JSONWebKeys{} }
func (m *JSONWebKeys) String() string { return proto.CompactTextString(m) }
func (*JSONWebKeys) ProtoMessage()    {}
func (*JSONWebKeys) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{16}
}

func (m *JSONWebKeys) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JSONWebKeys.Unmarshal(m, b)
}
func (m *JSONWebKeys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JSONWebKeys.Marshal(b, m, deterministic)
}
func (m *JSONWebKeys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JSONWebKeys.Merge(m, src)
}
func (m *JSONWebKeys) XXX_Size() int {
	return xxx_messageInfo_JSONWebKeys.Size(m)
}
func (m *JSONWebKeys) XXX_DiscardUnknown() {
	xxx_messageInfo_JSONWebKeys.DiscardUnknown(m)
}

var xxx_messageInfo_JSONWebKeys proto.InternalMessageInfo

func (m *JSONWebKeys) GetKty() *common.String {
	if m != nil {
		return m.Kty
	}
	return nil
}

func (m *JSONWebKeys) GetKid() *common.Identifier {
	if m != nil {
		return m.Kid
	}
	return nil
}

func (m *JSONWebKeys) GetUse() *common.String {
	if m != nil {
		return m.Use
	}
	return nil
}

func (m *JSONWebKeys) GetN() *common.String {
	if m != nil {
		return m.N
	}
	return nil
}

func (m *JSONWebKeys) GetE() *common.String {
	if m != nil {
		return m.E
	}
	return nil
}

func (m *JSONWebKeys) GetX5C() *common.StringArray {
	if m != nil {
		return m.X5C
	}
	return nil
}

type Jwks struct {
	Keys                 []*JSONWebKeys `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Jwks) Reset()         { *m = Jwks{} }
func (m *Jwks) String() string { return proto.CompactTextString(m) }
func (*Jwks) ProtoMessage()    {}
func (*Jwks) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{17}
}

func (m *Jwks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Jwks.Unmarshal(m, b)
}
func (m *Jwks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Jwks.Marshal(b, m, deterministic)
}
func (m *Jwks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Jwks.Merge(m, src)
}
func (m *Jwks) XXX_Size() int {
	return xxx_messageInfo_Jwks.Size(m)
}
func (m *Jwks) XXX_DiscardUnknown() {
	xxx_messageInfo_Jwks.DiscardUnknown(m)
}

var xxx_messageInfo_Jwks proto.InternalMessageInfo

func (m *Jwks) GetKeys() []*JSONWebKeys {
	if m != nil {
		return m.Keys
	}
	return nil
}

type RenderRequest struct {
	Name                 *common.String `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Text                 *common.String `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Data                 *common.String `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RenderRequest) Reset()         { *m = RenderRequest{} }
func (m *RenderRequest) String() string { return proto.CompactTextString(m) }
func (*RenderRequest) ProtoMessage()    {}
func (*RenderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{18}
}

func (m *RenderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenderRequest.Unmarshal(m, b)
}
func (m *RenderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenderRequest.Marshal(b, m, deterministic)
}
func (m *RenderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenderRequest.Merge(m, src)
}
func (m *RenderRequest) XXX_Size() int {
	return xxx_messageInfo_RenderRequest.Size(m)
}
func (m *RenderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenderRequest proto.InternalMessageInfo

func (m *RenderRequest) GetName() *common.String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *RenderRequest) GetText() *common.String {
	if m != nil {
		return m.Text
	}
	return nil
}

func (m *RenderRequest) GetData() *common.String {
	if m != nil {
		return m.Data
	}
	return nil
}

type SearchPhoneNumberRequest struct {
	State                *common.String      `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Capabilities         *NumberCapabilities `protobuf:"bytes,2,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	TotalResults         *common.Int64       `protobuf:"bytes,3,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SearchPhoneNumberRequest) Reset()         { *m = SearchPhoneNumberRequest{} }
func (m *SearchPhoneNumberRequest) String() string { return proto.CompactTextString(m) }
func (*SearchPhoneNumberRequest) ProtoMessage()    {}
func (*SearchPhoneNumberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{19}
}

func (m *SearchPhoneNumberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchPhoneNumberRequest.Unmarshal(m, b)
}
func (m *SearchPhoneNumberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchPhoneNumberRequest.Marshal(b, m, deterministic)
}
func (m *SearchPhoneNumberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchPhoneNumberRequest.Merge(m, src)
}
func (m *SearchPhoneNumberRequest) XXX_Size() int {
	return xxx_messageInfo_SearchPhoneNumberRequest.Size(m)
}
func (m *SearchPhoneNumberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchPhoneNumberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchPhoneNumberRequest proto.InternalMessageInfo

func (m *SearchPhoneNumberRequest) GetState() *common.String {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *SearchPhoneNumberRequest) GetCapabilities() *NumberCapabilities {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

func (m *SearchPhoneNumberRequest) GetTotalResults() *common.Int64 {
	if m != nil {
		return m.TotalResults
	}
	return nil
}

type PhoneNumber struct {
	FriendlyName         *common.String      `protobuf:"bytes,1,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	PhoneNumber          *common.String      `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Region               *common.String      `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	Capabilities         *NumberCapabilities `protobuf:"bytes,4,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PhoneNumber) Reset()         { *m = PhoneNumber{} }
func (m *PhoneNumber) String() string { return proto.CompactTextString(m) }
func (*PhoneNumber) ProtoMessage()    {}
func (*PhoneNumber) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{20}
}

func (m *PhoneNumber) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PhoneNumber.Unmarshal(m, b)
}
func (m *PhoneNumber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PhoneNumber.Marshal(b, m, deterministic)
}
func (m *PhoneNumber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneNumber.Merge(m, src)
}
func (m *PhoneNumber) XXX_Size() int {
	return xxx_messageInfo_PhoneNumber.Size(m)
}
func (m *PhoneNumber) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneNumber.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneNumber proto.InternalMessageInfo

func (m *PhoneNumber) GetFriendlyName() *common.String {
	if m != nil {
		return m.FriendlyName
	}
	return nil
}

func (m *PhoneNumber) GetPhoneNumber() *common.String {
	if m != nil {
		return m.PhoneNumber
	}
	return nil
}

func (m *PhoneNumber) GetRegion() *common.String {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *PhoneNumber) GetCapabilities() *NumberCapabilities {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

type NumberCapabilities struct {
	Voice                bool     `protobuf:"varint,1,opt,name=voice,proto3" json:"voice,omitempty"`
	Sms                  bool     `protobuf:"varint,2,opt,name=sms,proto3" json:"sms,omitempty"`
	Mms                  bool     `protobuf:"varint,3,opt,name=mms,proto3" json:"mms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NumberCapabilities) Reset()         { *m = NumberCapabilities{} }
func (m *NumberCapabilities) String() string { return proto.CompactTextString(m) }
func (*NumberCapabilities) ProtoMessage()    {}
func (*NumberCapabilities) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{21}
}

func (m *NumberCapabilities) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumberCapabilities.Unmarshal(m, b)
}
func (m *NumberCapabilities) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumberCapabilities.Marshal(b, m, deterministic)
}
func (m *NumberCapabilities) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumberCapabilities.Merge(m, src)
}
func (m *NumberCapabilities) XXX_Size() int {
	return xxx_messageInfo_NumberCapabilities.Size(m)
}
func (m *NumberCapabilities) XXX_DiscardUnknown() {
	xxx_messageInfo_NumberCapabilities.DiscardUnknown(m)
}

var xxx_messageInfo_NumberCapabilities proto.InternalMessageInfo

func (m *NumberCapabilities) GetVoice() bool {
	if m != nil {
		return m.Voice
	}
	return false
}

func (m *NumberCapabilities) GetSms() bool {
	if m != nil {
		return m.Sms
	}
	return false
}

func (m *NumberCapabilities) GetMms() bool {
	if m != nil {
		return m.Mms
	}
	return false
}

type PhoneNumberResource struct {
	Number               *PhoneNumber       `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	Id                   *common.Identifier `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Uri                  *common.String     `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PhoneNumberResource) Reset()         { *m = PhoneNumberResource{} }
func (m *PhoneNumberResource) String() string { return proto.CompactTextString(m) }
func (*PhoneNumberResource) ProtoMessage()    {}
func (*PhoneNumberResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{22}
}

func (m *PhoneNumberResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PhoneNumberResource.Unmarshal(m, b)
}
func (m *PhoneNumberResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PhoneNumberResource.Marshal(b, m, deterministic)
}
func (m *PhoneNumberResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneNumberResource.Merge(m, src)
}
func (m *PhoneNumberResource) XXX_Size() int {
	return xxx_messageInfo_PhoneNumberResource.Size(m)
}
func (m *PhoneNumberResource) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneNumberResource.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneNumberResource proto.InternalMessageInfo

func (m *PhoneNumberResource) GetNumber() *PhoneNumber {
	if m != nil {
		return m.Number
	}
	return nil
}

func (m *PhoneNumberResource) GetId() *common.Identifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *PhoneNumberResource) GetUri() *common.String {
	if m != nil {
		return m.Uri
	}
	return nil
}

type TokenQuery struct {
	Token                *common.Token  `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Query                *common.String `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TokenQuery) Reset()         { *m = TokenQuery{} }
func (m *TokenQuery) String() string { return proto.CompactTextString(m) }
func (*TokenQuery) ProtoMessage()    {}
func (*TokenQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{23}
}

func (m *TokenQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenQuery.Unmarshal(m, b)
}
func (m *TokenQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenQuery.Marshal(b, m, deterministic)
}
func (m *TokenQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenQuery.Merge(m, src)
}
func (m *TokenQuery) XXX_Size() int {
	return xxx_messageInfo_TokenQuery.Size(m)
}
func (m *TokenQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenQuery.DiscardUnknown(m)
}

var xxx_messageInfo_TokenQuery proto.InternalMessageInfo

func (m *TokenQuery) GetToken() *common.Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *TokenQuery) GetQuery() *common.String {
	if m != nil {
		return m.Query
	}
	return nil
}

type IDBody struct {
	Id                   *common.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Body                 *common.String     `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *IDBody) Reset()         { *m = IDBody{} }
func (m *IDBody) String() string { return proto.CompactTextString(m) }
func (*IDBody) ProtoMessage()    {}
func (*IDBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{24}
}

func (m *IDBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDBody.Unmarshal(m, b)
}
func (m *IDBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDBody.Marshal(b, m, deterministic)
}
func (m *IDBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDBody.Merge(m, src)
}
func (m *IDBody) XXX_Size() int {
	return xxx_messageInfo_IDBody.Size(m)
}
func (m *IDBody) XXX_DiscardUnknown() {
	xxx_messageInfo_IDBody.DiscardUnknown(m)
}

var xxx_messageInfo_IDBody proto.InternalMessageInfo

func (m *IDBody) GetId() *common.Identifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *IDBody) GetBody() *common.String {
	if m != nil {
		return m.Body
	}
	return nil
}

type IDStrings struct {
	Id                   *common.Identifier  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Strings              *common.StringArray `protobuf:"bytes,2,opt,name=strings,proto3" json:"strings,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *IDStrings) Reset()         { *m = IDStrings{} }
func (m *IDStrings) String() string { return proto.CompactTextString(m) }
func (*IDStrings) ProtoMessage()    {}
func (*IDStrings) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{25}
}

func (m *IDStrings) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IDStrings.Unmarshal(m, b)
}
func (m *IDStrings) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IDStrings.Marshal(b, m, deterministic)
}
func (m *IDStrings) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IDStrings.Merge(m, src)
}
func (m *IDStrings) XXX_Size() int {
	return xxx_messageInfo_IDStrings.Size(m)
}
func (m *IDStrings) XXX_DiscardUnknown() {
	xxx_messageInfo_IDStrings.DiscardUnknown(m)
}

var xxx_messageInfo_IDStrings proto.InternalMessageInfo

func (m *IDStrings) GetId() *common.Identifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *IDStrings) GetStrings() *common.StringArray {
	if m != nil {
		return m.Strings
	}
	return nil
}

type Role struct {
	Id                   *common.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 *common.String     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          *common.String     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{26}
}

func (m *Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Role.Unmarshal(m, b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Role.Marshal(b, m, deterministic)
}
func (m *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(m, src)
}
func (m *Role) XXX_Size() int {
	return xxx_messageInfo_Role.Size(m)
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

func (m *Role) GetId() *common.Identifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Role) GetName() *common.String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Role) GetDescription() *common.String {
	if m != nil {
		return m.Description
	}
	return nil
}

type CallResponse struct {
	Id                   *common.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	To                   *common.String     `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
	From                 *common.String     `protobuf:"bytes,6,opt,name=from,proto3" json:"from,omitempty"`
	Status               *common.String     `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	AnsweredBy           *common.String     `protobuf:"bytes,10,opt,name=answered_by,json=answeredBy,proto3" json:"answered_by,omitempty"`
	ForwardedFrom        *common.String     `protobuf:"bytes,11,opt,name=forwarded_from,json=forwardedFrom,proto3" json:"forwarded_from,omitempty"`
	CallerName           *common.String     `protobuf:"bytes,12,opt,name=caller_name,json=callerName,proto3" json:"caller_name,omitempty"`
	Annotations          *common.StringMap  `protobuf:"bytes,13,opt,name=annotations,proto3" json:"annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *CallResponse) Reset()         { *m = CallResponse{} }
func (m *CallResponse) String() string { return proto.CompactTextString(m) }
func (*CallResponse) ProtoMessage()    {}
func (*CallResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{27}
}

func (m *CallResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallResponse.Unmarshal(m, b)
}
func (m *CallResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallResponse.Marshal(b, m, deterministic)
}
func (m *CallResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallResponse.Merge(m, src)
}
func (m *CallResponse) XXX_Size() int {
	return xxx_messageInfo_CallResponse.Size(m)
}
func (m *CallResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CallResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CallResponse proto.InternalMessageInfo

func (m *CallResponse) GetId() *common.Identifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *CallResponse) GetTo() *common.String {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *CallResponse) GetFrom() *common.String {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *CallResponse) GetStatus() *common.String {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *CallResponse) GetAnsweredBy() *common.String {
	if m != nil {
		return m.AnsweredBy
	}
	return nil
}

func (m *CallResponse) GetForwardedFrom() *common.String {
	if m != nil {
		return m.ForwardedFrom
	}
	return nil
}

func (m *CallResponse) GetCallerName() *common.String {
	if m != nil {
		return m.CallerName
	}
	return nil
}

func (m *CallResponse) GetAnnotations() *common.StringMap {
	if m != nil {
		return m.Annotations
	}
	return nil
}

type SMSResponse struct {
	Id                   *common.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	To                   *common.String     `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
	From                 *common.String     `protobuf:"bytes,6,opt,name=from,proto3" json:"from,omitempty"`
	MediaUrl             *common.String     `protobuf:"bytes,7,opt,name=media_url,json=mediaUrl,proto3" json:"media_url,omitempty"`
	Body                 *common.String     `protobuf:"bytes,8,opt,name=body,proto3" json:"body,omitempty"`
	Status               *common.String     `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	Annotations          *common.StringMap  `protobuf:"bytes,10,opt,name=annotations,proto3" json:"annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SMSResponse) Reset()         { *m = SMSResponse{} }
func (m *SMSResponse) String() string { return proto.CompactTextString(m) }
func (*SMSResponse) ProtoMessage()    {}
func (*SMSResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{28}
}

func (m *SMSResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMSResponse.Unmarshal(m, b)
}
func (m *SMSResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMSResponse.Marshal(b, m, deterministic)
}
func (m *SMSResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMSResponse.Merge(m, src)
}
func (m *SMSResponse) XXX_Size() int {
	return xxx_messageInfo_SMSResponse.Size(m)
}
func (m *SMSResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SMSResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SMSResponse proto.InternalMessageInfo

func (m *SMSResponse) GetId() *common.Identifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SMSResponse) GetTo() *common.String {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *SMSResponse) GetFrom() *common.String {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *SMSResponse) GetMediaUrl() *common.String {
	if m != nil {
		return m.MediaUrl
	}
	return nil
}

func (m *SMSResponse) GetBody() *common.String {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *SMSResponse) GetStatus() *common.String {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *SMSResponse) GetAnnotations() *common.StringMap {
	if m != nil {
		return m.Annotations
	}
	return nil
}

type SubscriptionResponse struct {
	Id                   *common.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Amount               *common.Int64      `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	DaysUntilDue         *common.Int64      `protobuf:"bytes,3,opt,name=days_until_due,json=daysUntilDue,proto3" json:"days_until_due,omitempty"`
	Annotations          *common.StringMap  `protobuf:"bytes,10,opt,name=annotations,proto3" json:"annotations,omitempty"`
	Plan                 Plan               `protobuf:"varint,4,opt,name=plan,proto3,enum=api.Plan" json:"plan,omitempty"`
	User                 *User              `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	Status               *common.String     `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *SubscriptionResponse) Reset()         { *m = SubscriptionResponse{} }
func (m *SubscriptionResponse) String() string { return proto.CompactTextString(m) }
func (*SubscriptionResponse) ProtoMessage()    {}
func (*SubscriptionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{29}
}

func (m *SubscriptionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscriptionResponse.Unmarshal(m, b)
}
func (m *SubscriptionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscriptionResponse.Marshal(b, m, deterministic)
}
func (m *SubscriptionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscriptionResponse.Merge(m, src)
}
func (m *SubscriptionResponse) XXX_Size() int {
	return xxx_messageInfo_SubscriptionResponse.Size(m)
}
func (m *SubscriptionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscriptionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscriptionResponse proto.InternalMessageInfo

func (m *SubscriptionResponse) GetId() *common.Identifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SubscriptionResponse) GetAmount() *common.Int64 {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *SubscriptionResponse) GetDaysUntilDue() *common.Int64 {
	if m != nil {
		return m.DaysUntilDue
	}
	return nil
}

func (m *SubscriptionResponse) GetAnnotations() *common.StringMap {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func (m *SubscriptionResponse) GetPlan() Plan {
	if m != nil {
		return m.Plan
	}
	return Plan_FREE
}

func (m *SubscriptionResponse) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *SubscriptionResponse) GetStatus() *common.String {
	if m != nil {
		return m.Status
	}
	return nil
}

type FaxResponse struct {
	Id                   *common.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	MediaUrl             *common.String     `protobuf:"bytes,3,opt,name=media_url,json=mediaUrl,proto3" json:"media_url,omitempty"`
	To                   *common.String     `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	From                 *common.String     `protobuf:"bytes,5,opt,name=from,proto3" json:"from,omitempty"`
	Status               *common.String     `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`
	Annotations          *common.StringMap  `protobuf:"bytes,10,opt,name=annotations,proto3" json:"annotations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FaxResponse) Reset()         { *m = FaxResponse{} }
func (m *FaxResponse) String() string { return proto.CompactTextString(m) }
func (*FaxResponse) ProtoMessage()    {}
func (*FaxResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{30}
}

func (m *FaxResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FaxResponse.Unmarshal(m, b)
}
func (m *FaxResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FaxResponse.Marshal(b, m, deterministic)
}
func (m *FaxResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FaxResponse.Merge(m, src)
}
func (m *FaxResponse) XXX_Size() int {
	return xxx_messageInfo_FaxResponse.Size(m)
}
func (m *FaxResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FaxResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FaxResponse proto.InternalMessageInfo

func (m *FaxResponse) GetId() *common.Identifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *FaxResponse) GetMediaUrl() *common.String {
	if m != nil {
		return m.MediaUrl
	}
	return nil
}

func (m *FaxResponse) GetTo() *common.String {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *FaxResponse) GetFrom() *common.String {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *FaxResponse) GetStatus() *common.String {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *FaxResponse) GetAnnotations() *common.StringMap {
	if m != nil {
		return m.Annotations
	}
	return nil
}

func init() {
	proto.RegisterEnum("api.Plan", Plan_name, Plan_value)
	proto.RegisterType((*Fax)(nil), "api.Fax")
	proto.RegisterType((*FaxBlast)(nil), "api.FaxBlast")
	proto.RegisterType((*SubscribeRequest)(nil), "api.SubscribeRequest")
	proto.RegisterType((*UnSubscribeRequest)(nil), "api.UnSubscribeRequest")
	proto.RegisterType((*Card)(nil), "api.Card")
	proto.RegisterType((*SMS)(nil), "api.SMS")
	proto.RegisterType((*SMSBlast)(nil), "api.SMSBlast")
	proto.RegisterType((*EmailRequest)(nil), "api.EmailRequest")
	proto.RegisterType((*EmailBlastRequest)(nil), "api.EmailBlastRequest")
	proto.RegisterType((*EmailBlast)(nil), "api.EmailBlast")
	proto.RegisterType((*Email)(nil), "api.Email")
	proto.RegisterType((*Call)(nil), "api.Call")
	proto.RegisterType((*CallBlast)(nil), "api.CallBlast")
	proto.RegisterType((*User)(nil), "api.User")
	proto.RegisterType((*Identity)(nil), "api.Identity")
	proto.RegisterType((*Auth)(nil), "api.Auth")
	proto.RegisterType((*JSONWebKeys)(nil), "api.JSONWebKeys")
	proto.RegisterType((*Jwks)(nil), "api.Jwks")
	proto.RegisterType((*RenderRequest)(nil), "api.RenderRequest")
	proto.RegisterType((*SearchPhoneNumberRequest)(nil), "api.SearchPhoneNumberRequest")
	proto.RegisterType((*PhoneNumber)(nil), "api.PhoneNumber")
	proto.RegisterType((*NumberCapabilities)(nil), "api.NumberCapabilities")
	proto.RegisterType((*PhoneNumberResource)(nil), "api.PhoneNumberResource")
	proto.RegisterType((*TokenQuery)(nil), "api.TokenQuery")
	proto.RegisterType((*IDBody)(nil), "api.IDBody")
	proto.RegisterType((*IDStrings)(nil), "api.IDStrings")
	proto.RegisterType((*Role)(nil), "api.Role")
	proto.RegisterType((*CallResponse)(nil), "api.CallResponse")
	proto.RegisterType((*SMSResponse)(nil), "api.SMSResponse")
	proto.RegisterType((*SubscriptionResponse)(nil), "api.SubscriptionResponse")
	proto.RegisterType((*FaxResponse)(nil), "api.FaxResponse")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 2414 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x5a, 0xcb, 0x6f, 0x23, 0x49,
	0x19, 0xa7, 0x6d, 0xc7, 0x8f, 0xcf, 0x71, 0x26, 0xa9, 0xcc, 0xc3, 0x6b, 0x66, 0x76, 0xa3, 0x9e,
	0x07, 0x21, 0xbb, 0x33, 0x5e, 0x32, 0x3b, 0x7b, 0x18, 0x2e, 0x64, 0xf2, 0x18, 0xb2, 0x83, 0x67,
	0x43, 0x7b, 0xc3, 0x6a, 0x05, 0x8b, 0x55, 0xee, 0xae, 0xc4, 0xbd, 0x69, 0x77, 0xf7, 0x74, 0x57,
	0x67, 0x62, 0x71, 0x41, 0x48, 0xdc, 0xb8, 0x21, 0x71, 0xe3, 0xc4, 0x85, 0x1b, 0x5a, 0x21, 0xf1,
	0x3f, 0x70, 0xe1, 0xc2, 0x01, 0x89, 0x1b, 0x12, 0x47, 0x38, 0x71, 0xe0, 0x84, 0x40, 0x5f, 0x55,
	0x77, 0xbb, 0x1d, 0x77, 0xd9, 0x9e, 0x01, 0x56, 0x82, 0x53, 0xec, 0xfa, 0x7e, 0xf5, 0xab, 0xaf,
	0xbe, 0x67, 0x55, 0x39, 0x50, 0xa3, 0xbe, 0xfd, 0xc0, 0x0f, 0x3c, 0xee, 0x91, 0x22, 0xf5, 0xed,
	0xd6, 0xcd, 0x53, 0xcf, 0x3b, 0x75, 0x58, 0x9b, 0xfa, 0x76, 0x9b, 0xba, 0xae, 0xc7, 0x29, 0xb7,
	0x3d, 0x37, 0x94, 0x90, 0xd6, 0xba, 0xe9, 0x0d, 0x87, 0x9e, 0xdb, 0x96, 0x7f, 0xe4, 0xa0, 0xfe,
	0x57, 0x0d, 0x8a, 0x07, 0xf4, 0x82, 0xbc, 0x09, 0x05, 0xee, 0x35, 0xb5, 0x0d, 0x6d, 0xb3, 0xbe,
	0xbd, 0xf2, 0x20, 0x86, 0x74, 0x79, 0x60, 0xbb, 0xa7, 0x46, 0x81, 0x7b, 0x44, 0x87, 0xd2, 0x49,
	0xe0, 0x0d, 0x9b, 0x85, 0x5c, 0x84, 0x90, 0x91, 0xb7, 0xa1, 0x36, 0x64, 0x96, 0x4d, 0x7b, 0x51,
	0xe0, 0x34, 0x8b, 0xb9, 0xc0, 0xaa, 0x00, 0x1c, 0x07, 0x0e, 0xd9, 0x84, 0xca, 0x8b, 0x88, 0x3a,
	0x36, 0x1f, 0x35, 0x4b, 0xb9, 0xd0, 0x44, 0x4c, 0xb6, 0xa0, 0x6a, 0x52, 0xc7, 0xe9, 0x53, 0xf3,
	0xac, 0xb9, 0x94, 0xcf, 0x9a, 0xc8, 0xc9, 0x5b, 0x50, 0x0f, 0xb9, 0x17, 0xb0, 0x9e, 0x58, 0xa7,
	0x59, 0xde, 0xd0, 0x36, 0xab, 0x06, 0x88, 0xa1, 0x0e, 0x8e, 0xe8, 0x7f, 0xd7, 0xa0, 0x7a, 0x40,
	0x2f, 0x9e, 0x38, 0x34, 0xe4, 0xe4, 0x76, 0x66, 0xd3, 0xeb, 0x93, 0x9c, 0x3b, 0x41, 0x40, 0x47,
	0xff, 0x57, 0x3b, 0x3f, 0x87, 0xd5, 0x6e, 0xd4, 0x0f, 0xcd, 0xc0, 0xee, 0x33, 0x83, 0xbd, 0x88,
	0x58, 0xc8, 0xc9, 0x1d, 0x58, 0x62, 0x43, 0x6a, 0x3b, 0x0a, 0xc7, 0x4b, 0x21, 0xb9, 0x05, 0x25,
	0xdf, 0xa1, 0xae, 0xb0, 0xc0, 0xca, 0x76, 0xed, 0x01, 0x46, 0xdd, 0x91, 0x43, 0x5d, 0x43, 0x0c,
	0xa3, 0xd8, 0xa4, 0x81, 0x15, 0xef, 0x5b, 0x8a, 0x77, 0x69, 0x60, 0x19, 0x62, 0x58, 0xff, 0x04,
	0xc8, 0xb1, 0xfb, 0x5f, 0x59, 0x59, 0xff, 0xa5, 0x06, 0x25, 0x5c, 0x89, 0xdc, 0x83, 0xb2, 0x1b,
	0x0d, 0xfb, 0x2c, 0x50, 0xd0, 0xc5, 0x52, 0xf4, 0x13, 0xbb, 0xf0, 0x7b, 0x43, 0xcf, 0xe5, 0x03,
	0x85, 0x43, 0xab, 0xec, 0xc2, 0xef, 0xa0, 0x9c, 0x7c, 0x15, 0xf0, 0x73, 0x6f, 0xc4, 0x68, 0xa0,
	0xf0, 0x69, 0x85, 0x5d, 0xf8, 0x9f, 0x30, 0x1a, 0x90, 0x0d, 0x28, 0x9a, 0xe7, 0xa6, 0xc2, 0x9d,
	0x28, 0xd2, 0xff, 0xa6, 0x41, 0xb1, 0xdb, 0xe9, 0xa2, 0xf3, 0x43, 0x16, 0x9c, 0xdb, 0x26, 0x53,
	0xa8, 0x9a, 0x88, 0xe3, 0x8c, 0x2c, 0x28, 0x33, 0x72, 0x13, 0x2a, 0x43, 0x16, 0x86, 0xf4, 0x94,
	0xa9, 0xb4, 0x8b, 0xc5, 0x18, 0x46, 0x32, 0xf8, 0x8c, 0x6f, 0x29, 0x54, 0x4c, 0xe5, 0xaf, 0x14,
	0x72, 0x1b, 0x50, 0xa4, 0xbe, 0x2f, 0x42, 0x2d, 0x67, 0xd7, 0xd4, 0xf7, 0xf5, 0x7f, 0x68, 0x50,
	0xed, 0x76, 0xba, 0x32, 0xdb, 0x16, 0xdf, 0xfa, 0xed, 0xcc, 0xd6, 0x95, 0x79, 0xf9, 0xbf, 0xb0,
	0xff, 0x9f, 0x68, 0xb0, 0xbc, 0x8f, 0x91, 0x9c, 0x84, 0xfd, 0xdb, 0x50, 0xc3, 0x82, 0xd1, 0x73,
	0xe9, 0x50, 0x65, 0x85, 0x2a, 0x02, 0x9e, 0xd3, 0x21, 0x23, 0xf7, 0x01, 0x04, 0x58, 0x26, 0x4a,
	0x7e, 0x24, 0x08, 0x3a, 0xb1, 0x04, 0xd9, 0x48, 0x52, 0x4a, 0x9a, 0x03, 0x44, 0xb6, 0xc8, 0xd5,
	0xa5, 0x40, 0xff, 0x99, 0x06, 0x6b, 0x62, 0x40, 0x38, 0xe4, 0x8b, 0xd0, 0xe9, 0x2e, 0x2c, 0xf5,
	0x71, 0xad, 0x58, 0xa7, 0x2b, 0x63, 0x9d, 0xa4, 0x0a, 0x52, 0xaa, 0xff, 0x46, 0x03, 0x18, 0x8f,
	0x92, 0xf7, 0x60, 0x19, 0x95, 0xe9, 0x51, 0xcb, 0x0a, 0x58, 0x18, 0xc6, 0x4a, 0xad, 0x4d, 0x2e,
	0xd3, 0xa1, 0xbe, 0x51, 0x47, 0xd8, 0x8e, 0x44, 0x89, 0xf8, 0x8a, 0xfa, 0x9f, 0x31, 0x93, 0x2b,
	0xf4, 0x4a, 0xc4, 0x58, 0x7c, 0x7c, 0x87, 0xda, 0xae, 0x22, 0x70, 0xa4, 0x10, 0x0b, 0xff, 0x80,
	0x0f, 0x1d, 0x45, 0xc8, 0x08, 0x99, 0xfe, 0x5b, 0x0d, 0x96, 0xe4, 0x4e, 0x75, 0x28, 0xcd, 0x30,
	0xa0, 0x90, 0xa1, 0x86, 0xc9, 0x96, 0x14, 0x1a, 0xd2, 0xe9, 0xbd, 0x14, 0x17, 0xdc, 0x4b, 0x69,
	0x91, 0xbd, 0x2c, 0xcd, 0xd8, 0x8b, 0x83, 0xc5, 0xd4, 0x71, 0xd2, 0x86, 0xa7, 0xcd, 0x68, 0x78,
	0xf3, 0x8a, 0x53, 0x9c, 0x1a, 0x45, 0x75, 0x6a, 0x9c, 0x43, 0x0d, 0x57, 0x93, 0x0e, 0x5f, 0x64,
	0xc9, 0x85, 0x8a, 0xc2, 0xfc, 0x75, 0x7f, 0x5d, 0x81, 0xd2, 0x71, 0x28, 0x7a, 0x41, 0x25, 0x0a,
	0x59, 0xd0, 0xb3, 0xad, 0x78, 0x59, 0x92, 0xc0, 0x0f, 0x2d, 0xe6, 0x72, 0xfb, 0xc4, 0x66, 0x81,
	0x51, 0x46, 0xc8, 0xa1, 0x95, 0x7a, 0xb7, 0x30, 0xc3, 0xbb, 0xf7, 0x01, 0x4e, 0xed, 0x73, 0xe6,
	0xca, 0x44, 0xca, 0x57, 0xa1, 0x26, 0x10, 0x22, 0x93, 0xda, 0x50, 0x3f, 0xa1, 0x43, 0xdb, 0x19,
	0x49, 0x7c, 0xbe, 0xfb, 0x40, 0x42, 0xc4, 0x84, 0x7b, 0x50, 0x3e, 0x65, 0xae, 0xc5, 0x02, 0x85,
	0x17, 0x63, 0x29, 0x79, 0x07, 0x6a, 0x7d, 0x3b, 0xe0, 0x03, 0x8b, 0x72, 0xa6, 0x28, 0x4e, 0x63,
	0x00, 0xd9, 0x4c, 0xaa, 0x46, 0x45, 0x69, 0x84, 0xb8, 0x19, 0x3f, 0x82, 0x65, 0x7f, 0xe0, 0xb9,
	0xac, 0x17, 0xb7, 0xda, 0xaa, 0x72, 0x42, 0x5d, 0xe0, 0x9e, 0xcb, 0x9e, 0xbb, 0x09, 0x15, 0xdf,
	0x36, 0x79, 0x14, 0xb0, 0x66, 0x2d, 0x3f, 0x94, 0x63, 0x31, 0x79, 0x1f, 0x1a, 0xc2, 0x23, 0x43,
	0xc6, 0xa9, 0x45, 0x39, 0x6d, 0x82, 0x2a, 0xef, 0x97, 0x11, 0xd7, 0x89, 0x61, 0x58, 0x2e, 0xa8,
	0xef, 0x8f, 0xa7, 0xd5, 0x95, 0xe5, 0x82, 0xfa, 0x7e, 0x3a, 0xeb, 0x2b, 0x50, 0xc1, 0xd8, 0xeb,
	0xd9, 0x7e, 0x73, 0x39, 0xdf, 0x9e, 0x28, 0x3e, 0xf4, 0x49, 0x13, 0x2a, 0x7d, 0xc7, 0x33, 0xcf,
	0x98, 0xd5, 0x6c, 0x88, 0x53, 0x55, 0xf2, 0x15, 0x9b, 0x85, 0x6b, 0x9b, 0x67, 0xc2, 0x7f, 0x2b,
	0xf9, 0x85, 0x33, 0x91, 0x93, 0x47, 0x50, 0x1f, 0x46, 0x0e, 0xb7, 0x4f, 0xa8, 0xc9, 0xbd, 0xa0,
	0x79, 0x45, 0x1d, 0xc7, 0x59, 0x1c, 0x06, 0x95, 0x19, 0x30, 0xca, 0x99, 0xd5, 0xa3, 0xbc, 0xb9,
	0x96, 0xef, 0xcd, 0x18, 0xb1, 0xc3, 0x11, 0x1e, 0xf9, 0x56, 0x02, 0x27, 0xf9, 0xf0, 0x18, 0xb1,
	0xc3, 0xc9, 0x5d, 0x58, 0x91, 0x2e, 0x3d, 0x67, 0x01, 0xba, 0xce, 0x6a, 0xae, 0x8b, 0x1d, 0x36,
	0xc4, 0xe8, 0x77, 0xe2, 0x41, 0x84, 0x89, 0x10, 0x18, 0xc3, 0xae, 0x4a, 0x98, 0x18, 0x4d, 0x61,
	0x5b, 0x50, 0xf5, 0x69, 0x18, 0xbe, 0xf4, 0x02, 0xab, 0x79, 0x2d, 0xdf, 0x1c, 0x89, 0x1c, 0x15,
	0xb5, 0x45, 0xc0, 0x70, 0x9b, 0x85, 0xcd, 0xeb, 0x1b, 0xc5, 0xcd, 0xfa, 0x76, 0x43, 0x74, 0x07,
	0x19, 0x47, 0x7c, 0x64, 0x64, 0x00, 0xfa, 0xaf, 0x34, 0xa8, 0x26, 0x02, 0xf2, 0x00, 0xc0, 0xf4,
	0x5c, 0x97, 0x99, 0x78, 0xbb, 0x51, 0xd4, 0x8c, 0x0c, 0x22, 0x9b, 0xe9, 0x85, 0xb9, 0x99, 0x8e,
	0x9b, 0x08, 0xbc, 0x73, 0x1b, 0xf3, 0x4c, 0x71, 0x92, 0x4f, 0xe4, 0xa4, 0x05, 0x55, 0x3b, 0xec,
	0x7a, 0xa6, 0x4d, 0x65, 0x97, 0xa8, 0x1a, 0xe9, 0x77, 0xfd, 0x53, 0x28, 0xed, 0x44, 0x7c, 0x80,
	0x59, 0x6b, 0x7a, 0xee, 0x89, 0x7d, 0x7a, 0x59, 0xd1, 0x5d, 0x31, 0x6a, 0xc4, 0x52, 0x72, 0x1f,
	0x6a, 0xdc, 0x3b, 0x63, 0x6e, 0x2f, 0x64, 0x49, 0xcd, 0x5f, 0x4d, 0xa0, 0x1f, 0xa1, 0xa0, 0xcb,
	0xb8, 0x51, 0xe5, 0xf1, 0x27, 0xfd, 0x8f, 0x1a, 0xd4, 0x3f, 0xe8, 0x7e, 0xf8, 0xfc, 0x63, 0xd6,
	0x7f, 0xc6, 0x46, 0x21, 0x16, 0xbe, 0x33, 0x3e, 0x52, 0x18, 0x03, 0x45, 0xe4, 0x0e, 0x14, 0xcf,
	0x66, 0x5a, 0x00, 0xc5, 0xc8, 0x13, 0x85, 0xaa, 0xea, 0x85, 0x22, 0x72, 0x13, 0x34, 0x55, 0xb3,
	0xd1, 0x5c, 0x94, 0x32, 0x45, 0x7d, 0xd2, 0x18, 0xb9, 0x0b, 0xc5, 0x8b, 0x47, 0x66, 0x5c, 0x94,
	0x72, 0x83, 0x1f, 0xe5, 0xfa, 0x3b, 0x50, 0xfa, 0xe0, 0xe5, 0x59, 0x48, 0xee, 0x40, 0xe9, 0x8c,
	0x8d, 0xb0, 0xff, 0x17, 0x85, 0x39, 0x30, 0x3c, 0x32, 0x9b, 0x36, 0x84, 0x54, 0xff, 0x01, 0x34,
	0x0c, 0x51, 0xf9, 0x92, 0x03, 0xcd, 0x22, 0xad, 0x58, 0x87, 0x12, 0x67, 0x17, 0xaa, 0x93, 0x82,
	0x90, 0x21, 0x46, 0xd4, 0x93, 0x7c, 0x63, 0x08, 0x99, 0xfe, 0xb9, 0x06, 0xcd, 0x2e, 0xa3, 0x81,
	0x39, 0x38, 0x1a, 0xd7, 0xbc, 0xcc, 0x25, 0x27, 0xe4, 0x58, 0x85, 0x15, 0x97, 0x1c, 0x21, 0x24,
	0x5f, 0x87, 0x65, 0x93, 0xfa, 0xb4, 0x6f, 0x3b, 0x32, 0x19, 0xa4, 0x4a, 0x37, 0xc4, 0x6e, 0x25,
	0xdf, 0x6e, 0x46, 0x6c, 0x4c, 0x80, 0xc9, 0x36, 0x34, 0xb8, 0xc7, 0xa9, 0xd3, 0x0b, 0x58, 0x18,
	0x39, 0x3c, 0x8c, 0x95, 0x6d, 0xa4, 0xfe, 0x75, 0xf9, 0xfb, 0xef, 0x19, 0xcb, 0x02, 0x63, 0x48,
	0x88, 0x88, 0x9d, 0x8c, 0xb6, 0xe4, 0x21, 0x34, 0x4e, 0x02, 0x9b, 0xb9, 0x56, 0xd2, 0x8b, 0xf2,
	0xd5, 0x5d, 0x4e, 0x40, 0xa2, 0x1b, 0x7d, 0xed, 0x52, 0x37, 0xc8, 0x37, 0xe4, 0x44, 0x27, 0xb8,
	0x07, 0xe5, 0x80, 0x9d, 0x62, 0xce, 0xe6, 0x5b, 0x34, 0x96, 0x4e, 0x19, 0xa4, 0xf4, 0x0a, 0x06,
	0xd1, 0x9f, 0x03, 0x99, 0xc6, 0x90, 0xab, 0xb0, 0x74, 0xee, 0x25, 0x37, 0x8f, 0xaa, 0x21, 0xbf,
	0x90, 0x55, 0x28, 0x86, 0x43, 0x69, 0xf0, 0xaa, 0x81, 0x1f, 0x71, 0x64, 0x38, 0x94, 0x46, 0xac,
	0x1a, 0xf8, 0x51, 0xff, 0xb1, 0x06, 0xeb, 0x13, 0xae, 0x0d, 0xbd, 0x28, 0x30, 0xb1, 0x6f, 0x4e,
	0x5e, 0x39, 0x65, 0x74, 0x66, 0x91, 0xc9, 0xa5, 0x53, 0x87, 0xc2, 0xcc, 0xbc, 0x2b, 0xc4, 0x69,
	0x17, 0xd8, 0xca, 0xb4, 0x0b, 0x6c, 0xfd, 0x63, 0x00, 0x51, 0x06, 0xbe, 0x1d, 0xb1, 0x60, 0x44,
	0x6e, 0xc3, 0x92, 0x28, 0x05, 0xf1, 0xe2, 0x8d, 0x89, 0x4a, 0x61, 0x48, 0x19, 0x86, 0xdf, 0x0b,
	0x44, 0x2b, 0x7c, 0x23, 0x85, 0xfa, 0x11, 0x94, 0x0f, 0xf7, 0x9e, 0x78, 0xd6, 0x28, 0x56, 0x54,
	0x9b, 0xa9, 0xa8, 0x0e, 0xa5, 0xbe, 0x67, 0xa9, 0x28, 0x85, 0x4c, 0xff, 0x3e, 0xd4, 0x0e, 0xf7,
	0xe4, 0x48, 0xb8, 0x10, 0xe9, 0x7d, 0xa8, 0x84, 0x12, 0x3e, 0xeb, 0x7c, 0x97, 0x60, 0xf4, 0x1f,
	0x6a, 0x50, 0x32, 0x3c, 0x87, 0x2d, 0xaa, 0xf0, 0xdc, 0x93, 0xdb, 0xbb, 0x50, 0xb7, 0x58, 0x68,
	0x06, 0xb6, 0xcf, 0xd5, 0xd1, 0x99, 0x85, 0xe8, 0x7f, 0x29, 0xc0, 0x32, 0x1e, 0x5f, 0x0d, 0x16,
	0xfa, 0x9e, 0x1b, 0x2e, 0xa6, 0x8a, 0x3c, 0x34, 0x2f, 0xcd, 0x7d, 0x63, 0x2b, 0xcf, 0x38, 0x05,
	0xdf, 0x83, 0x32, 0x56, 0x8d, 0x28, 0x54, 0x1c, 0xa6, 0x62, 0x29, 0x9e, 0x2e, 0xa9, 0x1b, 0xbe,
	0x64, 0x01, 0xb3, 0x7a, 0xfd, 0x51, 0x7c, 0x92, 0x9a, 0x6a, 0x92, 0x09, 0xe4, 0xc9, 0x88, 0x3c,
	0x82, 0x95, 0x13, 0x2f, 0x78, 0x49, 0x03, 0x8b, 0x59, 0x3d, 0xa1, 0x46, 0x3d, 0x77, 0x4e, 0x23,
	0x45, 0x1d, 0xa0, 0x3e, 0x6d, 0xa8, 0xe3, 0x7d, 0x98, 0x05, 0xb2, 0x72, 0x2c, 0x2b, 0x9a, 0xb1,
	0x80, 0x88, 0xba, 0xf1, 0x10, 0x15, 0x4b, 0x9f, 0x26, 0xc5, 0x89, 0x4a, 0x71, 0x56, 0x1b, 0xa3,
	0xf4, 0x5f, 0x14, 0xa0, 0xde, 0xed, 0x74, 0xbf, 0x70, 0x6b, 0x4f, 0xbc, 0xeb, 0x55, 0xe6, 0xbc,
	0xeb, 0x25, 0xa9, 0x51, 0x55, 0xa7, 0xc6, 0xc2, 0xee, 0xbb, 0x64, 0x25, 0x58, 0xc8, 0x4a, 0x9f,
	0x17, 0xe0, 0x6a, 0xfc, 0xd0, 0x26, 0xa2, 0xf4, 0x95, 0xcc, 0x75, 0x17, 0xca, 0x74, 0xe8, 0x45,
	0x6e, 0xd2, 0x12, 0x2f, 0x75, 0x90, 0x58, 0x48, 0x1e, 0xc2, 0x8a, 0x45, 0x47, 0x61, 0x2f, 0x72,
	0xb9, 0xed, 0xf4, 0xac, 0x88, 0x29, 0x1a, 0x0e, 0x82, 0x8e, 0x11, 0xb3, 0x17, 0xb1, 0xd7, 0xda,
	0x4d, 0xfa, 0xf6, 0x57, 0x52, 0xbe, 0x3a, 0xe2, 0x89, 0x2d, 0x76, 0xb0, 0x14, 0xe3, 0xbd, 0xce,
	0x10, 0xc3, 0x19, 0x43, 0x97, 0x67, 0x19, 0x5a, 0xff, 0xa7, 0x06, 0xf5, 0x03, 0x7a, 0xf1, 0x4a,
	0xa6, 0x7a, 0xa5, 0xd7, 0x5e, 0x19, 0x86, 0xa5, 0xb9, 0x61, 0xb8, 0xb4, 0x50, 0xd2, 0x97, 0xff,
	0xe3, 0x51, 0xb3, 0xb5, 0x09, 0x25, 0x34, 0x2b, 0xa9, 0x42, 0xe9, 0xc0, 0xd8, 0xdf, 0x5f, 0xfd,
	0x12, 0xa9, 0xc1, 0xd2, 0x93, 0x9d, 0xee, 0xe1, 0xee, 0xaa, 0x46, 0xea, 0x50, 0x39, 0x32, 0xf6,
	0x3b, 0x87, 0xc7, 0x9d, 0xd5, 0xc2, 0xf6, 0x9f, 0x8a, 0xb0, 0x72, 0xcc, 0xb1, 0xa5, 0x8e, 0xba,
	0xf1, 0x4b, 0xdd, 0x37, 0xa0, 0xb4, 0x6f, 0x0e, 0x3c, 0x72, 0x49, 0xa3, 0xd6, 0xa5, 0xef, 0x7a,
	0xf3, 0x47, 0xbf, 0xff, 0xf3, 0x4f, 0x0b, 0x44, 0x6f, 0xb4, 0x23, 0x49, 0xd0, 0x66, 0xe6, 0xc0,
	0x7b, 0xac, 0x6d, 0x91, 0x0f, 0xa1, 0x8e, 0x0c, 0x5d, 0x9f, 0xba, 0x76, 0x38, 0x98, 0x4b, 0xb4,
	0x21, 0x88, 0x5a, 0xfa, 0xb5, 0x09, 0xa2, 0x76, 0x28, 0xa7, 0x67, 0x08, 0x77, 0x07, 0xb6, 0xcb,
	0x42, 0xf6, 0xba, 0x84, 0xa6, 0x9c, 0x9e, 0x21, 0xdc, 0x77, 0x4f, 0x9d, 0x7f, 0x43, 0x43, 0x26,
	0xa7, 0x23, 0xe1, 0x33, 0xa8, 0x21, 0xe1, 0x37, 0x6d, 0xd7, 0xb2, 0xe7, 0xd2, 0xbd, 0x29, 0xe8,
	0x9a, 0xfa, 0xfa, 0x24, 0xdd, 0x00, 0x27, 0x23, 0x59, 0x07, 0x00, 0xc9, 0x76, 0x02, 0xda, 0xb7,
	0xcd, 0xb9, 0x6c, 0x6f, 0x09, 0xb6, 0x37, 0xf4, 0xab, 0x93, 0x6c, 0x54, 0xcc, 0x7e, 0xac, 0x6d,
	0x6d, 0xff, 0x61, 0x09, 0x56, 0x76, 0x3d, 0x97, 0x53, 0x93, 0x27, 0x3e, 0xde, 0x85, 0x4a, 0x97,
	0xb9, 0x56, 0xb7, 0xd3, 0x25, 0x55, 0x91, 0x66, 0xdd, 0x4e, 0xb7, 0xb5, 0x9a, 0x7c, 0x4a, 0x32,
	0x47, 0xbf, 0x29, 0xa8, 0xaf, 0xeb, 0x6b, 0x6d, 0x53, 0xce, 0x6f, 0x87, 0xc3, 0xb0, 0x1d, 0x32,
	0xd7, 0x42, 0x35, 0x8f, 0x60, 0x39, 0x26, 0x91, 0x2f, 0x3e, 0x8d, 0x64, 0xbe, 0xf8, 0x9a, 0x43,
	0x77, 0x4b, 0xd0, 0xdd, 0xd0, 0xc9, 0x04, 0x9d, 0x78, 0x2e, 0x7c, 0xac, 0x6d, 0xbd, 0xab, 0x91,
	0x67, 0x50, 0x7e, 0xca, 0x38, 0x6a, 0x95, 0x93, 0xa7, 0x39, 0x84, 0x5f, 0x16, 0x84, 0xd7, 0xf4,
	0xd5, 0x09, 0xc2, 0x53, 0x86, 0x74, 0xe4, 0x39, 0xd4, 0x50, 0x3d, 0xf9, 0x94, 0xb7, 0x96, 0x79,
	0x39, 0x95, 0x27, 0xf9, 0x19, 0x5e, 0x49, 0xc8, 0xc4, 0x55, 0x38, 0xdd, 0xee, 0x77, 0x61, 0x25,
	0xe5, 0x93, 0x1b, 0xbe, 0x7e, 0xf9, 0xe9, 0x53, 0xc1, 0x3c, 0xf6, 0xd0, 0x24, 0x73, 0x66, 0xe7,
	0x4f, 0xa1, 0x8a, 0xe4, 0xe2, 0xb1, 0x2e, 0xf9, 0xb9, 0xc5, 0x71, 0x5a, 0x6b, 0xe9, 0xc7, 0x19,
	0x46, 0xc4, 0x4e, 0x9c, 0x6a, 0xf9, 0x11, 0x34, 0x12, 0x22, 0xa9, 0xe4, 0x4a, 0x4a, 0x21, 0xdd,
	0x92, 0x43, 0x39, 0xbd, 0x73, 0x41, 0x99, 0x51, 0x2f, 0x8e, 0x97, 0x03, 0x7a, 0x11, 0xc7, 0xcb,
	0x01, 0xbd, 0x88, 0xfd, 0x91, 0xa9, 0xb4, 0x39, 0xf1, 0x72, 0x42, 0x2f, 0x2e, 0xc7, 0x4b, 0xfa,
	0x53, 0x5d, 0x23, 0x99, 0x9f, 0x8d, 0x97, 0x2c, 0xdd, 0xf4, 0x56, 0x91, 0x6e, 0xac, 0xd6, 0xf6,
	0xcf, 0x8b, 0xb0, 0x72, 0x44, 0x47, 0x43, 0xe6, 0xa6, 0x91, 0xfd, 0x3d, 0xa8, 0xa5, 0x3f, 0x4c,
	0x91, 0x6b, 0x32, 0x62, 0x2e, 0xfd, 0x50, 0xd5, 0x7a, 0x23, 0x3b, 0x3c, 0xd1, 0x56, 0x33, 0x4b,
	0xfa, 0x92, 0xb7, 0x1d, 0x26, 0xb3, 0x71, 0x0b, 0x7d, 0xa8, 0x1f, 0xbb, 0xe9, 0x08, 0x91, 0xf7,
	0x97, 0xe9, 0x9f, 0xc2, 0x66, 0xad, 0x30, 0x0e, 0x86, 0x64, 0x85, 0xc8, 0x9d, 0x58, 0xe3, 0x53,
	0x58, 0x3f, 0x8a, 0x02, 0x73, 0x40, 0x43, 0x96, 0xbd, 0xd1, 0x4d, 0x5d, 0x46, 0x5a, 0xcd, 0xa9,
	0xeb, 0x49, 0x7c, 0x91, 0xd1, 0x5b, 0x62, 0x8d, 0xab, 0xfa, 0x95, 0x74, 0x0d, 0x79, 0x6f, 0x41,
	0xfa, 0xcf, 0x60, 0x6d, 0xea, 0x72, 0x4b, 0x6e, 0x49, 0x7d, 0x15, 0x97, 0xde, 0xd6, 0xd4, 0xda,
	0xba, 0x2e, 0x56, 0xb8, 0xa9, 0xdf, 0xb8, 0xb4, 0x02, 0x56, 0x07, 0x24, 0x91, 0xfe, 0xf9, 0x5d,
	0x11, 0xea, 0xd8, 0xc0, 0x13, 0xe7, 0x3c, 0x03, 0x10, 0x77, 0x1d, 0x1c, 0x0b, 0x89, 0xfc, 0xe5,
	0x60, 0x7c, 0x03, 0x6a, 0x8d, 0x3b, 0x7e, 0xc6, 0x4a, 0x41, 0xbc, 0xa9, 0x36, 0x9e, 0x01, 0xda,
	0xe2, 0x7e, 0x23, 0x63, 0x72, 0x0f, 0x60, 0x57, 0x3c, 0x92, 0x89, 0xa7, 0xdf, 0xf1, 0xdc, 0x2c,
	0xcd, 0xb8, 0x70, 0x4f, 0xd2, 0xc8, 0xd7, 0x35, 0x34, 0xc7, 0x53, 0xa8, 0x3c, 0x65, 0x5c, 0x50,
	0xe4, 0xd5, 0x9c, 0x0c, 0xd7, 0x38, 0x34, 0x26, 0xb9, 0xd2, 0x72, 0x03, 0x7b, 0xcc, 0x61, 0xb1,
	0x3a, 0x79, 0x5c, 0xe9, 0x79, 0x6a, 0x7f, 0xe8, 0xf3, 0xd1, 0x3c, 0xbe, 0x3d, 0x80, 0x63, 0xf1,
	0xa8, 0xf7, 0x1a, 0xdb, 0x93, 0xaf, 0x81, 0xb2, 0x95, 0xd4, 0xc4, 0x09, 0xca, 0x73, 0x58, 0x38,
	0x63, 0x83, 0x28, 0x57, 0xda, 0x3c, 0xc0, 0xc9, 0xc2, 0xe6, 0xfd, 0xb2, 0xf8, 0x0f, 0x83, 0x87,
	0xff, 0x0a, 0x00, 0x00, 0xff, 0xff, 0x7c, 0x20, 0x03, 0x86, 0xa6, 0x20, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UtilityServiceClient is the client API for UtilityService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UtilityServiceClient interface {
	Echo(ctx context.Context, in *common.String, opts ...grpc.CallOption) (*common.String, error)
	EchoSpanish(ctx context.Context, in *common.String, opts ...grpc.CallOption) (*common.String, error)
	EchoChinese(ctx context.Context, in *common.String, opts ...grpc.CallOption) (*common.String, error)
	EchoEnglish(ctx context.Context, in *common.String, opts ...grpc.CallOption) (*common.String, error)
	EchoHindi(ctx context.Context, in *common.String, opts ...grpc.CallOption) (*common.String, error)
	EchoArabic(ctx context.Context, in *common.String, opts ...grpc.CallOption) (*common.String, error)
}

type utilityServiceClient struct {
	cc *grpc.ClientConn
}

func NewUtilityServiceClient(cc *grpc.ClientConn) UtilityServiceClient {
	return &utilityServiceClient{cc}
}

func (c *utilityServiceClient) Echo(ctx context.Context, in *common.String, opts ...grpc.CallOption) (*common.String, error) {
	out := new(common.String)
	err := c.cc.Invoke(ctx, "/api.UtilityService/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) EchoSpanish(ctx context.Context, in *common.String, opts ...grpc.CallOption) (*common.String, error) {
	out := new(common.String)
	err := c.cc.Invoke(ctx, "/api.UtilityService/EchoSpanish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) EchoChinese(ctx context.Context, in *common.String, opts ...grpc.CallOption) (*common.String, error) {
	out := new(common.String)
	err := c.cc.Invoke(ctx, "/api.UtilityService/EchoChinese", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) EchoEnglish(ctx context.Context, in *common.String, opts ...grpc.CallOption) (*common.String, error) {
	out := new(common.String)
	err := c.cc.Invoke(ctx, "/api.UtilityService/EchoEnglish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) EchoHindi(ctx context.Context, in *common.String, opts ...grpc.CallOption) (*common.String, error) {
	out := new(common.String)
	err := c.cc.Invoke(ctx, "/api.UtilityService/EchoHindi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) EchoArabic(ctx context.Context, in *common.String, opts ...grpc.CallOption) (*common.String, error) {
	out := new(common.String)
	err := c.cc.Invoke(ctx, "/api.UtilityService/EchoArabic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UtilityServiceServer is the server API for UtilityService service.
type UtilityServiceServer interface {
	Echo(context.Context, *common.String) (*common.String, error)
	EchoSpanish(context.Context, *common.String) (*common.String, error)
	EchoChinese(context.Context, *common.String) (*common.String, error)
	EchoEnglish(context.Context, *common.String) (*common.String, error)
	EchoHindi(context.Context, *common.String) (*common.String, error)
	EchoArabic(context.Context, *common.String) (*common.String, error)
}

func RegisterUtilityServiceServer(s *grpc.Server, srv UtilityServiceServer) {
	s.RegisterService(&_UtilityService_serviceDesc, srv)
}

func _UtilityService_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).Echo(ctx, req.(*common.String))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_EchoSpanish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).EchoSpanish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/EchoSpanish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).EchoSpanish(ctx, req.(*common.String))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_EchoChinese_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).EchoChinese(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/EchoChinese",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).EchoChinese(ctx, req.(*common.String))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_EchoEnglish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).EchoEnglish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/EchoEnglish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).EchoEnglish(ctx, req.(*common.String))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_EchoHindi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).EchoHindi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/EchoHindi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).EchoHindi(ctx, req.(*common.String))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_EchoArabic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).EchoArabic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/EchoArabic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).EchoArabic(ctx, req.(*common.String))
	}
	return interceptor(ctx, in, info, handler)
}

var _UtilityService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.UtilityService",
	HandlerType: (*UtilityServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _UtilityService_Echo_Handler,
		},
		{
			MethodName: "EchoSpanish",
			Handler:    _UtilityService_EchoSpanish_Handler,
		},
		{
			MethodName: "EchoChinese",
			Handler:    _UtilityService_EchoChinese_Handler,
		},
		{
			MethodName: "EchoEnglish",
			Handler:    _UtilityService_EchoEnglish_Handler,
		},
		{
			MethodName: "EchoHindi",
			Handler:    _UtilityService_EchoHindi_Handler,
		},
		{
			MethodName: "EchoArabic",
			Handler:    _UtilityService_EchoArabic_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// ContactServiceClient is the client API for ContactService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContactServiceClient interface {
	SendSMS(ctx context.Context, in *SMS, opts ...grpc.CallOption) (*SMSResponse, error)
	SendSMSBlast(ctx context.Context, in *SMSBlast, opts ...grpc.CallOption) (ContactService_SendSMSBlastClient, error)
	GetSMS(ctx context.Context, in *common.Identifier, opts ...grpc.CallOption) (*SMSResponse, error)
	SendEmail(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*common.String, error)
	SendEmailBlast(ctx context.Context, in *EmailBlastRequest, opts ...grpc.CallOption) (ContactService_SendEmailBlastClient, error)
	SendCall(ctx context.Context, in *Call, opts ...grpc.CallOption) (*CallResponse, error)
	SendCallBlast(ctx context.Context, in *CallBlast, opts ...grpc.CallOption) (ContactService_SendCallBlastClient, error)
	SendFax(ctx context.Context, in *Fax, opts ...grpc.CallOption) (*FaxResponse, error)
	SendFaxBlast(ctx context.Context, in *FaxBlast, opts ...grpc.CallOption) (ContactService_SendFaxBlastClient, error)
}

type contactServiceClient struct {
	cc *grpc.ClientConn
}

func NewContactServiceClient(cc *grpc.ClientConn) ContactServiceClient {
	return &contactServiceClient{cc}
}

func (c *contactServiceClient) SendSMS(ctx context.Context, in *SMS, opts ...grpc.CallOption) (*SMSResponse, error) {
	out := new(SMSResponse)
	err := c.cc.Invoke(ctx, "/api.ContactService/SendSMS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactServiceClient) SendSMSBlast(ctx context.Context, in *SMSBlast, opts ...grpc.CallOption) (ContactService_SendSMSBlastClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ContactService_serviceDesc.Streams[0], "/api.ContactService/SendSMSBlast", opts...)
	if err != nil {
		return nil, err
	}
	x := &contactServiceSendSMSBlastClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ContactService_SendSMSBlastClient interface {
	Recv() (*SMSResponse, error)
	grpc.ClientStream
}

type contactServiceSendSMSBlastClient struct {
	grpc.ClientStream
}

func (x *contactServiceSendSMSBlastClient) Recv() (*SMSResponse, error) {
	m := new(SMSResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *contactServiceClient) GetSMS(ctx context.Context, in *common.Identifier, opts ...grpc.CallOption) (*SMSResponse, error) {
	out := new(SMSResponse)
	err := c.cc.Invoke(ctx, "/api.ContactService/GetSMS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactServiceClient) SendEmail(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*common.String, error) {
	out := new(common.String)
	err := c.cc.Invoke(ctx, "/api.ContactService/SendEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactServiceClient) SendEmailBlast(ctx context.Context, in *EmailBlastRequest, opts ...grpc.CallOption) (ContactService_SendEmailBlastClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ContactService_serviceDesc.Streams[1], "/api.ContactService/SendEmailBlast", opts...)
	if err != nil {
		return nil, err
	}
	x := &contactServiceSendEmailBlastClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ContactService_SendEmailBlastClient interface {
	Recv() (*common.String, error)
	grpc.ClientStream
}

type contactServiceSendEmailBlastClient struct {
	grpc.ClientStream
}

func (x *contactServiceSendEmailBlastClient) Recv() (*common.String, error) {
	m := new(common.String)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *contactServiceClient) SendCall(ctx context.Context, in *Call, opts ...grpc.CallOption) (*CallResponse, error) {
	out := new(CallResponse)
	err := c.cc.Invoke(ctx, "/api.ContactService/SendCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactServiceClient) SendCallBlast(ctx context.Context, in *CallBlast, opts ...grpc.CallOption) (ContactService_SendCallBlastClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ContactService_serviceDesc.Streams[2], "/api.ContactService/SendCallBlast", opts...)
	if err != nil {
		return nil, err
	}
	x := &contactServiceSendCallBlastClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ContactService_SendCallBlastClient interface {
	Recv() (*CallResponse, error)
	grpc.ClientStream
}

type contactServiceSendCallBlastClient struct {
	grpc.ClientStream
}

func (x *contactServiceSendCallBlastClient) Recv() (*CallResponse, error) {
	m := new(CallResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *contactServiceClient) SendFax(ctx context.Context, in *Fax, opts ...grpc.CallOption) (*FaxResponse, error) {
	out := new(FaxResponse)
	err := c.cc.Invoke(ctx, "/api.ContactService/SendFax", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactServiceClient) SendFaxBlast(ctx context.Context, in *FaxBlast, opts ...grpc.CallOption) (ContactService_SendFaxBlastClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ContactService_serviceDesc.Streams[3], "/api.ContactService/SendFaxBlast", opts...)
	if err != nil {
		return nil, err
	}
	x := &contactServiceSendFaxBlastClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ContactService_SendFaxBlastClient interface {
	Recv() (*FaxResponse, error)
	grpc.ClientStream
}

type contactServiceSendFaxBlastClient struct {
	grpc.ClientStream
}

func (x *contactServiceSendFaxBlastClient) Recv() (*FaxResponse, error) {
	m := new(FaxResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ContactServiceServer is the server API for ContactService service.
type ContactServiceServer interface {
	SendSMS(context.Context, *SMS) (*SMSResponse, error)
	SendSMSBlast(*SMSBlast, ContactService_SendSMSBlastServer) error
	GetSMS(context.Context, *common.Identifier) (*SMSResponse, error)
	SendEmail(context.Context, *EmailRequest) (*common.String, error)
	SendEmailBlast(*EmailBlastRequest, ContactService_SendEmailBlastServer) error
	SendCall(context.Context, *Call) (*CallResponse, error)
	SendCallBlast(*CallBlast, ContactService_SendCallBlastServer) error
	SendFax(context.Context, *Fax) (*FaxResponse, error)
	SendFaxBlast(*FaxBlast, ContactService_SendFaxBlastServer) error
}

func RegisterContactServiceServer(s *grpc.Server, srv ContactServiceServer) {
	s.RegisterService(&_ContactService_serviceDesc, srv)
}

func _ContactService_SendSMS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SMS)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactServiceServer).SendSMS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ContactService/SendSMS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactServiceServer).SendSMS(ctx, req.(*SMS))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactService_SendSMSBlast_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SMSBlast)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ContactServiceServer).SendSMSBlast(m, &contactServiceSendSMSBlastServer{stream})
}

type ContactService_SendSMSBlastServer interface {
	Send(*SMSResponse) error
	grpc.ServerStream
}

type contactServiceSendSMSBlastServer struct {
	grpc.ServerStream
}

func (x *contactServiceSendSMSBlastServer) Send(m *SMSResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ContactService_GetSMS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Identifier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactServiceServer).GetSMS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ContactService/GetSMS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactServiceServer).GetSMS(ctx, req.(*common.Identifier))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactService_SendEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactServiceServer).SendEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ContactService/SendEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactServiceServer).SendEmail(ctx, req.(*EmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactService_SendEmailBlast_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EmailBlastRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ContactServiceServer).SendEmailBlast(m, &contactServiceSendEmailBlastServer{stream})
}

type ContactService_SendEmailBlastServer interface {
	Send(*common.String) error
	grpc.ServerStream
}

type contactServiceSendEmailBlastServer struct {
	grpc.ServerStream
}

func (x *contactServiceSendEmailBlastServer) Send(m *common.String) error {
	return x.ServerStream.SendMsg(m)
}

func _ContactService_SendCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Call)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactServiceServer).SendCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ContactService/SendCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactServiceServer).SendCall(ctx, req.(*Call))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactService_SendCallBlast_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CallBlast)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ContactServiceServer).SendCallBlast(m, &contactServiceSendCallBlastServer{stream})
}

type ContactService_SendCallBlastServer interface {
	Send(*CallResponse) error
	grpc.ServerStream
}

type contactServiceSendCallBlastServer struct {
	grpc.ServerStream
}

func (x *contactServiceSendCallBlastServer) Send(m *CallResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _ContactService_SendFax_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Fax)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactServiceServer).SendFax(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ContactService/SendFax",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactServiceServer).SendFax(ctx, req.(*Fax))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactService_SendFaxBlast_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FaxBlast)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ContactServiceServer).SendFaxBlast(m, &contactServiceSendFaxBlastServer{stream})
}

type ContactService_SendFaxBlastServer interface {
	Send(*FaxResponse) error
	grpc.ServerStream
}

type contactServiceSendFaxBlastServer struct {
	grpc.ServerStream
}

func (x *contactServiceSendFaxBlastServer) Send(m *FaxResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _ContactService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ContactService",
	HandlerType: (*ContactServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendSMS",
			Handler:    _ContactService_SendSMS_Handler,
		},
		{
			MethodName: "GetSMS",
			Handler:    _ContactService_GetSMS_Handler,
		},
		{
			MethodName: "SendEmail",
			Handler:    _ContactService_SendEmail_Handler,
		},
		{
			MethodName: "SendCall",
			Handler:    _ContactService_SendCall_Handler,
		},
		{
			MethodName: "SendFax",
			Handler:    _ContactService_SendFax_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SendSMSBlast",
			Handler:       _ContactService_SendSMSBlast_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SendEmailBlast",
			Handler:       _ContactService_SendEmailBlast_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SendCallBlast",
			Handler:       _ContactService_SendCallBlast_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SendFaxBlast",
			Handler:       _ContactService_SendFaxBlast_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}

// PaymentServiceClient is the client API for PaymentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaymentServiceClient interface {
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*SubscriptionResponse, error)
	Unsubscribe(ctx context.Context, in *UnSubscribeRequest, opts ...grpc.CallOption) (*SubscriptionResponse, error)
	PurchasePhoneNumber(ctx context.Context, in *PhoneNumber, opts ...grpc.CallOption) (*PhoneNumberResource, error)
	SearchPhoneNumber(ctx context.Context, in *SearchPhoneNumberRequest, opts ...grpc.CallOption) (PaymentService_SearchPhoneNumberClient, error)
}

type paymentServiceClient struct {
	cc *grpc.ClientConn
}

func NewPaymentServiceClient(cc *grpc.ClientConn) PaymentServiceClient {
	return &paymentServiceClient{cc}
}

func (c *paymentServiceClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*SubscriptionResponse, error) {
	out := new(SubscriptionResponse)
	err := c.cc.Invoke(ctx, "/api.PaymentService/Subscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServiceClient) Unsubscribe(ctx context.Context, in *UnSubscribeRequest, opts ...grpc.CallOption) (*SubscriptionResponse, error) {
	out := new(SubscriptionResponse)
	err := c.cc.Invoke(ctx, "/api.PaymentService/Unsubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServiceClient) PurchasePhoneNumber(ctx context.Context, in *PhoneNumber, opts ...grpc.CallOption) (*PhoneNumberResource, error) {
	out := new(PhoneNumberResource)
	err := c.cc.Invoke(ctx, "/api.PaymentService/PurchasePhoneNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServiceClient) SearchPhoneNumber(ctx context.Context, in *SearchPhoneNumberRequest, opts ...grpc.CallOption) (PaymentService_SearchPhoneNumberClient, error) {
	stream, err := c.cc.NewStream(ctx, &_PaymentService_serviceDesc.Streams[0], "/api.PaymentService/SearchPhoneNumber", opts...)
	if err != nil {
		return nil, err
	}
	x := &paymentServiceSearchPhoneNumberClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type PaymentService_SearchPhoneNumberClient interface {
	Recv() (*PhoneNumber, error)
	grpc.ClientStream
}

type paymentServiceSearchPhoneNumberClient struct {
	grpc.ClientStream
}

func (x *paymentServiceSearchPhoneNumberClient) Recv() (*PhoneNumber, error) {
	m := new(PhoneNumber)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// PaymentServiceServer is the server API for PaymentService service.
type PaymentServiceServer interface {
	Subscribe(context.Context, *SubscribeRequest) (*SubscriptionResponse, error)
	Unsubscribe(context.Context, *UnSubscribeRequest) (*SubscriptionResponse, error)
	PurchasePhoneNumber(context.Context, *PhoneNumber) (*PhoneNumberResource, error)
	SearchPhoneNumber(*SearchPhoneNumberRequest, PaymentService_SearchPhoneNumberServer) error
}

func RegisterPaymentServiceServer(s *grpc.Server, srv PaymentServiceServer) {
	s.RegisterService(&_PaymentService_serviceDesc, srv)
}

func _PaymentService_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServiceServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PaymentService/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServiceServer).Subscribe(ctx, req.(*SubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentService_Unsubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnSubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServiceServer).Unsubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PaymentService/Unsubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServiceServer).Unsubscribe(ctx, req.(*UnSubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentService_PurchasePhoneNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhoneNumber)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServiceServer).PurchasePhoneNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PaymentService/PurchasePhoneNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServiceServer).PurchasePhoneNumber(ctx, req.(*PhoneNumber))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentService_SearchPhoneNumber_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchPhoneNumberRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(PaymentServiceServer).SearchPhoneNumber(m, &paymentServiceSearchPhoneNumberServer{stream})
}

type PaymentService_SearchPhoneNumberServer interface {
	Send(*PhoneNumber) error
	grpc.ServerStream
}

type paymentServiceSearchPhoneNumberServer struct {
	grpc.ServerStream
}

func (x *paymentServiceSearchPhoneNumberServer) Send(m *PhoneNumber) error {
	return x.ServerStream.SendMsg(m)
}

var _PaymentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.PaymentService",
	HandlerType: (*PaymentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Subscribe",
			Handler:    _PaymentService_Subscribe_Handler,
		},
		{
			MethodName: "Unsubscribe",
			Handler:    _PaymentService_Unsubscribe_Handler,
		},
		{
			MethodName: "PurchasePhoneNumber",
			Handler:    _PaymentService_PurchasePhoneNumber_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SearchPhoneNumber",
			Handler:       _PaymentService_SearchPhoneNumber_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	QueryUsers(ctx context.Context, in *TokenQuery, opts ...grpc.CallOption) (UserService_QueryUsersClient, error)
	CreateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	GetUser(ctx context.Context, in *common.Identifier, opts ...grpc.CallOption) (*User, error)
	DeleteUser(ctx context.Context, in *common.Identifier, opts ...grpc.CallOption) (*common.Empty, error)
	UpdateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	UserRoles(ctx context.Context, in *common.Identifier, opts ...grpc.CallOption) (UserService_UserRolesClient, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) QueryUsers(ctx context.Context, in *TokenQuery, opts ...grpc.CallOption) (UserService_QueryUsersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UserService_serviceDesc.Streams[0], "/api.UserService/QueryUsers", opts...)
	if err != nil {
		return nil, err
	}
	x := &userServiceQueryUsersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UserService_QueryUsersClient interface {
	Recv() (*User, error)
	grpc.ClientStream
}

type userServiceQueryUsersClient struct {
	grpc.ClientStream
}

func (x *userServiceQueryUsersClient) Recv() (*User, error) {
	m := new(User)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *userServiceClient) CreateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/api.UserService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUser(ctx context.Context, in *common.Identifier, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/api.UserService/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteUser(ctx context.Context, in *common.Identifier, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/api.UserService/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/api.UserService/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UserRoles(ctx context.Context, in *common.Identifier, opts ...grpc.CallOption) (UserService_UserRolesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UserService_serviceDesc.Streams[1], "/api.UserService/UserRoles", opts...)
	if err != nil {
		return nil, err
	}
	x := &userServiceUserRolesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UserService_UserRolesClient interface {
	Recv() (*Role, error)
	grpc.ClientStream
}

type userServiceUserRolesClient struct {
	grpc.ClientStream
}

func (x *userServiceUserRolesClient) Recv() (*Role, error) {
	m := new(Role)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	QueryUsers(*TokenQuery, UserService_QueryUsersServer) error
	CreateUser(context.Context, *User) (*User, error)
	GetUser(context.Context, *common.Identifier) (*User, error)
	DeleteUser(context.Context, *common.Identifier) (*common.Empty, error)
	UpdateUser(context.Context, *User) (*User, error)
	UserRoles(*common.Identifier, UserService_UserRolesServer) error
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_QueryUsers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(TokenQuery)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UserServiceServer).QueryUsers(m, &userServiceQueryUsersServer{stream})
}

type UserService_QueryUsersServer interface {
	Send(*User) error
	grpc.ServerStream
}

type userServiceQueryUsersServer struct {
	grpc.ServerStream
}

func (x *userServiceQueryUsersServer) Send(m *User) error {
	return x.ServerStream.SendMsg(m)
}

func _UserService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Identifier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUser(ctx, req.(*common.Identifier))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Identifier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteUser(ctx, req.(*common.Identifier))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UserRoles_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(common.Identifier)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UserServiceServer).UserRoles(m, &userServiceUserRolesServer{stream})
}

type UserService_UserRolesServer interface {
	Send(*Role) error
	grpc.ServerStream
}

type userServiceUserRolesServer struct {
	grpc.ServerStream
}

func (x *userServiceUserRolesServer) Send(m *Role) error {
	return x.ServerStream.SendMsg(m)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUser",
			Handler:    _UserService_CreateUser_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _UserService_GetUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _UserService_DeleteUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _UserService_UpdateUser_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "QueryUsers",
			Handler:       _UserService_QueryUsers_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "UserRoles",
			Handler:       _UserService_UserRoles_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}
