// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common/common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Common {

  /// <summary>Holder for reflection information generated from common/common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for common/common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNjb21tb24vY29tbW9uLnByb3RvEgZjb21tb24iFgoGU3RyaW5nEgwKBHRl",
            "eHQYASABKAkiFQoFQnl0ZXMSDAoEYml0cxgBIAEoDCIWCgRCb29sEg4KBmFu",
            "c3dlchgBIAEoCCIuCgtTdHJpbmdBcnJheRIfCgdzdHJpbmdzGAEgAygLMg4u",
            "Y29tbW9uLlN0cmluZyKDAQoJU3RyaW5nTWFwEjQKCnN0cmluZ19tYXAYASAD",
            "KAsyIC5jb21tb24uU3RyaW5nTWFwLlN0cmluZ01hcEVudHJ5GkAKDlN0cmlu",
            "Z01hcEVudHJ5EgsKA2tleRgBIAEoCRIdCgV2YWx1ZRgCIAEoCzIOLmNvbW1v",
            "bi5TdHJpbmc6AjgBIgcKBUVtcHR5IigKCklkZW50aWZpZXISGgoCaWQYASAB",
            "KAsyDi5jb21tb24uU3RyaW5nIhQKBUludDY0EgsKA251bRgBIAEoAyIWCgdG",
            "bG9hdDY0EgsKA251bRgBIAEoASJBCgVHcmFwaBIbCgJ4cxgBIAMoCzIPLmNv",
            "bW1vbi5GbG9hdDY0EhsKAnlzGAIgAygLMg8uY29tbW9uLkZsb2F0NjQiywEK",
            "C1NjYXR0ZXJQbG90EhwKBWdyYXBoGAEgASgLMg0uY29tbW9uLkdyYXBoEiEK",
            "BXNoYXBlGAIgASgOMhIuY29tbW9uLkdyYXBoU2hhcGUSIQoFbWVkaWEYAyAB",
            "KA4yEi5jb21tb24uR3JhcGhNZWRpYRIbCgVjb2xvchgEIAEoCzIMLmNvbW1v",
            "bi5SR0JBEhwKBVdpZHRoGAUgASgLMg0uY29tbW9uLkludDY0Eh0KBkhpZWdo",
            "dBgGIAEoCzINLmNvbW1vbi5JbnQ2NCJuCgRSR0JBEhgKAXIYASABKAsyDS5j",
            "b21tb24uSW50NjQSGAoBZxgCIAEoCzINLmNvbW1vbi5JbnQ2NBIYCgFiGAMg",
            "ASgLMg0uY29tbW9uLkludDY0EhgKAWEYBCABKAsyDS5jb21tb24uSW50NjQi",
            "SAoFRXJyb3ISIQoJZXJyb3JfbXNnGAEgASgLMg4uY29tbW9uLlN0cmluZxIc",
            "CgRpbmZvGAMgASgLMg4uY29tbW9uLlN0cmluZyKMAQoLSFRUUFJlcXVlc3QS",
            "IgoGbWV0aG9kGAEgASgOMhIuY29tbW9uLkhUVFBNZXRob2QSGwoDdXJsGAIg",
            "ASgLMg4uY29tbW9uLlN0cmluZxIfCgRmb3JtGAMgASgLMhEuY29tbW9uLlN0",
            "cmluZ01hcBIbCgRib2R5GAQgASgLMg0uY29tbW9uLkJ5dGVzIroBCgVUb2tl",
            "bhIkCgxhY2Nlc3NfdG9rZW4YASABKAsyDi5jb21tb24uU3RyaW5nEiIKCnRv",
            "a2VuX3R5cGUYAiABKAsyDi5jb21tb24uU3RyaW5nEiUKDXJlZnJlc2hfdG9r",
            "ZW4YAyABKAsyDi5jb21tb24uU3RyaW5nEh4KBmV4cGlyeRgEIAEoCzIOLmNv",
            "bW1vbi5TdHJpbmcSIAoIaWRfdG9rZW4YBSABKAsyDi5jb21tb24uU3RyaW5n",
            "KhgKCkdyYXBoU2hhcGUSCgoGQ0lSQ0xFEAAqFQoKR3JhcGhNZWRpYRIHCgNQ",
            "TkcQACoqCgpIVFRQTWV0aG9kEgcKA0dFVBAAEggKBFBPU1QQARIJCgVQQVRD",
            "SBACYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Common.GraphShape), typeof(global::Common.GraphMedia), typeof(global::Common.HTTPMethod), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.String), global::Common.String.Parser, new[]{ "Text" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Bytes), global::Common.Bytes.Parser, new[]{ "Bits" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Bool), global::Common.Bool.Parser, new[]{ "Answer" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.StringArray), global::Common.StringArray.Parser, new[]{ "Strings" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.StringMap), global::Common.StringMap.Parser, new[]{ "StringMap_" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Empty), global::Common.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Identifier), global::Common.Identifier.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Int64), global::Common.Int64.Parser, new[]{ "Num" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Float64), global::Common.Float64.Parser, new[]{ "Num" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Graph), global::Common.Graph.Parser, new[]{ "Xs", "Ys" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.ScatterPlot), global::Common.ScatterPlot.Parser, new[]{ "Graph", "Shape", "Media", "Color", "Width", "Hieght" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.RGBA), global::Common.RGBA.Parser, new[]{ "R", "G", "B", "A" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Error), global::Common.Error.Parser, new[]{ "ErrorMsg", "Info" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.HTTPRequest), global::Common.HTTPRequest.Parser, new[]{ "Method", "Url", "Form", "Body" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Token), global::Common.Token.Parser, new[]{ "AccessToken", "TokenType", "RefreshToken", "Expiry", "IdToken" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum GraphShape {
    [pbr::OriginalName("CIRCLE")] Circle = 0,
  }

  public enum GraphMedia {
    [pbr::OriginalName("PNG")] Png = 0,
  }

  public enum HTTPMethod {
    [pbr::OriginalName("GET")] Get = 0,
    [pbr::OriginalName("POST")] Post = 1,
    [pbr::OriginalName("PATCH")] Patch = 2,
  }

  #endregion

  #region Messages
  public sealed partial class String : pb::IMessage<String> {
    private static readonly pb::MessageParser<String> _parser = new pb::MessageParser<String>(() => new String());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<String> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public String() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public String(String other) : this() {
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public String Clone() {
      return new String(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as String);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(String other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(String other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Bytes : pb::IMessage<Bytes> {
    private static readonly pb::MessageParser<Bytes> _parser = new pb::MessageParser<Bytes>(() => new Bytes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Bytes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bytes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bytes(Bytes other) : this() {
      bits_ = other.bits_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bytes Clone() {
      return new Bytes(this);
    }

    /// <summary>Field number for the "bits" field.</summary>
    public const int BitsFieldNumber = 1;
    private pb::ByteString bits_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Bits {
      get { return bits_; }
      set {
        bits_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Bytes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Bytes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bits != other.Bits) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bits.Length != 0) hash ^= Bits.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Bits.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Bits);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bits.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bits);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Bytes other) {
      if (other == null) {
        return;
      }
      if (other.Bits.Length != 0) {
        Bits = other.Bits;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Bits = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Bool : pb::IMessage<Bool> {
    private static readonly pb::MessageParser<Bool> _parser = new pb::MessageParser<Bool>(() => new Bool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Bool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bool(Bool other) : this() {
      answer_ = other.answer_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bool Clone() {
      return new Bool(this);
    }

    /// <summary>Field number for the "answer" field.</summary>
    public const int AnswerFieldNumber = 1;
    private bool answer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Answer {
      get { return answer_; }
      set {
        answer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Bool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Bool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Answer != other.Answer) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Answer != false) hash ^= Answer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Answer != false) {
        output.WriteRawTag(8);
        output.WriteBool(Answer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Answer != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Bool other) {
      if (other == null) {
        return;
      }
      if (other.Answer != false) {
        Answer = other.Answer;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Answer = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StringArray : pb::IMessage<StringArray> {
    private static readonly pb::MessageParser<StringArray> _parser = new pb::MessageParser<StringArray>(() => new StringArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StringArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringArray(StringArray other) : this() {
      strings_ = other.strings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringArray Clone() {
      return new StringArray(this);
    }

    /// <summary>Field number for the "strings" field.</summary>
    public const int StringsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Common.String> _repeated_strings_codec
        = pb::FieldCodec.ForMessage(10, global::Common.String.Parser);
    private readonly pbc::RepeatedField<global::Common.String> strings_ = new pbc::RepeatedField<global::Common.String>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Common.String> Strings {
      get { return strings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StringArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StringArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!strings_.Equals(other.strings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= strings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      strings_.WriteTo(output, _repeated_strings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += strings_.CalculateSize(_repeated_strings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StringArray other) {
      if (other == null) {
        return;
      }
      strings_.Add(other.strings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            strings_.AddEntriesFrom(input, _repeated_strings_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StringMap : pb::IMessage<StringMap> {
    private static readonly pb::MessageParser<StringMap> _parser = new pb::MessageParser<StringMap>(() => new StringMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StringMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringMap(StringMap other) : this() {
      stringMap_ = other.stringMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringMap Clone() {
      return new StringMap(this);
    }

    /// <summary>Field number for the "string_map" field.</summary>
    public const int StringMap_FieldNumber = 1;
    private static readonly pbc::MapField<string, global::Common.String>.Codec _map_stringMap_codec
        = new pbc::MapField<string, global::Common.String>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Common.String.Parser), 10);
    private readonly pbc::MapField<string, global::Common.String> stringMap_ = new pbc::MapField<string, global::Common.String>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Common.String> StringMap_ {
      get { return stringMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StringMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StringMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!StringMap_.Equals(other.StringMap_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= StringMap_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      stringMap_.WriteTo(output, _map_stringMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += stringMap_.CalculateSize(_map_stringMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StringMap other) {
      if (other == null) {
        return;
      }
      stringMap_.Add(other.stringMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stringMap_.AddEntriesFrom(input, _map_stringMap_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class Identifier : pb::IMessage<Identifier> {
    private static readonly pb::MessageParser<Identifier> _parser = new pb::MessageParser<Identifier>(() => new Identifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Identifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identifier(Identifier other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identifier Clone() {
      return new Identifier(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Common.String id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Identifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Identifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Identifier other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::Common.String();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              id_ = new global::Common.String();
            }
            input.ReadMessage(id_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Int64 : pb::IMessage<Int64> {
    private static readonly pb::MessageParser<Int64> _parser = new pb::MessageParser<Int64>(() => new Int64());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Int64> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Int64() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Int64(Int64 other) : this() {
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Int64 Clone() {
      return new Int64(this);
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 1;
    private long num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Int64);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Int64 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Num != 0L) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Num != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Num != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Int64 other) {
      if (other == null) {
        return;
      }
      if (other.Num != 0L) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Num = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Float64 : pb::IMessage<Float64> {
    private static readonly pb::MessageParser<Float64> _parser = new pb::MessageParser<Float64>(() => new Float64());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Float64> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Float64() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Float64(Float64 other) : this() {
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Float64 Clone() {
      return new Float64(this);
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 1;
    private double num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Float64);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Float64 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Num, other.Num)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Num != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Num);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Num != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Num != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Float64 other) {
      if (other == null) {
        return;
      }
      if (other.Num != 0D) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Num = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Graph : pb::IMessage<Graph> {
    private static readonly pb::MessageParser<Graph> _parser = new pb::MessageParser<Graph>(() => new Graph());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Graph> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Graph() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Graph(Graph other) : this() {
      xs_ = other.xs_.Clone();
      ys_ = other.ys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Graph Clone() {
      return new Graph(this);
    }

    /// <summary>Field number for the "xs" field.</summary>
    public const int XsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Common.Float64> _repeated_xs_codec
        = pb::FieldCodec.ForMessage(10, global::Common.Float64.Parser);
    private readonly pbc::RepeatedField<global::Common.Float64> xs_ = new pbc::RepeatedField<global::Common.Float64>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Common.Float64> Xs {
      get { return xs_; }
    }

    /// <summary>Field number for the "ys" field.</summary>
    public const int YsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Common.Float64> _repeated_ys_codec
        = pb::FieldCodec.ForMessage(18, global::Common.Float64.Parser);
    private readonly pbc::RepeatedField<global::Common.Float64> ys_ = new pbc::RepeatedField<global::Common.Float64>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Common.Float64> Ys {
      get { return ys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Graph);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Graph other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!xs_.Equals(other.xs_)) return false;
      if(!ys_.Equals(other.ys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= xs_.GetHashCode();
      hash ^= ys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      xs_.WriteTo(output, _repeated_xs_codec);
      ys_.WriteTo(output, _repeated_ys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += xs_.CalculateSize(_repeated_xs_codec);
      size += ys_.CalculateSize(_repeated_ys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Graph other) {
      if (other == null) {
        return;
      }
      xs_.Add(other.xs_);
      ys_.Add(other.ys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            xs_.AddEntriesFrom(input, _repeated_xs_codec);
            break;
          }
          case 18: {
            ys_.AddEntriesFrom(input, _repeated_ys_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ScatterPlot : pb::IMessage<ScatterPlot> {
    private static readonly pb::MessageParser<ScatterPlot> _parser = new pb::MessageParser<ScatterPlot>(() => new ScatterPlot());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScatterPlot> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScatterPlot() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScatterPlot(ScatterPlot other) : this() {
      graph_ = other.graph_ != null ? other.graph_.Clone() : null;
      shape_ = other.shape_;
      media_ = other.media_;
      color_ = other.color_ != null ? other.color_.Clone() : null;
      width_ = other.width_ != null ? other.width_.Clone() : null;
      hieght_ = other.hieght_ != null ? other.hieght_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScatterPlot Clone() {
      return new ScatterPlot(this);
    }

    /// <summary>Field number for the "graph" field.</summary>
    public const int GraphFieldNumber = 1;
    private global::Common.Graph graph_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Graph Graph {
      get { return graph_; }
      set {
        graph_ = value;
      }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 2;
    private global::Common.GraphShape shape_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.GraphShape Shape {
      get { return shape_; }
      set {
        shape_ = value;
      }
    }

    /// <summary>Field number for the "media" field.</summary>
    public const int MediaFieldNumber = 3;
    private global::Common.GraphMedia media_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.GraphMedia Media {
      get { return media_; }
      set {
        media_ = value;
      }
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 4;
    private global::Common.RGBA color_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.RGBA Color {
      get { return color_; }
      set {
        color_ = value;
      }
    }

    /// <summary>Field number for the "Width" field.</summary>
    public const int WidthFieldNumber = 5;
    private global::Common.Int64 width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Int64 Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "Hieght" field.</summary>
    public const int HieghtFieldNumber = 6;
    private global::Common.Int64 hieght_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Int64 Hieght {
      get { return hieght_; }
      set {
        hieght_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScatterPlot);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScatterPlot other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Graph, other.Graph)) return false;
      if (Shape != other.Shape) return false;
      if (Media != other.Media) return false;
      if (!object.Equals(Color, other.Color)) return false;
      if (!object.Equals(Width, other.Width)) return false;
      if (!object.Equals(Hieght, other.Hieght)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (graph_ != null) hash ^= Graph.GetHashCode();
      if (Shape != 0) hash ^= Shape.GetHashCode();
      if (Media != 0) hash ^= Media.GetHashCode();
      if (color_ != null) hash ^= Color.GetHashCode();
      if (width_ != null) hash ^= Width.GetHashCode();
      if (hieght_ != null) hash ^= Hieght.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (graph_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Graph);
      }
      if (Shape != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Shape);
      }
      if (Media != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Media);
      }
      if (color_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Color);
      }
      if (width_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Width);
      }
      if (hieght_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Hieght);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (graph_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Graph);
      }
      if (Shape != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Shape);
      }
      if (Media != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Media);
      }
      if (color_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Color);
      }
      if (width_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Width);
      }
      if (hieght_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hieght);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScatterPlot other) {
      if (other == null) {
        return;
      }
      if (other.graph_ != null) {
        if (graph_ == null) {
          graph_ = new global::Common.Graph();
        }
        Graph.MergeFrom(other.Graph);
      }
      if (other.Shape != 0) {
        Shape = other.Shape;
      }
      if (other.Media != 0) {
        Media = other.Media;
      }
      if (other.color_ != null) {
        if (color_ == null) {
          color_ = new global::Common.RGBA();
        }
        Color.MergeFrom(other.Color);
      }
      if (other.width_ != null) {
        if (width_ == null) {
          width_ = new global::Common.Int64();
        }
        Width.MergeFrom(other.Width);
      }
      if (other.hieght_ != null) {
        if (hieght_ == null) {
          hieght_ = new global::Common.Int64();
        }
        Hieght.MergeFrom(other.Hieght);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (graph_ == null) {
              graph_ = new global::Common.Graph();
            }
            input.ReadMessage(graph_);
            break;
          }
          case 16: {
            shape_ = (global::Common.GraphShape) input.ReadEnum();
            break;
          }
          case 24: {
            media_ = (global::Common.GraphMedia) input.ReadEnum();
            break;
          }
          case 34: {
            if (color_ == null) {
              color_ = new global::Common.RGBA();
            }
            input.ReadMessage(color_);
            break;
          }
          case 42: {
            if (width_ == null) {
              width_ = new global::Common.Int64();
            }
            input.ReadMessage(width_);
            break;
          }
          case 50: {
            if (hieght_ == null) {
              hieght_ = new global::Common.Int64();
            }
            input.ReadMessage(hieght_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RGBA : pb::IMessage<RGBA> {
    private static readonly pb::MessageParser<RGBA> _parser = new pb::MessageParser<RGBA>(() => new RGBA());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RGBA> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RGBA() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RGBA(RGBA other) : this() {
      r_ = other.r_ != null ? other.r_.Clone() : null;
      g_ = other.g_ != null ? other.g_.Clone() : null;
      b_ = other.b_ != null ? other.b_.Clone() : null;
      a_ = other.a_ != null ? other.a_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RGBA Clone() {
      return new RGBA(this);
    }

    /// <summary>Field number for the "r" field.</summary>
    public const int RFieldNumber = 1;
    private global::Common.Int64 r_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Int64 R {
      get { return r_; }
      set {
        r_ = value;
      }
    }

    /// <summary>Field number for the "g" field.</summary>
    public const int GFieldNumber = 2;
    private global::Common.Int64 g_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Int64 G {
      get { return g_; }
      set {
        g_ = value;
      }
    }

    /// <summary>Field number for the "b" field.</summary>
    public const int BFieldNumber = 3;
    private global::Common.Int64 b_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Int64 B {
      get { return b_; }
      set {
        b_ = value;
      }
    }

    /// <summary>Field number for the "a" field.</summary>
    public const int AFieldNumber = 4;
    private global::Common.Int64 a_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Int64 A {
      get { return a_; }
      set {
        a_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RGBA);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RGBA other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(R, other.R)) return false;
      if (!object.Equals(G, other.G)) return false;
      if (!object.Equals(B, other.B)) return false;
      if (!object.Equals(A, other.A)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (r_ != null) hash ^= R.GetHashCode();
      if (g_ != null) hash ^= G.GetHashCode();
      if (b_ != null) hash ^= B.GetHashCode();
      if (a_ != null) hash ^= A.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (r_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(R);
      }
      if (g_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(G);
      }
      if (b_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(B);
      }
      if (a_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(A);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (r_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(R);
      }
      if (g_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(G);
      }
      if (b_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(B);
      }
      if (a_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(A);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RGBA other) {
      if (other == null) {
        return;
      }
      if (other.r_ != null) {
        if (r_ == null) {
          r_ = new global::Common.Int64();
        }
        R.MergeFrom(other.R);
      }
      if (other.g_ != null) {
        if (g_ == null) {
          g_ = new global::Common.Int64();
        }
        G.MergeFrom(other.G);
      }
      if (other.b_ != null) {
        if (b_ == null) {
          b_ = new global::Common.Int64();
        }
        B.MergeFrom(other.B);
      }
      if (other.a_ != null) {
        if (a_ == null) {
          a_ = new global::Common.Int64();
        }
        A.MergeFrom(other.A);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (r_ == null) {
              r_ = new global::Common.Int64();
            }
            input.ReadMessage(r_);
            break;
          }
          case 18: {
            if (g_ == null) {
              g_ = new global::Common.Int64();
            }
            input.ReadMessage(g_);
            break;
          }
          case 26: {
            if (b_ == null) {
              b_ = new global::Common.Int64();
            }
            input.ReadMessage(b_);
            break;
          }
          case 34: {
            if (a_ == null) {
              a_ = new global::Common.Int64();
            }
            input.ReadMessage(a_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Error : pb::IMessage<Error> {
    private static readonly pb::MessageParser<Error> _parser = new pb::MessageParser<Error>(() => new Error());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Error> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error(Error other) : this() {
      errorMsg_ = other.errorMsg_ != null ? other.errorMsg_.Clone() : null;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Error Clone() {
      return new Error(this);
    }

    /// <summary>Field number for the "error_msg" field.</summary>
    public const int ErrorMsgFieldNumber = 1;
    private global::Common.String errorMsg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String ErrorMsg {
      get { return errorMsg_; }
      set {
        errorMsg_ = value;
      }
    }

    /// <summary>Field number for the "info" field.</summary>
    public const int InfoFieldNumber = 3;
    private global::Common.String info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Error);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Error other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ErrorMsg, other.ErrorMsg)) return false;
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (errorMsg_ != null) hash ^= ErrorMsg.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (errorMsg_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ErrorMsg);
      }
      if (info_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (errorMsg_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ErrorMsg);
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Error other) {
      if (other == null) {
        return;
      }
      if (other.errorMsg_ != null) {
        if (errorMsg_ == null) {
          errorMsg_ = new global::Common.String();
        }
        ErrorMsg.MergeFrom(other.ErrorMsg);
      }
      if (other.info_ != null) {
        if (info_ == null) {
          info_ = new global::Common.String();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (errorMsg_ == null) {
              errorMsg_ = new global::Common.String();
            }
            input.ReadMessage(errorMsg_);
            break;
          }
          case 26: {
            if (info_ == null) {
              info_ = new global::Common.String();
            }
            input.ReadMessage(info_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HTTPRequest : pb::IMessage<HTTPRequest> {
    private static readonly pb::MessageParser<HTTPRequest> _parser = new pb::MessageParser<HTTPRequest>(() => new HTTPRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HTTPRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HTTPRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HTTPRequest(HTTPRequest other) : this() {
      method_ = other.method_;
      url_ = other.url_ != null ? other.url_.Clone() : null;
      form_ = other.form_ != null ? other.form_.Clone() : null;
      body_ = other.body_ != null ? other.body_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HTTPRequest Clone() {
      return new HTTPRequest(this);
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 1;
    private global::Common.HTTPMethod method_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.HTTPMethod Method {
      get { return method_; }
      set {
        method_ = value;
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 2;
    private global::Common.String url_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Url {
      get { return url_; }
      set {
        url_ = value;
      }
    }

    /// <summary>Field number for the "form" field.</summary>
    public const int FormFieldNumber = 3;
    private global::Common.StringMap form_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.StringMap Form {
      get { return form_; }
      set {
        form_ = value;
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 4;
    private global::Common.Bytes body_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.Bytes Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HTTPRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HTTPRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Method != other.Method) return false;
      if (!object.Equals(Url, other.Url)) return false;
      if (!object.Equals(Form, other.Form)) return false;
      if (!object.Equals(Body, other.Body)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Method != 0) hash ^= Method.GetHashCode();
      if (url_ != null) hash ^= Url.GetHashCode();
      if (form_ != null) hash ^= Form.GetHashCode();
      if (body_ != null) hash ^= Body.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Method != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Method);
      }
      if (url_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Url);
      }
      if (form_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Form);
      }
      if (body_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Method != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Method);
      }
      if (url_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Url);
      }
      if (form_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Form);
      }
      if (body_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HTTPRequest other) {
      if (other == null) {
        return;
      }
      if (other.Method != 0) {
        Method = other.Method;
      }
      if (other.url_ != null) {
        if (url_ == null) {
          url_ = new global::Common.String();
        }
        Url.MergeFrom(other.Url);
      }
      if (other.form_ != null) {
        if (form_ == null) {
          form_ = new global::Common.StringMap();
        }
        Form.MergeFrom(other.Form);
      }
      if (other.body_ != null) {
        if (body_ == null) {
          body_ = new global::Common.Bytes();
        }
        Body.MergeFrom(other.Body);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            method_ = (global::Common.HTTPMethod) input.ReadEnum();
            break;
          }
          case 18: {
            if (url_ == null) {
              url_ = new global::Common.String();
            }
            input.ReadMessage(url_);
            break;
          }
          case 26: {
            if (form_ == null) {
              form_ = new global::Common.StringMap();
            }
            input.ReadMessage(form_);
            break;
          }
          case 34: {
            if (body_ == null) {
              body_ = new global::Common.Bytes();
            }
            input.ReadMessage(body_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Token : pb::IMessage<Token> {
    private static readonly pb::MessageParser<Token> _parser = new pb::MessageParser<Token>(() => new Token());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Token> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Token() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Token(Token other) : this() {
      accessToken_ = other.accessToken_ != null ? other.accessToken_.Clone() : null;
      tokenType_ = other.tokenType_ != null ? other.tokenType_.Clone() : null;
      refreshToken_ = other.refreshToken_ != null ? other.refreshToken_.Clone() : null;
      expiry_ = other.expiry_ != null ? other.expiry_.Clone() : null;
      idToken_ = other.idToken_ != null ? other.idToken_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Token Clone() {
      return new Token(this);
    }

    /// <summary>Field number for the "access_token" field.</summary>
    public const int AccessTokenFieldNumber = 1;
    private global::Common.String accessToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = value;
      }
    }

    /// <summary>Field number for the "token_type" field.</summary>
    public const int TokenTypeFieldNumber = 2;
    private global::Common.String tokenType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String TokenType {
      get { return tokenType_; }
      set {
        tokenType_ = value;
      }
    }

    /// <summary>Field number for the "refresh_token" field.</summary>
    public const int RefreshTokenFieldNumber = 3;
    private global::Common.String refreshToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String RefreshToken {
      get { return refreshToken_; }
      set {
        refreshToken_ = value;
      }
    }

    /// <summary>Field number for the "expiry" field.</summary>
    public const int ExpiryFieldNumber = 4;
    private global::Common.String expiry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Expiry {
      get { return expiry_; }
      set {
        expiry_ = value;
      }
    }

    /// <summary>Field number for the "id_token" field.</summary>
    public const int IdTokenFieldNumber = 5;
    private global::Common.String idToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String IdToken {
      get { return idToken_; }
      set {
        idToken_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Token);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Token other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccessToken, other.AccessToken)) return false;
      if (!object.Equals(TokenType, other.TokenType)) return false;
      if (!object.Equals(RefreshToken, other.RefreshToken)) return false;
      if (!object.Equals(Expiry, other.Expiry)) return false;
      if (!object.Equals(IdToken, other.IdToken)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (accessToken_ != null) hash ^= AccessToken.GetHashCode();
      if (tokenType_ != null) hash ^= TokenType.GetHashCode();
      if (refreshToken_ != null) hash ^= RefreshToken.GetHashCode();
      if (expiry_ != null) hash ^= Expiry.GetHashCode();
      if (idToken_ != null) hash ^= IdToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (accessToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AccessToken);
      }
      if (tokenType_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TokenType);
      }
      if (refreshToken_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RefreshToken);
      }
      if (expiry_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Expiry);
      }
      if (idToken_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(IdToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (accessToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccessToken);
      }
      if (tokenType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenType);
      }
      if (refreshToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RefreshToken);
      }
      if (expiry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Expiry);
      }
      if (idToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IdToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Token other) {
      if (other == null) {
        return;
      }
      if (other.accessToken_ != null) {
        if (accessToken_ == null) {
          accessToken_ = new global::Common.String();
        }
        AccessToken.MergeFrom(other.AccessToken);
      }
      if (other.tokenType_ != null) {
        if (tokenType_ == null) {
          tokenType_ = new global::Common.String();
        }
        TokenType.MergeFrom(other.TokenType);
      }
      if (other.refreshToken_ != null) {
        if (refreshToken_ == null) {
          refreshToken_ = new global::Common.String();
        }
        RefreshToken.MergeFrom(other.RefreshToken);
      }
      if (other.expiry_ != null) {
        if (expiry_ == null) {
          expiry_ = new global::Common.String();
        }
        Expiry.MergeFrom(other.Expiry);
      }
      if (other.idToken_ != null) {
        if (idToken_ == null) {
          idToken_ = new global::Common.String();
        }
        IdToken.MergeFrom(other.IdToken);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (accessToken_ == null) {
              accessToken_ = new global::Common.String();
            }
            input.ReadMessage(accessToken_);
            break;
          }
          case 18: {
            if (tokenType_ == null) {
              tokenType_ = new global::Common.String();
            }
            input.ReadMessage(tokenType_);
            break;
          }
          case 26: {
            if (refreshToken_ == null) {
              refreshToken_ = new global::Common.String();
            }
            input.ReadMessage(refreshToken_);
            break;
          }
          case 34: {
            if (expiry_ == null) {
              expiry_ = new global::Common.String();
            }
            input.ReadMessage(expiry_);
            break;
          }
          case 42: {
            if (idToken_ == null) {
              idToken_ = new global::Common.String();
            }
            input.ReadMessage(idToken_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
