/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.voice.CallWithApplication', null, global);
goog.exportSymbol('proto.voice.CallWithCallbackRequest', null, global);
goog.exportSymbol('proto.voice.Callback', null, global);
goog.exportSymbol('proto.voice.GetCallRequest', null, global);
goog.exportSymbol('proto.voice.StyleSheet', null, global);
goog.exportSymbol('proto.voice.VoiceResponse', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.voice.StyleSheet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.voice.StyleSheet.oneofGroups_);
};
goog.inherits(proto.voice.StyleSheet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.voice.StyleSheet.displayName = 'proto.voice.StyleSheet';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.voice.StyleSheet.oneofGroups_ = [[4,5,6,7,8,9,10,11,12,13,14,15,16,17]];

/**
 * @enum {number}
 */
proto.voice.StyleSheet.VoiceCase = {
  VOICE_NOT_SET: 0,
  NICOLE: 4,
  RUSSELL: 5,
  AMY: 6,
  BRIAN: 7,
  EMMA: 8,
  IVY: 9,
  JOEY: 10,
  JUSTIN: 11,
  KENDRA: 12,
  KIMBERLY: 13,
  MATTHEW: 14,
  SALLI: 15,
  MIGUEL: 16,
  PENELOPE: 17
};

/**
 * @return {proto.voice.StyleSheet.VoiceCase}
 */
proto.voice.StyleSheet.prototype.getVoiceCase = function() {
  return /** @type {proto.voice.StyleSheet.VoiceCase} */(jspb.Message.computeOneofCase(this, proto.voice.StyleSheet.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.voice.StyleSheet.prototype.toObject = function(opt_includeInstance) {
  return proto.voice.StyleSheet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.voice.StyleSheet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.voice.StyleSheet.toObject = function(includeInstance, msg) {
  var f, obj = {
    onSuccess: jspb.Message.getFieldWithDefault(msg, 1, ""),
    onFail: jspb.Message.getFieldWithDefault(msg, 2, ""),
    maxAttempts: jspb.Message.getFieldWithDefault(msg, 3, ""),
    nicole: jspb.Message.getFieldWithDefault(msg, 4, ""),
    russell: jspb.Message.getFieldWithDefault(msg, 5, ""),
    amy: jspb.Message.getFieldWithDefault(msg, 6, ""),
    brian: jspb.Message.getFieldWithDefault(msg, 7, ""),
    emma: jspb.Message.getFieldWithDefault(msg, 8, ""),
    ivy: jspb.Message.getFieldWithDefault(msg, 9, ""),
    joey: jspb.Message.getFieldWithDefault(msg, 10, ""),
    justin: jspb.Message.getFieldWithDefault(msg, 11, ""),
    kendra: jspb.Message.getFieldWithDefault(msg, 12, ""),
    kimberly: jspb.Message.getFieldWithDefault(msg, 13, ""),
    matthew: jspb.Message.getFieldWithDefault(msg, 14, ""),
    salli: jspb.Message.getFieldWithDefault(msg, 15, ""),
    miguel: jspb.Message.getFieldWithDefault(msg, 16, ""),
    penelope: jspb.Message.getFieldWithDefault(msg, 17, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.voice.StyleSheet}
 */
proto.voice.StyleSheet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.voice.StyleSheet;
  return proto.voice.StyleSheet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.voice.StyleSheet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.voice.StyleSheet}
 */
proto.voice.StyleSheet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOnSuccess(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOnFail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setMaxAttempts(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNicole(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRussell(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmy(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrian(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmma(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setIvy(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setJoey(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setJustin(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setKendra(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setKimberly(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setMatthew(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setSalli(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setMiguel(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setPenelope(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.voice.StyleSheet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.voice.StyleSheet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.voice.StyleSheet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.voice.StyleSheet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOnSuccess();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOnFail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getMaxAttempts();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
};


/**
 * optional string on_success = 1;
 * @return {string}
 */
proto.voice.StyleSheet.prototype.getOnSuccess = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.voice.StyleSheet.prototype.setOnSuccess = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string on_fail = 2;
 * @return {string}
 */
proto.voice.StyleSheet.prototype.getOnFail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.voice.StyleSheet.prototype.setOnFail = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string max_attempts = 3;
 * @return {string}
 */
proto.voice.StyleSheet.prototype.getMaxAttempts = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.voice.StyleSheet.prototype.setMaxAttempts = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Nicole = 4;
 * @return {string}
 */
proto.voice.StyleSheet.prototype.getNicole = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.voice.StyleSheet.prototype.setNicole = function(value) {
  jspb.Message.setOneofField(this, 4, proto.voice.StyleSheet.oneofGroups_[0], value);
};


proto.voice.StyleSheet.prototype.clearNicole = function() {
  jspb.Message.setOneofField(this, 4, proto.voice.StyleSheet.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.voice.StyleSheet.prototype.hasNicole = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string Russell = 5;
 * @return {string}
 */
proto.voice.StyleSheet.prototype.getRussell = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.voice.StyleSheet.prototype.setRussell = function(value) {
  jspb.Message.setOneofField(this, 5, proto.voice.StyleSheet.oneofGroups_[0], value);
};


proto.voice.StyleSheet.prototype.clearRussell = function() {
  jspb.Message.setOneofField(this, 5, proto.voice.StyleSheet.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.voice.StyleSheet.prototype.hasRussell = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string Amy = 6;
 * @return {string}
 */
proto.voice.StyleSheet.prototype.getAmy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.voice.StyleSheet.prototype.setAmy = function(value) {
  jspb.Message.setOneofField(this, 6, proto.voice.StyleSheet.oneofGroups_[0], value);
};


proto.voice.StyleSheet.prototype.clearAmy = function() {
  jspb.Message.setOneofField(this, 6, proto.voice.StyleSheet.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.voice.StyleSheet.prototype.hasAmy = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string Brian = 7;
 * @return {string}
 */
proto.voice.StyleSheet.prototype.getBrian = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.voice.StyleSheet.prototype.setBrian = function(value) {
  jspb.Message.setOneofField(this, 7, proto.voice.StyleSheet.oneofGroups_[0], value);
};


proto.voice.StyleSheet.prototype.clearBrian = function() {
  jspb.Message.setOneofField(this, 7, proto.voice.StyleSheet.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.voice.StyleSheet.prototype.hasBrian = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string Emma = 8;
 * @return {string}
 */
proto.voice.StyleSheet.prototype.getEmma = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.voice.StyleSheet.prototype.setEmma = function(value) {
  jspb.Message.setOneofField(this, 8, proto.voice.StyleSheet.oneofGroups_[0], value);
};


proto.voice.StyleSheet.prototype.clearEmma = function() {
  jspb.Message.setOneofField(this, 8, proto.voice.StyleSheet.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.voice.StyleSheet.prototype.hasEmma = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string Ivy = 9;
 * @return {string}
 */
proto.voice.StyleSheet.prototype.getIvy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.voice.StyleSheet.prototype.setIvy = function(value) {
  jspb.Message.setOneofField(this, 9, proto.voice.StyleSheet.oneofGroups_[0], value);
};


proto.voice.StyleSheet.prototype.clearIvy = function() {
  jspb.Message.setOneofField(this, 9, proto.voice.StyleSheet.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.voice.StyleSheet.prototype.hasIvy = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string Joey = 10;
 * @return {string}
 */
proto.voice.StyleSheet.prototype.getJoey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.voice.StyleSheet.prototype.setJoey = function(value) {
  jspb.Message.setOneofField(this, 10, proto.voice.StyleSheet.oneofGroups_[0], value);
};


proto.voice.StyleSheet.prototype.clearJoey = function() {
  jspb.Message.setOneofField(this, 10, proto.voice.StyleSheet.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.voice.StyleSheet.prototype.hasJoey = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string Justin = 11;
 * @return {string}
 */
proto.voice.StyleSheet.prototype.getJustin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.voice.StyleSheet.prototype.setJustin = function(value) {
  jspb.Message.setOneofField(this, 11, proto.voice.StyleSheet.oneofGroups_[0], value);
};


proto.voice.StyleSheet.prototype.clearJustin = function() {
  jspb.Message.setOneofField(this, 11, proto.voice.StyleSheet.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.voice.StyleSheet.prototype.hasJustin = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string Kendra = 12;
 * @return {string}
 */
proto.voice.StyleSheet.prototype.getKendra = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.voice.StyleSheet.prototype.setKendra = function(value) {
  jspb.Message.setOneofField(this, 12, proto.voice.StyleSheet.oneofGroups_[0], value);
};


proto.voice.StyleSheet.prototype.clearKendra = function() {
  jspb.Message.setOneofField(this, 12, proto.voice.StyleSheet.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.voice.StyleSheet.prototype.hasKendra = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string Kimberly = 13;
 * @return {string}
 */
proto.voice.StyleSheet.prototype.getKimberly = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.voice.StyleSheet.prototype.setKimberly = function(value) {
  jspb.Message.setOneofField(this, 13, proto.voice.StyleSheet.oneofGroups_[0], value);
};


proto.voice.StyleSheet.prototype.clearKimberly = function() {
  jspb.Message.setOneofField(this, 13, proto.voice.StyleSheet.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.voice.StyleSheet.prototype.hasKimberly = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string Matthew = 14;
 * @return {string}
 */
proto.voice.StyleSheet.prototype.getMatthew = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.voice.StyleSheet.prototype.setMatthew = function(value) {
  jspb.Message.setOneofField(this, 14, proto.voice.StyleSheet.oneofGroups_[0], value);
};


proto.voice.StyleSheet.prototype.clearMatthew = function() {
  jspb.Message.setOneofField(this, 14, proto.voice.StyleSheet.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.voice.StyleSheet.prototype.hasMatthew = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string Salli = 15;
 * @return {string}
 */
proto.voice.StyleSheet.prototype.getSalli = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.voice.StyleSheet.prototype.setSalli = function(value) {
  jspb.Message.setOneofField(this, 15, proto.voice.StyleSheet.oneofGroups_[0], value);
};


proto.voice.StyleSheet.prototype.clearSalli = function() {
  jspb.Message.setOneofField(this, 15, proto.voice.StyleSheet.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.voice.StyleSheet.prototype.hasSalli = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string Miguel = 16;
 * @return {string}
 */
proto.voice.StyleSheet.prototype.getMiguel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.voice.StyleSheet.prototype.setMiguel = function(value) {
  jspb.Message.setOneofField(this, 16, proto.voice.StyleSheet.oneofGroups_[0], value);
};


proto.voice.StyleSheet.prototype.clearMiguel = function() {
  jspb.Message.setOneofField(this, 16, proto.voice.StyleSheet.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.voice.StyleSheet.prototype.hasMiguel = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string Penelope = 17;
 * @return {string}
 */
proto.voice.StyleSheet.prototype.getPenelope = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.voice.StyleSheet.prototype.setPenelope = function(value) {
  jspb.Message.setOneofField(this, 17, proto.voice.StyleSheet.oneofGroups_[0], value);
};


proto.voice.StyleSheet.prototype.clearPenelope = function() {
  jspb.Message.setOneofField(this, 17, proto.voice.StyleSheet.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.voice.StyleSheet.prototype.hasPenelope = function() {
  return jspb.Message.getField(this, 17) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.voice.Callback = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.voice.Callback.repeatedFields_, null);
};
goog.inherits(proto.voice.Callback, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.voice.Callback.displayName = 'proto.voice.Callback';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.voice.Callback.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.voice.Callback.prototype.toObject = function(opt_includeInstance) {
  return proto.voice.Callback.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.voice.Callback} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.voice.Callback.toObject = function(includeInstance, msg) {
  var f, obj = {
    url: jspb.Message.getFieldWithDefault(msg, 1, ""),
    method: jspb.Message.getFieldWithDefault(msg, 2, ""),
    fallbackUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    fallbackMethod: jspb.Message.getFieldWithDefault(msg, 4, ""),
    statusCallback: jspb.Message.getFieldWithDefault(msg, 5, ""),
    statusCallbackEventList: jspb.Message.getRepeatedField(msg, 6),
    sendDigits: jspb.Message.getFieldWithDefault(msg, 7, ""),
    ifMachine: jspb.Message.getFieldWithDefault(msg, 8, ""),
    timeout: jspb.Message.getFieldWithDefault(msg, 9, 0),
    record: jspb.Message.getFieldWithDefault(msg, 10, false),
    recordingChannels: jspb.Message.getFieldWithDefault(msg, 11, ""),
    recordingStatusCallback: jspb.Message.getFieldWithDefault(msg, 12, ""),
    machineDetection: jspb.Message.getFieldWithDefault(msg, 13, ""),
    machineDetectionTimeout: jspb.Message.getFieldWithDefault(msg, 14, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.voice.Callback}
 */
proto.voice.Callback.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.voice.Callback;
  return proto.voice.Callback.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.voice.Callback} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.voice.Callback}
 */
proto.voice.Callback.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMethod(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFallbackUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFallbackMethod(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusCallback(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addStatusCallbackEvent(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setSendDigits(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setIfMachine(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTimeout(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRecord(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecordingChannels(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecordingStatusCallback(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setMachineDetection(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setMachineDetectionTimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.voice.Callback.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.voice.Callback.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.voice.Callback} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.voice.Callback.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMethod();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFallbackUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getFallbackMethod();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStatusCallback();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStatusCallbackEventList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getSendDigits();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIfMachine();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTimeout();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getRecord();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getRecordingChannels();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getRecordingStatusCallback();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getMachineDetection();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getMachineDetectionTimeout();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
};


/**
 * optional string url = 1;
 * @return {string}
 */
proto.voice.Callback.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.voice.Callback.prototype.setUrl = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string method = 2;
 * @return {string}
 */
proto.voice.Callback.prototype.getMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.voice.Callback.prototype.setMethod = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string fallback_url = 3;
 * @return {string}
 */
proto.voice.Callback.prototype.getFallbackUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.voice.Callback.prototype.setFallbackUrl = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string fallback_method = 4;
 * @return {string}
 */
proto.voice.Callback.prototype.getFallbackMethod = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.voice.Callback.prototype.setFallbackMethod = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string status_callback = 5;
 * @return {string}
 */
proto.voice.Callback.prototype.getStatusCallback = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.voice.Callback.prototype.setStatusCallback = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated string status_callback_event = 6;
 * @return {!Array<string>}
 */
proto.voice.Callback.prototype.getStatusCallbackEventList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<string>} value */
proto.voice.Callback.prototype.setStatusCallbackEventList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.voice.Callback.prototype.addStatusCallbackEvent = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


proto.voice.Callback.prototype.clearStatusCallbackEventList = function() {
  this.setStatusCallbackEventList([]);
};


/**
 * optional string send_digits = 7;
 * @return {string}
 */
proto.voice.Callback.prototype.getSendDigits = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.voice.Callback.prototype.setSendDigits = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string if_machine = 8;
 * @return {string}
 */
proto.voice.Callback.prototype.getIfMachine = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.voice.Callback.prototype.setIfMachine = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional int32 timeout = 9;
 * @return {number}
 */
proto.voice.Callback.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.voice.Callback.prototype.setTimeout = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional bool record = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.voice.Callback.prototype.getRecord = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.voice.Callback.prototype.setRecord = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string recording_channels = 11;
 * @return {string}
 */
proto.voice.Callback.prototype.getRecordingChannels = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.voice.Callback.prototype.setRecordingChannels = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string recording_status_callback = 12;
 * @return {string}
 */
proto.voice.Callback.prototype.getRecordingStatusCallback = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.voice.Callback.prototype.setRecordingStatusCallback = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string machine_detection = 13;
 * @return {string}
 */
proto.voice.Callback.prototype.getMachineDetection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.voice.Callback.prototype.setMachineDetection = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string machine_detection_timeout = 14;
 * @return {string}
 */
proto.voice.Callback.prototype.getMachineDetectionTimeout = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.voice.Callback.prototype.setMachineDetectionTimeout = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.voice.VoiceResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.voice.VoiceResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.voice.VoiceResponse.displayName = 'proto.voice.VoiceResponse';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.voice.VoiceResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.voice.VoiceResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.voice.VoiceResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.voice.VoiceResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    sid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    dateCreated: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dateUpdated: jspb.Message.getFieldWithDefault(msg, 3, ""),
    parentCallSid: jspb.Message.getFieldWithDefault(msg, 4, ""),
    accoundSid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    to: jspb.Message.getFieldWithDefault(msg, 6, ""),
    toFormatted: jspb.Message.getFieldWithDefault(msg, 7, ""),
    phoneNumberSid: jspb.Message.getFieldWithDefault(msg, 8, ""),
    status: jspb.Message.getFieldWithDefault(msg, 9, ""),
    startTime: jspb.Message.getFieldWithDefault(msg, 10, ""),
    endTime: jspb.Message.getFieldWithDefault(msg, 11, ""),
    duration: jspb.Message.getFieldWithDefault(msg, 12, 0),
    price: +jspb.Message.getFieldWithDefault(msg, 13, 0.0),
    direction: jspb.Message.getFieldWithDefault(msg, 14, ""),
    answeredBy: jspb.Message.getFieldWithDefault(msg, 15, ""),
    apiVersion: jspb.Message.getFieldWithDefault(msg, 16, ""),
    annotation: jspb.Message.getFieldWithDefault(msg, 17, ""),
    forwardedFrom: jspb.Message.getFieldWithDefault(msg, 20, ""),
    groupSid: jspb.Message.getFieldWithDefault(msg, 21, ""),
    callerName: jspb.Message.getFieldWithDefault(msg, 22, ""),
    uri: jspb.Message.getFieldWithDefault(msg, 23, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.voice.VoiceResponse}
 */
proto.voice.VoiceResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.voice.VoiceResponse;
  return proto.voice.VoiceResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.voice.VoiceResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.voice.VoiceResponse}
 */
proto.voice.VoiceResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateCreated(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDateUpdated(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentCallSid(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccoundSid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTo(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setToFormatted(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoneNumberSid(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatus(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setStartTime(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setEndTime(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDuration(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPrice(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setDirection(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnsweredBy(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setApiVersion(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setAnnotation(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setForwardedFrom(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupSid(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setCallerName(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.voice.VoiceResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.voice.VoiceResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.voice.VoiceResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.voice.VoiceResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDateCreated();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDateUpdated();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getParentCallSid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAccoundSid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getToFormatted();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPhoneNumberSid();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getStartTime();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getEndTime();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getDuration();
  if (f !== 0) {
    writer.writeInt64(
      12,
      f
    );
  }
  f = message.getPrice();
  if (f !== 0.0) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = message.getDirection();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getAnsweredBy();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getApiVersion();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getAnnotation();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getForwardedFrom();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getGroupSid();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getCallerName();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getUri();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
};


/**
 * optional string sid = 1;
 * @return {string}
 */
proto.voice.VoiceResponse.prototype.getSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.voice.VoiceResponse.prototype.setSid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string date_created = 2;
 * @return {string}
 */
proto.voice.VoiceResponse.prototype.getDateCreated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.voice.VoiceResponse.prototype.setDateCreated = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string date_updated = 3;
 * @return {string}
 */
proto.voice.VoiceResponse.prototype.getDateUpdated = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.voice.VoiceResponse.prototype.setDateUpdated = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string parent_call_sid = 4;
 * @return {string}
 */
proto.voice.VoiceResponse.prototype.getParentCallSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.voice.VoiceResponse.prototype.setParentCallSid = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string accound_sid = 5;
 * @return {string}
 */
proto.voice.VoiceResponse.prototype.getAccoundSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.voice.VoiceResponse.prototype.setAccoundSid = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string to = 6;
 * @return {string}
 */
proto.voice.VoiceResponse.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.voice.VoiceResponse.prototype.setTo = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string to_formatted = 7;
 * @return {string}
 */
proto.voice.VoiceResponse.prototype.getToFormatted = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.voice.VoiceResponse.prototype.setToFormatted = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string phone_number_sid = 8;
 * @return {string}
 */
proto.voice.VoiceResponse.prototype.getPhoneNumberSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.voice.VoiceResponse.prototype.setPhoneNumberSid = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string status = 9;
 * @return {string}
 */
proto.voice.VoiceResponse.prototype.getStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.voice.VoiceResponse.prototype.setStatus = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string start_time = 10;
 * @return {string}
 */
proto.voice.VoiceResponse.prototype.getStartTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.voice.VoiceResponse.prototype.setStartTime = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string end_time = 11;
 * @return {string}
 */
proto.voice.VoiceResponse.prototype.getEndTime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.voice.VoiceResponse.prototype.setEndTime = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional int64 duration = 12;
 * @return {number}
 */
proto.voice.VoiceResponse.prototype.getDuration = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.voice.VoiceResponse.prototype.setDuration = function(value) {
  jspb.Message.setProto3IntField(this, 12, value);
};


/**
 * optional float price = 13;
 * @return {number}
 */
proto.voice.VoiceResponse.prototype.getPrice = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 13, 0.0));
};


/** @param {number} value */
proto.voice.VoiceResponse.prototype.setPrice = function(value) {
  jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional string direction = 14;
 * @return {string}
 */
proto.voice.VoiceResponse.prototype.getDirection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.voice.VoiceResponse.prototype.setDirection = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string answered_by = 15;
 * @return {string}
 */
proto.voice.VoiceResponse.prototype.getAnsweredBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.voice.VoiceResponse.prototype.setAnsweredBy = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string api_version = 16;
 * @return {string}
 */
proto.voice.VoiceResponse.prototype.getApiVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.voice.VoiceResponse.prototype.setApiVersion = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string annotation = 17;
 * @return {string}
 */
proto.voice.VoiceResponse.prototype.getAnnotation = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.voice.VoiceResponse.prototype.setAnnotation = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string forwarded_from = 20;
 * @return {string}
 */
proto.voice.VoiceResponse.prototype.getForwardedFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.voice.VoiceResponse.prototype.setForwardedFrom = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string group_sid = 21;
 * @return {string}
 */
proto.voice.VoiceResponse.prototype.getGroupSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/** @param {string} value */
proto.voice.VoiceResponse.prototype.setGroupSid = function(value) {
  jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string caller_name = 22;
 * @return {string}
 */
proto.voice.VoiceResponse.prototype.getCallerName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/** @param {string} value */
proto.voice.VoiceResponse.prototype.setCallerName = function(value) {
  jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string uri = 23;
 * @return {string}
 */
proto.voice.VoiceResponse.prototype.getUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/** @param {string} value */
proto.voice.VoiceResponse.prototype.setUri = function(value) {
  jspb.Message.setProto3StringField(this, 23, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.voice.GetCallRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.voice.GetCallRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.voice.GetCallRequest.displayName = 'proto.voice.GetCallRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.voice.GetCallRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.voice.GetCallRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.voice.GetCallRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.voice.GetCallRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sid: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.voice.GetCallRequest}
 */
proto.voice.GetCallRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.voice.GetCallRequest;
  return proto.voice.GetCallRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.voice.GetCallRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.voice.GetCallRequest}
 */
proto.voice.GetCallRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.voice.GetCallRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.voice.GetCallRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.voice.GetCallRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.voice.GetCallRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string sid = 2;
 * @return {string}
 */
proto.voice.GetCallRequest.prototype.getSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.voice.GetCallRequest.prototype.setSid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.voice.CallWithCallbackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.voice.CallWithCallbackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.voice.CallWithCallbackRequest.displayName = 'proto.voice.CallWithCallbackRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.voice.CallWithCallbackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.voice.CallWithCallbackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.voice.CallWithCallbackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.voice.CallWithCallbackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    to: jspb.Message.getFieldWithDefault(msg, 1, ""),
    from: jspb.Message.getFieldWithDefault(msg, 2, ""),
    url: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.voice.CallWithCallbackRequest}
 */
proto.voice.CallWithCallbackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.voice.CallWithCallbackRequest;
  return proto.voice.CallWithCallbackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.voice.CallWithCallbackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.voice.CallWithCallbackRequest}
 */
proto.voice.CallWithCallbackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrom(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.voice.CallWithCallbackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.voice.CallWithCallbackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.voice.CallWithCallbackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.voice.CallWithCallbackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFrom();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string to = 1;
 * @return {string}
 */
proto.voice.CallWithCallbackRequest.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.voice.CallWithCallbackRequest.prototype.setTo = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string from = 2;
 * @return {string}
 */
proto.voice.CallWithCallbackRequest.prototype.getFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.voice.CallWithCallbackRequest.prototype.setFrom = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.voice.CallWithCallbackRequest.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.voice.CallWithCallbackRequest.prototype.setUrl = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.voice.CallWithApplication = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.voice.CallWithApplication, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.voice.CallWithApplication.displayName = 'proto.voice.CallWithApplication';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.voice.CallWithApplication.prototype.toObject = function(opt_includeInstance) {
  return proto.voice.CallWithApplication.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.voice.CallWithApplication} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.voice.CallWithApplication.toObject = function(includeInstance, msg) {
  var f, obj = {
    to: jspb.Message.getFieldWithDefault(msg, 1, ""),
    from: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sid: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.voice.CallWithApplication}
 */
proto.voice.CallWithApplication.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.voice.CallWithApplication;
  return proto.voice.CallWithApplication.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.voice.CallWithApplication} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.voice.CallWithApplication}
 */
proto.voice.CallWithApplication.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTo(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFrom(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.voice.CallWithApplication.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.voice.CallWithApplication.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.voice.CallWithApplication} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.voice.CallWithApplication.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTo();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFrom();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string to = 1;
 * @return {string}
 */
proto.voice.CallWithApplication.prototype.getTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.voice.CallWithApplication.prototype.setTo = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string from = 2;
 * @return {string}
 */
proto.voice.CallWithApplication.prototype.getFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.voice.CallWithApplication.prototype.setFrom = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string sid = 3;
 * @return {string}
 */
proto.voice.CallWithApplication.prototype.getSid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.voice.CallWithApplication.prototype.setSid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.voice);
