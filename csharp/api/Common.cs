// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common/common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Common {

  /// <summary>Holder for reflection information generated from common/common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for common/common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNjb21tb24vY29tbW9uLnByb3RvEgZjb21tb24iFgoGU3RyaW5nEgwKBHRl",
            "eHQYASABKAkiLgoLU3RyaW5nQXJyYXkSHwoHc3RyaW5ncxgBIAMoCzIOLmNv",
            "bW1vbi5TdHJpbmcigwEKCVN0cmluZ01hcBI0CgpzdHJpbmdfbWFwGAEgAygL",
            "MiAuY29tbW9uLlN0cmluZ01hcC5TdHJpbmdNYXBFbnRyeRpACg5TdHJpbmdN",
            "YXBFbnRyeRILCgNrZXkYASABKAkSHQoFdmFsdWUYAiABKAsyDi5jb21tb24u",
            "U3RyaW5nOgI4ASIHCgVFbXB0eSIoCgpJZGVudGlmaWVyEhoKAmlkGAEgASgL",
            "Mg4uY29tbW9uLlN0cmluZyIUCgVJbnQ2NBILCgNudW0YASABKAMiFgoHRmxv",
            "YXQ2NBILCgNudW0YASABKAEiugEKBVRva2VuEiQKDGFjY2Vzc190b2tlbhgB",
            "IAEoCzIOLmNvbW1vbi5TdHJpbmcSIgoKdG9rZW5fdHlwZRgCIAEoCzIOLmNv",
            "bW1vbi5TdHJpbmcSJQoNcmVmcmVzaF90b2tlbhgDIAEoCzIOLmNvbW1vbi5T",
            "dHJpbmcSHgoGZXhwaXJ5GAQgASgLMg4uY29tbW9uLlN0cmluZxIgCghpZF90",
            "b2tlbhgFIAEoCzIOLmNvbW1vbi5TdHJpbmcixgEKBkNvbmZpZxIhCgljbGll",
            "bnRfaWQYASABKAsyDi5jb21tb24uU3RyaW5nEiUKDWNsaWVudF9zZWNyZXQY",
            "AiABKAsyDi5jb21tb24uU3RyaW5nEiEKCXRva2VuX3VybBgDIAEoCzIOLmNv",
            "bW1vbi5TdHJpbmcSIwoGc2NvcGVzGAQgASgLMhMuY29tbW9uLlN0cmluZ0Fy",
            "cmF5EioKD2VuZHBvaW50X3BhcmFtcxgFIAEoCzIRLmNvbW1vbi5TdHJpbmdN",
            "YXAiLwoFRXZlbnQSJgoLYW5ub3RhdGlvbnMYCiABKAsyES5jb21tb24uU3Ry",
            "aW5nTWFwIkYKBVF1ZXJ5Eh0KBXF1ZXJ5GAQgASgLMg4uY29tbW9uLlN0cmlu",
            "ZxIeCgZmaWVsZHMYBSABKAsyDi5jb21tb24uU3RyaW5nInYKCFRva2VuU2V0",
            "EiwKBnRva2VucxgBIAMoCzIcLmNvbW1vbi5Ub2tlblNldC5Ub2tlbnNFbnRy",
            "eRo8CgtUb2tlbnNFbnRyeRILCgNrZXkYASABKAkSHAoFdmFsdWUYAiABKAsy",
            "DS5jb21tb24uVG9rZW46AjgBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.String), global::Common.String.Parser, new[]{ "Text" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.StringArray), global::Common.StringArray.Parser, new[]{ "Strings" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.StringMap), global::Common.StringMap.Parser, new[]{ "StringMap_" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Empty), global::Common.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Identifier), global::Common.Identifier.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Int64), global::Common.Int64.Parser, new[]{ "Num" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Float64), global::Common.Float64.Parser, new[]{ "Num" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Token), global::Common.Token.Parser, new[]{ "AccessToken", "TokenType", "RefreshToken", "Expiry", "IdToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Config), global::Common.Config.Parser, new[]{ "ClientId", "ClientSecret", "TokenUrl", "Scopes", "EndpointParams" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Event), global::Common.Event.Parser, new[]{ "Annotations" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Query), global::Common.Query.Parser, new[]{ "Query_", "Fields" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.TokenSet), global::Common.TokenSet.Parser, new[]{ "Tokens" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class String : pb::IMessage<String> {
    private static readonly pb::MessageParser<String> _parser = new pb::MessageParser<String>(() => new String());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<String> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public String() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public String(String other) : this() {
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public String Clone() {
      return new String(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as String);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(String other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(String other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StringArray : pb::IMessage<StringArray> {
    private static readonly pb::MessageParser<StringArray> _parser = new pb::MessageParser<StringArray>(() => new StringArray());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StringArray> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringArray() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringArray(StringArray other) : this() {
      strings_ = other.strings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringArray Clone() {
      return new StringArray(this);
    }

    /// <summary>Field number for the "strings" field.</summary>
    public const int StringsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Common.String> _repeated_strings_codec
        = pb::FieldCodec.ForMessage(10, global::Common.String.Parser);
    private readonly pbc::RepeatedField<global::Common.String> strings_ = new pbc::RepeatedField<global::Common.String>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Common.String> Strings {
      get { return strings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StringArray);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StringArray other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!strings_.Equals(other.strings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= strings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      strings_.WriteTo(output, _repeated_strings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += strings_.CalculateSize(_repeated_strings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StringArray other) {
      if (other == null) {
        return;
      }
      strings_.Add(other.strings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            strings_.AddEntriesFrom(input, _repeated_strings_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StringMap : pb::IMessage<StringMap> {
    private static readonly pb::MessageParser<StringMap> _parser = new pb::MessageParser<StringMap>(() => new StringMap());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StringMap> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringMap() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringMap(StringMap other) : this() {
      stringMap_ = other.stringMap_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringMap Clone() {
      return new StringMap(this);
    }

    /// <summary>Field number for the "string_map" field.</summary>
    public const int StringMap_FieldNumber = 1;
    private static readonly pbc::MapField<string, global::Common.String>.Codec _map_stringMap_codec
        = new pbc::MapField<string, global::Common.String>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Common.String.Parser), 10);
    private readonly pbc::MapField<string, global::Common.String> stringMap_ = new pbc::MapField<string, global::Common.String>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Common.String> StringMap_ {
      get { return stringMap_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StringMap);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StringMap other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!StringMap_.Equals(other.StringMap_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= StringMap_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      stringMap_.WriteTo(output, _map_stringMap_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += stringMap_.CalculateSize(_map_stringMap_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StringMap other) {
      if (other == null) {
        return;
      }
      stringMap_.Add(other.stringMap_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stringMap_.AddEntriesFrom(input, _map_stringMap_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class Identifier : pb::IMessage<Identifier> {
    private static readonly pb::MessageParser<Identifier> _parser = new pb::MessageParser<Identifier>(() => new Identifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Identifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identifier(Identifier other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identifier Clone() {
      return new Identifier(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Common.String id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Identifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Identifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Identifier other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::Common.String();
        }
        Id.MergeFrom(other.Id);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              id_ = new global::Common.String();
            }
            input.ReadMessage(id_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Int64 : pb::IMessage<Int64> {
    private static readonly pb::MessageParser<Int64> _parser = new pb::MessageParser<Int64>(() => new Int64());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Int64> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Int64() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Int64(Int64 other) : this() {
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Int64 Clone() {
      return new Int64(this);
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 1;
    private long num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Int64);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Int64 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Num != other.Num) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Num != 0L) hash ^= Num.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Num != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Num != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Num);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Int64 other) {
      if (other == null) {
        return;
      }
      if (other.Num != 0L) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Num = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Float64 : pb::IMessage<Float64> {
    private static readonly pb::MessageParser<Float64> _parser = new pb::MessageParser<Float64>(() => new Float64());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Float64> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Float64() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Float64(Float64 other) : this() {
      num_ = other.num_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Float64 Clone() {
      return new Float64(this);
    }

    /// <summary>Field number for the "num" field.</summary>
    public const int NumFieldNumber = 1;
    private double num_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Num {
      get { return num_; }
      set {
        num_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Float64);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Float64 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Num, other.Num)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Num != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Num);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Num != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Num);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Num != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Float64 other) {
      if (other == null) {
        return;
      }
      if (other.Num != 0D) {
        Num = other.Num;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Num = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Token : pb::IMessage<Token> {
    private static readonly pb::MessageParser<Token> _parser = new pb::MessageParser<Token>(() => new Token());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Token> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Token() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Token(Token other) : this() {
      accessToken_ = other.accessToken_ != null ? other.accessToken_.Clone() : null;
      tokenType_ = other.tokenType_ != null ? other.tokenType_.Clone() : null;
      refreshToken_ = other.refreshToken_ != null ? other.refreshToken_.Clone() : null;
      expiry_ = other.expiry_ != null ? other.expiry_.Clone() : null;
      idToken_ = other.idToken_ != null ? other.idToken_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Token Clone() {
      return new Token(this);
    }

    /// <summary>Field number for the "access_token" field.</summary>
    public const int AccessTokenFieldNumber = 1;
    private global::Common.String accessToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = value;
      }
    }

    /// <summary>Field number for the "token_type" field.</summary>
    public const int TokenTypeFieldNumber = 2;
    private global::Common.String tokenType_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String TokenType {
      get { return tokenType_; }
      set {
        tokenType_ = value;
      }
    }

    /// <summary>Field number for the "refresh_token" field.</summary>
    public const int RefreshTokenFieldNumber = 3;
    private global::Common.String refreshToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String RefreshToken {
      get { return refreshToken_; }
      set {
        refreshToken_ = value;
      }
    }

    /// <summary>Field number for the "expiry" field.</summary>
    public const int ExpiryFieldNumber = 4;
    private global::Common.String expiry_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Expiry {
      get { return expiry_; }
      set {
        expiry_ = value;
      }
    }

    /// <summary>Field number for the "id_token" field.</summary>
    public const int IdTokenFieldNumber = 5;
    private global::Common.String idToken_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String IdToken {
      get { return idToken_; }
      set {
        idToken_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Token);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Token other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(AccessToken, other.AccessToken)) return false;
      if (!object.Equals(TokenType, other.TokenType)) return false;
      if (!object.Equals(RefreshToken, other.RefreshToken)) return false;
      if (!object.Equals(Expiry, other.Expiry)) return false;
      if (!object.Equals(IdToken, other.IdToken)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (accessToken_ != null) hash ^= AccessToken.GetHashCode();
      if (tokenType_ != null) hash ^= TokenType.GetHashCode();
      if (refreshToken_ != null) hash ^= RefreshToken.GetHashCode();
      if (expiry_ != null) hash ^= Expiry.GetHashCode();
      if (idToken_ != null) hash ^= IdToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (accessToken_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(AccessToken);
      }
      if (tokenType_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(TokenType);
      }
      if (refreshToken_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RefreshToken);
      }
      if (expiry_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Expiry);
      }
      if (idToken_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(IdToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (accessToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccessToken);
      }
      if (tokenType_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenType);
      }
      if (refreshToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RefreshToken);
      }
      if (expiry_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Expiry);
      }
      if (idToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IdToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Token other) {
      if (other == null) {
        return;
      }
      if (other.accessToken_ != null) {
        if (accessToken_ == null) {
          accessToken_ = new global::Common.String();
        }
        AccessToken.MergeFrom(other.AccessToken);
      }
      if (other.tokenType_ != null) {
        if (tokenType_ == null) {
          tokenType_ = new global::Common.String();
        }
        TokenType.MergeFrom(other.TokenType);
      }
      if (other.refreshToken_ != null) {
        if (refreshToken_ == null) {
          refreshToken_ = new global::Common.String();
        }
        RefreshToken.MergeFrom(other.RefreshToken);
      }
      if (other.expiry_ != null) {
        if (expiry_ == null) {
          expiry_ = new global::Common.String();
        }
        Expiry.MergeFrom(other.Expiry);
      }
      if (other.idToken_ != null) {
        if (idToken_ == null) {
          idToken_ = new global::Common.String();
        }
        IdToken.MergeFrom(other.IdToken);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (accessToken_ == null) {
              accessToken_ = new global::Common.String();
            }
            input.ReadMessage(accessToken_);
            break;
          }
          case 18: {
            if (tokenType_ == null) {
              tokenType_ = new global::Common.String();
            }
            input.ReadMessage(tokenType_);
            break;
          }
          case 26: {
            if (refreshToken_ == null) {
              refreshToken_ = new global::Common.String();
            }
            input.ReadMessage(refreshToken_);
            break;
          }
          case 34: {
            if (expiry_ == null) {
              expiry_ = new global::Common.String();
            }
            input.ReadMessage(expiry_);
            break;
          }
          case 42: {
            if (idToken_ == null) {
              idToken_ = new global::Common.String();
            }
            input.ReadMessage(idToken_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Config : pb::IMessage<Config> {
    private static readonly pb::MessageParser<Config> _parser = new pb::MessageParser<Config>(() => new Config());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Config> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config(Config other) : this() {
      clientId_ = other.clientId_ != null ? other.clientId_.Clone() : null;
      clientSecret_ = other.clientSecret_ != null ? other.clientSecret_.Clone() : null;
      tokenUrl_ = other.tokenUrl_ != null ? other.tokenUrl_.Clone() : null;
      scopes_ = other.scopes_ != null ? other.scopes_.Clone() : null;
      endpointParams_ = other.endpointParams_ != null ? other.endpointParams_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Config Clone() {
      return new Config(this);
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private global::Common.String clientId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String ClientId {
      get { return clientId_; }
      set {
        clientId_ = value;
      }
    }

    /// <summary>Field number for the "client_secret" field.</summary>
    public const int ClientSecretFieldNumber = 2;
    private global::Common.String clientSecret_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String ClientSecret {
      get { return clientSecret_; }
      set {
        clientSecret_ = value;
      }
    }

    /// <summary>Field number for the "token_url" field.</summary>
    public const int TokenUrlFieldNumber = 3;
    private global::Common.String tokenUrl_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String TokenUrl {
      get { return tokenUrl_; }
      set {
        tokenUrl_ = value;
      }
    }

    /// <summary>Field number for the "scopes" field.</summary>
    public const int ScopesFieldNumber = 4;
    private global::Common.StringArray scopes_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.StringArray Scopes {
      get { return scopes_; }
      set {
        scopes_ = value;
      }
    }

    /// <summary>Field number for the "endpoint_params" field.</summary>
    public const int EndpointParamsFieldNumber = 5;
    private global::Common.StringMap endpointParams_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.StringMap EndpointParams {
      get { return endpointParams_; }
      set {
        endpointParams_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Config);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Config other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ClientId, other.ClientId)) return false;
      if (!object.Equals(ClientSecret, other.ClientSecret)) return false;
      if (!object.Equals(TokenUrl, other.TokenUrl)) return false;
      if (!object.Equals(Scopes, other.Scopes)) return false;
      if (!object.Equals(EndpointParams, other.EndpointParams)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (clientId_ != null) hash ^= ClientId.GetHashCode();
      if (clientSecret_ != null) hash ^= ClientSecret.GetHashCode();
      if (tokenUrl_ != null) hash ^= TokenUrl.GetHashCode();
      if (scopes_ != null) hash ^= Scopes.GetHashCode();
      if (endpointParams_ != null) hash ^= EndpointParams.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (clientId_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ClientId);
      }
      if (clientSecret_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ClientSecret);
      }
      if (tokenUrl_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(TokenUrl);
      }
      if (scopes_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Scopes);
      }
      if (endpointParams_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(EndpointParams);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (clientId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientId);
      }
      if (clientSecret_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClientSecret);
      }
      if (tokenUrl_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TokenUrl);
      }
      if (scopes_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scopes);
      }
      if (endpointParams_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EndpointParams);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Config other) {
      if (other == null) {
        return;
      }
      if (other.clientId_ != null) {
        if (clientId_ == null) {
          clientId_ = new global::Common.String();
        }
        ClientId.MergeFrom(other.ClientId);
      }
      if (other.clientSecret_ != null) {
        if (clientSecret_ == null) {
          clientSecret_ = new global::Common.String();
        }
        ClientSecret.MergeFrom(other.ClientSecret);
      }
      if (other.tokenUrl_ != null) {
        if (tokenUrl_ == null) {
          tokenUrl_ = new global::Common.String();
        }
        TokenUrl.MergeFrom(other.TokenUrl);
      }
      if (other.scopes_ != null) {
        if (scopes_ == null) {
          scopes_ = new global::Common.StringArray();
        }
        Scopes.MergeFrom(other.Scopes);
      }
      if (other.endpointParams_ != null) {
        if (endpointParams_ == null) {
          endpointParams_ = new global::Common.StringMap();
        }
        EndpointParams.MergeFrom(other.EndpointParams);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (clientId_ == null) {
              clientId_ = new global::Common.String();
            }
            input.ReadMessage(clientId_);
            break;
          }
          case 18: {
            if (clientSecret_ == null) {
              clientSecret_ = new global::Common.String();
            }
            input.ReadMessage(clientSecret_);
            break;
          }
          case 26: {
            if (tokenUrl_ == null) {
              tokenUrl_ = new global::Common.String();
            }
            input.ReadMessage(tokenUrl_);
            break;
          }
          case 34: {
            if (scopes_ == null) {
              scopes_ = new global::Common.StringArray();
            }
            input.ReadMessage(scopes_);
            break;
          }
          case 42: {
            if (endpointParams_ == null) {
              endpointParams_ = new global::Common.StringMap();
            }
            input.ReadMessage(endpointParams_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Event : pb::IMessage<Event> {
    private static readonly pb::MessageParser<Event> _parser = new pb::MessageParser<Event>(() => new Event());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Event> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event(Event other) : this() {
      annotations_ = other.annotations_ != null ? other.annotations_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Event Clone() {
      return new Event(this);
    }

    /// <summary>Field number for the "annotations" field.</summary>
    public const int AnnotationsFieldNumber = 10;
    private global::Common.StringMap annotations_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.StringMap Annotations {
      get { return annotations_; }
      set {
        annotations_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Event);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Event other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Annotations, other.Annotations)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (annotations_ != null) hash ^= Annotations.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (annotations_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(Annotations);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (annotations_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Annotations);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Event other) {
      if (other == null) {
        return;
      }
      if (other.annotations_ != null) {
        if (annotations_ == null) {
          annotations_ = new global::Common.StringMap();
        }
        Annotations.MergeFrom(other.Annotations);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            if (annotations_ == null) {
              annotations_ = new global::Common.StringMap();
            }
            input.ReadMessage(annotations_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Query : pb::IMessage<Query> {
    private static readonly pb::MessageParser<Query> _parser = new pb::MessageParser<Query>(() => new Query());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Query> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query(Query other) : this() {
      query_ = other.query_ != null ? other.query_.Clone() : null;
      fields_ = other.fields_ != null ? other.fields_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Query Clone() {
      return new Query(this);
    }

    /// <summary>Field number for the "query" field.</summary>
    public const int Query_FieldNumber = 4;
    private global::Common.String query_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Query_ {
      get { return query_; }
      set {
        query_ = value;
      }
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 5;
    private global::Common.String fields_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Common.String Fields {
      get { return fields_; }
      set {
        fields_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Query);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Query other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Query_, other.Query_)) return false;
      if (!object.Equals(Fields, other.Fields)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (query_ != null) hash ^= Query_.GetHashCode();
      if (fields_ != null) hash ^= Fields.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (query_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Query_);
      }
      if (fields_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Fields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (query_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Query_);
      }
      if (fields_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Fields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Query other) {
      if (other == null) {
        return;
      }
      if (other.query_ != null) {
        if (query_ == null) {
          query_ = new global::Common.String();
        }
        Query_.MergeFrom(other.Query_);
      }
      if (other.fields_ != null) {
        if (fields_ == null) {
          fields_ = new global::Common.String();
        }
        Fields.MergeFrom(other.Fields);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 34: {
            if (query_ == null) {
              query_ = new global::Common.String();
            }
            input.ReadMessage(query_);
            break;
          }
          case 42: {
            if (fields_ == null) {
              fields_ = new global::Common.String();
            }
            input.ReadMessage(fields_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TokenSet : pb::IMessage<TokenSet> {
    private static readonly pb::MessageParser<TokenSet> _parser = new pb::MessageParser<TokenSet>(() => new TokenSet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TokenSet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenSet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenSet(TokenSet other) : this() {
      tokens_ = other.tokens_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TokenSet Clone() {
      return new TokenSet(this);
    }

    /// <summary>Field number for the "tokens" field.</summary>
    public const int TokensFieldNumber = 1;
    private static readonly pbc::MapField<string, global::Common.Token>.Codec _map_tokens_codec
        = new pbc::MapField<string, global::Common.Token>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::Common.Token.Parser), 10);
    private readonly pbc::MapField<string, global::Common.Token> tokens_ = new pbc::MapField<string, global::Common.Token>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::Common.Token> Tokens {
      get { return tokens_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TokenSet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TokenSet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Tokens.Equals(other.Tokens)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Tokens.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      tokens_.WriteTo(output, _map_tokens_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += tokens_.CalculateSize(_map_tokens_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TokenSet other) {
      if (other == null) {
        return;
      }
      tokens_.Add(other.tokens_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tokens_.AddEntriesFrom(input, _map_tokens_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
