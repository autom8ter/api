// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common/common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Common {

  /// <summary>Holder for reflection information generated from common/common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for common/common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNjb21tb24vY29tbW9uLnByb3RvEgZjb21tb24aGWdvb2dsZS9wcm90b2J1",
            "Zi9hbnkucHJvdG8aH2dvb2dsZS9wcm90b2J1Zi90aW1lc3RhbXAucHJvdG8i",
            "lwEKBkNvbW1vbhISCgppZGVudGlmaWVyGAEgASgJEiQKBm9iamVjdBgCIAEo",
            "CzIULmdvb2dsZS5wcm90b2J1Zi5BbnkSJgoEbWV0YRgDIAMoCzIYLmNvbW1v",
            "bi5Db21tb24uTWV0YUVudHJ5GisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkS",
            "DQoFdmFsdWUYAiABKAk6AjgBIhkKCVBsYWluVGV4dBIMCgR0ZXh0GAEgASgJ",
            "IocBCgZPQXV0aDISEQoJY2xpZW50X2lkGAEgASgJEhUKDWNsaWVudF9zZWNy",
            "ZXQYAiABKAkSEQoJdG9rZW5fdXJsGAMgASgJEhAKCGF1dGhfdXJsGAQgASgJ",
            "Eg4KBnNjb3BlcxgFIAMoCRIQCghyZWRpcmVjdBgGIAEoCRIMCgRjb2RlGAcg",
            "ASgJIt8BChFDbGllbnRDcmVkZW50aWFscxIRCgljbGllbnRfaWQYASABKAkS",
            "FQoNY2xpZW50X3NlY3JldBgCIAEoCRIRCgl0b2tlbl91cmwYAyABKAkSDgoG",
            "c2NvcGVzGAQgAygJEkYKD2VuZHBvaW50X3BhcmFtcxgFIAMoCzItLmNvbW1v",
            "bi5DbGllbnRDcmVkZW50aWFscy5FbmRwb2ludFBhcmFtc0VudHJ5GjUKE0Vu",
            "ZHBvaW50UGFyYW1zRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJ",
            "OgI4ASKyAQoDSldUEg0KBWVtYWlsGAEgASgJEhMKC3ByaXZhdGVfa2V5GAIg",
            "ASgMEhQKDHByaXZlX2tleV9pZBgDIAEoCRIPCgdzdWJqZWN0GAQgASgJEg4K",
            "BnNjb3BlcxgFIAMoCRIRCgl0b2tlbl91cmwYBiABKAkSKwoHZXhwaXJlcxgH",
            "IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEAoIYXVkaWVuY2UY",
            "CCABKAkiJwoVRGVmYXVsdEdDUENyZWRlbnRpYWxzEg4KBnNjb3BlcxgBIAMo",
            "CSJXCgtKU09OV2ViS2V5cxILCgNrdHkYASABKAkSCwoDa2lkGAIgASgJEgsK",
            "A3VzZRgDIAEoCRIJCgFuGAQgASgJEgkKAWUYBSABKAkSCwoDeDVjGAYgAygJ",
            "IikKBEp3a3MSIQoEa2V5cxgBIAMoCzITLmNvbW1vbi5KU09OV2ViS2V5cyK8",
            "AgoISFRUUFRhc2sSCwoDdXJsGAEgASgJEg4KBm1ldGhvZBgCIAEoCRIuCgdo",
            "ZWFkZXJzGAMgAygLMh0uY29tbW9uLkhUVFBUYXNrLkhlYWRlcnNFbnRyeRIo",
            "CgRmb3JtGAQgAygLMhouY29tbW9uLkhUVFBUYXNrLkZvcm1FbnRyeRIQCgh1",
            "c2VybmFtZRgFIAEoCRIQCghwYXNzd29yZBgGIAEoCRIiCgRib2R5GAcgASgL",
            "MhQuZ29vZ2xlLnByb3RvYnVmLkFueRIUCgxjYWxsYmFja191cmwYCCABKAka",
            "LgoMSGVhZGVyc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToC",
            "OAEaKwoJRm9ybUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToC",
            "OAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Common), global::Common.Common.Parser, new[]{ "Identifier", "Object", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.PlainText), global::Common.PlainText.Parser, new[]{ "Text" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.OAuth2), global::Common.OAuth2.Parser, new[]{ "ClientId", "ClientSecret", "TokenUrl", "AuthUrl", "Scopes", "Redirect", "Code" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.ClientCredentials), global::Common.ClientCredentials.Parser, new[]{ "ClientId", "ClientSecret", "TokenUrl", "Scopes", "EndpointParams" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.JWT), global::Common.JWT.Parser, new[]{ "Email", "PrivateKey", "PriveKeyId", "Subject", "Scopes", "TokenUrl", "Expires", "Audience" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.DefaultGCPCredentials), global::Common.DefaultGCPCredentials.Parser, new[]{ "Scopes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.JSONWebKeys), global::Common.JSONWebKeys.Parser, new[]{ "Kty", "Kid", "Use", "N", "E", "X5C" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.Jwks), global::Common.Jwks.Parser, new[]{ "Keys" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Common.HTTPTask), global::Common.HTTPTask.Parser, new[]{ "Url", "Method", "Headers", "Form", "Username", "Password", "Body", "CallbackUrl" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Common : pb::IMessage<Common> {
    private static readonly pb::MessageParser<Common> _parser = new pb::MessageParser<Common>(() => new Common());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Common> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Common() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Common(Common other) : this() {
      identifier_ = other.identifier_;
      object_ = other.object_ != null ? other.object_.Clone() : null;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Common Clone() {
      return new Common(this);
    }

    /// <summary>Field number for the "identifier" field.</summary>
    public const int IdentifierFieldNumber = 1;
    private string identifier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Identifier {
      get { return identifier_; }
      set {
        identifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "object" field.</summary>
    public const int ObjectFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Any object_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Object {
      get { return object_; }
      set {
        object_ = value;
      }
    }

    /// <summary>Field number for the "meta" field.</summary>
    public const int MetaFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Common);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Common other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Identifier != other.Identifier) return false;
      if (!object.Equals(Object, other.Object)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Identifier.Length != 0) hash ^= Identifier.GetHashCode();
      if (object_ != null) hash ^= Object.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Identifier.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Identifier);
      }
      if (object_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Object);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Identifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Identifier);
      }
      if (object_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Object);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Common other) {
      if (other == null) {
        return;
      }
      if (other.Identifier.Length != 0) {
        Identifier = other.Identifier;
      }
      if (other.object_ != null) {
        if (object_ == null) {
          object_ = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Object.MergeFrom(other.Object);
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Identifier = input.ReadString();
            break;
          }
          case 18: {
            if (object_ == null) {
              object_ = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(object_);
            break;
          }
          case 26: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlainText : pb::IMessage<PlainText> {
    private static readonly pb::MessageParser<PlainText> _parser = new pb::MessageParser<PlainText>(() => new PlainText());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlainText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlainText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlainText(PlainText other) : this() {
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlainText Clone() {
      return new PlainText(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlainText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlainText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlainText other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class OAuth2 : pb::IMessage<OAuth2> {
    private static readonly pb::MessageParser<OAuth2> _parser = new pb::MessageParser<OAuth2>(() => new OAuth2());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OAuth2> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OAuth2() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OAuth2(OAuth2 other) : this() {
      clientId_ = other.clientId_;
      clientSecret_ = other.clientSecret_;
      tokenUrl_ = other.tokenUrl_;
      authUrl_ = other.authUrl_;
      scopes_ = other.scopes_.Clone();
      redirect_ = other.redirect_;
      code_ = other.code_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OAuth2 Clone() {
      return new OAuth2(this);
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_secret" field.</summary>
    public const int ClientSecretFieldNumber = 2;
    private string clientSecret_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientSecret {
      get { return clientSecret_; }
      set {
        clientSecret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token_url" field.</summary>
    public const int TokenUrlFieldNumber = 3;
    private string tokenUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TokenUrl {
      get { return tokenUrl_; }
      set {
        tokenUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "auth_url" field.</summary>
    public const int AuthUrlFieldNumber = 4;
    private string authUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthUrl {
      get { return authUrl_; }
      set {
        authUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scopes" field.</summary>
    public const int ScopesFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_scopes_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> scopes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Scopes {
      get { return scopes_; }
    }

    /// <summary>Field number for the "redirect" field.</summary>
    public const int RedirectFieldNumber = 6;
    private string redirect_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Redirect {
      get { return redirect_; }
      set {
        redirect_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 7;
    private string code_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OAuth2);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OAuth2 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (ClientSecret != other.ClientSecret) return false;
      if (TokenUrl != other.TokenUrl) return false;
      if (AuthUrl != other.AuthUrl) return false;
      if(!scopes_.Equals(other.scopes_)) return false;
      if (Redirect != other.Redirect) return false;
      if (Code != other.Code) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (ClientSecret.Length != 0) hash ^= ClientSecret.GetHashCode();
      if (TokenUrl.Length != 0) hash ^= TokenUrl.GetHashCode();
      if (AuthUrl.Length != 0) hash ^= AuthUrl.GetHashCode();
      hash ^= scopes_.GetHashCode();
      if (Redirect.Length != 0) hash ^= Redirect.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (ClientSecret.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientSecret);
      }
      if (TokenUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TokenUrl);
      }
      if (AuthUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(AuthUrl);
      }
      scopes_.WriteTo(output, _repeated_scopes_codec);
      if (Redirect.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Redirect);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Code);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (ClientSecret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientSecret);
      }
      if (TokenUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TokenUrl);
      }
      if (AuthUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthUrl);
      }
      size += scopes_.CalculateSize(_repeated_scopes_codec);
      if (Redirect.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Redirect);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Code);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OAuth2 other) {
      if (other == null) {
        return;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.ClientSecret.Length != 0) {
        ClientSecret = other.ClientSecret;
      }
      if (other.TokenUrl.Length != 0) {
        TokenUrl = other.TokenUrl;
      }
      if (other.AuthUrl.Length != 0) {
        AuthUrl = other.AuthUrl;
      }
      scopes_.Add(other.scopes_);
      if (other.Redirect.Length != 0) {
        Redirect = other.Redirect;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 18: {
            ClientSecret = input.ReadString();
            break;
          }
          case 26: {
            TokenUrl = input.ReadString();
            break;
          }
          case 34: {
            AuthUrl = input.ReadString();
            break;
          }
          case 42: {
            scopes_.AddEntriesFrom(input, _repeated_scopes_codec);
            break;
          }
          case 50: {
            Redirect = input.ReadString();
            break;
          }
          case 58: {
            Code = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ClientCredentials : pb::IMessage<ClientCredentials> {
    private static readonly pb::MessageParser<ClientCredentials> _parser = new pb::MessageParser<ClientCredentials>(() => new ClientCredentials());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClientCredentials> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientCredentials() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientCredentials(ClientCredentials other) : this() {
      clientId_ = other.clientId_;
      clientSecret_ = other.clientSecret_;
      tokenUrl_ = other.tokenUrl_;
      scopes_ = other.scopes_.Clone();
      endpointParams_ = other.endpointParams_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClientCredentials Clone() {
      return new ClientCredentials(this);
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_secret" field.</summary>
    public const int ClientSecretFieldNumber = 2;
    private string clientSecret_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientSecret {
      get { return clientSecret_; }
      set {
        clientSecret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "token_url" field.</summary>
    public const int TokenUrlFieldNumber = 3;
    private string tokenUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TokenUrl {
      get { return tokenUrl_; }
      set {
        tokenUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scopes" field.</summary>
    public const int ScopesFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_scopes_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> scopes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Scopes {
      get { return scopes_; }
    }

    /// <summary>Field number for the "endpoint_params" field.</summary>
    public const int EndpointParamsFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_endpointParams_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 42);
    private readonly pbc::MapField<string, string> endpointParams_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> EndpointParams {
      get { return endpointParams_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClientCredentials);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClientCredentials other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (ClientSecret != other.ClientSecret) return false;
      if (TokenUrl != other.TokenUrl) return false;
      if(!scopes_.Equals(other.scopes_)) return false;
      if (!EndpointParams.Equals(other.EndpointParams)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (ClientSecret.Length != 0) hash ^= ClientSecret.GetHashCode();
      if (TokenUrl.Length != 0) hash ^= TokenUrl.GetHashCode();
      hash ^= scopes_.GetHashCode();
      hash ^= EndpointParams.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (ClientSecret.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientSecret);
      }
      if (TokenUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TokenUrl);
      }
      scopes_.WriteTo(output, _repeated_scopes_codec);
      endpointParams_.WriteTo(output, _map_endpointParams_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (ClientSecret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientSecret);
      }
      if (TokenUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TokenUrl);
      }
      size += scopes_.CalculateSize(_repeated_scopes_codec);
      size += endpointParams_.CalculateSize(_map_endpointParams_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClientCredentials other) {
      if (other == null) {
        return;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.ClientSecret.Length != 0) {
        ClientSecret = other.ClientSecret;
      }
      if (other.TokenUrl.Length != 0) {
        TokenUrl = other.TokenUrl;
      }
      scopes_.Add(other.scopes_);
      endpointParams_.Add(other.endpointParams_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 18: {
            ClientSecret = input.ReadString();
            break;
          }
          case 26: {
            TokenUrl = input.ReadString();
            break;
          }
          case 34: {
            scopes_.AddEntriesFrom(input, _repeated_scopes_codec);
            break;
          }
          case 42: {
            endpointParams_.AddEntriesFrom(input, _map_endpointParams_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class JWT : pb::IMessage<JWT> {
    private static readonly pb::MessageParser<JWT> _parser = new pb::MessageParser<JWT>(() => new JWT());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JWT> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JWT() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JWT(JWT other) : this() {
      email_ = other.email_;
      privateKey_ = other.privateKey_;
      priveKeyId_ = other.priveKeyId_;
      subject_ = other.subject_;
      scopes_ = other.scopes_.Clone();
      tokenUrl_ = other.tokenUrl_;
      expires_ = other.expires_ != null ? other.expires_.Clone() : null;
      audience_ = other.audience_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JWT Clone() {
      return new JWT(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "private_key" field.</summary>
    public const int PrivateKeyFieldNumber = 2;
    private pb::ByteString privateKey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PrivateKey {
      get { return privateKey_; }
      set {
        privateKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "prive_key_id" field.</summary>
    public const int PriveKeyIdFieldNumber = 3;
    private string priveKeyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PriveKeyId {
      get { return priveKeyId_; }
      set {
        priveKeyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 4;
    private string subject_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subject {
      get { return subject_; }
      set {
        subject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scopes" field.</summary>
    public const int ScopesFieldNumber = 5;
    private static readonly pb::FieldCodec<string> _repeated_scopes_codec
        = pb::FieldCodec.ForString(42);
    private readonly pbc::RepeatedField<string> scopes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Scopes {
      get { return scopes_; }
    }

    /// <summary>Field number for the "token_url" field.</summary>
    public const int TokenUrlFieldNumber = 6;
    private string tokenUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TokenUrl {
      get { return tokenUrl_; }
      set {
        tokenUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expires" field.</summary>
    public const int ExpiresFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Timestamp expires_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Expires {
      get { return expires_; }
      set {
        expires_ = value;
      }
    }

    /// <summary>Field number for the "audience" field.</summary>
    public const int AudienceFieldNumber = 8;
    private string audience_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Audience {
      get { return audience_; }
      set {
        audience_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JWT);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JWT other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      if (PrivateKey != other.PrivateKey) return false;
      if (PriveKeyId != other.PriveKeyId) return false;
      if (Subject != other.Subject) return false;
      if(!scopes_.Equals(other.scopes_)) return false;
      if (TokenUrl != other.TokenUrl) return false;
      if (!object.Equals(Expires, other.Expires)) return false;
      if (Audience != other.Audience) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (PrivateKey.Length != 0) hash ^= PrivateKey.GetHashCode();
      if (PriveKeyId.Length != 0) hash ^= PriveKeyId.GetHashCode();
      if (Subject.Length != 0) hash ^= Subject.GetHashCode();
      hash ^= scopes_.GetHashCode();
      if (TokenUrl.Length != 0) hash ^= TokenUrl.GetHashCode();
      if (expires_ != null) hash ^= Expires.GetHashCode();
      if (Audience.Length != 0) hash ^= Audience.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (PrivateKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(PrivateKey);
      }
      if (PriveKeyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PriveKeyId);
      }
      if (Subject.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Subject);
      }
      scopes_.WriteTo(output, _repeated_scopes_codec);
      if (TokenUrl.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TokenUrl);
      }
      if (expires_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Expires);
      }
      if (Audience.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Audience);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (PrivateKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PrivateKey);
      }
      if (PriveKeyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PriveKeyId);
      }
      if (Subject.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
      }
      size += scopes_.CalculateSize(_repeated_scopes_codec);
      if (TokenUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TokenUrl);
      }
      if (expires_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Expires);
      }
      if (Audience.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Audience);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JWT other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.PrivateKey.Length != 0) {
        PrivateKey = other.PrivateKey;
      }
      if (other.PriveKeyId.Length != 0) {
        PriveKeyId = other.PriveKeyId;
      }
      if (other.Subject.Length != 0) {
        Subject = other.Subject;
      }
      scopes_.Add(other.scopes_);
      if (other.TokenUrl.Length != 0) {
        TokenUrl = other.TokenUrl;
      }
      if (other.expires_ != null) {
        if (expires_ == null) {
          expires_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Expires.MergeFrom(other.Expires);
      }
      if (other.Audience.Length != 0) {
        Audience = other.Audience;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 18: {
            PrivateKey = input.ReadBytes();
            break;
          }
          case 26: {
            PriveKeyId = input.ReadString();
            break;
          }
          case 34: {
            Subject = input.ReadString();
            break;
          }
          case 42: {
            scopes_.AddEntriesFrom(input, _repeated_scopes_codec);
            break;
          }
          case 50: {
            TokenUrl = input.ReadString();
            break;
          }
          case 58: {
            if (expires_ == null) {
              expires_ = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(expires_);
            break;
          }
          case 66: {
            Audience = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DefaultGCPCredentials : pb::IMessage<DefaultGCPCredentials> {
    private static readonly pb::MessageParser<DefaultGCPCredentials> _parser = new pb::MessageParser<DefaultGCPCredentials>(() => new DefaultGCPCredentials());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DefaultGCPCredentials> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefaultGCPCredentials() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefaultGCPCredentials(DefaultGCPCredentials other) : this() {
      scopes_ = other.scopes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DefaultGCPCredentials Clone() {
      return new DefaultGCPCredentials(this);
    }

    /// <summary>Field number for the "scopes" field.</summary>
    public const int ScopesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_scopes_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> scopes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Scopes {
      get { return scopes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DefaultGCPCredentials);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DefaultGCPCredentials other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!scopes_.Equals(other.scopes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= scopes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      scopes_.WriteTo(output, _repeated_scopes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += scopes_.CalculateSize(_repeated_scopes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DefaultGCPCredentials other) {
      if (other == null) {
        return;
      }
      scopes_.Add(other.scopes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            scopes_.AddEntriesFrom(input, _repeated_scopes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class JSONWebKeys : pb::IMessage<JSONWebKeys> {
    private static readonly pb::MessageParser<JSONWebKeys> _parser = new pb::MessageParser<JSONWebKeys>(() => new JSONWebKeys());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JSONWebKeys> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JSONWebKeys() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JSONWebKeys(JSONWebKeys other) : this() {
      kty_ = other.kty_;
      kid_ = other.kid_;
      use_ = other.use_;
      n_ = other.n_;
      e_ = other.e_;
      x5C_ = other.x5C_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JSONWebKeys Clone() {
      return new JSONWebKeys(this);
    }

    /// <summary>Field number for the "kty" field.</summary>
    public const int KtyFieldNumber = 1;
    private string kty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Kty {
      get { return kty_; }
      set {
        kty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "kid" field.</summary>
    public const int KidFieldNumber = 2;
    private string kid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Kid {
      get { return kid_; }
      set {
        kid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use" field.</summary>
    public const int UseFieldNumber = 3;
    private string use_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Use {
      get { return use_; }
      set {
        use_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "n" field.</summary>
    public const int NFieldNumber = 4;
    private string n_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string N {
      get { return n_; }
      set {
        n_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "e" field.</summary>
    public const int EFieldNumber = 5;
    private string e_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string E {
      get { return e_; }
      set {
        e_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x5c" field.</summary>
    public const int X5CFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_x5C_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> x5C_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> X5C {
      get { return x5C_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JSONWebKeys);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JSONWebKeys other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Kty != other.Kty) return false;
      if (Kid != other.Kid) return false;
      if (Use != other.Use) return false;
      if (N != other.N) return false;
      if (E != other.E) return false;
      if(!x5C_.Equals(other.x5C_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Kty.Length != 0) hash ^= Kty.GetHashCode();
      if (Kid.Length != 0) hash ^= Kid.GetHashCode();
      if (Use.Length != 0) hash ^= Use.GetHashCode();
      if (N.Length != 0) hash ^= N.GetHashCode();
      if (E.Length != 0) hash ^= E.GetHashCode();
      hash ^= x5C_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Kty.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Kty);
      }
      if (Kid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Kid);
      }
      if (Use.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Use);
      }
      if (N.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(N);
      }
      if (E.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(E);
      }
      x5C_.WriteTo(output, _repeated_x5C_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Kty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Kty);
      }
      if (Kid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Kid);
      }
      if (Use.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Use);
      }
      if (N.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(N);
      }
      if (E.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(E);
      }
      size += x5C_.CalculateSize(_repeated_x5C_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JSONWebKeys other) {
      if (other == null) {
        return;
      }
      if (other.Kty.Length != 0) {
        Kty = other.Kty;
      }
      if (other.Kid.Length != 0) {
        Kid = other.Kid;
      }
      if (other.Use.Length != 0) {
        Use = other.Use;
      }
      if (other.N.Length != 0) {
        N = other.N;
      }
      if (other.E.Length != 0) {
        E = other.E;
      }
      x5C_.Add(other.x5C_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Kty = input.ReadString();
            break;
          }
          case 18: {
            Kid = input.ReadString();
            break;
          }
          case 26: {
            Use = input.ReadString();
            break;
          }
          case 34: {
            N = input.ReadString();
            break;
          }
          case 42: {
            E = input.ReadString();
            break;
          }
          case 50: {
            x5C_.AddEntriesFrom(input, _repeated_x5C_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Jwks : pb::IMessage<Jwks> {
    private static readonly pb::MessageParser<Jwks> _parser = new pb::MessageParser<Jwks>(() => new Jwks());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Jwks> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Jwks() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Jwks(Jwks other) : this() {
      keys_ = other.keys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Jwks Clone() {
      return new Jwks(this);
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Common.JSONWebKeys> _repeated_keys_codec
        = pb::FieldCodec.ForMessage(10, global::Common.JSONWebKeys.Parser);
    private readonly pbc::RepeatedField<global::Common.JSONWebKeys> keys_ = new pbc::RepeatedField<global::Common.JSONWebKeys>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Common.JSONWebKeys> Keys {
      get { return keys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Jwks);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Jwks other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!keys_.Equals(other.keys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= keys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      keys_.WriteTo(output, _repeated_keys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += keys_.CalculateSize(_repeated_keys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Jwks other) {
      if (other == null) {
        return;
      }
      keys_.Add(other.keys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            keys_.AddEntriesFrom(input, _repeated_keys_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HTTPTask : pb::IMessage<HTTPTask> {
    private static readonly pb::MessageParser<HTTPTask> _parser = new pb::MessageParser<HTTPTask>(() => new HTTPTask());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HTTPTask> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Common.CommonReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HTTPTask() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HTTPTask(HTTPTask other) : this() {
      url_ = other.url_;
      method_ = other.method_;
      headers_ = other.headers_.Clone();
      form_ = other.form_.Clone();
      username_ = other.username_;
      password_ = other.password_;
      body_ = other.body_ != null ? other.body_.Clone() : null;
      callbackUrl_ = other.callbackUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HTTPTask Clone() {
      return new HTTPTask(this);
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 1;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "method" field.</summary>
    public const int MethodFieldNumber = 2;
    private string method_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Method {
      get { return method_; }
      set {
        method_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "headers" field.</summary>
    public const int HeadersFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_headers_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> headers_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Headers {
      get { return headers_; }
    }

    /// <summary>Field number for the "form" field.</summary>
    public const int FormFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_form_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> form_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Form {
      get { return form_; }
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 5;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 6;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 7;
    private global::Google.Protobuf.WellKnownTypes.Any body_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Body {
      get { return body_; }
      set {
        body_ = value;
      }
    }

    /// <summary>Field number for the "callback_url" field.</summary>
    public const int CallbackUrlFieldNumber = 8;
    private string callbackUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CallbackUrl {
      get { return callbackUrl_; }
      set {
        callbackUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HTTPTask);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HTTPTask other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Url != other.Url) return false;
      if (Method != other.Method) return false;
      if (!Headers.Equals(other.Headers)) return false;
      if (!Form.Equals(other.Form)) return false;
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      if (!object.Equals(Body, other.Body)) return false;
      if (CallbackUrl != other.CallbackUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (Method.Length != 0) hash ^= Method.GetHashCode();
      hash ^= Headers.GetHashCode();
      hash ^= Form.GetHashCode();
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (body_ != null) hash ^= Body.GetHashCode();
      if (CallbackUrl.Length != 0) hash ^= CallbackUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Url.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Url);
      }
      if (Method.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Method);
      }
      headers_.WriteTo(output, _map_headers_codec);
      form_.WriteTo(output, _map_form_codec);
      if (Username.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Password);
      }
      if (body_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Body);
      }
      if (CallbackUrl.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CallbackUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (Method.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Method);
      }
      size += headers_.CalculateSize(_map_headers_codec);
      size += form_.CalculateSize(_map_form_codec);
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (body_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Body);
      }
      if (CallbackUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CallbackUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HTTPTask other) {
      if (other == null) {
        return;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.Method.Length != 0) {
        Method = other.Method;
      }
      headers_.Add(other.headers_);
      form_.Add(other.form_);
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.body_ != null) {
        if (body_ == null) {
          body_ = new global::Google.Protobuf.WellKnownTypes.Any();
        }
        Body.MergeFrom(other.Body);
      }
      if (other.CallbackUrl.Length != 0) {
        CallbackUrl = other.CallbackUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Url = input.ReadString();
            break;
          }
          case 18: {
            Method = input.ReadString();
            break;
          }
          case 26: {
            headers_.AddEntriesFrom(input, _map_headers_codec);
            break;
          }
          case 34: {
            form_.AddEntriesFrom(input, _map_form_codec);
            break;
          }
          case 42: {
            Username = input.ReadString();
            break;
          }
          case 50: {
            Password = input.ReadString();
            break;
          }
          case 58: {
            if (body_ == null) {
              body_ = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            input.ReadMessage(body_);
            break;
          }
          case 66: {
            CallbackUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
