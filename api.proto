syntax="proto3";

package api;

import "google/protobuf/empty.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "google/api/auth.proto";
import "google/pubsub/v1/pubsub.proto";


///////////////////////////////////////////////Services/////////////////////////////////////////////////////////////////

//Accounts
service AccountService {
    rpc CreateAccount(CreateAccountRequest) returns (JSON) {
        option (google.api.http) = {
            post: "/api/accounts"
            body: "*"
        };
    }
    rpc UpdateAccount(Account) returns (JSON) {
        option (google.api.http) = {
            post: "/api/accounts/{customer.id}"
            body: "*"
        };
    }
    rpc DeleteAccount(Id) returns (JSON) {
        option (google.api.http) = {
            post: "/api/accounts/{id}"
            body: "*"
        };
    }
    rpc ReadAccount(Id) returns (JSON) {
        option (google.api.http) = {
            post: "/api/accounts/{id}"
            body: "*"
        };
    }
    rpc ListAccounts(Empty) returns (JSON) {
        option (google.api.http) = {
            post: "/api/accounts"
            body: "*"
        };
    }
}

//Customers
service CustomerService {
    rpc CreateCustomer(CustomerRequest) returns (JSON) {
        option (google.api.http) = {
            post: "/api/customers"
            body: "*"
        };
    }
    rpc UpdateCustomer(UpdateCustomerRequest) returns (JSON) {
        option (google.api.http) = {
            post: "/api/customers/{id}"
            body: "*"
        };
    }
    rpc DeleteCustomer(Id) returns (JSON) {
        option (google.api.http) = {
            post: "/api/customers/{id}"
            body: "*"
        };
    }
    rpc ListCustomers(Empty) returns (JSON) {
        option (google.api.http) = {
            post: "/api/customers/list"
            body: "*"
        };
    }
    rpc ChargeCustomer(ChargeRequest) returns (JSON) {
        option (google.api.http) = {
            post: "/api/customers/{id}/charge"
            body: "*"
        };
    }
    rpc RefundCustomer(RefundRequest) returns (JSON) {
        option (google.api.http) = {
            post: "/api/customers/{id}/refund"
            body: "*"
        };
    }
    rpc SubscribeCustomer(SubscribeCustomerRequest) returns (JSON) {
        option (google.api.http) = {
            post: "/api/customers/{id}/subscribe"
            body: "*"
        };
    }
    rpc UnSubscribeCustomer(CancelSubscriptionRequest) returns (JSON) {
        option (google.api.http) = {
            post: "/api/customers/{id}/unsubscribe"
            body: "*"
        };
    }

    rpc SMSCustomer(SMSRequest) returns (JSON) {
        option (google.api.http) = {
            post: "/api/customers/{id}/sms"
            body: "*"
        };
    }
    rpc CallCustomer(CallRequest) returns (JSON) {
        option (google.api.http) = {
            post: "/api/customers/{id}/call"
            body: "*"
        };
    }
    rpc MMSCustomer(MMSRequest) returns (JSON) {
        option (google.api.http) = {
            post: "/api/customers/{sms.id}/mms"
            body: "*"
        };
    }
    rpc EmailCustomer(EmailRequest) returns (JSON) {
        option (google.api.http) = {
            post: "/api/customers/{id}/email"
            body: "*"
        };
    }
}
/////////////Plans

service PlanService {
    rpc CreateSubscriptionPlan(CreatePlanRequest) returns (JSON) {
        option (google.api.http) = {
            post: "/api/plans"
            body: "*"
        };
    }
}

/////////////Users

service UserService {
    rpc EmailUser(EmailRequest) returns (JSON) {
        option (google.api.http) = {
            post: "/api/users/{id}/email"
            body: "*"
        };
    }
    rpc MessageUser(MessageUserRequest) returns (JSON) {
        option (google.api.http) = {
            post: "/api/users"
            body: "*"
        };
    }
    rpc SMSUser(SMSRequest) returns (JSON) {
        option (google.api.http) = {
            post: "/api/customers/{id}/sms"
            body: "*"
        };
    }
    rpc CallUser(CallRequest) returns (JSON) {
        option (google.api.http) = {
            post: "/api/customers/{id}/call"
            body: "*"
        };
    }
    rpc MMSUser(MMSRequest) returns (JSON) {
        option (google.api.http) = {
            post: "/api/customers/{sms.id}/mms"
            body: "*"
        };
    }
    rpc CreateUser(User) returns (JSON) {
        option (google.api.http) = {
            post: "/api/users"
            body: "*"
        };
    }
    rpc UpdateUser(User) returns (JSON) {
        option (google.api.http) = {
            post: "/api/users"
            body: "*"
        };
    }
    rpc DeleteUser(Id) returns (JSON) {
        option (google.api.http) = {
            post: "/api/users"
            body: "*"
        };
    }
    rpc ListUsers(Empty) returns (JSON) {
        option (google.api.http) = {
            post: "/api/users"
            body: "*"
        };
    }
}

///////////////////////////////////////////////Requests/////////////////////////////////////////////////////////////////

message Id {
    string id =1;
}

message MessageUserRequest {
    string id =1;
    string message=2;
}

message RefundRequest {
    string id =1;
    string reason=2;
    int64 amount=3;
    bool reverse_transfer=4;
    string status=5;
}

message ChargeRequest {
    Product product=1;
    string id =2;
}

message CancelSubscriptionRequest {
    string id=1;
}

message CreatePlanRequest {
    string plan_id=1;
    int64 amount =2;
    string service_id=3;
    string service_name=4;
    string friendly_name=5;
}

message SMSRequest {
    string id =1;
    string body=2;
}

message CallRequest {
    string id =1;
    string callback_url=2;
}

message MMSRequest {
    SMSRequest sms=1;
    string media_url=3;
}

message EmailRequest {
    string id =1;
    string subject=2;
    string plain_text=3;
    string html_alt=4;
}

message CustomerRequest {
    string email =1;
    string plan=2;
    string phone=3;
    string name=4;
    string description=7;
    Address address=8;
}

message UpdateCustomerRequest {
    string id=1;
    CustomerRequest customer=2;
}

message SubscribeCustomerRequest {
    string id =1;
    string plan=2;
    string card_number=3;
    string exp_month=4;
    string exp_year=5;
    string cvc=6;
}

message CreateAccountRequest {
    CustomerRequest customer =1;
    Access access=2;
}

///////////////////////////////////////////////Objects/////////////////////////////////////////////////////////////////

message Account {
    Customer customer=1;
    Access access=2;
}

message User {
    string id =1;
    string team_id=2;
    string name=3;
    string phone=4;
    Profile profile=5;
    bool deleted=6;
    bool admin=7;
    bool ownder=8;
    bool primary_owner=9;
    bool restricted=10;
    bool ultra_restricted=11;
    bool stranger=12;
    bool bot=13;
    bool has2fa=14;
    string locale=15;

}

message Profile {
    string avatar_hash=1;
    string status=2;
    string status_emoji=3;
    string display_name=4;
    string name=5;
    string email=6;
    repeated string image_urls=7;
    string team=8;
}

message Empty {}

// User is a user of the application
message Customer {
    string id = 1;
    string plan = 2;
    string name =3;
    string email=4;
    string description=5;
    string phone=6;
    Address address=8;
    map<string, string> metadata = 9;
    bool deleted=10;
    int64 create_date = 20;
}


message Card {
    CardType card_type =1;
    string card_number=3;
    string exp_month=4;
    string exp_year=5;
    string cvc=6;
    bool debit=7;
}

message BankAccount {
    string account_number=1;
    string routing_number=2;
}

message Address {
    string city=1;
    string country=2;
    string line1=3;
    string line2=4;
    string postal_code=5;
    string state=6;
}


message ChannelReminder {
    string channel_id=1;
    string text=2;
    string time=3;
}

message UserReminder {
    string id=1;
    string text=2;
    string time=3;
    ItemRef item=4;
}

message ItemRef {
    string channel=1;
    string file=2;
    string comment=3;
}

message Star {
    string text=1;
    ItemRef item=4;
}

message Pin {
    string text=1;
    ItemRef item=4;
}

message SignedKey {
    string signed_key=1;
}

message Access {
    string autom8ter_account=1;
    string autom8ter_key=2;
    string twilio_account=3;
    string twilio_key=4;
    string sendgrid_account=5;
    string sendgrid_key=6;
    string stripe_account=7;
    string stripe_key=8;
    string slack_account=9;
    string slack_key=10;
    string gcp_project=11;
    string gcp_key=12;
}

message StandardClaims {
    Access access=1;
    string audience=2;
    string subject =3;
    int64 expires_at=4;
    string id =5;
    int64 issued_at=6;
    int64 not_before=7;
}

message LogConfig {
    string username=1;
    string channel=2;
}

message EmailAddress {
    string name =1;
    string address =2;
}

message Email {
    EmailAddress from=1;
    RecipientEmail recipient=2;
}

message RecipientEmail {
    EmailAddress to = 2;
    string subject = 3;
    string plain_text = 4;
    string html = 5;
}

message SMS {
    string to=1;
    string from=2;
    string body=3;
    string media_url=4;
    string callback=5;
    string app=6;
}

message Call {
    string to=1;
    string from=2;
    string callback=5;
}

message Fax {
    string to=1;
    string from=2;
    string media_url=3;
    string quality=4;
    string callback=5;
    bool store_media=6;
}

message LogHook {
    string author=1;
    string icon=2;
    string title=3;
}

message Attachment {
    string color=1;
    string fallback=2;
    string callback_id=3;
    int64 id=4;
    string author_id=5;
    string author_name=6;
    string author_link=7;
    string author_icon=8;
    string title=9;
    string title_prefix=10;
    string pretext=11;
    string text=12;
    string image_url=13;
    string thumb_url=14;
    repeated  AttachmentField fields =15;

}

message AttachmentAction {
    string name=1;
    string text=2;
    string style=3;
    string type=4;
    string value=5;
    string data_source=6;
    int64 min_query_length=7;
    repeated AttachmentActionOption options=8;
    repeated AttachmentActionOption selected_options=9;
    repeated AttachmentActionOptionGroup option_groups=10;
    AttachmentConfirmationField confirm=11;
    string url=12;
}

message AttachmentConfirmationField {
    string title=1;
    string text=2;
    string ok_text=3;
    string dismiss_text=4;
}

message AttachmentActionOptionGroup {
    string text =1;
    repeated AttachmentActionOption options=2;
}

message AttachmentActionOption {
    string title=1;
    string value=2;
    string description =3;
}

message AttachmentField {
    string title=1;
    string value=2;
    bool short =3;
}

message JSON {
    bytes data=1;
    int64 size=2;
}

message File {
    bytes data=1;
    int64 size=2;
    string name=3;
    map<string, string> tags=4;
}

message Product {
    string name=1;
    int64 amount=2;
    string description=3;
    repeated File files=4;
    map<string, string> tags=5;
    bool available=6;
}

///////////////////////////////////////////////Enums/////////////////////////////////////////////////////////////////

enum CustomerIndex {
    ID =0;
    EMAIL=1;
    PHONE=2;
}

enum Claim {
    TWILIO=0;
    SENDGRID=1;
    STRIPE=2;
    SLACK=3;
    GCP=4;
    AUTOM8TER=5;
}

enum SigningMethod {
    HMAC=0;
    ECDSA=1;
    RSA=2;
    RSAPPS=3;
}

enum CardType {
    VISA=0;
    MASTERCARD=1;
    DISCOVER=2;
    AMEX=3;
}
