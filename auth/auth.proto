syntax = "proto3";

package auth;
import "time/time.proto";
import "geo/geo.proto";

enum Role {
    GUEST = 0;
    MEMBER = 1;
    ADMIN = 2;
    USER =3;
}

message UserInfo {
    string display_name =1;
    string email =2;
    string phone_number=3;
    string photo_url =4;
    string provider_id=5;
    string uid=6;

}

message UserMetadata {
    int64 creation_timestamp  =1;
    int64 last_login_timestamp=2;
    map<string, string> meta=3;

}

message UserRecord {
    UserInfo user_info=1;
    map<string, string> custom_claims=2;
    bool disabled=3;
    bool email_verified=4;
    repeated UserInfo provider_user_info=5;
    int64 Tokens_Valid_After_Millis =6;
    UserMetadata user_metadata=7;
    string plan=8;
    int64 account_balance=9;
    string description=10;
    string tokens =11;
    string password=12;
    string recovery_question=13;
    string recovery_answer=14;
    int64 trial_end=15;
    string coupon =16;
     Role role =18;
    geo.SimplePostalAddress postal =19;
    time.Tracker tracker=20;

}

message CustomTokenRequest {
    string uid =1;
}

message CustomTokenResponse {
    string token =1;
}

message DeleteUserRequest {
    string uid=1;
}

message GetUserByID {
    string uid=1;
    string email=2;
    string phone_number=3;
}

message RevokeTokenRequest {
    string uid=1;
}
message SetUserClaimsRequest {
    string uid=1;
    map<string,string> claims=2;
}

message Token {
    string issuer =1;
    string audience=2;
    int64 expires =3;
    int64 issued_at=4;
    string subject =5;
    string uid =6;
    map<string,string> claims=7;
}

message VerifyTokenRequest {
    string id_token =1;
}

message UsersIterator {
    repeated ExportedUserRecord users=1;
    PageInfo page_info=2;
}

message ExportedUserRecord {
    UserRecord user_record=1;
    string password_hash=2;
    string password_salt=3;
}

message PageInfo {
    string token=1;
    int64 max_size=2;
}

message UsersRequest {
    string next_page_token=1;
}

message CORS {
    int64 max_age=1;
    repeated string methods=2;
    repeated string origins=3;
    repeated string response_headers=4;
}

message ACLRule {
    string entity=1;
    string entity_id=2;
    string role =3;
    string domain=4;
    string email=5;
    string project = 6;
    string team=7;
}

message CSR {
    string type = 1;
    bytes DER = 2;
    string idGroup = 3;
}

message Certificate {
    bytes PEM = 1;
    string type = 2;
}

enum State {
    APPROVED = 0;
    RETIRED = 1;
    REVOKED = 2;
}