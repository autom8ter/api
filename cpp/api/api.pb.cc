// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

#include "api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_api_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AppMetadata_MetadataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Bytes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Card;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Email;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EmailBlast_NameAddressEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HTTPRequest_CookiesEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HTTPRequest_FormEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_HTTPRequest_HeadersEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Identity;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_JSONWebKeys;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ManagementToken;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Message;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_UserMetadata_MetadataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AppMetadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_EmailBlast;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_UserMetadata;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_User;
}  // namespace protobuf_api_2eproto
namespace api {
class SubscribeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubscribeRequest>
      _instance;
} _SubscribeRequest_default_instance_;
class UnSubscribeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnSubscribeRequest>
      _instance;
} _UnSubscribeRequest_default_instance_;
class CardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Card>
      _instance;
} _Card_default_instance_;
class EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Empty>
      _instance;
} _Empty_default_instance_;
class ManagementTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ManagementToken>
      _instance;
} _ManagementToken_default_instance_;
class UserRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserRequest>
      _instance;
} _UserRequest_default_instance_;
class UserByEmailRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserByEmailRequest>
      _instance;
} _UserByEmailRequest_default_instance_;
class IdentifierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Identifier>
      _instance;
} _Identifier_default_instance_;
class SMSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SMS>
      _instance;
} _SMS_default_instance_;
class SMSBlastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SMSBlast>
      _instance;
} _SMSBlast_default_instance_;
class EmailRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmailRequest>
      _instance;
} _EmailRequest_default_instance_;
class EmailBlastRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmailBlastRequest>
      _instance;
} _EmailBlastRequest_default_instance_;
class EmailBlast_NameAddressEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmailBlast_NameAddressEntry_DoNotUse>
      _instance;
} _EmailBlast_NameAddressEntry_DoNotUse_default_instance_;
class EmailBlastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmailBlast>
      _instance;
} _EmailBlast_default_instance_;
class EmailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Email>
      _instance;
} _Email_default_instance_;
class CallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Call>
      _instance;
} _Call_default_instance_;
class MessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message>
      _instance;
} _Message_default_instance_;
class UserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<User>
      _instance;
} _User_default_instance_;
class IdentityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Identity>
      _instance;
} _Identity_default_instance_;
class UserMetadata_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserMetadata_MetadataEntry_DoNotUse>
      _instance;
} _UserMetadata_MetadataEntry_DoNotUse_default_instance_;
class UserMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserMetadata>
      _instance;
} _UserMetadata_default_instance_;
class AppMetadata_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppMetadata_MetadataEntry_DoNotUse>
      _instance;
} _AppMetadata_MetadataEntry_DoNotUse_default_instance_;
class AppMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppMetadata>
      _instance;
} _AppMetadata_default_instance_;
class AuthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Auth>
      _instance;
} _Auth_default_instance_;
class BytesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Bytes>
      _instance;
} _Bytes_default_instance_;
class TemplateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Template>
      _instance;
} _Template_default_instance_;
class JSONWebKeysDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JSONWebKeys>
      _instance;
} _JSONWebKeys_default_instance_;
class JwksDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Jwks>
      _instance;
} _Jwks_default_instance_;
class HTTPRequest_HeadersEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HTTPRequest_HeadersEntry_DoNotUse>
      _instance;
} _HTTPRequest_HeadersEntry_DoNotUse_default_instance_;
class HTTPRequest_FormEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HTTPRequest_FormEntry_DoNotUse>
      _instance;
} _HTTPRequest_FormEntry_DoNotUse_default_instance_;
class HTTPRequest_CookiesEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HTTPRequest_CookiesEntry_DoNotUse>
      _instance;
} _HTTPRequest_CookiesEntry_DoNotUse_default_instance_;
class HTTPRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HTTPRequest>
      _instance;
} _HTTPRequest_default_instance_;
}  // namespace api
namespace protobuf_api_2eproto {
static void InitDefaultsSubscribeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_SubscribeRequest_default_instance_;
    new (ptr) ::api::SubscribeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::SubscribeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SubscribeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSubscribeRequest}, {
      &protobuf_api_2eproto::scc_info_Card.base,}};

static void InitDefaultsUnSubscribeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_UnSubscribeRequest_default_instance_;
    new (ptr) ::api::UnSubscribeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::UnSubscribeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UnSubscribeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUnSubscribeRequest}, {}};

static void InitDefaultsCard() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Card_default_instance_;
    new (ptr) ::api::Card();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Card::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Card =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCard}, {}};

static void InitDefaultsEmpty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Empty_default_instance_;
    new (ptr) ::api::Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Empty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Empty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmpty}, {}};

static void InitDefaultsManagementToken() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_ManagementToken_default_instance_;
    new (ptr) ::api::ManagementToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::ManagementToken::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ManagementToken =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsManagementToken}, {}};

static void InitDefaultsUserRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_UserRequest_default_instance_;
    new (ptr) ::api::UserRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::UserRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UserRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUserRequest}, {
      &protobuf_api_2eproto::scc_info_ManagementToken.base,
      &protobuf_api_2eproto::scc_info_User.base,}};

static void InitDefaultsUserByEmailRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_UserByEmailRequest_default_instance_;
    new (ptr) ::api::UserByEmailRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::UserByEmailRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserByEmailRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserByEmailRequest}, {
      &protobuf_api_2eproto::scc_info_ManagementToken.base,}};

static void InitDefaultsIdentifier() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Identifier_default_instance_;
    new (ptr) ::api::Identifier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Identifier::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Identifier =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIdentifier}, {}};

static void InitDefaultsSMS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_SMS_default_instance_;
    new (ptr) ::api::SMS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::SMS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SMS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSMS}, {
      &protobuf_api_2eproto::scc_info_Message.base,}};

static void InitDefaultsSMSBlast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_SMSBlast_default_instance_;
    new (ptr) ::api::SMSBlast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::SMSBlast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SMSBlast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSMSBlast}, {
      &protobuf_api_2eproto::scc_info_Message.base,}};

static void InitDefaultsEmailRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_EmailRequest_default_instance_;
    new (ptr) ::api::EmailRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::EmailRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EmailRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEmailRequest}, {
      &protobuf_api_2eproto::scc_info_Email.base,}};

static void InitDefaultsEmailBlastRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_EmailBlastRequest_default_instance_;
    new (ptr) ::api::EmailBlastRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::EmailBlastRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EmailBlastRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEmailBlastRequest}, {
      &protobuf_api_2eproto::scc_info_EmailBlast.base,}};

static void InitDefaultsEmailBlast_NameAddressEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_EmailBlast_NameAddressEntry_DoNotUse_default_instance_;
    new (ptr) ::api::EmailBlast_NameAddressEntry_DoNotUse();
  }
  ::api::EmailBlast_NameAddressEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EmailBlast_NameAddressEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmailBlast_NameAddressEntry_DoNotUse}, {}};

static void InitDefaultsEmailBlast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_EmailBlast_default_instance_;
    new (ptr) ::api::EmailBlast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::EmailBlast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_EmailBlast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEmailBlast}, {
      &protobuf_api_2eproto::scc_info_EmailBlast_NameAddressEntry_DoNotUse.base,}};

static void InitDefaultsEmail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Email_default_instance_;
    new (ptr) ::api::Email();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Email::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Email =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmail}, {}};

static void InitDefaultsCall() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Call_default_instance_;
    new (ptr) ::api::Call();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Call::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Call =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCall}, {}};

static void InitDefaultsMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Message_default_instance_;
    new (ptr) ::api::Message();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Message::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Message =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMessage}, {}};

static void InitDefaultsUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_User_default_instance_;
    new (ptr) ::api::User();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::User::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_User =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsUser}, {
      &protobuf_api_2eproto::scc_info_UserMetadata.base,
      &protobuf_api_2eproto::scc_info_AppMetadata.base,
      &protobuf_api_2eproto::scc_info_Identity.base,}};

static void InitDefaultsIdentity() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Identity_default_instance_;
    new (ptr) ::api::Identity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Identity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Identity =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIdentity}, {}};

static void InitDefaultsUserMetadata_MetadataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_UserMetadata_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::api::UserMetadata_MetadataEntry_DoNotUse();
  }
  ::api::UserMetadata_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserMetadata_MetadataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserMetadata_MetadataEntry_DoNotUse}, {}};

static void InitDefaultsUserMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_UserMetadata_default_instance_;
    new (ptr) ::api::UserMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::UserMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserMetadata}, {
      &protobuf_api_2eproto::scc_info_UserMetadata_MetadataEntry_DoNotUse.base,}};

static void InitDefaultsAppMetadata_MetadataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_AppMetadata_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::api::AppMetadata_MetadataEntry_DoNotUse();
  }
  ::api::AppMetadata_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AppMetadata_MetadataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAppMetadata_MetadataEntry_DoNotUse}, {}};

static void InitDefaultsAppMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_AppMetadata_default_instance_;
    new (ptr) ::api::AppMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::AppMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AppMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAppMetadata}, {
      &protobuf_api_2eproto::scc_info_AppMetadata_MetadataEntry_DoNotUse.base,}};

static void InitDefaultsAuth() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Auth_default_instance_;
    new (ptr) ::api::Auth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Auth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Auth =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAuth}, {}};

static void InitDefaultsBytes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Bytes_default_instance_;
    new (ptr) ::api::Bytes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Bytes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Bytes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytes}, {}};

static void InitDefaultsTemplate() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Template_default_instance_;
    new (ptr) ::api::Template();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Template::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Template =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTemplate}, {}};

static void InitDefaultsJSONWebKeys() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_JSONWebKeys_default_instance_;
    new (ptr) ::api::JSONWebKeys();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::JSONWebKeys::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_JSONWebKeys =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJSONWebKeys}, {}};

static void InitDefaultsJwks() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Jwks_default_instance_;
    new (ptr) ::api::Jwks();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Jwks::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Jwks =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJwks}, {
      &protobuf_api_2eproto::scc_info_JSONWebKeys.base,}};

static void InitDefaultsHTTPRequest_HeadersEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_HTTPRequest_HeadersEntry_DoNotUse_default_instance_;
    new (ptr) ::api::HTTPRequest_HeadersEntry_DoNotUse();
  }
  ::api::HTTPRequest_HeadersEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HTTPRequest_HeadersEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHTTPRequest_HeadersEntry_DoNotUse}, {}};

static void InitDefaultsHTTPRequest_FormEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_HTTPRequest_FormEntry_DoNotUse_default_instance_;
    new (ptr) ::api::HTTPRequest_FormEntry_DoNotUse();
  }
  ::api::HTTPRequest_FormEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HTTPRequest_FormEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHTTPRequest_FormEntry_DoNotUse}, {}};

static void InitDefaultsHTTPRequest_CookiesEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_HTTPRequest_CookiesEntry_DoNotUse_default_instance_;
    new (ptr) ::api::HTTPRequest_CookiesEntry_DoNotUse();
  }
  ::api::HTTPRequest_CookiesEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HTTPRequest_CookiesEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHTTPRequest_CookiesEntry_DoNotUse}, {}};

static void InitDefaultsHTTPRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_HTTPRequest_default_instance_;
    new (ptr) ::api::HTTPRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::HTTPRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_HTTPRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsHTTPRequest}, {
      &protobuf_api_2eproto::scc_info_HTTPRequest_HeadersEntry_DoNotUse.base,
      &protobuf_api_2eproto::scc_info_HTTPRequest_FormEntry_DoNotUse.base,
      &protobuf_api_2eproto::scc_info_HTTPRequest_CookiesEntry_DoNotUse.base,
      &protobuf_api_2eproto::scc_info_Bytes.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_SubscribeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnSubscribeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Card.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Empty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ManagementToken.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserByEmailRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Identifier.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SMS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SMSBlast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmailRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmailBlastRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmailBlast_NameAddressEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmailBlast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Email.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Call.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Message.base);
  ::google::protobuf::internal::InitSCC(&scc_info_User.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Identity.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserMetadata_MetadataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AppMetadata_MetadataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AppMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Auth.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Bytes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Template.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JSONWebKeys.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Jwks.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HTTPRequest_HeadersEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HTTPRequest_FormEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HTTPRequest_CookiesEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HTTPRequest.base);
}

::google::protobuf::Metadata file_level_metadata[32];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscribeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscribeRequest, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscribeRequest, plan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscribeRequest, card_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UnSubscribeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UnSubscribeRequest, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UnSubscribeRequest, plan_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, exp_month_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, exp_year_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, cvc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::ManagementToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::ManagementToken, token_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserRequest, string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserRequest, user_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserByEmailRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserByEmailRequest, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserByEmailRequest, email_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Identifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Identifier, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, mediaurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, callback_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, app_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSBlast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSBlast, service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSBlast, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSBlast, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSBlast, mediaurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSBlast, callback_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSBlast, app_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailRequest, from_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailRequest, from_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailRequest, email_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlastRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlastRequest, from_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlastRequest, from_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlastRequest, blast_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlast_NameAddressEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlast_NameAddressEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlast_NameAddressEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlast_NameAddressEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlast, name_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlast, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlast, plain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlast, html_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Email, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Email, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Email, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Email, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Email, plain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Email, html_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Call, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Call, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Call, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Call, app_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Message, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, given_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, family_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, gender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, birthdate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, phone_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, picture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, user_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, app_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, last_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, blocked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, multifactor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, created_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, updated_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, phone_verified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, identities_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Identity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Identity, connection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Identity, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Identity, provider_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Identity, issocial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserMetadata_MetadataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserMetadata_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserMetadata_MetadataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserMetadata_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserMetadata, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AppMetadata_MetadataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AppMetadata_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AppMetadata_MetadataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AppMetadata_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AppMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AppMetadata, metadata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Auth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Auth, domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Auth, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Auth, client_secret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Auth, redirect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Auth, audience_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Auth, scopes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Bytes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Bytes, bits_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Template, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Template, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Template, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, kty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, kid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, use_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, e_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, x5c_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Jwks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Jwks, keys_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest_HeadersEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest_HeadersEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest_HeadersEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest_HeadersEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest_FormEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest_FormEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest_FormEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest_FormEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest_CookiesEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest_CookiesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest_CookiesEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest_CookiesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest, contenttype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest, headers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest, form_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest, cookies_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::HTTPRequest, body_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::api::SubscribeRequest)},
  { 8, -1, sizeof(::api::UnSubscribeRequest)},
  { 15, -1, sizeof(::api::Card)},
  { 24, -1, sizeof(::api::Empty)},
  { 29, -1, sizeof(::api::ManagementToken)},
  { 35, -1, sizeof(::api::UserRequest)},
  { 42, -1, sizeof(::api::UserByEmailRequest)},
  { 49, -1, sizeof(::api::Identifier)},
  { 55, -1, sizeof(::api::SMS)},
  { 66, -1, sizeof(::api::SMSBlast)},
  { 77, -1, sizeof(::api::EmailRequest)},
  { 85, -1, sizeof(::api::EmailBlastRequest)},
  { 93, 100, sizeof(::api::EmailBlast_NameAddressEntry_DoNotUse)},
  { 102, -1, sizeof(::api::EmailBlast)},
  { 111, -1, sizeof(::api::Email)},
  { 121, -1, sizeof(::api::Call)},
  { 129, -1, sizeof(::api::Message)},
  { 135, -1, sizeof(::api::User)},
  { 159, -1, sizeof(::api::Identity)},
  { 168, 175, sizeof(::api::UserMetadata_MetadataEntry_DoNotUse)},
  { 177, -1, sizeof(::api::UserMetadata)},
  { 183, 190, sizeof(::api::AppMetadata_MetadataEntry_DoNotUse)},
  { 192, -1, sizeof(::api::AppMetadata)},
  { 198, -1, sizeof(::api::Auth)},
  { 209, -1, sizeof(::api::Bytes)},
  { 215, -1, sizeof(::api::Template)},
  { 222, -1, sizeof(::api::JSONWebKeys)},
  { 233, -1, sizeof(::api::Jwks)},
  { 239, 246, sizeof(::api::HTTPRequest_HeadersEntry_DoNotUse)},
  { 248, 255, sizeof(::api::HTTPRequest_FormEntry_DoNotUse)},
  { 257, 264, sizeof(::api::HTTPRequest_CookiesEntry_DoNotUse)},
  { 266, -1, sizeof(::api::HTTPRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_SubscribeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_UnSubscribeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Card_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_ManagementToken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_UserRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_UserByEmailRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Identifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_SMS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_SMSBlast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_EmailRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_EmailBlastRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_EmailBlast_NameAddressEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_EmailBlast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Email_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Call_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Message_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_User_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Identity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_UserMetadata_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_UserMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_AppMetadata_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_AppMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Auth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Bytes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Template_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_JSONWebKeys_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Jwks_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_HTTPRequest_HeadersEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_HTTPRequest_FormEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_HTTPRequest_CookiesEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_HTTPRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "api.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 32);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tapi.proto\022\003api\032\034google/api/annotations"
      ".proto\"H\n\020SubscribeRequest\022\r\n\005email\030\001 \001("
      "\t\022\014\n\004plan\030\002 \001(\t\022\027\n\004card\030\003 \001(\0132\t.api.Card"
      "\"1\n\022UnSubscribeRequest\022\r\n\005email\030\001 \001(\t\022\014\n"
      "\004plan\030\002 \001(\t\"H\n\004Card\022\016\n\006number\030\001 \001(\t\022\021\n\te"
      "xp_month\030\002 \001(\t\022\020\n\010exp_year\030\003 \001(\t\022\013\n\003cvc\030"
      "\004 \001(\t\"\007\n\005Empty\" \n\017ManagementToken\022\r\n\005tok"
      "en\030\001 \001(\t\"L\n\013UserRequest\022$\n\006string\030\001 \001(\0132"
      "\024.api.ManagementToken\022\027\n\004user\030\002 \001(\0132\t.ap"
      "i.User\"H\n\022UserByEmailRequest\022#\n\005token\030\001 "
      "\001(\0132\024.api.ManagementToken\022\r\n\005email\030\002 \001(\t"
      "\"\030\n\nIdentifier\022\n\n\002id\030\001 \001(\t\"r\n\003SMS\022\017\n\007ser"
      "vice\030\001 \001(\t\022\n\n\002to\030\002 \001(\t\022\035\n\007message\030\003 \001(\0132"
      "\014.api.Message\022\020\n\010mediaURL\030\004 \001(\t\022\020\n\010callb"
      "ack\030\005 \001(\t\022\013\n\003app\030\006 \001(\t\"w\n\010SMSBlast\022\017\n\007se"
      "rvice\030\001 \001(\t\022\n\n\002to\030\002 \001(\t\022\035\n\007message\030\003 \001(\013"
      "2\014.api.Message\022\020\n\010mediaURL\030\004 \001(\t\022\020\n\010call"
      "back\030\005 \001(\t\022\013\n\003app\030\006 \001(\t\"P\n\014EmailRequest\022"
      "\021\n\tfrom_name\030\001 \001(\t\022\022\n\nfrom_email\030\002 \001(\t\022\031"
      "\n\005email\030\003 \001(\0132\n.api.Email\"Z\n\021EmailBlastR"
      "equest\022\021\n\tfrom_name\030\001 \001(\t\022\022\n\nfrom_email\030"
      "\002 \001(\t\022\036\n\005blast\030\003 \001(\0132\017.api.EmailBlast\"\246\001"
      "\n\nEmailBlast\0226\n\014name_address\030\001 \003(\0132 .api"
      ".EmailBlast.NameAddressEntry\022\017\n\007subject\030"
      "\002 \001(\t\022\r\n\005plain\030\003 \001(\t\022\014\n\004html\030\004 \001(\t\0322\n\020Na"
      "meAddressEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001"
      "(\t:\0028\001\"T\n\005Email\022\014\n\004name\030\001 \001(\t\022\017\n\007address"
      "\030\002 \001(\t\022\017\n\007subject\030\003 \001(\t\022\r\n\005plain\030\004 \001(\t\022\014"
      "\n\004html\030\005 \001(\t\"-\n\004Call\022\014\n\004from\030\001 \001(\t\022\n\n\002to"
      "\030\002 \001(\t\022\013\n\003app\030\003 \001(\t\"\030\n\007Message\022\r\n\005value\030"
      "\001 \001(\t\"\245\003\n\004User\022\017\n\007user_id\030\001 \001(\t\022\014\n\004name\030"
      "\002 \001(\t\022\022\n\ngiven_name\030\003 \001(\t\022\023\n\013family_name"
      "\030\004 \001(\t\022\016\n\006gender\030\005 \001(\t\022\021\n\tbirthdate\030\006 \001("
      "\t\022\r\n\005email\030\007 \001(\t\022\024\n\014phone_number\030\010 \001(\t\022\017"
      "\n\007picture\030\t \001(\t\022(\n\ruser_metadata\030\n \001(\0132\021"
      ".api.UserMetadata\022&\n\014app_metadata\030\013 \001(\0132"
      "\020.api.AppMetadata\022\017\n\007last_ip\030\014 \001(\t\022\017\n\007bl"
      "ocked\030\r \001(\010\022\020\n\010nickname\030\016 \001(\t\022\023\n\013multifa"
      "ctor\030\017 \003(\t\022\022\n\ncreated_at\030\021 \001(\t\022\022\n\nupdate"
      "d_at\030\022 \001(\t\022\026\n\016phone_verified\030\023 \001(\010\022!\n\nid"
      "entities\030\024 \003(\0132\r.api.Identity\"S\n\010Identit"
      "y\022\022\n\nconnection\030\001 \001(\t\022\017\n\007user_id\030\002 \001(\t\022\020"
      "\n\010provider\030\003 \001(\t\022\020\n\010isSocial\030\004 \001(\t\"r\n\014Us"
      "erMetadata\0221\n\010metadata\030\001 \003(\0132\037.api.UserM"
      "etadata.MetadataEntry\032/\n\rMetadataEntry\022\013"
      "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"p\n\013AppMet"
      "adata\0220\n\010metadata\030\001 \003(\0132\036.api.AppMetadat"
      "a.MetadataEntry\032/\n\rMetadataEntry\022\013\n\003key\030"
      "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\200\001\n\004Auth\022\016\n\006dom"
      "ain\030\001 \001(\t\022\021\n\tclient_id\030\002 \001(\t\022\025\n\rclient_s"
      "ecret\030\003 \001(\t\022\020\n\010redirect\030\004 \001(\t\022\020\n\010audienc"
      "e\030\005 \001(\t\022\032\n\006scopes\030\006 \003(\0162\n.api.Scope\"\025\n\005B"
      "ytes\022\014\n\004bits\030\001 \001(\014\"&\n\010Template\022\014\n\004name\030\001"
      " \001(\t\022\014\n\004text\030\002 \001(\t\"W\n\013JSONWebKeys\022\013\n\003kty"
      "\030\001 \001(\t\022\013\n\003kid\030\002 \001(\t\022\013\n\003use\030\003 \001(\t\022\t\n\001n\030\004 "
      "\001(\t\022\t\n\001e\030\005 \001(\t\022\013\n\003x5c\030\006 \003(\t\"&\n\004Jwks\022\036\n\004k"
      "eys\030\001 \003(\0132\020.api.JSONWebKeys\"\241\003\n\013HTTPRequ"
      "est\022\037\n\006method\030\001 \001(\0162\017.api.HTTPMethod\022\013\n\003"
      "url\030\002 \001(\t\022\r\n\005token\030\003 \001(\t\022\017\n\007account\030\004 \001("
      "\t\022\023\n\013contentType\030\005 \001(\t\022.\n\007headers\030\006 \003(\0132"
      "\035.api.HTTPRequest.HeadersEntry\022(\n\004form\030\007"
      " \003(\0132\032.api.HTTPRequest.FormEntry\022.\n\007cook"
      "ies\030\010 \003(\0132\035.api.HTTPRequest.CookiesEntry"
      "\022\030\n\004body\030\t \001(\0132\n.api.Bytes\032.\n\014HeadersEnt"
      "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032+\n\tFo"
      "rmEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032"
      ".\n\014CookiesEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 "
      "\001(\t:\0028\001*\344\002\n\005Scope\022\n\n\006OPENID\020\000\022\013\n\007PROFILE"
      "\020\001\022\t\n\005EMAIL\020\002\022\016\n\nREAD_USERS\020\003\022\030\n\024READ_US"
      "ER_IDP_TOKENS\020\004\022\020\n\014CREATE_USERS\020\005\022\016\n\nREA"
      "D_STATS\020\006\022\030\n\024READ_EMAIL_TEMPLATES\020\007\022\032\n\026U"
      "PDATE_EMAIL_TEMPLATES\020\010\022\032\n\026CREATE_EMAIL_"
      "TEMPLATES\020\t\022\016\n\nREAD_RULES\020\n\022\020\n\014UPDATE_RU"
      "LES\020\013\022\020\n\014CREATE_RULES\020\014\022\020\n\014DELETE_RULES\020"
      "\r\022\016\n\nREAD_ROLES\020\016\022\020\n\014UPDATE_ROLES\020\017\022\020\n\014C"
      "REATE_ROLES\020\020\022\020\n\014DELETE_ROLES\020\021\022\r\n\tREAD_"
      "LOGS\020\022*\037\n\nHTTPMethod\022\007\n\003GET\020\000\022\010\n\004POST\020\0012"
      "\350\005\n\016UtilityService\022<\n\004Echo\022\014.api.Message"
      "\032\014.api.Message\"\030\202\323\344\223\002\022\"\r/utility/echo:\001*"
      "\022K\n\013EchoSpanish\022\014.api.Message\032\014.api.Mess"
      "age\" \202\323\344\223\002\032\"\025/utility/echo/spanish:\001*\022K\n"
      "\013EchoChinese\022\014.api.Message\032\014.api.Message"
      "\" \202\323\344\223\002\032\"\025/utility/echo/chinese:\001*\022K\n\013Ec"
      "hoEnglish\022\014.api.Message\032\014.api.Message\" \202"
      "\323\344\223\002\032\"\025/utility/echo/english:\001*\022G\n\tEchoH"
      "indi\022\014.api.Message\032\014.api.Message\"\036\202\323\344\223\002\030"
      "\"\023/utility/echo/hindi:\001*\022I\n\nEchoArabic\022\014"
      ".api.Message\032\014.api.Message\"\037\202\323\344\223\002\031\"\024/uti"
      "lity/echo/arabic:\001*\022G\n\013MarshalJSON\022\n.api"
      ".Bytes\032\n.api.Bytes\" \202\323\344\223\002\032\"\025/utility/mar"
      "shal/json:\001*\022G\n\013MarshalYAML\022\n.api.Bytes\032"
      "\n.api.Bytes\" \202\323\344\223\002\032\"\025/utility/marshal/ya"
      "ml:\001*\022E\n\nMarshalXML\022\n.api.Bytes\032\n.api.By"
      "tes\"\037\202\323\344\223\002\031\"\024/utility/marshal/xml:\001*\022D\n\006"
      "Render\022\r.api.Template\032\n.api.Bytes\"\037\202\323\344\223\002"
      "\031\"\024/utility/marshal/xml:\001*2\326\003\n\016ContactSe"
      "rvice\022=\n\007SendSMS\022\010.api.SMS\032\n.api.Bytes\"\034"
      "\202\323\344\223\002\026\"\021/contact/sms/{to}:\001*\022J\n\014SendSMSB"
      "last\022\r.api.SMSBlast\032\n.api.Bytes\"\035\202\323\344\223\002\027\""
      "\022/contact/sms/blast:\001*0\001\022C\n\006GetSMS\022\017.api"
      ".Identifier\032\n.api.Bytes\"\034\202\323\344\223\002\026\"\021/contac"
      "t/sms/{id}:\001*\022W\n\tSendEmail\022\021.api.EmailRe"
      "quest\032\014.api.Message\")\202\323\344\223\002#\"\036/contact/em"
      "ail/{email.address}:\001*\022Y\n\016SendEmailBlast"
      "\022\026.api.EmailBlastRequest\032\014.api.Message\"\037"
      "\202\323\344\223\002\031\"\024/contact/email/blast:\001*0\001\022@\n\010Sen"
      "dCall\022\t.api.Call\032\n.api.Bytes\"\035\202\323\344\223\002\027\"\022/c"
      "ontact/call/{to}:\001*2\304\001\n\016PaymentService\022U"
      "\n\tSubscribe\022\025.api.SubscribeRequest\032\n.api"
      ".Bytes\"%\202\323\344\223\002\037\"\032/payment/subscribe/{emai"
      "l}:\001*\022[\n\013Unsubscribe\022\027.api.UnSubscribeRe"
      "quest\032\n.api.Bytes\"\'\202\323\344\223\002!\"\034/payment/unsu"
      "bscribe/{email}:\001*2\214\003\n\013UserService\022K\n\007Ge"
      "tUser\022\027.api.UserByEmailRequest\032\t.api.Use"
      "r\"\034\202\323\344\223\002\026\"\021/user/get/{email}:\001*\022P\n\nUpdat"
      "eUser\022\020.api.UserRequest\032\n.api.Bytes\"$\202\323\344"
      "\223\002\036\"\031/user/update/{user.email}:\001*\022C\n\nCre"
      "ateUser\022\020.api.UserRequest\032\n.api.Bytes\"\027\202"
      "\323\344\223\002\021\"\014/user/create:\001*\022R\n\nDeleteUser\022\027.a"
      "pi.UserByEmailRequest\032\n.api.Bytes\"\037\202\323\344\223\002"
      "\031\"\024/user/delete/{email}:\001*\022E\n\tListUsers\022"
      "\024.api.ManagementToken\032\t.api.User\"\025\202\323\344\223\002\017"
      "\"\n/user/list:\001*0\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4905);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_api_2eproto
namespace api {
const ::google::protobuf::EnumDescriptor* Scope_descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_enum_descriptors[0];
}
bool Scope_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* HTTPMethod_descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_enum_descriptors[1];
}
bool HTTPMethod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void SubscribeRequest::InitAsDefaultInstance() {
  ::api::_SubscribeRequest_default_instance_._instance.get_mutable()->card_ = const_cast< ::api::Card*>(
      ::api::Card::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeRequest::kEmailFieldNumber;
const int SubscribeRequest::kPlanFieldNumber;
const int SubscribeRequest::kCardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeRequest::SubscribeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_SubscribeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.SubscribeRequest)
}
SubscribeRequest::SubscribeRequest(const SubscribeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plan().size() > 0) {
    plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plan_);
  }
  if (from.has_card()) {
    card_ = new ::api::Card(*from.card_);
  } else {
    card_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.SubscribeRequest)
}

void SubscribeRequest::SharedCtor() {
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_ = NULL;
}

SubscribeRequest::~SubscribeRequest() {
  // @@protoc_insertion_point(destructor:api.SubscribeRequest)
  SharedDtor();
}

void SubscribeRequest::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plan_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete card_;
}

void SubscribeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SubscribeRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscribeRequest& SubscribeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_SubscribeRequest.base);
  return *internal_default_instance();
}


void SubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plan_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && card_ != NULL) {
    delete card_;
  }
  card_ = NULL;
  _internal_metadata_.Clear();
}

bool SubscribeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.SubscribeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SubscribeRequest.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plan = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plan()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plan().data(), static_cast<int>(this->plan().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SubscribeRequest.plan"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.Card card = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_card()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.SubscribeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.SubscribeRequest)
  return false;
#undef DO_
}

void SubscribeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SubscribeRequest.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->email(), output);
  }

  // string plan = 2;
  if (this->plan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plan().data(), static_cast<int>(this->plan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SubscribeRequest.plan");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->plan(), output);
  }

  // .api.Card card = 3;
  if (this->has_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_card(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.SubscribeRequest)
}

::google::protobuf::uint8* SubscribeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SubscribeRequest.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->email(), target);
  }

  // string plan = 2;
  if (this->plan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plan().data(), static_cast<int>(this->plan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SubscribeRequest.plan");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->plan(), target);
  }

  // .api.Card card = 3;
  if (this->has_card()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_card(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.SubscribeRequest)
  return target;
}

size_t SubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.SubscribeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string email = 1;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string plan = 2;
  if (this->plan().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plan());
  }

  // .api.Card card = 3;
  if (this->has_card()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *card_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.SubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.SubscribeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.SubscribeRequest)
    MergeFrom(*source);
  }
}

void SubscribeRequest::MergeFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.SubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.plan().size() > 0) {

    plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plan_);
  }
  if (from.has_card()) {
    mutable_card()->::api::Card::MergeFrom(from.card());
  }
}

void SubscribeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeRequest::CopyFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeRequest::IsInitialized() const {
  return true;
}

void SubscribeRequest::Swap(SubscribeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeRequest::InternalSwap(SubscribeRequest* other) {
  using std::swap;
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plan_.Swap(&other->plan_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(card_, other->card_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SubscribeRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnSubscribeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnSubscribeRequest::kEmailFieldNumber;
const int UnSubscribeRequest::kPlanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnSubscribeRequest::UnSubscribeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_UnSubscribeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.UnSubscribeRequest)
}
UnSubscribeRequest::UnSubscribeRequest(const UnSubscribeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plan().size() > 0) {
    plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plan_);
  }
  // @@protoc_insertion_point(copy_constructor:api.UnSubscribeRequest)
}

void UnSubscribeRequest::SharedCtor() {
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UnSubscribeRequest::~UnSubscribeRequest() {
  // @@protoc_insertion_point(destructor:api.UnSubscribeRequest)
  SharedDtor();
}

void UnSubscribeRequest::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plan_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UnSubscribeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UnSubscribeRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnSubscribeRequest& UnSubscribeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_UnSubscribeRequest.base);
  return *internal_default_instance();
}


void UnSubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.UnSubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plan_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UnSubscribeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.UnSubscribeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.UnSubscribeRequest.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plan = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plan()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plan().data(), static_cast<int>(this->plan().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.UnSubscribeRequest.plan"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.UnSubscribeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.UnSubscribeRequest)
  return false;
#undef DO_
}

void UnSubscribeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.UnSubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UnSubscribeRequest.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->email(), output);
  }

  // string plan = 2;
  if (this->plan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plan().data(), static_cast<int>(this->plan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UnSubscribeRequest.plan");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->plan(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.UnSubscribeRequest)
}

::google::protobuf::uint8* UnSubscribeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.UnSubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UnSubscribeRequest.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->email(), target);
  }

  // string plan = 2;
  if (this->plan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plan().data(), static_cast<int>(this->plan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UnSubscribeRequest.plan");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->plan(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.UnSubscribeRequest)
  return target;
}

size_t UnSubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.UnSubscribeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string email = 1;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string plan = 2;
  if (this->plan().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plan());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnSubscribeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.UnSubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnSubscribeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnSubscribeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.UnSubscribeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.UnSubscribeRequest)
    MergeFrom(*source);
  }
}

void UnSubscribeRequest::MergeFrom(const UnSubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.UnSubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.plan().size() > 0) {

    plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plan_);
  }
}

void UnSubscribeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.UnSubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnSubscribeRequest::CopyFrom(const UnSubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.UnSubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnSubscribeRequest::IsInitialized() const {
  return true;
}

void UnSubscribeRequest::Swap(UnSubscribeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnSubscribeRequest::InternalSwap(UnSubscribeRequest* other) {
  using std::swap;
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plan_.Swap(&other->plan_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UnSubscribeRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Card::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Card::kNumberFieldNumber;
const int Card::kExpMonthFieldNumber;
const int Card::kExpYearFieldNumber;
const int Card::kCvcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Card::Card()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Card.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Card)
}
Card::Card(const Card& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.number().size() > 0) {
    number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.number_);
  }
  exp_month_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exp_month().size() > 0) {
    exp_month_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exp_month_);
  }
  exp_year_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exp_year().size() > 0) {
    exp_year_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exp_year_);
  }
  cvc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cvc().size() > 0) {
    cvc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cvc_);
  }
  // @@protoc_insertion_point(copy_constructor:api.Card)
}

void Card::SharedCtor() {
  number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_month_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_year_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cvc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Card::~Card() {
  // @@protoc_insertion_point(destructor:api.Card)
  SharedDtor();
}

void Card::SharedDtor() {
  number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_month_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_year_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cvc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Card::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Card::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Card& Card::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Card.base);
  return *internal_default_instance();
}


void Card::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_month_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_year_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cvc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Card::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Card)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->number().data(), static_cast<int>(this->number().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Card.number"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exp_month = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exp_month()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exp_month().data(), static_cast<int>(this->exp_month().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Card.exp_month"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exp_year = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exp_year()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exp_year().data(), static_cast<int>(this->exp_year().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Card.exp_year"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cvc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cvc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cvc().data(), static_cast<int>(this->cvc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Card.cvc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Card)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Card)
  return false;
#undef DO_
}

void Card::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string number = 1;
  if (this->number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->number().data(), static_cast<int>(this->number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Card.number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->number(), output);
  }

  // string exp_month = 2;
  if (this->exp_month().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exp_month().data(), static_cast<int>(this->exp_month().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Card.exp_month");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->exp_month(), output);
  }

  // string exp_year = 3;
  if (this->exp_year().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exp_year().data(), static_cast<int>(this->exp_year().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Card.exp_year");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->exp_year(), output);
  }

  // string cvc = 4;
  if (this->cvc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cvc().data(), static_cast<int>(this->cvc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Card.cvc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->cvc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Card)
}

::google::protobuf::uint8* Card::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string number = 1;
  if (this->number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->number().data(), static_cast<int>(this->number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Card.number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->number(), target);
  }

  // string exp_month = 2;
  if (this->exp_month().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exp_month().data(), static_cast<int>(this->exp_month().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Card.exp_month");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->exp_month(), target);
  }

  // string exp_year = 3;
  if (this->exp_year().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exp_year().data(), static_cast<int>(this->exp_year().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Card.exp_year");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->exp_year(), target);
  }

  // string cvc = 4;
  if (this->cvc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cvc().data(), static_cast<int>(this->cvc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Card.cvc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->cvc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Card)
  return target;
}

size_t Card::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Card)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string number = 1;
  if (this->number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->number());
  }

  // string exp_month = 2;
  if (this->exp_month().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exp_month());
  }

  // string exp_year = 3;
  if (this->exp_year().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exp_year());
  }

  // string cvc = 4;
  if (this->cvc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cvc());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Card::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Card)
  GOOGLE_DCHECK_NE(&from, this);
  const Card* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Card>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Card)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Card)
    MergeFrom(*source);
  }
}

void Card::MergeFrom(const Card& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Card)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.number().size() > 0) {

    number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.number_);
  }
  if (from.exp_month().size() > 0) {

    exp_month_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exp_month_);
  }
  if (from.exp_year().size() > 0) {

    exp_year_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exp_year_);
  }
  if (from.cvc().size() > 0) {

    cvc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cvc_);
  }
}

void Card::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Card::CopyFrom(const Card& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Card::IsInitialized() const {
  return true;
}

void Card::Swap(Card* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Card::InternalSwap(Card* other) {
  using std::swap;
  number_.Swap(&other->number_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exp_month_.Swap(&other->exp_month_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exp_year_.Swap(&other->exp_year_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cvc_.Swap(&other->cvc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Card::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Empty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:api.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Empty& Empty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Empty.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Empty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:api.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Empty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ManagementToken::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ManagementToken::kTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ManagementToken::ManagementToken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_ManagementToken.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.ManagementToken)
}
ManagementToken::ManagementToken(const ManagementToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  // @@protoc_insertion_point(copy_constructor:api.ManagementToken)
}

void ManagementToken::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ManagementToken::~ManagementToken() {
  // @@protoc_insertion_point(destructor:api.ManagementToken)
  SharedDtor();
}

void ManagementToken::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ManagementToken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ManagementToken::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ManagementToken& ManagementToken::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_ManagementToken.base);
  return *internal_default_instance();
}


void ManagementToken::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ManagementToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ManagementToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.ManagementToken)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.ManagementToken.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.ManagementToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.ManagementToken)
  return false;
#undef DO_
}

void ManagementToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.ManagementToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ManagementToken.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.ManagementToken)
}

::google::protobuf::uint8* ManagementToken::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.ManagementToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ManagementToken.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->token(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.ManagementToken)
  return target;
}

size_t ManagementToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ManagementToken)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ManagementToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ManagementToken)
  GOOGLE_DCHECK_NE(&from, this);
  const ManagementToken* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ManagementToken>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ManagementToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ManagementToken)
    MergeFrom(*source);
  }
}

void ManagementToken::MergeFrom(const ManagementToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ManagementToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
}

void ManagementToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ManagementToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ManagementToken::CopyFrom(const ManagementToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ManagementToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ManagementToken::IsInitialized() const {
  return true;
}

void ManagementToken::Swap(ManagementToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ManagementToken::InternalSwap(ManagementToken* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ManagementToken::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserRequest::InitAsDefaultInstance() {
  ::api::_UserRequest_default_instance_._instance.get_mutable()->string_ = const_cast< ::api::ManagementToken*>(
      ::api::ManagementToken::internal_default_instance());
  ::api::_UserRequest_default_instance_._instance.get_mutable()->user_ = const_cast< ::api::User*>(
      ::api::User::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserRequest::kStringFieldNumber;
const int UserRequest::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserRequest::UserRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_UserRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.UserRequest)
}
UserRequest::UserRequest(const UserRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_string()) {
    string_ = new ::api::ManagementToken(*from.string_);
  } else {
    string_ = NULL;
  }
  if (from.has_user()) {
    user_ = new ::api::User(*from.user_);
  } else {
    user_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.UserRequest)
}

void UserRequest::SharedCtor() {
  ::memset(&string_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_) -
      reinterpret_cast<char*>(&string_)) + sizeof(user_));
}

UserRequest::~UserRequest() {
  // @@protoc_insertion_point(destructor:api.UserRequest)
  SharedDtor();
}

void UserRequest::SharedDtor() {
  if (this != internal_default_instance()) delete string_;
  if (this != internal_default_instance()) delete user_;
}

void UserRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserRequest& UserRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_UserRequest.base);
  return *internal_default_instance();
}


void UserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.UserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && string_ != NULL) {
    delete string_;
  }
  string_ = NULL;
  if (GetArenaNoVirtual() == NULL && user_ != NULL) {
    delete user_;
  }
  user_ = NULL;
  _internal_metadata_.Clear();
}

bool UserRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.UserRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .api.ManagementToken string = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_string()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.User user = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.UserRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.UserRequest)
  return false;
#undef DO_
}

void UserRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.UserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.ManagementToken string = 1;
  if (this->has_string()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_string(), output);
  }

  // .api.User user = 2;
  if (this->has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_user(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.UserRequest)
}

::google::protobuf::uint8* UserRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.UserRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.ManagementToken string = 1;
  if (this->has_string()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_string(), deterministic, target);
  }

  // .api.User user = 2;
  if (this->has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_user(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.UserRequest)
  return target;
}

size_t UserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.UserRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .api.ManagementToken string = 1;
  if (this->has_string()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *string_);
  }

  // .api.User user = 2;
  if (this->has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.UserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.UserRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.UserRequest)
    MergeFrom(*source);
  }
}

void UserRequest::MergeFrom(const UserRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.UserRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_string()) {
    mutable_string()->::api::ManagementToken::MergeFrom(from.string());
  }
  if (from.has_user()) {
    mutable_user()->::api::User::MergeFrom(from.user());
  }
}

void UserRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.UserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserRequest::CopyFrom(const UserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.UserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserRequest::IsInitialized() const {
  return true;
}

void UserRequest::Swap(UserRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserRequest::InternalSwap(UserRequest* other) {
  using std::swap;
  swap(string_, other->string_);
  swap(user_, other->user_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserByEmailRequest::InitAsDefaultInstance() {
  ::api::_UserByEmailRequest_default_instance_._instance.get_mutable()->token_ = const_cast< ::api::ManagementToken*>(
      ::api::ManagementToken::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserByEmailRequest::kTokenFieldNumber;
const int UserByEmailRequest::kEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserByEmailRequest::UserByEmailRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_UserByEmailRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.UserByEmailRequest)
}
UserByEmailRequest::UserByEmailRequest(const UserByEmailRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.has_token()) {
    token_ = new ::api::ManagementToken(*from.token_);
  } else {
    token_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.UserByEmailRequest)
}

void UserByEmailRequest::SharedCtor() {
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_ = NULL;
}

UserByEmailRequest::~UserByEmailRequest() {
  // @@protoc_insertion_point(destructor:api.UserByEmailRequest)
  SharedDtor();
}

void UserByEmailRequest::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete token_;
}

void UserByEmailRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserByEmailRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserByEmailRequest& UserByEmailRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_UserByEmailRequest.base);
  return *internal_default_instance();
}


void UserByEmailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.UserByEmailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && token_ != NULL) {
    delete token_;
  }
  token_ = NULL;
  _internal_metadata_.Clear();
}

bool UserByEmailRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.UserByEmailRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .api.ManagementToken token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string email = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.UserByEmailRequest.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.UserByEmailRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.UserByEmailRequest)
  return false;
#undef DO_
}

void UserByEmailRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.UserByEmailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.ManagementToken token = 1;
  if (this->has_token()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_token(), output);
  }

  // string email = 2;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UserByEmailRequest.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->email(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.UserByEmailRequest)
}

::google::protobuf::uint8* UserByEmailRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.UserByEmailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.ManagementToken token = 1;
  if (this->has_token()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_token(), deterministic, target);
  }

  // string email = 2;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UserByEmailRequest.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->email(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.UserByEmailRequest)
  return target;
}

size_t UserByEmailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.UserByEmailRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string email = 2;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // .api.ManagementToken token = 1;
  if (this->has_token()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *token_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserByEmailRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.UserByEmailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UserByEmailRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserByEmailRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.UserByEmailRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.UserByEmailRequest)
    MergeFrom(*source);
  }
}

void UserByEmailRequest::MergeFrom(const UserByEmailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.UserByEmailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.has_token()) {
    mutable_token()->::api::ManagementToken::MergeFrom(from.token());
  }
}

void UserByEmailRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.UserByEmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserByEmailRequest::CopyFrom(const UserByEmailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.UserByEmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserByEmailRequest::IsInitialized() const {
  return true;
}

void UserByEmailRequest::Swap(UserByEmailRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserByEmailRequest::InternalSwap(UserByEmailRequest* other) {
  using std::swap;
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(token_, other->token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserByEmailRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Identifier::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Identifier::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Identifier::Identifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Identifier.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Identifier)
}
Identifier::Identifier(const Identifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:api.Identifier)
}

void Identifier::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Identifier::~Identifier() {
  // @@protoc_insertion_point(destructor:api.Identifier)
  SharedDtor();
}

void Identifier::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Identifier::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Identifier::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Identifier& Identifier::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Identifier.base);
  return *internal_default_instance();
}


void Identifier::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Identifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Identifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Identifier)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Identifier.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Identifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Identifier)
  return false;
#undef DO_
}

void Identifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Identifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Identifier.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Identifier)
}

::google::protobuf::uint8* Identifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Identifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Identifier.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Identifier)
  return target;
}

size_t Identifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Identifier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Identifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Identifier)
  GOOGLE_DCHECK_NE(&from, this);
  const Identifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Identifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Identifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Identifier)
    MergeFrom(*source);
  }
}

void Identifier::MergeFrom(const Identifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Identifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void Identifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Identifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identifier::CopyFrom(const Identifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Identifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identifier::IsInitialized() const {
  return true;
}

void Identifier::Swap(Identifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Identifier::InternalSwap(Identifier* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Identifier::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SMS::InitAsDefaultInstance() {
  ::api::_SMS_default_instance_._instance.get_mutable()->message_ = const_cast< ::api::Message*>(
      ::api::Message::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SMS::kServiceFieldNumber;
const int SMS::kToFieldNumber;
const int SMS::kMessageFieldNumber;
const int SMS::kMediaURLFieldNumber;
const int SMS::kCallbackFieldNumber;
const int SMS::kAppFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SMS::SMS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_SMS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.SMS)
}
SMS::SMS(const SMS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service().size() > 0) {
    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to().size() > 0) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  mediaurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mediaurl().size() > 0) {
    mediaurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mediaurl_);
  }
  callback_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callback().size() > 0) {
    callback_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callback_);
  }
  app_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app().size() > 0) {
    app_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_);
  }
  if (from.has_message()) {
    message_ = new ::api::Message(*from.message_);
  } else {
    message_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.SMS)
}

void SMS::SharedCtor() {
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mediaurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_ = NULL;
}

SMS::~SMS() {
  // @@protoc_insertion_point(destructor:api.SMS)
  SharedDtor();
}

void SMS::SharedDtor() {
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mediaurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete message_;
}

void SMS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SMS::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SMS& SMS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_SMS.base);
  return *internal_default_instance();
}


void SMS::Clear() {
// @@protoc_insertion_point(message_clear_start:api.SMS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mediaurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  _internal_metadata_.Clear();
}

bool SMS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.SMS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), static_cast<int>(this->service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SMS.service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SMS.to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.Message message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mediaURL = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mediaurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mediaurl().data(), static_cast<int>(this->mediaurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SMS.mediaURL"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string callback = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callback()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callback().data(), static_cast<int>(this->callback().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SMS.callback"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string app = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app().data(), static_cast<int>(this->app().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SMS.app"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.SMS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.SMS)
  return false;
#undef DO_
}

void SMS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.SMS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), static_cast<int>(this->service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service(), output);
  }

  // string to = 2;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->to(), output);
  }

  // .api.Message message = 3;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_message(), output);
  }

  // string mediaURL = 4;
  if (this->mediaurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mediaurl().data(), static_cast<int>(this->mediaurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.mediaURL");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mediaurl(), output);
  }

  // string callback = 5;
  if (this->callback().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callback().data(), static_cast<int>(this->callback().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.callback");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->callback(), output);
  }

  // string app = 6;
  if (this->app().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app().data(), static_cast<int>(this->app().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.app");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->app(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.SMS)
}

::google::protobuf::uint8* SMS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.SMS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), static_cast<int>(this->service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service(), target);
  }

  // string to = 2;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->to(), target);
  }

  // .api.Message message = 3;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_message(), deterministic, target);
  }

  // string mediaURL = 4;
  if (this->mediaurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mediaurl().data(), static_cast<int>(this->mediaurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.mediaURL");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mediaurl(), target);
  }

  // string callback = 5;
  if (this->callback().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callback().data(), static_cast<int>(this->callback().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.callback");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->callback(), target);
  }

  // string app = 6;
  if (this->app().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app().data(), static_cast<int>(this->app().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.app");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->app(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.SMS)
  return target;
}

size_t SMS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.SMS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service = 1;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // string to = 2;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // string mediaURL = 4;
  if (this->mediaurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mediaurl());
  }

  // string callback = 5;
  if (this->callback().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callback());
  }

  // string app = 6;
  if (this->app().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app());
  }

  // .api.Message message = 3;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *message_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SMS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.SMS)
  GOOGLE_DCHECK_NE(&from, this);
  const SMS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SMS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.SMS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.SMS)
    MergeFrom(*source);
  }
}

void SMS::MergeFrom(const SMS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.SMS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.mediaurl().size() > 0) {

    mediaurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mediaurl_);
  }
  if (from.callback().size() > 0) {

    callback_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callback_);
  }
  if (from.app().size() > 0) {

    app_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_);
  }
  if (from.has_message()) {
    mutable_message()->::api::Message::MergeFrom(from.message());
  }
}

void SMS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.SMS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SMS::CopyFrom(const SMS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.SMS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SMS::IsInitialized() const {
  return true;
}

void SMS::Swap(SMS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SMS::InternalSwap(SMS* other) {
  using std::swap;
  service_.Swap(&other->service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_.Swap(&other->to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mediaurl_.Swap(&other->mediaurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  callback_.Swap(&other->callback_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  app_.Swap(&other->app_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(message_, other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SMS::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SMSBlast::InitAsDefaultInstance() {
  ::api::_SMSBlast_default_instance_._instance.get_mutable()->message_ = const_cast< ::api::Message*>(
      ::api::Message::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SMSBlast::kServiceFieldNumber;
const int SMSBlast::kToFieldNumber;
const int SMSBlast::kMessageFieldNumber;
const int SMSBlast::kMediaURLFieldNumber;
const int SMSBlast::kCallbackFieldNumber;
const int SMSBlast::kAppFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SMSBlast::SMSBlast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_SMSBlast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.SMSBlast)
}
SMSBlast::SMSBlast(const SMSBlast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service().size() > 0) {
    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to().size() > 0) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  mediaurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mediaurl().size() > 0) {
    mediaurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mediaurl_);
  }
  callback_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callback().size() > 0) {
    callback_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callback_);
  }
  app_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app().size() > 0) {
    app_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_);
  }
  if (from.has_message()) {
    message_ = new ::api::Message(*from.message_);
  } else {
    message_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.SMSBlast)
}

void SMSBlast::SharedCtor() {
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mediaurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_ = NULL;
}

SMSBlast::~SMSBlast() {
  // @@protoc_insertion_point(destructor:api.SMSBlast)
  SharedDtor();
}

void SMSBlast::SharedDtor() {
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mediaurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete message_;
}

void SMSBlast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SMSBlast::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SMSBlast& SMSBlast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_SMSBlast.base);
  return *internal_default_instance();
}


void SMSBlast::Clear() {
// @@protoc_insertion_point(message_clear_start:api.SMSBlast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mediaurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  _internal_metadata_.Clear();
}

bool SMSBlast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.SMSBlast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string service = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), static_cast<int>(this->service().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SMSBlast.service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SMSBlast.to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.Message message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string mediaURL = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_mediaurl()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->mediaurl().data(), static_cast<int>(this->mediaurl().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SMSBlast.mediaURL"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string callback = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callback()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callback().data(), static_cast<int>(this->callback().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SMSBlast.callback"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string app = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app().data(), static_cast<int>(this->app().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SMSBlast.app"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.SMSBlast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.SMSBlast)
  return false;
#undef DO_
}

void SMSBlast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.SMSBlast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), static_cast<int>(this->service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMSBlast.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->service(), output);
  }

  // string to = 2;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMSBlast.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->to(), output);
  }

  // .api.Message message = 3;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_message(), output);
  }

  // string mediaURL = 4;
  if (this->mediaurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mediaurl().data(), static_cast<int>(this->mediaurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMSBlast.mediaURL");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->mediaurl(), output);
  }

  // string callback = 5;
  if (this->callback().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callback().data(), static_cast<int>(this->callback().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMSBlast.callback");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->callback(), output);
  }

  // string app = 6;
  if (this->app().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app().data(), static_cast<int>(this->app().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMSBlast.app");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->app(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.SMSBlast)
}

::google::protobuf::uint8* SMSBlast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.SMSBlast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string service = 1;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), static_cast<int>(this->service().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMSBlast.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->service(), target);
  }

  // string to = 2;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMSBlast.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->to(), target);
  }

  // .api.Message message = 3;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_message(), deterministic, target);
  }

  // string mediaURL = 4;
  if (this->mediaurl().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->mediaurl().data(), static_cast<int>(this->mediaurl().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMSBlast.mediaURL");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->mediaurl(), target);
  }

  // string callback = 5;
  if (this->callback().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callback().data(), static_cast<int>(this->callback().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMSBlast.callback");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->callback(), target);
  }

  // string app = 6;
  if (this->app().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app().data(), static_cast<int>(this->app().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMSBlast.app");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->app(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.SMSBlast)
  return target;
}

size_t SMSBlast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.SMSBlast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string service = 1;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // string to = 2;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // string mediaURL = 4;
  if (this->mediaurl().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->mediaurl());
  }

  // string callback = 5;
  if (this->callback().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callback());
  }

  // string app = 6;
  if (this->app().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app());
  }

  // .api.Message message = 3;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *message_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SMSBlast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.SMSBlast)
  GOOGLE_DCHECK_NE(&from, this);
  const SMSBlast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SMSBlast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.SMSBlast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.SMSBlast)
    MergeFrom(*source);
  }
}

void SMSBlast::MergeFrom(const SMSBlast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.SMSBlast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.mediaurl().size() > 0) {

    mediaurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mediaurl_);
  }
  if (from.callback().size() > 0) {

    callback_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callback_);
  }
  if (from.app().size() > 0) {

    app_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_);
  }
  if (from.has_message()) {
    mutable_message()->::api::Message::MergeFrom(from.message());
  }
}

void SMSBlast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.SMSBlast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SMSBlast::CopyFrom(const SMSBlast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.SMSBlast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SMSBlast::IsInitialized() const {
  return true;
}

void SMSBlast::Swap(SMSBlast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SMSBlast::InternalSwap(SMSBlast* other) {
  using std::swap;
  service_.Swap(&other->service_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_.Swap(&other->to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mediaurl_.Swap(&other->mediaurl_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  callback_.Swap(&other->callback_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  app_.Swap(&other->app_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(message_, other->message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SMSBlast::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EmailRequest::InitAsDefaultInstance() {
  ::api::_EmailRequest_default_instance_._instance.get_mutable()->email_ = const_cast< ::api::Email*>(
      ::api::Email::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmailRequest::kFromNameFieldNumber;
const int EmailRequest::kFromEmailFieldNumber;
const int EmailRequest::kEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmailRequest::EmailRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_EmailRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.EmailRequest)
}
EmailRequest::EmailRequest(const EmailRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_name().size() > 0) {
    from_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_name_);
  }
  from_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_email().size() > 0) {
    from_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_email_);
  }
  if (from.has_email()) {
    email_ = new ::api::Email(*from.email_);
  } else {
    email_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.EmailRequest)
}

void EmailRequest::SharedCtor() {
  from_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_ = NULL;
}

EmailRequest::~EmailRequest() {
  // @@protoc_insertion_point(destructor:api.EmailRequest)
  SharedDtor();
}

void EmailRequest::SharedDtor() {
  from_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete email_;
}

void EmailRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EmailRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmailRequest& EmailRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_EmailRequest.base);
  return *internal_default_instance();
}


void EmailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.EmailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && email_ != NULL) {
    delete email_;
  }
  email_ = NULL;
  _internal_metadata_.Clear();
}

bool EmailRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.EmailRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_name().data(), static_cast<int>(this->from_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.EmailRequest.from_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_email = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_email().data(), static_cast<int>(this->from_email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.EmailRequest.from_email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.Email email = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.EmailRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.EmailRequest)
  return false;
#undef DO_
}

void EmailRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.EmailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_name = 1;
  if (this->from_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_name().data(), static_cast<int>(this->from_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailRequest.from_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_name(), output);
  }

  // string from_email = 2;
  if (this->from_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_email().data(), static_cast<int>(this->from_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailRequest.from_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_email(), output);
  }

  // .api.Email email = 3;
  if (this->has_email()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_email(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.EmailRequest)
}

::google::protobuf::uint8* EmailRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.EmailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_name = 1;
  if (this->from_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_name().data(), static_cast<int>(this->from_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailRequest.from_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_name(), target);
  }

  // string from_email = 2;
  if (this->from_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_email().data(), static_cast<int>(this->from_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailRequest.from_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_email(), target);
  }

  // .api.Email email = 3;
  if (this->has_email()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_email(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.EmailRequest)
  return target;
}

size_t EmailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.EmailRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from_name = 1;
  if (this->from_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_name());
  }

  // string from_email = 2;
  if (this->from_email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_email());
  }

  // .api.Email email = 3;
  if (this->has_email()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *email_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmailRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.EmailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EmailRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmailRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.EmailRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.EmailRequest)
    MergeFrom(*source);
  }
}

void EmailRequest::MergeFrom(const EmailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.EmailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_name().size() > 0) {

    from_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_name_);
  }
  if (from.from_email().size() > 0) {

    from_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_email_);
  }
  if (from.has_email()) {
    mutable_email()->::api::Email::MergeFrom(from.email());
  }
}

void EmailRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.EmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmailRequest::CopyFrom(const EmailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.EmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmailRequest::IsInitialized() const {
  return true;
}

void EmailRequest::Swap(EmailRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmailRequest::InternalSwap(EmailRequest* other) {
  using std::swap;
  from_name_.Swap(&other->from_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  from_email_.Swap(&other->from_email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(email_, other->email_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmailRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EmailBlastRequest::InitAsDefaultInstance() {
  ::api::_EmailBlastRequest_default_instance_._instance.get_mutable()->blast_ = const_cast< ::api::EmailBlast*>(
      ::api::EmailBlast::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmailBlastRequest::kFromNameFieldNumber;
const int EmailBlastRequest::kFromEmailFieldNumber;
const int EmailBlastRequest::kBlastFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmailBlastRequest::EmailBlastRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_EmailBlastRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.EmailBlastRequest)
}
EmailBlastRequest::EmailBlastRequest(const EmailBlastRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_name().size() > 0) {
    from_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_name_);
  }
  from_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from_email().size() > 0) {
    from_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_email_);
  }
  if (from.has_blast()) {
    blast_ = new ::api::EmailBlast(*from.blast_);
  } else {
    blast_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.EmailBlastRequest)
}

void EmailBlastRequest::SharedCtor() {
  from_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  blast_ = NULL;
}

EmailBlastRequest::~EmailBlastRequest() {
  // @@protoc_insertion_point(destructor:api.EmailBlastRequest)
  SharedDtor();
}

void EmailBlastRequest::SharedDtor() {
  from_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete blast_;
}

void EmailBlastRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EmailBlastRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmailBlastRequest& EmailBlastRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_EmailBlastRequest.base);
  return *internal_default_instance();
}


void EmailBlastRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.EmailBlastRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && blast_ != NULL) {
    delete blast_;
  }
  blast_ = NULL;
  _internal_metadata_.Clear();
}

bool EmailBlastRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.EmailBlastRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_name().data(), static_cast<int>(this->from_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.EmailBlastRequest.from_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from_email = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from_email().data(), static_cast<int>(this->from_email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.EmailBlastRequest.from_email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.EmailBlast blast = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_blast()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.EmailBlastRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.EmailBlastRequest)
  return false;
#undef DO_
}

void EmailBlastRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.EmailBlastRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_name = 1;
  if (this->from_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_name().data(), static_cast<int>(this->from_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailBlastRequest.from_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from_name(), output);
  }

  // string from_email = 2;
  if (this->from_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_email().data(), static_cast<int>(this->from_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailBlastRequest.from_email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from_email(), output);
  }

  // .api.EmailBlast blast = 3;
  if (this->has_blast()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_blast(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.EmailBlastRequest)
}

::google::protobuf::uint8* EmailBlastRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.EmailBlastRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from_name = 1;
  if (this->from_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_name().data(), static_cast<int>(this->from_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailBlastRequest.from_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from_name(), target);
  }

  // string from_email = 2;
  if (this->from_email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from_email().data(), static_cast<int>(this->from_email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailBlastRequest.from_email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from_email(), target);
  }

  // .api.EmailBlast blast = 3;
  if (this->has_blast()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_blast(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.EmailBlastRequest)
  return target;
}

size_t EmailBlastRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.EmailBlastRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from_name = 1;
  if (this->from_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_name());
  }

  // string from_email = 2;
  if (this->from_email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from_email());
  }

  // .api.EmailBlast blast = 3;
  if (this->has_blast()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *blast_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmailBlastRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.EmailBlastRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EmailBlastRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmailBlastRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.EmailBlastRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.EmailBlastRequest)
    MergeFrom(*source);
  }
}

void EmailBlastRequest::MergeFrom(const EmailBlastRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.EmailBlastRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from_name().size() > 0) {

    from_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_name_);
  }
  if (from.from_email().size() > 0) {

    from_email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_email_);
  }
  if (from.has_blast()) {
    mutable_blast()->::api::EmailBlast::MergeFrom(from.blast());
  }
}

void EmailBlastRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.EmailBlastRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmailBlastRequest::CopyFrom(const EmailBlastRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.EmailBlastRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmailBlastRequest::IsInitialized() const {
  return true;
}

void EmailBlastRequest::Swap(EmailBlastRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmailBlastRequest::InternalSwap(EmailBlastRequest* other) {
  using std::swap;
  from_name_.Swap(&other->from_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  from_email_.Swap(&other->from_email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(blast_, other->blast_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmailBlastRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

EmailBlast_NameAddressEntry_DoNotUse::EmailBlast_NameAddressEntry_DoNotUse() {}
EmailBlast_NameAddressEntry_DoNotUse::EmailBlast_NameAddressEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void EmailBlast_NameAddressEntry_DoNotUse::MergeFrom(const EmailBlast_NameAddressEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata EmailBlast_NameAddressEntry_DoNotUse::GetMetadata() const {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[12];
}
void EmailBlast_NameAddressEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void EmailBlast::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmailBlast::kNameAddressFieldNumber;
const int EmailBlast::kSubjectFieldNumber;
const int EmailBlast::kPlainFieldNumber;
const int EmailBlast::kHtmlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmailBlast::EmailBlast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_EmailBlast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.EmailBlast)
}
EmailBlast::EmailBlast(const EmailBlast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_address_.MergeFrom(from.name_address_);
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject().size() > 0) {
    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  plain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plain().size() > 0) {
    plain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_);
  }
  html_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.html().size() > 0) {
    html_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.html_);
  }
  // @@protoc_insertion_point(copy_constructor:api.EmailBlast)
}

void EmailBlast::SharedCtor() {
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  html_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EmailBlast::~EmailBlast() {
  // @@protoc_insertion_point(destructor:api.EmailBlast)
  SharedDtor();
}

void EmailBlast::SharedDtor() {
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  html_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EmailBlast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EmailBlast::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmailBlast& EmailBlast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_EmailBlast.base);
  return *internal_default_instance();
}


void EmailBlast::Clear() {
// @@protoc_insertion_point(message_clear_start:api.EmailBlast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_address_.Clear();
  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  html_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EmailBlast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.EmailBlast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> name_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          EmailBlast_NameAddressEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              EmailBlast_NameAddressEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&name_address_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.EmailBlast.NameAddressEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.EmailBlast.NameAddressEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), static_cast<int>(this->subject().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.EmailBlast.subject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plain = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plain().data(), static_cast<int>(this->plain().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.EmailBlast.plain"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string html = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_html()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->html().data(), static_cast<int>(this->html().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.EmailBlast.html"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.EmailBlast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.EmailBlast)
  return false;
#undef DO_
}

void EmailBlast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.EmailBlast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> name_address = 1;
  if (!this->name_address().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.EmailBlast.NameAddressEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.EmailBlast.NameAddressEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->name_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->name_address().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->name_address().begin();
          it != this->name_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<EmailBlast_NameAddressEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(name_address_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<EmailBlast_NameAddressEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->name_address().begin();
          it != this->name_address().end(); ++it) {
        entry.reset(name_address_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // string subject = 2;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailBlast.subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->subject(), output);
  }

  // string plain = 3;
  if (this->plain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plain().data(), static_cast<int>(this->plain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailBlast.plain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->plain(), output);
  }

  // string html = 4;
  if (this->html().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->html().data(), static_cast<int>(this->html().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailBlast.html");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->html(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.EmailBlast)
}

::google::protobuf::uint8* EmailBlast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.EmailBlast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> name_address = 1;
  if (!this->name_address().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.EmailBlast.NameAddressEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.EmailBlast.NameAddressEntry.value");
      }
    };

    if (deterministic &&
        this->name_address().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->name_address().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->name_address().begin();
          it != this->name_address().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<EmailBlast_NameAddressEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(name_address_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<EmailBlast_NameAddressEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->name_address().begin();
          it != this->name_address().end(); ++it) {
        entry.reset(name_address_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // string subject = 2;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailBlast.subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->subject(), target);
  }

  // string plain = 3;
  if (this->plain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plain().data(), static_cast<int>(this->plain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailBlast.plain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->plain(), target);
  }

  // string html = 4;
  if (this->html().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->html().data(), static_cast<int>(this->html().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailBlast.html");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->html(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.EmailBlast)
  return target;
}

size_t EmailBlast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.EmailBlast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> name_address = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->name_address_size());
  {
    ::std::unique_ptr<EmailBlast_NameAddressEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->name_address().begin();
        it != this->name_address().end(); ++it) {
      entry.reset(name_address_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string subject = 2;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  // string plain = 3;
  if (this->plain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plain());
  }

  // string html = 4;
  if (this->html().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->html());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmailBlast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.EmailBlast)
  GOOGLE_DCHECK_NE(&from, this);
  const EmailBlast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmailBlast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.EmailBlast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.EmailBlast)
    MergeFrom(*source);
  }
}

void EmailBlast::MergeFrom(const EmailBlast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.EmailBlast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  name_address_.MergeFrom(from.name_address_);
  if (from.subject().size() > 0) {

    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  if (from.plain().size() > 0) {

    plain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_);
  }
  if (from.html().size() > 0) {

    html_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.html_);
  }
}

void EmailBlast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.EmailBlast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmailBlast::CopyFrom(const EmailBlast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.EmailBlast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmailBlast::IsInitialized() const {
  return true;
}

void EmailBlast::Swap(EmailBlast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmailBlast::InternalSwap(EmailBlast* other) {
  using std::swap;
  name_address_.Swap(&other->name_address_);
  subject_.Swap(&other->subject_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plain_.Swap(&other->plain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  html_.Swap(&other->html_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmailBlast::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Email::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Email::kNameFieldNumber;
const int Email::kAddressFieldNumber;
const int Email::kSubjectFieldNumber;
const int Email::kPlainFieldNumber;
const int Email::kHtmlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Email::Email()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Email.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Email)
}
Email::Email(const Email& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject().size() > 0) {
    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  plain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plain().size() > 0) {
    plain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_);
  }
  html_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.html().size() > 0) {
    html_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.html_);
  }
  // @@protoc_insertion_point(copy_constructor:api.Email)
}

void Email::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  html_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Email::~Email() {
  // @@protoc_insertion_point(destructor:api.Email)
  SharedDtor();
}

void Email::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  html_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Email::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Email::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Email& Email::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Email.base);
  return *internal_default_instance();
}


void Email::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Email)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  html_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Email::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Email)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Email.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Email.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subject = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), static_cast<int>(this->subject().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Email.subject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plain = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plain().data(), static_cast<int>(this->plain().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Email.plain"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string html = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_html()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->html().data(), static_cast<int>(this->html().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Email.html"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Email)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Email)
  return false;
#undef DO_
}

void Email::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Email)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Email.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Email.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->address(), output);
  }

  // string subject = 3;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Email.subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->subject(), output);
  }

  // string plain = 4;
  if (this->plain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plain().data(), static_cast<int>(this->plain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Email.plain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->plain(), output);
  }

  // string html = 5;
  if (this->html().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->html().data(), static_cast<int>(this->html().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Email.html");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->html(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Email)
}

::google::protobuf::uint8* Email::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Email)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Email.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Email.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->address(), target);
  }

  // string subject = 3;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Email.subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->subject(), target);
  }

  // string plain = 4;
  if (this->plain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plain().data(), static_cast<int>(this->plain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Email.plain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->plain(), target);
  }

  // string html = 5;
  if (this->html().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->html().data(), static_cast<int>(this->html().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Email.html");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->html(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Email)
  return target;
}

size_t Email::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Email)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string address = 2;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string subject = 3;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  // string plain = 4;
  if (this->plain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plain());
  }

  // string html = 5;
  if (this->html().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->html());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Email::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Email)
  GOOGLE_DCHECK_NE(&from, this);
  const Email* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Email>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Email)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Email)
    MergeFrom(*source);
  }
}

void Email::MergeFrom(const Email& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Email)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.subject().size() > 0) {

    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  if (from.plain().size() > 0) {

    plain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_);
  }
  if (from.html().size() > 0) {

    html_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.html_);
  }
}

void Email::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Email)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Email::CopyFrom(const Email& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Email)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Email::IsInitialized() const {
  return true;
}

void Email::Swap(Email* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Email::InternalSwap(Email* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subject_.Swap(&other->subject_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plain_.Swap(&other->plain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  html_.Swap(&other->html_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Email::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Call::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Call::kFromFieldNumber;
const int Call::kToFieldNumber;
const int Call::kAppFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Call::Call()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Call.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Call)
}
Call::Call(const Call& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to().size() > 0) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  app_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app().size() > 0) {
    app_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_);
  }
  // @@protoc_insertion_point(copy_constructor:api.Call)
}

void Call::SharedCtor() {
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Call::~Call() {
  // @@protoc_insertion_point(destructor:api.Call)
  SharedDtor();
}

void Call::SharedDtor() {
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Call::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Call::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Call& Call::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Call.base);
  return *internal_default_instance();
}


void Call::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Call::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Call)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Call.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Call.to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string app = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app().data(), static_cast<int>(this->app().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Call.app"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Call)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Call)
  return false;
#undef DO_
}

void Call::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Call.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from(), output);
  }

  // string to = 2;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Call.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->to(), output);
  }

  // string app = 3;
  if (this->app().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app().data(), static_cast<int>(this->app().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Call.app");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->app(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Call)
}

::google::protobuf::uint8* Call::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Call.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from(), target);
  }

  // string to = 2;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Call.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->to(), target);
  }

  // string app = 3;
  if (this->app().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app().data(), static_cast<int>(this->app().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Call.app");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->app(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Call)
  return target;
}

size_t Call::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Call)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from = 1;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  // string to = 2;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // string app = 3;
  if (this->app().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Call::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Call)
  GOOGLE_DCHECK_NE(&from, this);
  const Call* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Call>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Call)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Call)
    MergeFrom(*source);
  }
}

void Call::MergeFrom(const Call& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Call)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.app().size() > 0) {

    app_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_);
  }
}

void Call::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Call::CopyFrom(const Call& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Call::IsInitialized() const {
  return true;
}

void Call::Swap(Call* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Call::InternalSwap(Call* other) {
  using std::swap;
  from_.Swap(&other->from_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_.Swap(&other->to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  app_.Swap(&other->app_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Call::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Message.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Message)
}
Message::Message(const Message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:api.Message)
}

void Message::SharedCtor() {
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:api.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message& Message::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Message.base);
  return *internal_default_instance();
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Message)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string value = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Message.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Message.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Message.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Message)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  using std::swap;
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void User::InitAsDefaultInstance() {
  ::api::_User_default_instance_._instance.get_mutable()->user_metadata_ = const_cast< ::api::UserMetadata*>(
      ::api::UserMetadata::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->app_metadata_ = const_cast< ::api::AppMetadata*>(
      ::api::AppMetadata::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int User::kUserIdFieldNumber;
const int User::kNameFieldNumber;
const int User::kGivenNameFieldNumber;
const int User::kFamilyNameFieldNumber;
const int User::kGenderFieldNumber;
const int User::kBirthdateFieldNumber;
const int User::kEmailFieldNumber;
const int User::kPhoneNumberFieldNumber;
const int User::kPictureFieldNumber;
const int User::kUserMetadataFieldNumber;
const int User::kAppMetadataFieldNumber;
const int User::kLastIpFieldNumber;
const int User::kBlockedFieldNumber;
const int User::kNicknameFieldNumber;
const int User::kMultifactorFieldNumber;
const int User::kCreatedAtFieldNumber;
const int User::kUpdatedAtFieldNumber;
const int User::kPhoneVerifiedFieldNumber;
const int User::kIdentitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

User::User()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_User.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.User)
}
User::User(const User& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      multifactor_(from.multifactor_),
      identities_(from.identities_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  given_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.given_name().size() > 0) {
    given_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.given_name_);
  }
  family_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.family_name().size() > 0) {
    family_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.family_name_);
  }
  gender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gender().size() > 0) {
    gender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gender_);
  }
  birthdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.birthdate().size() > 0) {
    birthdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthdate_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone_number().size() > 0) {
    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  picture_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.picture().size() > 0) {
    picture_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.picture_);
  }
  last_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.last_ip().size() > 0) {
    last_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_ip_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  created_at_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.created_at().size() > 0) {
    created_at_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.created_at_);
  }
  updated_at_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.updated_at().size() > 0) {
    updated_at_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updated_at_);
  }
  if (from.has_user_metadata()) {
    user_metadata_ = new ::api::UserMetadata(*from.user_metadata_);
  } else {
    user_metadata_ = NULL;
  }
  if (from.has_app_metadata()) {
    app_metadata_ = new ::api::AppMetadata(*from.app_metadata_);
  } else {
    app_metadata_ = NULL;
  }
  ::memcpy(&blocked_, &from.blocked_,
    static_cast<size_t>(reinterpret_cast<char*>(&phone_verified_) -
    reinterpret_cast<char*>(&blocked_)) + sizeof(phone_verified_));
  // @@protoc_insertion_point(copy_constructor:api.User)
}

void User::SharedCtor() {
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  given_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  family_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picture_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  created_at_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updated_at_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&user_metadata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phone_verified_) -
      reinterpret_cast<char*>(&user_metadata_)) + sizeof(phone_verified_));
}

User::~User() {
  // @@protoc_insertion_point(destructor:api.User)
  SharedDtor();
}

void User::SharedDtor() {
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  given_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  family_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picture_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  created_at_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updated_at_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete user_metadata_;
  if (this != internal_default_instance()) delete app_metadata_;
}

void User::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* User::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const User& User::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_User.base);
  return *internal_default_instance();
}


void User::Clear() {
// @@protoc_insertion_point(message_clear_start:api.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  multifactor_.Clear();
  identities_.Clear();
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  given_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  family_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  created_at_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  updated_at_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && user_metadata_ != NULL) {
    delete user_metadata_;
  }
  user_metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && app_metadata_ != NULL) {
    delete app_metadata_;
  }
  app_metadata_ = NULL;
  ::memset(&blocked_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&phone_verified_) -
      reinterpret_cast<char*>(&blocked_)) + sizeof(phone_verified_));
  _internal_metadata_.Clear();
}

bool User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.User)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.User.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.User.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string given_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_given_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->given_name().data(), static_cast<int>(this->given_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.User.given_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string family_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_family_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->family_name().data(), static_cast<int>(this->family_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.User.family_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gender = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gender()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gender().data(), static_cast<int>(this->gender().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.User.gender"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string birthdate = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_birthdate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->birthdate().data(), static_cast<int>(this->birthdate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.User.birthdate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string email = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.User.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone_number = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone_number().data(), static_cast<int>(this->phone_number().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.User.phone_number"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string picture = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_picture()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->picture().data(), static_cast<int>(this->picture().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.User.picture"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.UserMetadata user_metadata = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.AppMetadata app_metadata = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_app_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string last_ip = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->last_ip().data(), static_cast<int>(this->last_ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.User.last_ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool blocked = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &blocked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickname = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), static_cast<int>(this->nickname().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.User.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string multifactor = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_multifactor()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->multifactor(this->multifactor_size() - 1).data(),
            static_cast<int>(this->multifactor(this->multifactor_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.User.multifactor"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string created_at = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_created_at()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->created_at().data(), static_cast<int>(this->created_at().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.User.created_at"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string updated_at = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_updated_at()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->updated_at().data(), static_cast<int>(this->updated_at().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.User.updated_at"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool phone_verified = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &phone_verified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .api.Identity identities = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.User)
  return false;
#undef DO_
}

void User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->user_id(), output);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // string given_name = 3;
  if (this->given_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->given_name().data(), static_cast<int>(this->given_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.given_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->given_name(), output);
  }

  // string family_name = 4;
  if (this->family_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->family_name().data(), static_cast<int>(this->family_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.family_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->family_name(), output);
  }

  // string gender = 5;
  if (this->gender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gender().data(), static_cast<int>(this->gender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.gender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->gender(), output);
  }

  // string birthdate = 6;
  if (this->birthdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthdate().data(), static_cast<int>(this->birthdate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.birthdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->birthdate(), output);
  }

  // string email = 7;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->email(), output);
  }

  // string phone_number = 8;
  if (this->phone_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_number().data(), static_cast<int>(this->phone_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.phone_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->phone_number(), output);
  }

  // string picture = 9;
  if (this->picture().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->picture().data(), static_cast<int>(this->picture().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.picture");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->picture(), output);
  }

  // .api.UserMetadata user_metadata = 10;
  if (this->has_user_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_user_metadata(), output);
  }

  // .api.AppMetadata app_metadata = 11;
  if (this->has_app_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_app_metadata(), output);
  }

  // string last_ip = 12;
  if (this->last_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_ip().data(), static_cast<int>(this->last_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.last_ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->last_ip(), output);
  }

  // bool blocked = 13;
  if (this->blocked() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->blocked(), output);
  }

  // string nickname = 14;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->nickname(), output);
  }

  // repeated string multifactor = 15;
  for (int i = 0, n = this->multifactor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->multifactor(i).data(), static_cast<int>(this->multifactor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.multifactor");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      15, this->multifactor(i), output);
  }

  // string created_at = 17;
  if (this->created_at().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->created_at().data(), static_cast<int>(this->created_at().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.created_at");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->created_at(), output);
  }

  // string updated_at = 18;
  if (this->updated_at().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->updated_at().data(), static_cast<int>(this->updated_at().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.updated_at");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      18, this->updated_at(), output);
  }

  // bool phone_verified = 19;
  if (this->phone_verified() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->phone_verified(), output);
  }

  // repeated .api.Identity identities = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identities_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20,
      this->identities(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.User)
}

::google::protobuf::uint8* User::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->user_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // string given_name = 3;
  if (this->given_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->given_name().data(), static_cast<int>(this->given_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.given_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->given_name(), target);
  }

  // string family_name = 4;
  if (this->family_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->family_name().data(), static_cast<int>(this->family_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.family_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->family_name(), target);
  }

  // string gender = 5;
  if (this->gender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gender().data(), static_cast<int>(this->gender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.gender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->gender(), target);
  }

  // string birthdate = 6;
  if (this->birthdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthdate().data(), static_cast<int>(this->birthdate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.birthdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->birthdate(), target);
  }

  // string email = 7;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->email(), target);
  }

  // string phone_number = 8;
  if (this->phone_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone_number().data(), static_cast<int>(this->phone_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.phone_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->phone_number(), target);
  }

  // string picture = 9;
  if (this->picture().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->picture().data(), static_cast<int>(this->picture().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.picture");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->picture(), target);
  }

  // .api.UserMetadata user_metadata = 10;
  if (this->has_user_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_user_metadata(), deterministic, target);
  }

  // .api.AppMetadata app_metadata = 11;
  if (this->has_app_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_app_metadata(), deterministic, target);
  }

  // string last_ip = 12;
  if (this->last_ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_ip().data(), static_cast<int>(this->last_ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.last_ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->last_ip(), target);
  }

  // bool blocked = 13;
  if (this->blocked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->blocked(), target);
  }

  // string nickname = 14;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), static_cast<int>(this->nickname().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->nickname(), target);
  }

  // repeated string multifactor = 15;
  for (int i = 0, n = this->multifactor_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->multifactor(i).data(), static_cast<int>(this->multifactor(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.multifactor");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(15, this->multifactor(i), target);
  }

  // string created_at = 17;
  if (this->created_at().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->created_at().data(), static_cast<int>(this->created_at().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.created_at");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->created_at(), target);
  }

  // string updated_at = 18;
  if (this->updated_at().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->updated_at().data(), static_cast<int>(this->updated_at().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.updated_at");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        18, this->updated_at(), target);
  }

  // bool phone_verified = 19;
  if (this->phone_verified() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->phone_verified(), target);
  }

  // repeated .api.Identity identities = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identities_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        20, this->identities(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.User)
  return target;
}

size_t User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.User)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string multifactor = 15;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->multifactor_size());
  for (int i = 0, n = this->multifactor_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->multifactor(i));
  }

  // repeated .api.Identity identities = 20;
  {
    unsigned int count = static_cast<unsigned int>(this->identities_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identities(static_cast<int>(i)));
    }
  }

  // string user_id = 1;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string given_name = 3;
  if (this->given_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->given_name());
  }

  // string family_name = 4;
  if (this->family_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->family_name());
  }

  // string gender = 5;
  if (this->gender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gender());
  }

  // string birthdate = 6;
  if (this->birthdate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->birthdate());
  }

  // string email = 7;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string phone_number = 8;
  if (this->phone_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone_number());
  }

  // string picture = 9;
  if (this->picture().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->picture());
  }

  // string last_ip = 12;
  if (this->last_ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->last_ip());
  }

  // string nickname = 14;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // string created_at = 17;
  if (this->created_at().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->created_at());
  }

  // string updated_at = 18;
  if (this->updated_at().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->updated_at());
  }

  // .api.UserMetadata user_metadata = 10;
  if (this->has_user_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_metadata_);
  }

  // .api.AppMetadata app_metadata = 11;
  if (this->has_app_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *app_metadata_);
  }

  // bool blocked = 13;
  if (this->blocked() != 0) {
    total_size += 1 + 1;
  }

  // bool phone_verified = 19;
  if (this->phone_verified() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void User::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.User)
  GOOGLE_DCHECK_NE(&from, this);
  const User* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const User>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.User)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.User)
    MergeFrom(*source);
  }
}

void User::MergeFrom(const User& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.User)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  multifactor_.MergeFrom(from.multifactor_);
  identities_.MergeFrom(from.identities_);
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.given_name().size() > 0) {

    given_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.given_name_);
  }
  if (from.family_name().size() > 0) {

    family_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.family_name_);
  }
  if (from.gender().size() > 0) {

    gender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gender_);
  }
  if (from.birthdate().size() > 0) {

    birthdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthdate_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.phone_number().size() > 0) {

    phone_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_number_);
  }
  if (from.picture().size() > 0) {

    picture_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.picture_);
  }
  if (from.last_ip().size() > 0) {

    last_ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_ip_);
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.created_at().size() > 0) {

    created_at_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.created_at_);
  }
  if (from.updated_at().size() > 0) {

    updated_at_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.updated_at_);
  }
  if (from.has_user_metadata()) {
    mutable_user_metadata()->::api::UserMetadata::MergeFrom(from.user_metadata());
  }
  if (from.has_app_metadata()) {
    mutable_app_metadata()->::api::AppMetadata::MergeFrom(from.app_metadata());
  }
  if (from.blocked() != 0) {
    set_blocked(from.blocked());
  }
  if (from.phone_verified() != 0) {
    set_phone_verified(from.phone_verified());
  }
}

void User::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {
  return true;
}

void User::Swap(User* other) {
  if (other == this) return;
  InternalSwap(other);
}
void User::InternalSwap(User* other) {
  using std::swap;
  multifactor_.InternalSwap(CastToBase(&other->multifactor_));
  CastToBase(&identities_)->InternalSwap(CastToBase(&other->identities_));
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  given_name_.Swap(&other->given_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  family_name_.Swap(&other->family_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gender_.Swap(&other->gender_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  birthdate_.Swap(&other->birthdate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phone_number_.Swap(&other->phone_number_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  picture_.Swap(&other->picture_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  last_ip_.Swap(&other->last_ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  nickname_.Swap(&other->nickname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  created_at_.Swap(&other->created_at_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  updated_at_.Swap(&other->updated_at_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(user_metadata_, other->user_metadata_);
  swap(app_metadata_, other->app_metadata_);
  swap(blocked_, other->blocked_);
  swap(phone_verified_, other->phone_verified_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata User::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Identity::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Identity::kConnectionFieldNumber;
const int Identity::kUserIdFieldNumber;
const int Identity::kProviderFieldNumber;
const int Identity::kIsSocialFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Identity::Identity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Identity.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Identity)
}
Identity::Identity(const Identity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  connection_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.connection().size() > 0) {
    connection_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.connection_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  provider_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.provider().size() > 0) {
    provider_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.provider_);
  }
  issocial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.issocial().size() > 0) {
    issocial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issocial_);
  }
  // @@protoc_insertion_point(copy_constructor:api.Identity)
}

void Identity::SharedCtor() {
  connection_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  provider_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issocial_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Identity::~Identity() {
  // @@protoc_insertion_point(destructor:api.Identity)
  SharedDtor();
}

void Identity::SharedDtor() {
  connection_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  provider_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issocial_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Identity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Identity::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Identity& Identity::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Identity.base);
  return *internal_default_instance();
}


void Identity::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Identity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  connection_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  provider_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  issocial_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Identity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Identity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string connection = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_connection()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->connection().data(), static_cast<int>(this->connection().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Identity.connection"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Identity.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string provider = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_provider()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->provider().data(), static_cast<int>(this->provider().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Identity.provider"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string isSocial = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_issocial()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->issocial().data(), static_cast<int>(this->issocial().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Identity.isSocial"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Identity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Identity)
  return false;
#undef DO_
}

void Identity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Identity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string connection = 1;
  if (this->connection().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->connection().data(), static_cast<int>(this->connection().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Identity.connection");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->connection(), output);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Identity.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->user_id(), output);
  }

  // string provider = 3;
  if (this->provider().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->provider().data(), static_cast<int>(this->provider().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Identity.provider");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->provider(), output);
  }

  // string isSocial = 4;
  if (this->issocial().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->issocial().data(), static_cast<int>(this->issocial().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Identity.isSocial");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->issocial(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Identity)
}

::google::protobuf::uint8* Identity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Identity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string connection = 1;
  if (this->connection().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->connection().data(), static_cast<int>(this->connection().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Identity.connection");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->connection(), target);
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Identity.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->user_id(), target);
  }

  // string provider = 3;
  if (this->provider().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->provider().data(), static_cast<int>(this->provider().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Identity.provider");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->provider(), target);
  }

  // string isSocial = 4;
  if (this->issocial().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->issocial().data(), static_cast<int>(this->issocial().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Identity.isSocial");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->issocial(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Identity)
  return target;
}

size_t Identity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Identity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string connection = 1;
  if (this->connection().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->connection());
  }

  // string user_id = 2;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  // string provider = 3;
  if (this->provider().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->provider());
  }

  // string isSocial = 4;
  if (this->issocial().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->issocial());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Identity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Identity)
  GOOGLE_DCHECK_NE(&from, this);
  const Identity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Identity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Identity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Identity)
    MergeFrom(*source);
  }
}

void Identity::MergeFrom(const Identity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Identity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.connection().size() > 0) {

    connection_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.connection_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  if (from.provider().size() > 0) {

    provider_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.provider_);
  }
  if (from.issocial().size() > 0) {

    issocial_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.issocial_);
  }
}

void Identity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Identity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identity::CopyFrom(const Identity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Identity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identity::IsInitialized() const {
  return true;
}

void Identity::Swap(Identity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Identity::InternalSwap(Identity* other) {
  using std::swap;
  connection_.Swap(&other->connection_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  provider_.Swap(&other->provider_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  issocial_.Swap(&other->issocial_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Identity::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

UserMetadata_MetadataEntry_DoNotUse::UserMetadata_MetadataEntry_DoNotUse() {}
UserMetadata_MetadataEntry_DoNotUse::UserMetadata_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void UserMetadata_MetadataEntry_DoNotUse::MergeFrom(const UserMetadata_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata UserMetadata_MetadataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[19];
}
void UserMetadata_MetadataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void UserMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserMetadata::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserMetadata::UserMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_UserMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.UserMetadata)
}
UserMetadata::UserMetadata(const UserMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  // @@protoc_insertion_point(copy_constructor:api.UserMetadata)
}

void UserMetadata::SharedCtor() {
}

UserMetadata::~UserMetadata() {
  // @@protoc_insertion_point(destructor:api.UserMetadata)
  SharedDtor();
}

void UserMetadata::SharedDtor() {
}

void UserMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserMetadata::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserMetadata& UserMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_UserMetadata.base);
  return *internal_default_instance();
}


void UserMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:api.UserMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  _internal_metadata_.Clear();
}

bool UserMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.UserMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> metadata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          UserMetadata_MetadataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              UserMetadata_MetadataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.UserMetadata.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.UserMetadata.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.UserMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.UserMetadata)
  return false;
#undef DO_
}

void UserMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.UserMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> metadata = 1;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.UserMetadata.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.UserMetadata.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<UserMetadata_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<UserMetadata_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.UserMetadata)
}

::google::protobuf::uint8* UserMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.UserMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> metadata = 1;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.UserMetadata.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.UserMetadata.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<UserMetadata_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<UserMetadata_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.UserMetadata)
  return target;
}

size_t UserMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.UserMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> metadata = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metadata_size());
  {
    ::std::unique_ptr<UserMetadata_MetadataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.UserMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const UserMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.UserMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.UserMetadata)
    MergeFrom(*source);
  }
}

void UserMetadata::MergeFrom(const UserMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.UserMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
}

void UserMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.UserMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserMetadata::CopyFrom(const UserMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.UserMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserMetadata::IsInitialized() const {
  return true;
}

void UserMetadata::Swap(UserMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserMetadata::InternalSwap(UserMetadata* other) {
  using std::swap;
  metadata_.Swap(&other->metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserMetadata::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

AppMetadata_MetadataEntry_DoNotUse::AppMetadata_MetadataEntry_DoNotUse() {}
AppMetadata_MetadataEntry_DoNotUse::AppMetadata_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void AppMetadata_MetadataEntry_DoNotUse::MergeFrom(const AppMetadata_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata AppMetadata_MetadataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[21];
}
void AppMetadata_MetadataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void AppMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppMetadata::kMetadataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppMetadata::AppMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_AppMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.AppMetadata)
}
AppMetadata::AppMetadata(const AppMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  // @@protoc_insertion_point(copy_constructor:api.AppMetadata)
}

void AppMetadata::SharedCtor() {
}

AppMetadata::~AppMetadata() {
  // @@protoc_insertion_point(destructor:api.AppMetadata)
  SharedDtor();
}

void AppMetadata::SharedDtor() {
}

void AppMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AppMetadata::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppMetadata& AppMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_AppMetadata.base);
  return *internal_default_instance();
}


void AppMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:api.AppMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  _internal_metadata_.Clear();
}

bool AppMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.AppMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, string> metadata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          AppMetadata_MetadataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              AppMetadata_MetadataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AppMetadata.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AppMetadata.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.AppMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.AppMetadata)
  return false;
#undef DO_
}

void AppMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.AppMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> metadata = 1;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.AppMetadata.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.AppMetadata.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<AppMetadata_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<AppMetadata_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.AppMetadata)
}

::google::protobuf::uint8* AppMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.AppMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, string> metadata = 1;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.AppMetadata.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.AppMetadata.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<AppMetadata_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<AppMetadata_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.AppMetadata)
  return target;
}

size_t AppMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.AppMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> metadata = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metadata_size());
  {
    ::std::unique_ptr<AppMetadata_MetadataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.AppMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const AppMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.AppMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.AppMetadata)
    MergeFrom(*source);
  }
}

void AppMetadata::MergeFrom(const AppMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.AppMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
}

void AppMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.AppMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppMetadata::CopyFrom(const AppMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.AppMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppMetadata::IsInitialized() const {
  return true;
}

void AppMetadata::Swap(AppMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppMetadata::InternalSwap(AppMetadata* other) {
  using std::swap;
  metadata_.Swap(&other->metadata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AppMetadata::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Auth::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Auth::kDomainFieldNumber;
const int Auth::kClientIdFieldNumber;
const int Auth::kClientSecretFieldNumber;
const int Auth::kRedirectFieldNumber;
const int Auth::kAudienceFieldNumber;
const int Auth::kScopesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Auth::Auth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Auth.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Auth)
}
Auth::Auth(const Auth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      scopes_(from.scopes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.domain().size() > 0) {
    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_id().size() > 0) {
    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  client_secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_secret().size() > 0) {
    client_secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_secret_);
  }
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.redirect().size() > 0) {
    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  audience_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.audience().size() > 0) {
    audience_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audience_);
  }
  // @@protoc_insertion_point(copy_constructor:api.Auth)
}

void Auth::SharedCtor() {
  domain_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_secret_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redirect_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audience_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Auth::~Auth() {
  // @@protoc_insertion_point(destructor:api.Auth)
  SharedDtor();
}

void Auth::SharedDtor() {
  domain_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_secret_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redirect_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audience_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Auth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Auth::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Auth& Auth::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Auth.base);
  return *internal_default_instance();
}


void Auth::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scopes_.Clear();
  domain_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_secret_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  redirect_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audience_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Auth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Auth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string domain = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_domain()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->domain().data(), static_cast<int>(this->domain().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Auth.domain"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_id().data(), static_cast<int>(this->client_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Auth.client_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_secret = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_secret()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_secret().data(), static_cast<int>(this->client_secret().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Auth.client_secret"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string redirect = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_redirect()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->redirect().data(), static_cast<int>(this->redirect().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Auth.redirect"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string audience = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_audience()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->audience().data(), static_cast<int>(this->audience().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Auth.audience"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .api.Scope scopes = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_scopes(static_cast< ::api::Scope >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_scopes(static_cast< ::api::Scope >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Auth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Auth)
  return false;
#undef DO_
}

void Auth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Auth.domain");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->domain(), output);
  }

  // string client_id = 2;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Auth.client_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->client_id(), output);
  }

  // string client_secret = 3;
  if (this->client_secret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_secret().data(), static_cast<int>(this->client_secret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Auth.client_secret");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->client_secret(), output);
  }

  // string redirect = 4;
  if (this->redirect().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Auth.redirect");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->redirect(), output);
  }

  // string audience = 5;
  if (this->audience().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audience().data(), static_cast<int>(this->audience().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Auth.audience");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->audience(), output);
  }

  // repeated .api.Scope scopes = 6;
  if (this->scopes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_scopes_cached_byte_size_));
  }
  for (int i = 0, n = this->scopes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->scopes(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Auth)
}

::google::protobuf::uint8* Auth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string domain = 1;
  if (this->domain().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->domain().data(), static_cast<int>(this->domain().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Auth.domain");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->domain(), target);
  }

  // string client_id = 2;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Auth.client_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->client_id(), target);
  }

  // string client_secret = 3;
  if (this->client_secret().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_secret().data(), static_cast<int>(this->client_secret().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Auth.client_secret");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->client_secret(), target);
  }

  // string redirect = 4;
  if (this->redirect().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->redirect().data(), static_cast<int>(this->redirect().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Auth.redirect");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->redirect(), target);
  }

  // string audience = 5;
  if (this->audience().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audience().data(), static_cast<int>(this->audience().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Auth.audience");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->audience(), target);
  }

  // repeated .api.Scope scopes = 6;
  if (this->scopes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      6,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _scopes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->scopes_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Auth)
  return target;
}

size_t Auth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Auth)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .api.Scope scopes = 6;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->scopes_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->scopes(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _scopes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string domain = 1;
  if (this->domain().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->domain());
  }

  // string client_id = 2;
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_id());
  }

  // string client_secret = 3;
  if (this->client_secret().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_secret());
  }

  // string redirect = 4;
  if (this->redirect().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->redirect());
  }

  // string audience = 5;
  if (this->audience().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->audience());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Auth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Auth)
  GOOGLE_DCHECK_NE(&from, this);
  const Auth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Auth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Auth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Auth)
    MergeFrom(*source);
  }
}

void Auth::MergeFrom(const Auth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Auth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scopes_.MergeFrom(from.scopes_);
  if (from.domain().size() > 0) {

    domain_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.domain_);
  }
  if (from.client_id().size() > 0) {

    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  if (from.client_secret().size() > 0) {

    client_secret_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_secret_);
  }
  if (from.redirect().size() > 0) {

    redirect_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.redirect_);
  }
  if (from.audience().size() > 0) {

    audience_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audience_);
  }
}

void Auth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Auth::CopyFrom(const Auth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Auth::IsInitialized() const {
  return true;
}

void Auth::Swap(Auth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Auth::InternalSwap(Auth* other) {
  using std::swap;
  scopes_.InternalSwap(&other->scopes_);
  domain_.Swap(&other->domain_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_id_.Swap(&other->client_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_secret_.Swap(&other->client_secret_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  redirect_.Swap(&other->redirect_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  audience_.Swap(&other->audience_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Auth::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Bytes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bytes::kBitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bytes::Bytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Bytes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Bytes)
}
Bytes::Bytes(const Bytes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bits_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bits().size() > 0) {
    bits_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bits_);
  }
  // @@protoc_insertion_point(copy_constructor:api.Bytes)
}

void Bytes::SharedCtor() {
  bits_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Bytes::~Bytes() {
  // @@protoc_insertion_point(destructor:api.Bytes)
  SharedDtor();
}

void Bytes::SharedDtor() {
  bits_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Bytes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Bytes::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bytes& Bytes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Bytes.base);
  return *internal_default_instance();
}


void Bytes::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bits_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Bytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Bytes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes bits = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Bytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Bytes)
  return false;
#undef DO_
}

void Bytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes bits = 1;
  if (this->bits().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->bits(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Bytes)
}

::google::protobuf::uint8* Bytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes bits = 1;
  if (this->bits().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->bits(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Bytes)
  return target;
}

size_t Bytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Bytes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes bits = 1;
  if (this->bits().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bits());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Bytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  const Bytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Bytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Bytes)
    MergeFrom(*source);
  }
}

void Bytes::MergeFrom(const Bytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bits().size() > 0) {

    bits_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bits_);
  }
}

void Bytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bytes::CopyFrom(const Bytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bytes::IsInitialized() const {
  return true;
}

void Bytes::Swap(Bytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bytes::InternalSwap(Bytes* other) {
  using std::swap;
  bits_.Swap(&other->bits_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Bytes::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Template::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Template::kNameFieldNumber;
const int Template::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Template::Template()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Template.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Template)
}
Template::Template(const Template& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:api.Template)
}

void Template::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Template::~Template() {
  // @@protoc_insertion_point(destructor:api.Template)
  SharedDtor();
}

void Template::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Template::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Template::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Template& Template::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Template.base);
  return *internal_default_instance();
}


void Template::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Template)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Template::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Template)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Template.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Template.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Template)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Template)
  return false;
#undef DO_
}

void Template::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Template)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Template.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Template.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Template)
}

::google::protobuf::uint8* Template::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Template)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Template.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Template.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Template)
  return target;
}

size_t Template::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Template)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string text = 2;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Template::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Template)
  GOOGLE_DCHECK_NE(&from, this);
  const Template* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Template>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Template)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Template)
    MergeFrom(*source);
  }
}

void Template::MergeFrom(const Template& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Template)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void Template::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Template)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Template::CopyFrom(const Template& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Template)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Template::IsInitialized() const {
  return true;
}

void Template::Swap(Template* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Template::InternalSwap(Template* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Template::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JSONWebKeys::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JSONWebKeys::kKtyFieldNumber;
const int JSONWebKeys::kKidFieldNumber;
const int JSONWebKeys::kUseFieldNumber;
const int JSONWebKeys::kNFieldNumber;
const int JSONWebKeys::kEFieldNumber;
const int JSONWebKeys::kX5CFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JSONWebKeys::JSONWebKeys()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_JSONWebKeys.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.JSONWebKeys)
}
JSONWebKeys::JSONWebKeys(const JSONWebKeys& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      x5c_(from.x5c_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  kty_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.kty().size() > 0) {
    kty_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kty_);
  }
  kid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.kid().size() > 0) {
    kid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kid_);
  }
  use_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.use().size() > 0) {
    use_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.use_);
  }
  n_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.n().size() > 0) {
    n_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.n_);
  }
  e_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.e().size() > 0) {
    e_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.e_);
  }
  // @@protoc_insertion_point(copy_constructor:api.JSONWebKeys)
}

void JSONWebKeys::SharedCtor() {
  kty_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  use_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  n_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  e_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

JSONWebKeys::~JSONWebKeys() {
  // @@protoc_insertion_point(destructor:api.JSONWebKeys)
  SharedDtor();
}

void JSONWebKeys::SharedDtor() {
  kty_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  use_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  n_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  e_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JSONWebKeys::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JSONWebKeys::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JSONWebKeys& JSONWebKeys::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_JSONWebKeys.base);
  return *internal_default_instance();
}


void JSONWebKeys::Clear() {
// @@protoc_insertion_point(message_clear_start:api.JSONWebKeys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  x5c_.Clear();
  kty_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  kid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  use_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  n_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  e_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool JSONWebKeys::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.JSONWebKeys)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string kty = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kty()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->kty().data(), static_cast<int>(this->kty().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.JSONWebKeys.kty"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string kid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_kid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->kid().data(), static_cast<int>(this->kid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.JSONWebKeys.kid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string use = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_use()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->use().data(), static_cast<int>(this->use().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.JSONWebKeys.use"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string n = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_n()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->n().data(), static_cast<int>(this->n().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.JSONWebKeys.n"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string e = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_e()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->e().data(), static_cast<int>(this->e().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.JSONWebKeys.e"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string x5c = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_x5c()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->x5c(this->x5c_size() - 1).data(),
            static_cast<int>(this->x5c(this->x5c_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.JSONWebKeys.x5c"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.JSONWebKeys)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.JSONWebKeys)
  return false;
#undef DO_
}

void JSONWebKeys::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.JSONWebKeys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string kty = 1;
  if (this->kty().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kty().data(), static_cast<int>(this->kty().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.JSONWebKeys.kty");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->kty(), output);
  }

  // string kid = 2;
  if (this->kid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kid().data(), static_cast<int>(this->kid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.JSONWebKeys.kid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->kid(), output);
  }

  // string use = 3;
  if (this->use().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->use().data(), static_cast<int>(this->use().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.JSONWebKeys.use");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->use(), output);
  }

  // string n = 4;
  if (this->n().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->n().data(), static_cast<int>(this->n().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.JSONWebKeys.n");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->n(), output);
  }

  // string e = 5;
  if (this->e().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->e().data(), static_cast<int>(this->e().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.JSONWebKeys.e");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->e(), output);
  }

  // repeated string x5c = 6;
  for (int i = 0, n = this->x5c_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->x5c(i).data(), static_cast<int>(this->x5c(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.JSONWebKeys.x5c");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->x5c(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.JSONWebKeys)
}

::google::protobuf::uint8* JSONWebKeys::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.JSONWebKeys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string kty = 1;
  if (this->kty().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kty().data(), static_cast<int>(this->kty().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.JSONWebKeys.kty");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->kty(), target);
  }

  // string kid = 2;
  if (this->kid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->kid().data(), static_cast<int>(this->kid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.JSONWebKeys.kid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->kid(), target);
  }

  // string use = 3;
  if (this->use().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->use().data(), static_cast<int>(this->use().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.JSONWebKeys.use");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->use(), target);
  }

  // string n = 4;
  if (this->n().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->n().data(), static_cast<int>(this->n().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.JSONWebKeys.n");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->n(), target);
  }

  // string e = 5;
  if (this->e().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->e().data(), static_cast<int>(this->e().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.JSONWebKeys.e");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->e(), target);
  }

  // repeated string x5c = 6;
  for (int i = 0, n = this->x5c_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->x5c(i).data(), static_cast<int>(this->x5c(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.JSONWebKeys.x5c");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(6, this->x5c(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.JSONWebKeys)
  return target;
}

size_t JSONWebKeys::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.JSONWebKeys)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string x5c = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->x5c_size());
  for (int i = 0, n = this->x5c_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->x5c(i));
  }

  // string kty = 1;
  if (this->kty().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->kty());
  }

  // string kid = 2;
  if (this->kid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->kid());
  }

  // string use = 3;
  if (this->use().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->use());
  }

  // string n = 4;
  if (this->n().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->n());
  }

  // string e = 5;
  if (this->e().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->e());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JSONWebKeys::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.JSONWebKeys)
  GOOGLE_DCHECK_NE(&from, this);
  const JSONWebKeys* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JSONWebKeys>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.JSONWebKeys)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.JSONWebKeys)
    MergeFrom(*source);
  }
}

void JSONWebKeys::MergeFrom(const JSONWebKeys& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.JSONWebKeys)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  x5c_.MergeFrom(from.x5c_);
  if (from.kty().size() > 0) {

    kty_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kty_);
  }
  if (from.kid().size() > 0) {

    kid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.kid_);
  }
  if (from.use().size() > 0) {

    use_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.use_);
  }
  if (from.n().size() > 0) {

    n_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.n_);
  }
  if (from.e().size() > 0) {

    e_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.e_);
  }
}

void JSONWebKeys::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.JSONWebKeys)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JSONWebKeys::CopyFrom(const JSONWebKeys& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.JSONWebKeys)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSONWebKeys::IsInitialized() const {
  return true;
}

void JSONWebKeys::Swap(JSONWebKeys* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JSONWebKeys::InternalSwap(JSONWebKeys* other) {
  using std::swap;
  x5c_.InternalSwap(CastToBase(&other->x5c_));
  kty_.Swap(&other->kty_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  kid_.Swap(&other->kid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  use_.Swap(&other->use_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  n_.Swap(&other->n_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  e_.Swap(&other->e_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JSONWebKeys::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Jwks::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Jwks::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Jwks::Jwks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Jwks.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Jwks)
}
Jwks::Jwks(const Jwks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.Jwks)
}

void Jwks::SharedCtor() {
}

Jwks::~Jwks() {
  // @@protoc_insertion_point(destructor:api.Jwks)
  SharedDtor();
}

void Jwks::SharedDtor() {
}

void Jwks::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Jwks::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Jwks& Jwks::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Jwks.base);
  return *internal_default_instance();
}


void Jwks::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Jwks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  _internal_metadata_.Clear();
}

bool Jwks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Jwks)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .api.JSONWebKeys keys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Jwks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Jwks)
  return false;
#undef DO_
}

void Jwks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Jwks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .api.JSONWebKeys keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->keys(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Jwks)
}

::google::protobuf::uint8* Jwks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Jwks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .api.JSONWebKeys keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->keys(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Jwks)
  return target;
}

size_t Jwks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Jwks)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .api.JSONWebKeys keys = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Jwks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Jwks)
  GOOGLE_DCHECK_NE(&from, this);
  const Jwks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Jwks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Jwks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Jwks)
    MergeFrom(*source);
  }
}

void Jwks::MergeFrom(const Jwks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Jwks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
}

void Jwks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Jwks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Jwks::CopyFrom(const Jwks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Jwks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Jwks::IsInitialized() const {
  return true;
}

void Jwks::Swap(Jwks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Jwks::InternalSwap(Jwks* other) {
  using std::swap;
  CastToBase(&keys_)->InternalSwap(CastToBase(&other->keys_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Jwks::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

HTTPRequest_HeadersEntry_DoNotUse::HTTPRequest_HeadersEntry_DoNotUse() {}
HTTPRequest_HeadersEntry_DoNotUse::HTTPRequest_HeadersEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void HTTPRequest_HeadersEntry_DoNotUse::MergeFrom(const HTTPRequest_HeadersEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata HTTPRequest_HeadersEntry_DoNotUse::GetMetadata() const {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[28];
}
void HTTPRequest_HeadersEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

HTTPRequest_FormEntry_DoNotUse::HTTPRequest_FormEntry_DoNotUse() {}
HTTPRequest_FormEntry_DoNotUse::HTTPRequest_FormEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void HTTPRequest_FormEntry_DoNotUse::MergeFrom(const HTTPRequest_FormEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata HTTPRequest_FormEntry_DoNotUse::GetMetadata() const {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[29];
}
void HTTPRequest_FormEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

HTTPRequest_CookiesEntry_DoNotUse::HTTPRequest_CookiesEntry_DoNotUse() {}
HTTPRequest_CookiesEntry_DoNotUse::HTTPRequest_CookiesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void HTTPRequest_CookiesEntry_DoNotUse::MergeFrom(const HTTPRequest_CookiesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata HTTPRequest_CookiesEntry_DoNotUse::GetMetadata() const {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[30];
}
void HTTPRequest_CookiesEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void HTTPRequest::InitAsDefaultInstance() {
  ::api::_HTTPRequest_default_instance_._instance.get_mutable()->body_ = const_cast< ::api::Bytes*>(
      ::api::Bytes::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HTTPRequest::kMethodFieldNumber;
const int HTTPRequest::kUrlFieldNumber;
const int HTTPRequest::kTokenFieldNumber;
const int HTTPRequest::kAccountFieldNumber;
const int HTTPRequest::kContentTypeFieldNumber;
const int HTTPRequest::kHeadersFieldNumber;
const int HTTPRequest::kFormFieldNumber;
const int HTTPRequest::kCookiesFieldNumber;
const int HTTPRequest::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HTTPRequest::HTTPRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_HTTPRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.HTTPRequest)
}
HTTPRequest::HTTPRequest(const HTTPRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  headers_.MergeFrom(from.headers_);
  form_.MergeFrom(from.form_);
  cookies_.MergeFrom(from.cookies_);
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  contenttype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.contenttype().size() > 0) {
    contenttype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contenttype_);
  }
  if (from.has_body()) {
    body_ = new ::api::Bytes(*from.body_);
  } else {
    body_ = NULL;
  }
  method_ = from.method_;
  // @@protoc_insertion_point(copy_constructor:api.HTTPRequest)
}

void HTTPRequest::SharedCtor() {
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contenttype_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&body_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&method_) -
      reinterpret_cast<char*>(&body_)) + sizeof(method_));
}

HTTPRequest::~HTTPRequest() {
  // @@protoc_insertion_point(destructor:api.HTTPRequest)
  SharedDtor();
}

void HTTPRequest::SharedDtor() {
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contenttype_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete body_;
}

void HTTPRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HTTPRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HTTPRequest& HTTPRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_HTTPRequest.base);
  return *internal_default_instance();
}


void HTTPRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.HTTPRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  headers_.Clear();
  form_.Clear();
  cookies_.Clear();
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  contenttype_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
  method_ = 0;
  _internal_metadata_.Clear();
}

bool HTTPRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.HTTPRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .api.HTTPMethod method = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_method(static_cast< ::api::HTTPMethod >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HTTPRequest.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->token().data(), static_cast<int>(this->token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HTTPRequest.token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), static_cast<int>(this->account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HTTPRequest.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string contentType = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_contenttype()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->contenttype().data(), static_cast<int>(this->contenttype().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HTTPRequest.contentType"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> headers = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          HTTPRequest_HeadersEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              HTTPRequest_HeadersEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&headers_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HTTPRequest.HeadersEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HTTPRequest.HeadersEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> form = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          HTTPRequest_FormEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              HTTPRequest_FormEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&form_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HTTPRequest.FormEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HTTPRequest.FormEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> cookies = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          HTTPRequest_CookiesEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              HTTPRequest_CookiesEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&cookies_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HTTPRequest.CookiesEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.HTTPRequest.CookiesEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.Bytes body = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.HTTPRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.HTTPRequest)
  return false;
#undef DO_
}

void HTTPRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.HTTPRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.HTTPMethod method = 1;
  if (this->method() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->method(), output);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HTTPRequest.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->url(), output);
  }

  // string token = 3;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HTTPRequest.token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->token(), output);
  }

  // string account = 4;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HTTPRequest.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->account(), output);
  }

  // string contentType = 5;
  if (this->contenttype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contenttype().data(), static_cast<int>(this->contenttype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HTTPRequest.contentType");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->contenttype(), output);
  }

  // map<string, string> headers = 6;
  if (!this->headers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.HTTPRequest.HeadersEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.HTTPRequest.HeadersEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->headers().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->headers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HTTPRequest_HeadersEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(headers_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HTTPRequest_HeadersEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it) {
        entry.reset(headers_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            6, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> form = 7;
  if (!this->form().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.HTTPRequest.FormEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.HTTPRequest.FormEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->form().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->form().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->form().begin();
          it != this->form().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HTTPRequest_FormEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(form_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HTTPRequest_FormEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->form().begin();
          it != this->form().end(); ++it) {
        entry.reset(form_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> cookies = 8;
  if (!this->cookies().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.HTTPRequest.CookiesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.HTTPRequest.CookiesEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->cookies().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->cookies().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->cookies().begin();
          it != this->cookies().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HTTPRequest_CookiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(cookies_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HTTPRequest_CookiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->cookies().begin();
          it != this->cookies().end(); ++it) {
        entry.reset(cookies_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            8, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .api.Bytes body = 9;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.HTTPRequest)
}

::google::protobuf::uint8* HTTPRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.HTTPRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.HTTPMethod method = 1;
  if (this->method() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->method(), target);
  }

  // string url = 2;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HTTPRequest.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->url(), target);
  }

  // string token = 3;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->token().data(), static_cast<int>(this->token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HTTPRequest.token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->token(), target);
  }

  // string account = 4;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), static_cast<int>(this->account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HTTPRequest.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->account(), target);
  }

  // string contentType = 5;
  if (this->contenttype().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->contenttype().data(), static_cast<int>(this->contenttype().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.HTTPRequest.contentType");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->contenttype(), target);
  }

  // map<string, string> headers = 6;
  if (!this->headers().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.HTTPRequest.HeadersEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.HTTPRequest.HeadersEntry.value");
      }
    };

    if (deterministic &&
        this->headers().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->headers().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HTTPRequest_HeadersEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(headers_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HTTPRequest_HeadersEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->headers().begin();
          it != this->headers().end(); ++it) {
        entry.reset(headers_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       6, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> form = 7;
  if (!this->form().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.HTTPRequest.FormEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.HTTPRequest.FormEntry.value");
      }
    };

    if (deterministic &&
        this->form().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->form().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->form().begin();
          it != this->form().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HTTPRequest_FormEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(form_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HTTPRequest_FormEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->form().begin();
          it != this->form().end(); ++it) {
        entry.reset(form_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       7, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, string> cookies = 8;
  if (!this->cookies().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.HTTPRequest.CookiesEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.HTTPRequest.CookiesEntry.value");
      }
    };

    if (deterministic &&
        this->cookies().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->cookies().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->cookies().begin();
          it != this->cookies().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<HTTPRequest_CookiesEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(cookies_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<HTTPRequest_CookiesEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->cookies().begin();
          it != this->cookies().end(); ++it) {
        entry.reset(cookies_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       8, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .api.Bytes body = 9;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_body(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.HTTPRequest)
  return target;
}

size_t HTTPRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.HTTPRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> headers = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->headers_size());
  {
    ::std::unique_ptr<HTTPRequest_HeadersEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->headers().begin();
        it != this->headers().end(); ++it) {
      entry.reset(headers_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> form = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->form_size());
  {
    ::std::unique_ptr<HTTPRequest_FormEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->form().begin();
        it != this->form().end(); ++it) {
      entry.reset(form_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, string> cookies = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->cookies_size());
  {
    ::std::unique_ptr<HTTPRequest_CookiesEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->cookies().begin();
        it != this->cookies().end(); ++it) {
      entry.reset(cookies_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string url = 2;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // string token = 3;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->token());
  }

  // string account = 4;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string contentType = 5;
  if (this->contenttype().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->contenttype());
  }

  // .api.Bytes body = 9;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *body_);
  }

  // .api.HTTPMethod method = 1;
  if (this->method() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->method());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HTTPRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.HTTPRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HTTPRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HTTPRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.HTTPRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.HTTPRequest)
    MergeFrom(*source);
  }
}

void HTTPRequest::MergeFrom(const HTTPRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.HTTPRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  headers_.MergeFrom(from.headers_);
  form_.MergeFrom(from.form_);
  cookies_.MergeFrom(from.cookies_);
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.contenttype().size() > 0) {

    contenttype_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.contenttype_);
  }
  if (from.has_body()) {
    mutable_body()->::api::Bytes::MergeFrom(from.body());
  }
  if (from.method() != 0) {
    set_method(from.method());
  }
}

void HTTPRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.HTTPRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HTTPRequest::CopyFrom(const HTTPRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.HTTPRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HTTPRequest::IsInitialized() const {
  return true;
}

void HTTPRequest::Swap(HTTPRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HTTPRequest::InternalSwap(HTTPRequest* other) {
  using std::swap;
  headers_.Swap(&other->headers_);
  form_.Swap(&other->form_);
  cookies_.Swap(&other->cookies_);
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  account_.Swap(&other->account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  contenttype_.Swap(&other->contenttype_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(body_, other->body_);
  swap(method_, other->method_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HTTPRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::SubscribeRequest* Arena::CreateMaybeMessage< ::api::SubscribeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::SubscribeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::UnSubscribeRequest* Arena::CreateMaybeMessage< ::api::UnSubscribeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::UnSubscribeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Card* Arena::CreateMaybeMessage< ::api::Card >(Arena* arena) {
  return Arena::CreateInternal< ::api::Card >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Empty* Arena::CreateMaybeMessage< ::api::Empty >(Arena* arena) {
  return Arena::CreateInternal< ::api::Empty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::ManagementToken* Arena::CreateMaybeMessage< ::api::ManagementToken >(Arena* arena) {
  return Arena::CreateInternal< ::api::ManagementToken >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::UserRequest* Arena::CreateMaybeMessage< ::api::UserRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::UserRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::UserByEmailRequest* Arena::CreateMaybeMessage< ::api::UserByEmailRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::UserByEmailRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Identifier* Arena::CreateMaybeMessage< ::api::Identifier >(Arena* arena) {
  return Arena::CreateInternal< ::api::Identifier >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::SMS* Arena::CreateMaybeMessage< ::api::SMS >(Arena* arena) {
  return Arena::CreateInternal< ::api::SMS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::SMSBlast* Arena::CreateMaybeMessage< ::api::SMSBlast >(Arena* arena) {
  return Arena::CreateInternal< ::api::SMSBlast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::EmailRequest* Arena::CreateMaybeMessage< ::api::EmailRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::EmailRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::EmailBlastRequest* Arena::CreateMaybeMessage< ::api::EmailBlastRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::EmailBlastRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::EmailBlast_NameAddressEntry_DoNotUse* Arena::CreateMaybeMessage< ::api::EmailBlast_NameAddressEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::api::EmailBlast_NameAddressEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::EmailBlast* Arena::CreateMaybeMessage< ::api::EmailBlast >(Arena* arena) {
  return Arena::CreateInternal< ::api::EmailBlast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Email* Arena::CreateMaybeMessage< ::api::Email >(Arena* arena) {
  return Arena::CreateInternal< ::api::Email >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Call* Arena::CreateMaybeMessage< ::api::Call >(Arena* arena) {
  return Arena::CreateInternal< ::api::Call >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Message* Arena::CreateMaybeMessage< ::api::Message >(Arena* arena) {
  return Arena::CreateInternal< ::api::Message >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::User* Arena::CreateMaybeMessage< ::api::User >(Arena* arena) {
  return Arena::CreateInternal< ::api::User >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Identity* Arena::CreateMaybeMessage< ::api::Identity >(Arena* arena) {
  return Arena::CreateInternal< ::api::Identity >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::UserMetadata_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::api::UserMetadata_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::api::UserMetadata_MetadataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::UserMetadata* Arena::CreateMaybeMessage< ::api::UserMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::api::UserMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::AppMetadata_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::api::AppMetadata_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::api::AppMetadata_MetadataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::AppMetadata* Arena::CreateMaybeMessage< ::api::AppMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::api::AppMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Auth* Arena::CreateMaybeMessage< ::api::Auth >(Arena* arena) {
  return Arena::CreateInternal< ::api::Auth >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Bytes* Arena::CreateMaybeMessage< ::api::Bytes >(Arena* arena) {
  return Arena::CreateInternal< ::api::Bytes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Template* Arena::CreateMaybeMessage< ::api::Template >(Arena* arena) {
  return Arena::CreateInternal< ::api::Template >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::JSONWebKeys* Arena::CreateMaybeMessage< ::api::JSONWebKeys >(Arena* arena) {
  return Arena::CreateInternal< ::api::JSONWebKeys >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Jwks* Arena::CreateMaybeMessage< ::api::Jwks >(Arena* arena) {
  return Arena::CreateInternal< ::api::Jwks >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::HTTPRequest_HeadersEntry_DoNotUse* Arena::CreateMaybeMessage< ::api::HTTPRequest_HeadersEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::api::HTTPRequest_HeadersEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::HTTPRequest_FormEntry_DoNotUse* Arena::CreateMaybeMessage< ::api::HTTPRequest_FormEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::api::HTTPRequest_FormEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::HTTPRequest_CookiesEntry_DoNotUse* Arena::CreateMaybeMessage< ::api::HTTPRequest_CookiesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::api::HTTPRequest_CookiesEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::HTTPRequest* Arena::CreateMaybeMessage< ::api::HTTPRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::HTTPRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
