// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

#include "api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_api_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Access;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Address;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AttachmentActionOption;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AttachmentConfirmationField;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_AttachmentField;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Customer_MetadataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_EmailAddress;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_File_TagsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ItemRef;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Product_TagsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Profile;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_SMSRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_AttachmentActionOptionGroup;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_CustomerRequest;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_File;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_RecipientEmail;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Customer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Product;
}  // namespace protobuf_api_2eproto
namespace api {
class RefundRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RefundRequest>
      _instance;
} _RefundRequest_default_instance_;
class ChargeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChargeRequest>
      _instance;
} _ChargeRequest_default_instance_;
class CancelSubscriptionRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CancelSubscriptionRequest>
      _instance;
} _CancelSubscriptionRequest_default_instance_;
class CreatePlanRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CreatePlanRequest>
      _instance;
} _CreatePlanRequest_default_instance_;
class SMSRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SMSRequest>
      _instance;
} _SMSRequest_default_instance_;
class CallRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CallRequest>
      _instance;
} _CallRequest_default_instance_;
class MMSRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MMSRequest>
      _instance;
} _MMSRequest_default_instance_;
class EmailRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmailRequest>
      _instance;
} _EmailRequest_default_instance_;
class CustomerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CustomerRequest>
      _instance;
} _CustomerRequest_default_instance_;
class UpdateCustomerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UpdateCustomerRequest>
      _instance;
} _UpdateCustomerRequest_default_instance_;
class SubscribeCustomerRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubscribeCustomerRequest>
      _instance;
} _SubscribeCustomerRequest_default_instance_;
class AddAccountRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddAccountRequest>
      _instance;
} _AddAccountRequest_default_instance_;
class AccountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Account>
      _instance;
} _Account_default_instance_;
class UserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<User>
      _instance;
} _User_default_instance_;
class ProfileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Profile>
      _instance;
} _Profile_default_instance_;
class EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Empty>
      _instance;
} _Empty_default_instance_;
class Customer_MetadataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Customer_MetadataEntry_DoNotUse>
      _instance;
} _Customer_MetadataEntry_DoNotUse_default_instance_;
class CustomerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Customer>
      _instance;
} _Customer_default_instance_;
class CardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Card>
      _instance;
} _Card_default_instance_;
class BankAccountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BankAccount>
      _instance;
} _BankAccount_default_instance_;
class AddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Address>
      _instance;
} _Address_default_instance_;
class ChannelReminderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChannelReminder>
      _instance;
} _ChannelReminder_default_instance_;
class UserReminderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserReminder>
      _instance;
} _UserReminder_default_instance_;
class ItemRefDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ItemRef>
      _instance;
} _ItemRef_default_instance_;
class StarDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Star>
      _instance;
} _Star_default_instance_;
class PinDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Pin>
      _instance;
} _Pin_default_instance_;
class SignedKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SignedKey>
      _instance;
} _SignedKey_default_instance_;
class UnImplementedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnImplemented>
      _instance;
} _UnImplemented_default_instance_;
class AccessDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Access>
      _instance;
} _Access_default_instance_;
class StandardClaimsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StandardClaims>
      _instance;
} _StandardClaims_default_instance_;
class LogConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogConfig>
      _instance;
} _LogConfig_default_instance_;
class EmailAddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmailAddress>
      _instance;
} _EmailAddress_default_instance_;
class EmailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Email>
      _instance;
} _Email_default_instance_;
class RecipientEmailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RecipientEmail>
      _instance;
} _RecipientEmail_default_instance_;
class SMSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SMS>
      _instance;
} _SMS_default_instance_;
class CallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Call>
      _instance;
} _Call_default_instance_;
class FaxDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Fax>
      _instance;
} _Fax_default_instance_;
class LogHookDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogHook>
      _instance;
} _LogHook_default_instance_;
class AttachmentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Attachment>
      _instance;
} _Attachment_default_instance_;
class AttachmentActionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AttachmentAction>
      _instance;
} _AttachmentAction_default_instance_;
class AttachmentConfirmationFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AttachmentConfirmationField>
      _instance;
} _AttachmentConfirmationField_default_instance_;
class AttachmentActionOptionGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AttachmentActionOptionGroup>
      _instance;
} _AttachmentActionOptionGroup_default_instance_;
class AttachmentActionOptionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AttachmentActionOption>
      _instance;
} _AttachmentActionOption_default_instance_;
class AttachmentFieldDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AttachmentField>
      _instance;
} _AttachmentField_default_instance_;
class JSONDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JSON>
      _instance;
} _JSON_default_instance_;
class File_TagsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<File_TagsEntry_DoNotUse>
      _instance;
} _File_TagsEntry_DoNotUse_default_instance_;
class FileDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<File>
      _instance;
} _File_default_instance_;
class Product_TagsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Product_TagsEntry_DoNotUse>
      _instance;
} _Product_TagsEntry_DoNotUse_default_instance_;
class ProductDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Product>
      _instance;
} _Product_default_instance_;
}  // namespace api
namespace protobuf_api_2eproto {
static void InitDefaultsRefundRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_RefundRequest_default_instance_;
    new (ptr) ::api::RefundRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::RefundRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RefundRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRefundRequest}, {}};

static void InitDefaultsChargeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_ChargeRequest_default_instance_;
    new (ptr) ::api::ChargeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::ChargeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ChargeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsChargeRequest}, {
      &protobuf_api_2eproto::scc_info_Product.base,}};

static void InitDefaultsCancelSubscriptionRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_CancelSubscriptionRequest_default_instance_;
    new (ptr) ::api::CancelSubscriptionRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::CancelSubscriptionRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CancelSubscriptionRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCancelSubscriptionRequest}, {}};

static void InitDefaultsCreatePlanRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_CreatePlanRequest_default_instance_;
    new (ptr) ::api::CreatePlanRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::CreatePlanRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CreatePlanRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCreatePlanRequest}, {}};

static void InitDefaultsSMSRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_SMSRequest_default_instance_;
    new (ptr) ::api::SMSRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::SMSRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SMSRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSMSRequest}, {}};

static void InitDefaultsCallRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_CallRequest_default_instance_;
    new (ptr) ::api::CallRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::CallRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_CallRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCallRequest}, {}};

static void InitDefaultsMMSRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_MMSRequest_default_instance_;
    new (ptr) ::api::MMSRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::MMSRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_MMSRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMMSRequest}, {
      &protobuf_api_2eproto::scc_info_SMSRequest.base,}};

static void InitDefaultsEmailRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_EmailRequest_default_instance_;
    new (ptr) ::api::EmailRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::EmailRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EmailRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmailRequest}, {}};

static void InitDefaultsCustomerRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_CustomerRequest_default_instance_;
    new (ptr) ::api::CustomerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::CustomerRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_CustomerRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCustomerRequest}, {
      &protobuf_api_2eproto::scc_info_Address.base,}};

static void InitDefaultsUpdateCustomerRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_UpdateCustomerRequest_default_instance_;
    new (ptr) ::api::UpdateCustomerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::UpdateCustomerRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UpdateCustomerRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUpdateCustomerRequest}, {
      &protobuf_api_2eproto::scc_info_CustomerRequest.base,}};

static void InitDefaultsSubscribeCustomerRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_SubscribeCustomerRequest_default_instance_;
    new (ptr) ::api::SubscribeCustomerRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::SubscribeCustomerRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SubscribeCustomerRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSubscribeCustomerRequest}, {}};

static void InitDefaultsAddAccountRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_AddAccountRequest_default_instance_;
    new (ptr) ::api::AddAccountRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::AddAccountRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AddAccountRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAddAccountRequest}, {
      &protobuf_api_2eproto::scc_info_CustomerRequest.base,
      &protobuf_api_2eproto::scc_info_Access.base,}};

static void InitDefaultsAccount() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Account_default_instance_;
    new (ptr) ::api::Account();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Account::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Account =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAccount}, {
      &protobuf_api_2eproto::scc_info_Customer.base,
      &protobuf_api_2eproto::scc_info_Access.base,}};

static void InitDefaultsUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_User_default_instance_;
    new (ptr) ::api::User();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::User::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_User =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUser}, {
      &protobuf_api_2eproto::scc_info_Profile.base,}};

static void InitDefaultsProfile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Profile_default_instance_;
    new (ptr) ::api::Profile();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Profile::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Profile =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProfile}, {}};

static void InitDefaultsEmpty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Empty_default_instance_;
    new (ptr) ::api::Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Empty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Empty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmpty}, {}};

static void InitDefaultsCustomer_MetadataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Customer_MetadataEntry_DoNotUse_default_instance_;
    new (ptr) ::api::Customer_MetadataEntry_DoNotUse();
  }
  ::api::Customer_MetadataEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Customer_MetadataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCustomer_MetadataEntry_DoNotUse}, {}};

static void InitDefaultsCustomer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Customer_default_instance_;
    new (ptr) ::api::Customer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Customer::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Customer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCustomer}, {
      &protobuf_api_2eproto::scc_info_Address.base,
      &protobuf_api_2eproto::scc_info_Customer_MetadataEntry_DoNotUse.base,}};

static void InitDefaultsCard() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Card_default_instance_;
    new (ptr) ::api::Card();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Card::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Card =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCard}, {}};

static void InitDefaultsBankAccount() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_BankAccount_default_instance_;
    new (ptr) ::api::BankAccount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::BankAccount::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_BankAccount =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBankAccount}, {}};

static void InitDefaultsAddress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Address_default_instance_;
    new (ptr) ::api::Address();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Address::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Address =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddress}, {}};

static void InitDefaultsChannelReminder() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_ChannelReminder_default_instance_;
    new (ptr) ::api::ChannelReminder();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::ChannelReminder::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ChannelReminder =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsChannelReminder}, {}};

static void InitDefaultsUserReminder() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_UserReminder_default_instance_;
    new (ptr) ::api::UserReminder();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::UserReminder::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UserReminder =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUserReminder}, {
      &protobuf_api_2eproto::scc_info_ItemRef.base,}};

static void InitDefaultsItemRef() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_ItemRef_default_instance_;
    new (ptr) ::api::ItemRef();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::ItemRef::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ItemRef =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsItemRef}, {}};

static void InitDefaultsStar() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Star_default_instance_;
    new (ptr) ::api::Star();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Star::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Star =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStar}, {
      &protobuf_api_2eproto::scc_info_ItemRef.base,}};

static void InitDefaultsPin() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Pin_default_instance_;
    new (ptr) ::api::Pin();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Pin::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Pin =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPin}, {
      &protobuf_api_2eproto::scc_info_ItemRef.base,}};

static void InitDefaultsSignedKey() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_SignedKey_default_instance_;
    new (ptr) ::api::SignedKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::SignedKey::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SignedKey =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSignedKey}, {}};

static void InitDefaultsUnImplemented() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_UnImplemented_default_instance_;
    new (ptr) ::api::UnImplemented();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::UnImplemented::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UnImplemented =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUnImplemented}, {}};

static void InitDefaultsAccess() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Access_default_instance_;
    new (ptr) ::api::Access();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Access::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Access =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAccess}, {}};

static void InitDefaultsStandardClaims() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_StandardClaims_default_instance_;
    new (ptr) ::api::StandardClaims();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::StandardClaims::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StandardClaims =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStandardClaims}, {
      &protobuf_api_2eproto::scc_info_Access.base,}};

static void InitDefaultsLogConfig() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_LogConfig_default_instance_;
    new (ptr) ::api::LogConfig();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::LogConfig::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogConfig =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogConfig}, {}};

static void InitDefaultsEmailAddress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_EmailAddress_default_instance_;
    new (ptr) ::api::EmailAddress();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::EmailAddress::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EmailAddress =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmailAddress}, {}};

static void InitDefaultsEmail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Email_default_instance_;
    new (ptr) ::api::Email();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Email::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Email =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsEmail}, {
      &protobuf_api_2eproto::scc_info_EmailAddress.base,
      &protobuf_api_2eproto::scc_info_RecipientEmail.base,}};

static void InitDefaultsRecipientEmail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_RecipientEmail_default_instance_;
    new (ptr) ::api::RecipientEmail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::RecipientEmail::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RecipientEmail =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRecipientEmail}, {
      &protobuf_api_2eproto::scc_info_EmailAddress.base,}};

static void InitDefaultsSMS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_SMS_default_instance_;
    new (ptr) ::api::SMS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::SMS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_SMS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsSMS}, {}};

static void InitDefaultsCall() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Call_default_instance_;
    new (ptr) ::api::Call();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Call::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Call =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsCall}, {}};

static void InitDefaultsFax() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Fax_default_instance_;
    new (ptr) ::api::Fax();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Fax::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Fax =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFax}, {}};

static void InitDefaultsLogHook() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_LogHook_default_instance_;
    new (ptr) ::api::LogHook();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::LogHook::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_LogHook =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsLogHook}, {}};

static void InitDefaultsAttachment() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Attachment_default_instance_;
    new (ptr) ::api::Attachment();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Attachment::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Attachment =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAttachment}, {
      &protobuf_api_2eproto::scc_info_AttachmentField.base,}};

static void InitDefaultsAttachmentAction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_AttachmentAction_default_instance_;
    new (ptr) ::api::AttachmentAction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::AttachmentAction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_AttachmentAction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsAttachmentAction}, {
      &protobuf_api_2eproto::scc_info_AttachmentActionOption.base,
      &protobuf_api_2eproto::scc_info_AttachmentActionOptionGroup.base,
      &protobuf_api_2eproto::scc_info_AttachmentConfirmationField.base,}};

static void InitDefaultsAttachmentConfirmationField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_AttachmentConfirmationField_default_instance_;
    new (ptr) ::api::AttachmentConfirmationField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::AttachmentConfirmationField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AttachmentConfirmationField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAttachmentConfirmationField}, {}};

static void InitDefaultsAttachmentActionOptionGroup() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_AttachmentActionOptionGroup_default_instance_;
    new (ptr) ::api::AttachmentActionOptionGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::AttachmentActionOptionGroup::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_AttachmentActionOptionGroup =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAttachmentActionOptionGroup}, {
      &protobuf_api_2eproto::scc_info_AttachmentActionOption.base,}};

static void InitDefaultsAttachmentActionOption() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_AttachmentActionOption_default_instance_;
    new (ptr) ::api::AttachmentActionOption();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::AttachmentActionOption::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AttachmentActionOption =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAttachmentActionOption}, {}};

static void InitDefaultsAttachmentField() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_AttachmentField_default_instance_;
    new (ptr) ::api::AttachmentField();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::AttachmentField::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AttachmentField =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAttachmentField}, {}};

static void InitDefaultsJSON() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_JSON_default_instance_;
    new (ptr) ::api::JSON();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::JSON::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_JSON =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsJSON}, {}};

static void InitDefaultsFile_TagsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_File_TagsEntry_DoNotUse_default_instance_;
    new (ptr) ::api::File_TagsEntry_DoNotUse();
  }
  ::api::File_TagsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_File_TagsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFile_TagsEntry_DoNotUse}, {}};

static void InitDefaultsFile() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_File_default_instance_;
    new (ptr) ::api::File();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::File::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_File =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFile}, {
      &protobuf_api_2eproto::scc_info_File_TagsEntry_DoNotUse.base,}};

static void InitDefaultsProduct_TagsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Product_TagsEntry_DoNotUse_default_instance_;
    new (ptr) ::api::Product_TagsEntry_DoNotUse();
  }
  ::api::Product_TagsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Product_TagsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsProduct_TagsEntry_DoNotUse}, {}};

static void InitDefaultsProduct() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Product_default_instance_;
    new (ptr) ::api::Product();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Product::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Product =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsProduct}, {
      &protobuf_api_2eproto::scc_info_File.base,
      &protobuf_api_2eproto::scc_info_Product_TagsEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RefundRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChargeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CancelSubscriptionRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CreatePlanRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SMSRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CallRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MMSRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmailRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CustomerRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UpdateCustomerRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SubscribeCustomerRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AddAccountRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Account.base);
  ::google::protobuf::internal::InitSCC(&scc_info_User.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Profile.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Empty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Customer_MetadataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Customer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Card.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BankAccount.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Address.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ChannelReminder.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserReminder.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ItemRef.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Star.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Pin.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SignedKey.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnImplemented.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Access.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StandardClaims.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogConfig.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmailAddress.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Email.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RecipientEmail.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SMS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Call.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Fax.base);
  ::google::protobuf::internal::InitSCC(&scc_info_LogHook.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Attachment.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AttachmentAction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AttachmentConfirmationField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AttachmentActionOptionGroup.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AttachmentActionOption.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AttachmentField.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JSON.base);
  ::google::protobuf::internal::InitSCC(&scc_info_File_TagsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_File.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Product_TagsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Product.base);
}

::google::protobuf::Metadata file_level_metadata[49];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RefundRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RefundRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RefundRequest, reason_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RefundRequest, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RefundRequest, reverse_transfer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RefundRequest, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::ChargeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::ChargeRequest, product_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::ChargeRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CancelSubscriptionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CancelSubscriptionRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CreatePlanRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CreatePlanRequest, plan_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CreatePlanRequest, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CreatePlanRequest, service_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CreatePlanRequest, service_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CreatePlanRequest, friendly_name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSRequest, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CallRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CallRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CallRequest, callback_url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::MMSRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::MMSRequest, sms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::MMSRequest, media_url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailRequest, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailRequest, plain_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailRequest, html_alt_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CustomerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CustomerRequest, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CustomerRequest, plan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CustomerRequest, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CustomerRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CustomerRequest, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CustomerRequest, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UpdateCustomerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UpdateCustomerRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UpdateCustomerRequest, customer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscribeCustomerRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscribeCustomerRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscribeCustomerRequest, plan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscribeCustomerRequest, card_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscribeCustomerRequest, exp_month_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscribeCustomerRequest, exp_year_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscribeCustomerRequest, cvc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AddAccountRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AddAccountRequest, customer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AddAccountRequest, access_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Account, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Account, customer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Account, access_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, team_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, profile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, deleted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, admin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, ownder_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, primary_owner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, restricted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, ultra_restricted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, stranger_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, bot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, has2fa_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, locale_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Profile, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Profile, avatar_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Profile, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Profile, status_emoji_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Profile, display_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Profile, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Profile, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Profile, image_urls_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Profile, team_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Customer_MetadataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Customer_MetadataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Customer_MetadataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Customer_MetadataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Customer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Customer, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Customer, plan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Customer, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Customer, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Customer, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Customer, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Customer, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Customer, metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Customer, deleted_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Customer, create_date_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, card_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, card_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, exp_month_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, exp_year_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, cvc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, debit_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::BankAccount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::BankAccount, account_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::BankAccount, routing_number_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Address, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Address, city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Address, country_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Address, line1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Address, line2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Address, postal_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Address, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::ChannelReminder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::ChannelReminder, channel_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::ChannelReminder, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::ChannelReminder, time_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserReminder, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserReminder, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserReminder, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserReminder, time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserReminder, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::ItemRef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::ItemRef, channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::ItemRef, file_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::ItemRef, comment_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Star, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Star, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Star, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Pin, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Pin, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Pin, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SignedKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SignedKey, signed_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UnImplemented, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Access, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Access, autom8ter_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Access, autom8ter_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Access, twilio_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Access, twilio_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Access, sendgrid_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Access, sendgrid_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Access, stripe_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Access, stripe_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Access, slack_account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Access, slack_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Access, gcp_project_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Access, gcp_key_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::StandardClaims, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::StandardClaims, access_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::StandardClaims, audience_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::StandardClaims, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::StandardClaims, expires_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::StandardClaims, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::StandardClaims, issued_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::StandardClaims, not_before_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::LogConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::LogConfig, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::LogConfig, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailAddress, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailAddress, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailAddress, address_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Email, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Email, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Email, recipient_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RecipientEmail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RecipientEmail, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RecipientEmail, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RecipientEmail, plain_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RecipientEmail, html_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, body_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, media_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, callback_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, app_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Call, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Call, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Call, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Call, callback_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Fax, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Fax, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Fax, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Fax, media_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Fax, quality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Fax, callback_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Fax, store_media_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::LogHook, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::LogHook, author_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::LogHook, icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::LogHook, title_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Attachment, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Attachment, color_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Attachment, fallback_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Attachment, callback_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Attachment, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Attachment, author_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Attachment, author_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Attachment, author_link_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Attachment, author_icon_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Attachment, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Attachment, title_prefix_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Attachment, pretext_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Attachment, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Attachment, image_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Attachment, thumb_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Attachment, fields_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentAction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentAction, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentAction, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentAction, style_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentAction, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentAction, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentAction, data_source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentAction, min_query_length_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentAction, options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentAction, selected_options_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentAction, option_groups_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentAction, confirm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentAction, url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentConfirmationField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentConfirmationField, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentConfirmationField, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentConfirmationField, ok_text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentConfirmationField, dismiss_text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentActionOptionGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentActionOptionGroup, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentActionOptionGroup, options_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentActionOption, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentActionOption, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentActionOption, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentActionOption, description_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentField, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentField, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentField, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AttachmentField, short__),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSON, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSON, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSON, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::File_TagsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::File_TagsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::File_TagsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::File_TagsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::File, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::File, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::File, size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::File, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::File, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Product_TagsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Product_TagsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Product_TagsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Product_TagsEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Product, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Product, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Product, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Product, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Product, files_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Product, tags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Product, available_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::api::RefundRequest)},
  { 10, -1, sizeof(::api::ChargeRequest)},
  { 17, -1, sizeof(::api::CancelSubscriptionRequest)},
  { 23, -1, sizeof(::api::CreatePlanRequest)},
  { 33, -1, sizeof(::api::SMSRequest)},
  { 40, -1, sizeof(::api::CallRequest)},
  { 47, -1, sizeof(::api::MMSRequest)},
  { 54, -1, sizeof(::api::EmailRequest)},
  { 63, -1, sizeof(::api::CustomerRequest)},
  { 74, -1, sizeof(::api::UpdateCustomerRequest)},
  { 81, -1, sizeof(::api::SubscribeCustomerRequest)},
  { 92, -1, sizeof(::api::AddAccountRequest)},
  { 99, -1, sizeof(::api::Account)},
  { 106, -1, sizeof(::api::User)},
  { 125, -1, sizeof(::api::Profile)},
  { 138, -1, sizeof(::api::Empty)},
  { 143, 150, sizeof(::api::Customer_MetadataEntry_DoNotUse)},
  { 152, -1, sizeof(::api::Customer)},
  { 167, -1, sizeof(::api::Card)},
  { 178, -1, sizeof(::api::BankAccount)},
  { 185, -1, sizeof(::api::Address)},
  { 196, -1, sizeof(::api::ChannelReminder)},
  { 204, -1, sizeof(::api::UserReminder)},
  { 213, -1, sizeof(::api::ItemRef)},
  { 221, -1, sizeof(::api::Star)},
  { 228, -1, sizeof(::api::Pin)},
  { 235, -1, sizeof(::api::SignedKey)},
  { 241, -1, sizeof(::api::UnImplemented)},
  { 246, -1, sizeof(::api::Access)},
  { 263, -1, sizeof(::api::StandardClaims)},
  { 275, -1, sizeof(::api::LogConfig)},
  { 282, -1, sizeof(::api::EmailAddress)},
  { 289, -1, sizeof(::api::Email)},
  { 296, -1, sizeof(::api::RecipientEmail)},
  { 305, -1, sizeof(::api::SMS)},
  { 316, -1, sizeof(::api::Call)},
  { 324, -1, sizeof(::api::Fax)},
  { 335, -1, sizeof(::api::LogHook)},
  { 343, -1, sizeof(::api::Attachment)},
  { 363, -1, sizeof(::api::AttachmentAction)},
  { 380, -1, sizeof(::api::AttachmentConfirmationField)},
  { 389, -1, sizeof(::api::AttachmentActionOptionGroup)},
  { 396, -1, sizeof(::api::AttachmentActionOption)},
  { 404, -1, sizeof(::api::AttachmentField)},
  { 412, -1, sizeof(::api::JSON)},
  { 419, 426, sizeof(::api::File_TagsEntry_DoNotUse)},
  { 428, -1, sizeof(::api::File)},
  { 437, 444, sizeof(::api::Product_TagsEntry_DoNotUse)},
  { 446, -1, sizeof(::api::Product)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_RefundRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_ChargeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_CancelSubscriptionRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_CreatePlanRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_SMSRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_CallRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_MMSRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_EmailRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_CustomerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_UpdateCustomerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_SubscribeCustomerRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_AddAccountRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Account_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_User_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Profile_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Customer_MetadataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Customer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Card_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_BankAccount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Address_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_ChannelReminder_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_UserReminder_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_ItemRef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Star_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Pin_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_SignedKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_UnImplemented_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Access_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_StandardClaims_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_LogConfig_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_EmailAddress_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Email_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_RecipientEmail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_SMS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Call_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Fax_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_LogHook_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Attachment_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_AttachmentAction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_AttachmentConfirmationField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_AttachmentActionOptionGroup_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_AttachmentActionOption_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_AttachmentField_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_JSON_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_File_TagsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_File_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Product_TagsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Product_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "api.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 49);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tapi.proto\022\003api\032\033google/protobuf/empty."
      "proto\032\036google/protobuf/duration.proto\032 g"
      "oogle/protobuf/field_mask.proto\032\034google/"
      "api/annotations.proto\032\025google/api/auth.p"
      "roto\032\035google/pubsub/v1/pubsub.proto\"e\n\rR"
      "efundRequest\022\n\n\002id\030\001 \001(\t\022\016\n\006reason\030\002 \001(\t"
      "\022\016\n\006amount\030\003 \001(\003\022\030\n\020reverse_transfer\030\004 \001"
      "(\010\022\016\n\006status\030\005 \001(\t\":\n\rChargeRequest\022\035\n\007p"
      "roduct\030\001 \001(\0132\014.api.Product\022\n\n\002id\030\002 \001(\t\"\'"
      "\n\031CancelSubscriptionRequest\022\n\n\002id\030\001 \001(\t\""
      "u\n\021CreatePlanRequest\022\017\n\007plan_id\030\001 \001(\t\022\016\n"
      "\006amount\030\002 \001(\003\022\022\n\nservice_id\030\003 \001(\t\022\024\n\014ser"
      "vice_name\030\004 \001(\t\022\025\n\rfriendly_name\030\005 \001(\t\"&"
      "\n\nSMSRequest\022\n\n\002id\030\001 \001(\t\022\014\n\004body\030\002 \001(\t\"/"
      "\n\013CallRequest\022\n\n\002id\030\001 \001(\t\022\024\n\014callback_ur"
      "l\030\002 \001(\t\"=\n\nMMSRequest\022\034\n\003sms\030\001 \001(\0132\017.api"
      ".SMSRequest\022\021\n\tmedia_url\030\003 \001(\t\"Q\n\014EmailR"
      "equest\022\n\n\002id\030\001 \001(\t\022\017\n\007subject\030\002 \001(\t\022\022\n\np"
      "lain_text\030\003 \001(\t\022\020\n\010html_alt\030\004 \001(\t\"\177\n\017Cus"
      "tomerRequest\022\r\n\005email\030\001 \001(\t\022\014\n\004plan\030\002 \001("
      "\t\022\r\n\005phone\030\003 \001(\t\022\014\n\004name\030\004 \001(\t\022\023\n\013descri"
      "ption\030\007 \001(\t\022\035\n\007address\030\010 \001(\0132\014.api.Addre"
      "ss\"K\n\025UpdateCustomerRequest\022\n\n\002id\030\001 \001(\t\022"
      "&\n\010customer\030\002 \001(\0132\024.api.CustomerRequest\""
      "{\n\030SubscribeCustomerRequest\022\n\n\002id\030\001 \001(\t\022"
      "\014\n\004plan\030\002 \001(\t\022\023\n\013card_number\030\003 \001(\t\022\021\n\tex"
      "p_month\030\004 \001(\t\022\020\n\010exp_year\030\005 \001(\t\022\013\n\003cvc\030\006"
      " \001(\t\"X\n\021AddAccountRequest\022&\n\010customer\030\001 "
      "\001(\0132\024.api.CustomerRequest\022\033\n\006access\030\002 \001("
      "\0132\013.api.Access\"G\n\007Account\022\037\n\010customer\030\001 "
      "\001(\0132\r.api.Customer\022\033\n\006access\030\002 \001(\0132\013.api"
      ".Access\"\204\002\n\004User\022\n\n\002id\030\001 \001(\t\022\017\n\007team_id\030"
      "\002 \001(\t\022\014\n\004name\030\003 \001(\t\022\035\n\007profile\030\004 \001(\0132\014.a"
      "pi.Profile\022\017\n\007deleted\030\005 \001(\010\022\r\n\005admin\030\006 \001"
      "(\010\022\016\n\006ownder\030\007 \001(\010\022\025\n\rprimary_owner\030\010 \001("
      "\010\022\022\n\nrestricted\030\t \001(\010\022\030\n\020ultra_restricte"
      "d\030\n \001(\010\022\020\n\010stranger\030\013 \001(\010\022\013\n\003bot\030\014 \001(\010\022\016"
      "\n\006has2fa\030\r \001(\010\022\016\n\006locale\030\016 \001(\t\"\231\001\n\007Profi"
      "le\022\023\n\013avatar_hash\030\001 \001(\t\022\016\n\006status\030\002 \001(\t\022"
      "\024\n\014status_emoji\030\003 \001(\t\022\024\n\014display_name\030\004 "
      "\001(\t\022\014\n\004name\030\005 \001(\t\022\r\n\005email\030\006 \001(\t\022\022\n\nimag"
      "e_urls\030\007 \003(\t\022\014\n\004team\030\010 \001(\t\"\007\n\005Empty\"\212\002\n\010"
      "Customer\022\n\n\002id\030\001 \001(\t\022\014\n\004plan\030\002 \001(\t\022\014\n\004na"
      "me\030\003 \001(\t\022\r\n\005email\030\004 \001(\t\022\023\n\013description\030\005"
      " \001(\t\022\r\n\005phone\030\006 \001(\t\022\035\n\007address\030\010 \001(\0132\014.a"
      "pi.Address\022-\n\010metadata\030\t \003(\0132\033.api.Custo"
      "mer.MetadataEntry\022\017\n\007deleted\030\n \001(\010\022\023\n\013cr"
      "eate_date\030\024 \001(\003\032/\n\rMetadataEntry\022\013\n\003key\030"
      "\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"~\n\004Card\022 \n\tcard"
      "_type\030\001 \001(\0162\r.api.CardType\022\023\n\013card_numbe"
      "r\030\003 \001(\t\022\021\n\texp_month\030\004 \001(\t\022\020\n\010exp_year\030\005"
      " \001(\t\022\013\n\003cvc\030\006 \001(\t\022\r\n\005debit\030\007 \001(\010\"=\n\013Bank"
      "Account\022\026\n\016account_number\030\001 \001(\t\022\026\n\016routi"
      "ng_number\030\002 \001(\t\"j\n\007Address\022\014\n\004city\030\001 \001(\t"
      "\022\017\n\007country\030\002 \001(\t\022\r\n\005line1\030\003 \001(\t\022\r\n\005line"
      "2\030\004 \001(\t\022\023\n\013postal_code\030\005 \001(\t\022\r\n\005state\030\006 "
      "\001(\t\"A\n\017ChannelReminder\022\022\n\nchannel_id\030\001 \001"
      "(\t\022\014\n\004text\030\002 \001(\t\022\014\n\004time\030\003 \001(\t\"R\n\014UserRe"
      "minder\022\n\n\002id\030\001 \001(\t\022\014\n\004text\030\002 \001(\t\022\014\n\004time"
      "\030\003 \001(\t\022\032\n\004item\030\004 \001(\0132\014.api.ItemRef\"9\n\007It"
      "emRef\022\017\n\007channel\030\001 \001(\t\022\014\n\004file\030\002 \001(\t\022\017\n\007"
      "comment\030\003 \001(\t\"0\n\004Star\022\014\n\004text\030\001 \001(\t\022\032\n\004i"
      "tem\030\004 \001(\0132\014.api.ItemRef\"/\n\003Pin\022\014\n\004text\030\001"
      " \001(\t\022\032\n\004item\030\004 \001(\0132\014.api.ItemRef\"\037\n\tSign"
      "edKey\022\022\n\nsigned_key\030\001 \001(\t\"\017\n\rUnImplement"
      "ed\"\222\002\n\006Access\022\031\n\021autom8ter_account\030\001 \001(\t"
      "\022\025\n\rautom8ter_key\030\002 \001(\t\022\026\n\016twilio_accoun"
      "t\030\003 \001(\t\022\022\n\ntwilio_key\030\004 \001(\t\022\030\n\020sendgrid_"
      "account\030\005 \001(\t\022\024\n\014sendgrid_key\030\006 \001(\t\022\026\n\016s"
      "tripe_account\030\007 \001(\t\022\022\n\nstripe_key\030\010 \001(\t\022"
      "\025\n\rslack_account\030\t \001(\t\022\021\n\tslack_key\030\n \001("
      "\t\022\023\n\013gcp_project\030\013 \001(\t\022\017\n\007gcp_key\030\014 \001(\t\""
      "\227\001\n\016StandardClaims\022\033\n\006access\030\001 \001(\0132\013.api"
      ".Access\022\020\n\010audience\030\002 \001(\t\022\017\n\007subject\030\003 \001"
      "(\t\022\022\n\nexpires_at\030\004 \001(\003\022\n\n\002id\030\005 \001(\t\022\021\n\tis"
      "sued_at\030\006 \001(\003\022\022\n\nnot_before\030\007 \001(\003\".\n\tLog"
      "Config\022\020\n\010username\030\001 \001(\t\022\017\n\007channel\030\002 \001("
      "\t\"-\n\014EmailAddress\022\014\n\004name\030\001 \001(\t\022\017\n\007addre"
      "ss\030\002 \001(\t\"P\n\005Email\022\037\n\004from\030\001 \001(\0132\021.api.Em"
      "ailAddress\022&\n\trecipient\030\002 \001(\0132\023.api.Reci"
      "pientEmail\"b\n\016RecipientEmail\022\035\n\002to\030\002 \001(\013"
      "2\021.api.EmailAddress\022\017\n\007subject\030\003 \001(\t\022\022\n\n"
      "plain_text\030\004 \001(\t\022\014\n\004html\030\005 \001(\t\"_\n\003SMS\022\n\n"
      "\002to\030\001 \001(\t\022\014\n\004from\030\002 \001(\t\022\014\n\004body\030\003 \001(\t\022\021\n"
      "\tmedia_url\030\004 \001(\t\022\020\n\010callback\030\005 \001(\t\022\013\n\003ap"
      "p\030\006 \001(\t\"2\n\004Call\022\n\n\002to\030\001 \001(\t\022\014\n\004from\030\002 \001("
      "\t\022\020\n\010callback\030\005 \001(\t\"j\n\003Fax\022\n\n\002to\030\001 \001(\t\022\014"
      "\n\004from\030\002 \001(\t\022\021\n\tmedia_url\030\003 \001(\t\022\017\n\007quali"
      "ty\030\004 \001(\t\022\020\n\010callback\030\005 \001(\t\022\023\n\013store_medi"
      "a\030\006 \001(\010\"6\n\007LogHook\022\016\n\006author\030\001 \001(\t\022\014\n\004ic"
      "on\030\002 \001(\t\022\r\n\005title\030\003 \001(\t\"\260\002\n\nAttachment\022\r"
      "\n\005color\030\001 \001(\t\022\020\n\010fallback\030\002 \001(\t\022\023\n\013callb"
      "ack_id\030\003 \001(\t\022\n\n\002id\030\004 \001(\003\022\021\n\tauthor_id\030\005 "
      "\001(\t\022\023\n\013author_name\030\006 \001(\t\022\023\n\013author_link\030"
      "\007 \001(\t\022\023\n\013author_icon\030\010 \001(\t\022\r\n\005title\030\t \001("
      "\t\022\024\n\014title_prefix\030\n \001(\t\022\017\n\007pretext\030\013 \001(\t"
      "\022\014\n\004text\030\014 \001(\t\022\021\n\timage_url\030\r \001(\t\022\021\n\tthu"
      "mb_url\030\016 \001(\t\022$\n\006fields\030\017 \003(\0132\024.api.Attac"
      "hmentField\"\347\002\n\020AttachmentAction\022\014\n\004name\030"
      "\001 \001(\t\022\014\n\004text\030\002 \001(\t\022\r\n\005style\030\003 \001(\t\022\014\n\004ty"
      "pe\030\004 \001(\t\022\r\n\005value\030\005 \001(\t\022\023\n\013data_source\030\006"
      " \001(\t\022\030\n\020min_query_length\030\007 \001(\003\022,\n\007option"
      "s\030\010 \003(\0132\033.api.AttachmentActionOption\0225\n\020"
      "selected_options\030\t \003(\0132\033.api.AttachmentA"
      "ctionOption\0227\n\roption_groups\030\n \003(\0132 .api"
      ".AttachmentActionOptionGroup\0221\n\007confirm\030"
      "\013 \001(\0132 .api.AttachmentConfirmationField\022"
      "\013\n\003url\030\014 \001(\t\"a\n\033AttachmentConfirmationFi"
      "eld\022\r\n\005title\030\001 \001(\t\022\014\n\004text\030\002 \001(\t\022\017\n\007ok_t"
      "ext\030\003 \001(\t\022\024\n\014dismiss_text\030\004 \001(\t\"Y\n\033Attac"
      "hmentActionOptionGroup\022\014\n\004text\030\001 \001(\t\022,\n\007"
      "options\030\002 \003(\0132\033.api.AttachmentActionOpti"
      "on\"K\n\026AttachmentActionOption\022\r\n\005title\030\001 "
      "\001(\t\022\r\n\005value\030\002 \001(\t\022\023\n\013description\030\003 \001(\t\""
      ">\n\017AttachmentField\022\r\n\005title\030\001 \001(\t\022\r\n\005val"
      "ue\030\002 \001(\t\022\r\n\005short\030\003 \001(\010\"\"\n\004JSON\022\014\n\004data\030"
      "\001 \001(\014\022\014\n\004size\030\002 \001(\003\"\200\001\n\004File\022\014\n\004data\030\001 \001"
      "(\014\022\014\n\004size\030\002 \001(\003\022\014\n\004name\030\003 \001(\t\022!\n\004tags\030\004"
      " \003(\0132\023.api.File.TagsEntry\032+\n\tTagsEntry\022\013"
      "\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"\274\001\n\007Produ"
      "ct\022\014\n\004name\030\001 \001(\t\022\016\n\006amount\030\002 \001(\003\022\023\n\013desc"
      "ription\030\003 \001(\t\022\030\n\005files\030\004 \003(\0132\t.api.File\022"
      "$\n\004tags\030\005 \003(\0132\026.api.Product.TagsEntry\022\021\n"
      "\tavailable\030\006 \001(\010\032+\n\tTagsEntry\022\013\n\003key\030\001 \001"
      "(\t\022\r\n\005value\030\002 \001(\t:\0028\001*-\n\rCustomerIndex\022\006"
      "\n\002ID\020\000\022\t\n\005EMAIL\020\001\022\t\n\005PHONE\020\002*P\n\005Claim\022\n\n"
      "\006TWILIO\020\000\022\014\n\010SENDGRID\020\001\022\n\n\006STRIPE\020\002\022\t\n\005S"
      "LACK\020\003\022\007\n\003GCP\020\004\022\r\n\tAUTOM8TER\020\005*9\n\rSignin"
      "gMethod\022\010\n\004HMAC\020\000\022\t\n\005ECDSA\020\001\022\007\n\003RSA\020\002\022\n\n"
      "\006RSAPPS\020\003*<\n\010CardType\022\010\n\004VISA\020\000\022\016\n\nMASTE"
      "RCARD\020\001\022\014\n\010DISCOVER\020\002\022\010\n\004AMEX\020\0032^\n\016Accou"
      "ntService\022L\n\rCreateAccount\022\026.api.AddAcco"
      "untRequest\032\t.api.JSON\"\030\202\323\344\223\002\022\"\r/api/acco"
      "unts:\001*2\320\007\n\017CustomerService\022L\n\016CreateCus"
      "tomer\022\024.api.CustomerRequest\032\t.api.JSON\"\031"
      "\202\323\344\223\002\023\"\016/api/customers:\001*\022W\n\016UpdateCusto"
      "mer\022\032.api.UpdateCustomerRequest\032\t.api.JS"
      "ON\"\036\202\323\344\223\002\030\"\023/api/customers/{id}:\001*\022F\n\rLi"
      "stCustomers\022\n.api.Empty\032\t.api.JSON\"\036\202\323\344\223"
      "\002\030\"\023/api/customers/list:\001*\022V\n\016ChargeCust"
      "omer\022\022.api.ChargeRequest\032\t.api.JSON\"%\202\323\344"
      "\223\002\037\"\032/api/customers/{id}/charge:\001*\022V\n\016Re"
      "fundCustomer\022\022.api.RefundRequest\032\t.api.J"
      "SON\"%\202\323\344\223\002\037\"\032/api/customers/{id}/refund:"
      "\001*\022g\n\021SubscribeCustomer\022\035.api.SubscribeC"
      "ustomerRequest\032\t.api.JSON\"(\202\323\344\223\002\"\"\035/api/"
      "customers/{id}/subscribe:\001*\022l\n\023UnSubscri"
      "beCustomer\022\036.api.CancelSubscriptionReque"
      "st\032\t.api.JSON\"*\202\323\344\223\002$\"\037/api/customers/{i"
      "d}/unsubscribe:\001*\022M\n\013SMSCustomer\022\017.api.S"
      "MSRequest\032\t.api.JSON\"\"\202\323\344\223\002\034\"\027/api/custo"
      "mers/{id}/sms:\001*\022P\n\014CallCustomer\022\020.api.C"
      "allRequest\032\t.api.JSON\"#\202\323\344\223\002\035\"\030/api/cust"
      "omers/{id}/call:\001*\022Q\n\013MMSCustomer\022\017.api."
      "MMSRequest\032\t.api.JSON\"&\202\323\344\223\002 \"\033/api/cust"
      "omers/{sms.id}/mms:\001*\022S\n\rEmailCustomer\022\021"
      ".api.EmailRequest\032\t.api.JSON\"$\202\323\344\223\002\036\"\031/a"
      "pi/customers/{id}/email:\001*2a\n\013PlanServic"
      "e\022R\n\026CreateSubscriptionPlan\022\026.api.Create"
      "PlanRequest\032\t.api.JSON\"\025\202\323\344\223\002\017\"\n/api/pla"
      "ns:\001*2\351\002\n\013UserService\022K\n\tEmailUser\022\021.api"
      ".EmailRequest\032\t.api.JSON\" \202\323\344\223\002\032\"\025/api/u"
      "sers/{id}/email:\001*\022B\n\nCreateUser\022\022.api.U"
      "nImplemented\032\t.api.JSON\"\025\202\323\344\223\002\017\"\n/api/us"
      "ers:\001*\022B\n\nUpdateUser\022\022.api.UnImplemented"
      "\032\t.api.JSON\"\025\202\323\344\223\002\017\"\n/api/users:\001*\022B\n\nDe"
      "leteUser\022\022.api.UnImplemented\032\t.api.JSON\""
      "\025\202\323\344\223\002\017\"\n/api/users:\001*\022A\n\tListUsers\022\022.ap"
      "i.UnImplemented\032\t.api.JSON\"\025\202\323\344\223\002\017\"\n/api"
      "/users:\001*b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 6777);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fprotobuf_2fempty_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2fduration_2eproto::AddDescriptors();
  ::protobuf_google_2fprotobuf_2ffield_5fmask_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_google_2fapi_2fauth_2eproto::AddDescriptors();
  ::protobuf_google_2fpubsub_2fv1_2fpubsub_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_api_2eproto
namespace api {
const ::google::protobuf::EnumDescriptor* CustomerIndex_descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_enum_descriptors[0];
}
bool CustomerIndex_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Claim_descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_enum_descriptors[1];
}
bool Claim_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* SigningMethod_descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_enum_descriptors[2];
}
bool SigningMethod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CardType_descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_enum_descriptors[3];
}
bool CardType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void RefundRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RefundRequest::kIdFieldNumber;
const int RefundRequest::kReasonFieldNumber;
const int RefundRequest::kAmountFieldNumber;
const int RefundRequest::kReverseTransferFieldNumber;
const int RefundRequest::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RefundRequest::RefundRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_RefundRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.RefundRequest)
}
RefundRequest::RefundRequest(const RefundRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.reason().size() > 0) {
    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&reverse_transfer_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(reverse_transfer_));
  // @@protoc_insertion_point(copy_constructor:api.RefundRequest)
}

void RefundRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reverse_transfer_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(reverse_transfer_));
}

RefundRequest::~RefundRequest() {
  // @@protoc_insertion_point(destructor:api.RefundRequest)
  SharedDtor();
}

void RefundRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RefundRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RefundRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RefundRequest& RefundRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_RefundRequest.base);
  return *internal_default_instance();
}


void RefundRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.RefundRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  reason_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reverse_transfer_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(reverse_transfer_));
  _internal_metadata_.Clear();
}

bool RefundRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.RefundRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.RefundRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string reason = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_reason()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->reason().data(), static_cast<int>(this->reason().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.RefundRequest.reason"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 amount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool reverse_transfer = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &reverse_transfer_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.RefundRequest.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.RefundRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.RefundRequest)
  return false;
#undef DO_
}

void RefundRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.RefundRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RefundRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RefundRequest.reason");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->reason(), output);
  }

  // int64 amount = 3;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->amount(), output);
  }

  // bool reverse_transfer = 4;
  if (this->reverse_transfer() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->reverse_transfer(), output);
  }

  // string status = 5;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RefundRequest.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.RefundRequest)
}

::google::protobuf::uint8* RefundRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.RefundRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RefundRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->reason().data(), static_cast<int>(this->reason().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RefundRequest.reason");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->reason(), target);
  }

  // int64 amount = 3;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->amount(), target);
  }

  // bool reverse_transfer = 4;
  if (this->reverse_transfer() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->reverse_transfer(), target);
  }

  // string status = 5;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RefundRequest.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.RefundRequest)
  return target;
}

size_t RefundRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.RefundRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string reason = 2;
  if (this->reason().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->reason());
  }

  // string status = 5;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  // int64 amount = 3;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  // bool reverse_transfer = 4;
  if (this->reverse_transfer() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RefundRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.RefundRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RefundRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RefundRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.RefundRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.RefundRequest)
    MergeFrom(*source);
  }
}

void RefundRequest::MergeFrom(const RefundRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.RefundRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.reason().size() > 0) {

    reason_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.reason_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.reverse_transfer() != 0) {
    set_reverse_transfer(from.reverse_transfer());
  }
}

void RefundRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.RefundRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RefundRequest::CopyFrom(const RefundRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.RefundRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RefundRequest::IsInitialized() const {
  return true;
}

void RefundRequest::Swap(RefundRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RefundRequest::InternalSwap(RefundRequest* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  reason_.Swap(&other->reason_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  status_.Swap(&other->status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(amount_, other->amount_);
  swap(reverse_transfer_, other->reverse_transfer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RefundRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChargeRequest::InitAsDefaultInstance() {
  ::api::_ChargeRequest_default_instance_._instance.get_mutable()->product_ = const_cast< ::api::Product*>(
      ::api::Product::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChargeRequest::kProductFieldNumber;
const int ChargeRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChargeRequest::ChargeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_ChargeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.ChargeRequest)
}
ChargeRequest::ChargeRequest(const ChargeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_product()) {
    product_ = new ::api::Product(*from.product_);
  } else {
    product_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.ChargeRequest)
}

void ChargeRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  product_ = NULL;
}

ChargeRequest::~ChargeRequest() {
  // @@protoc_insertion_point(destructor:api.ChargeRequest)
  SharedDtor();
}

void ChargeRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete product_;
}

void ChargeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChargeRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChargeRequest& ChargeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_ChargeRequest.base);
  return *internal_default_instance();
}


void ChargeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ChargeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && product_ != NULL) {
    delete product_;
  }
  product_ = NULL;
  _internal_metadata_.Clear();
}

bool ChargeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.ChargeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .api.Product product = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_product()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.ChargeRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.ChargeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.ChargeRequest)
  return false;
#undef DO_
}

void ChargeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.ChargeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.Product product = 1;
  if (this->has_product()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_product(), output);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ChargeRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.ChargeRequest)
}

::google::protobuf::uint8* ChargeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.ChargeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.Product product = 1;
  if (this->has_product()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_product(), deterministic, target);
  }

  // string id = 2;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ChargeRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.ChargeRequest)
  return target;
}

size_t ChargeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ChargeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 2;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .api.Product product = 1;
  if (this->has_product()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *product_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChargeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ChargeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ChargeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChargeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ChargeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ChargeRequest)
    MergeFrom(*source);
  }
}

void ChargeRequest::MergeFrom(const ChargeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ChargeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_product()) {
    mutable_product()->::api::Product::MergeFrom(from.product());
  }
}

void ChargeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ChargeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChargeRequest::CopyFrom(const ChargeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ChargeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChargeRequest::IsInitialized() const {
  return true;
}

void ChargeRequest::Swap(ChargeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChargeRequest::InternalSwap(ChargeRequest* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(product_, other->product_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChargeRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CancelSubscriptionRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CancelSubscriptionRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CancelSubscriptionRequest::CancelSubscriptionRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_CancelSubscriptionRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.CancelSubscriptionRequest)
}
CancelSubscriptionRequest::CancelSubscriptionRequest(const CancelSubscriptionRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  // @@protoc_insertion_point(copy_constructor:api.CancelSubscriptionRequest)
}

void CancelSubscriptionRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CancelSubscriptionRequest::~CancelSubscriptionRequest() {
  // @@protoc_insertion_point(destructor:api.CancelSubscriptionRequest)
  SharedDtor();
}

void CancelSubscriptionRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CancelSubscriptionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CancelSubscriptionRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CancelSubscriptionRequest& CancelSubscriptionRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_CancelSubscriptionRequest.base);
  return *internal_default_instance();
}


void CancelSubscriptionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.CancelSubscriptionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CancelSubscriptionRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.CancelSubscriptionRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.CancelSubscriptionRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.CancelSubscriptionRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.CancelSubscriptionRequest)
  return false;
#undef DO_
}

void CancelSubscriptionRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.CancelSubscriptionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CancelSubscriptionRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.CancelSubscriptionRequest)
}

::google::protobuf::uint8* CancelSubscriptionRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.CancelSubscriptionRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CancelSubscriptionRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.CancelSubscriptionRequest)
  return target;
}

size_t CancelSubscriptionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.CancelSubscriptionRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CancelSubscriptionRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.CancelSubscriptionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CancelSubscriptionRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CancelSubscriptionRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.CancelSubscriptionRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.CancelSubscriptionRequest)
    MergeFrom(*source);
  }
}

void CancelSubscriptionRequest::MergeFrom(const CancelSubscriptionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.CancelSubscriptionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
}

void CancelSubscriptionRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.CancelSubscriptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CancelSubscriptionRequest::CopyFrom(const CancelSubscriptionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.CancelSubscriptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CancelSubscriptionRequest::IsInitialized() const {
  return true;
}

void CancelSubscriptionRequest::Swap(CancelSubscriptionRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CancelSubscriptionRequest::InternalSwap(CancelSubscriptionRequest* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CancelSubscriptionRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CreatePlanRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreatePlanRequest::kPlanIdFieldNumber;
const int CreatePlanRequest::kAmountFieldNumber;
const int CreatePlanRequest::kServiceIdFieldNumber;
const int CreatePlanRequest::kServiceNameFieldNumber;
const int CreatePlanRequest::kFriendlyNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreatePlanRequest::CreatePlanRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_CreatePlanRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.CreatePlanRequest)
}
CreatePlanRequest::CreatePlanRequest(const CreatePlanRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  plan_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plan_id().size() > 0) {
    plan_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plan_id_);
  }
  service_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_id().size() > 0) {
    service_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_id_);
  }
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service_name().size() > 0) {
    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  friendly_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.friendly_name().size() > 0) {
    friendly_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friendly_name_);
  }
  amount_ = from.amount_;
  // @@protoc_insertion_point(copy_constructor:api.CreatePlanRequest)
}

void CreatePlanRequest::SharedCtor() {
  plan_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friendly_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_LONGLONG(0);
}

CreatePlanRequest::~CreatePlanRequest() {
  // @@protoc_insertion_point(destructor:api.CreatePlanRequest)
  SharedDtor();
}

void CreatePlanRequest::SharedDtor() {
  plan_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friendly_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CreatePlanRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CreatePlanRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreatePlanRequest& CreatePlanRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_CreatePlanRequest.base);
  return *internal_default_instance();
}


void CreatePlanRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.CreatePlanRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  plan_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  service_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  friendly_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amount_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool CreatePlanRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.CreatePlanRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string plan_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plan_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plan_id().data(), static_cast<int>(this->plan_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.CreatePlanRequest.plan_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_id().data(), static_cast<int>(this->service_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.CreatePlanRequest.service_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service_name().data(), static_cast<int>(this->service_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.CreatePlanRequest.service_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string friendly_name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_friendly_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->friendly_name().data(), static_cast<int>(this->friendly_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.CreatePlanRequest.friendly_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.CreatePlanRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.CreatePlanRequest)
  return false;
#undef DO_
}

void CreatePlanRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.CreatePlanRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string plan_id = 1;
  if (this->plan_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plan_id().data(), static_cast<int>(this->plan_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CreatePlanRequest.plan_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->plan_id(), output);
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->amount(), output);
  }

  // string service_id = 3;
  if (this->service_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_id().data(), static_cast<int>(this->service_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CreatePlanRequest.service_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->service_id(), output);
  }

  // string service_name = 4;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CreatePlanRequest.service_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->service_name(), output);
  }

  // string friendly_name = 5;
  if (this->friendly_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friendly_name().data(), static_cast<int>(this->friendly_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CreatePlanRequest.friendly_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->friendly_name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.CreatePlanRequest)
}

::google::protobuf::uint8* CreatePlanRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.CreatePlanRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string plan_id = 1;
  if (this->plan_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plan_id().data(), static_cast<int>(this->plan_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CreatePlanRequest.plan_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->plan_id(), target);
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->amount(), target);
  }

  // string service_id = 3;
  if (this->service_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_id().data(), static_cast<int>(this->service_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CreatePlanRequest.service_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->service_id(), target);
  }

  // string service_name = 4;
  if (this->service_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service_name().data(), static_cast<int>(this->service_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CreatePlanRequest.service_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->service_name(), target);
  }

  // string friendly_name = 5;
  if (this->friendly_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->friendly_name().data(), static_cast<int>(this->friendly_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CreatePlanRequest.friendly_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->friendly_name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.CreatePlanRequest)
  return target;
}

size_t CreatePlanRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.CreatePlanRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string plan_id = 1;
  if (this->plan_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plan_id());
  }

  // string service_id = 3;
  if (this->service_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_id());
  }

  // string service_name = 4;
  if (this->service_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service_name());
  }

  // string friendly_name = 5;
  if (this->friendly_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->friendly_name());
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreatePlanRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.CreatePlanRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreatePlanRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreatePlanRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.CreatePlanRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.CreatePlanRequest)
    MergeFrom(*source);
  }
}

void CreatePlanRequest::MergeFrom(const CreatePlanRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.CreatePlanRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.plan_id().size() > 0) {

    plan_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plan_id_);
  }
  if (from.service_id().size() > 0) {

    service_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_id_);
  }
  if (from.service_name().size() > 0) {

    service_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_name_);
  }
  if (from.friendly_name().size() > 0) {

    friendly_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.friendly_name_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
}

void CreatePlanRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.CreatePlanRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreatePlanRequest::CopyFrom(const CreatePlanRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.CreatePlanRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreatePlanRequest::IsInitialized() const {
  return true;
}

void CreatePlanRequest::Swap(CreatePlanRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreatePlanRequest::InternalSwap(CreatePlanRequest* other) {
  using std::swap;
  plan_id_.Swap(&other->plan_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  service_id_.Swap(&other->service_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  service_name_.Swap(&other->service_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  friendly_name_.Swap(&other->friendly_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(amount_, other->amount_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CreatePlanRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SMSRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SMSRequest::kIdFieldNumber;
const int SMSRequest::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SMSRequest::SMSRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_SMSRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.SMSRequest)
}
SMSRequest::SMSRequest(const SMSRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.body().size() > 0) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  // @@protoc_insertion_point(copy_constructor:api.SMSRequest)
}

void SMSRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SMSRequest::~SMSRequest() {
  // @@protoc_insertion_point(destructor:api.SMSRequest)
  SharedDtor();
}

void SMSRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SMSRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SMSRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SMSRequest& SMSRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_SMSRequest.base);
  return *internal_default_instance();
}


void SMSRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.SMSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SMSRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.SMSRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SMSRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->body().data(), static_cast<int>(this->body().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SMSRequest.body"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.SMSRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.SMSRequest)
  return false;
#undef DO_
}

void SMSRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.SMSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMSRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string body = 2;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->body().data(), static_cast<int>(this->body().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMSRequest.body");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.SMSRequest)
}

::google::protobuf::uint8* SMSRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.SMSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMSRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string body = 2;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->body().data(), static_cast<int>(this->body().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMSRequest.body");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->body(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.SMSRequest)
  return target;
}

size_t SMSRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.SMSRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string body = 2;
  if (this->body().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->body());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SMSRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.SMSRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SMSRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SMSRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.SMSRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.SMSRequest)
    MergeFrom(*source);
  }
}

void SMSRequest::MergeFrom(const SMSRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.SMSRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.body().size() > 0) {

    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
}

void SMSRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.SMSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SMSRequest::CopyFrom(const SMSRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.SMSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SMSRequest::IsInitialized() const {
  return true;
}

void SMSRequest::Swap(SMSRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SMSRequest::InternalSwap(SMSRequest* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  body_.Swap(&other->body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SMSRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CallRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallRequest::kIdFieldNumber;
const int CallRequest::kCallbackUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallRequest::CallRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_CallRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.CallRequest)
}
CallRequest::CallRequest(const CallRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  callback_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callback_url().size() > 0) {
    callback_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callback_url_);
  }
  // @@protoc_insertion_point(copy_constructor:api.CallRequest)
}

void CallRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

CallRequest::~CallRequest() {
  // @@protoc_insertion_point(destructor:api.CallRequest)
  SharedDtor();
}

void CallRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CallRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CallRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallRequest& CallRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_CallRequest.base);
  return *internal_default_instance();
}


void CallRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.CallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool CallRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.CallRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.CallRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string callback_url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callback_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callback_url().data(), static_cast<int>(this->callback_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.CallRequest.callback_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.CallRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.CallRequest)
  return false;
#undef DO_
}

void CallRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.CallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CallRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string callback_url = 2;
  if (this->callback_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callback_url().data(), static_cast<int>(this->callback_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CallRequest.callback_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->callback_url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.CallRequest)
}

::google::protobuf::uint8* CallRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.CallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CallRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string callback_url = 2;
  if (this->callback_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callback_url().data(), static_cast<int>(this->callback_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CallRequest.callback_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->callback_url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.CallRequest)
  return target;
}

size_t CallRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.CallRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string callback_url = 2;
  if (this->callback_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callback_url());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CallRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.CallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CallRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.CallRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.CallRequest)
    MergeFrom(*source);
  }
}

void CallRequest::MergeFrom(const CallRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.CallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.callback_url().size() > 0) {

    callback_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callback_url_);
  }
}

void CallRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.CallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallRequest::CopyFrom(const CallRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.CallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallRequest::IsInitialized() const {
  return true;
}

void CallRequest::Swap(CallRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallRequest::InternalSwap(CallRequest* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  callback_url_.Swap(&other->callback_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CallRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MMSRequest::InitAsDefaultInstance() {
  ::api::_MMSRequest_default_instance_._instance.get_mutable()->sms_ = const_cast< ::api::SMSRequest*>(
      ::api::SMSRequest::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MMSRequest::kSmsFieldNumber;
const int MMSRequest::kMediaUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MMSRequest::MMSRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_MMSRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.MMSRequest)
}
MMSRequest::MMSRequest(const MMSRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  media_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.media_url().size() > 0) {
    media_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.media_url_);
  }
  if (from.has_sms()) {
    sms_ = new ::api::SMSRequest(*from.sms_);
  } else {
    sms_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.MMSRequest)
}

void MMSRequest::SharedCtor() {
  media_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sms_ = NULL;
}

MMSRequest::~MMSRequest() {
  // @@protoc_insertion_point(destructor:api.MMSRequest)
  SharedDtor();
}

void MMSRequest::SharedDtor() {
  media_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete sms_;
}

void MMSRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MMSRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MMSRequest& MMSRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_MMSRequest.base);
  return *internal_default_instance();
}


void MMSRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.MMSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  media_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && sms_ != NULL) {
    delete sms_;
  }
  sms_ = NULL;
  _internal_metadata_.Clear();
}

bool MMSRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.MMSRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .api.SMSRequest sms = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sms()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string media_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_media_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->media_url().data(), static_cast<int>(this->media_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.MMSRequest.media_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.MMSRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.MMSRequest)
  return false;
#undef DO_
}

void MMSRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.MMSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.SMSRequest sms = 1;
  if (this->has_sms()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_sms(), output);
  }

  // string media_url = 3;
  if (this->media_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->media_url().data(), static_cast<int>(this->media_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.MMSRequest.media_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->media_url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.MMSRequest)
}

::google::protobuf::uint8* MMSRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.MMSRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.SMSRequest sms = 1;
  if (this->has_sms()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_sms(), deterministic, target);
  }

  // string media_url = 3;
  if (this->media_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->media_url().data(), static_cast<int>(this->media_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.MMSRequest.media_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->media_url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.MMSRequest)
  return target;
}

size_t MMSRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.MMSRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string media_url = 3;
  if (this->media_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->media_url());
  }

  // .api.SMSRequest sms = 1;
  if (this->has_sms()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *sms_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MMSRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.MMSRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MMSRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MMSRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.MMSRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.MMSRequest)
    MergeFrom(*source);
  }
}

void MMSRequest::MergeFrom(const MMSRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.MMSRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.media_url().size() > 0) {

    media_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.media_url_);
  }
  if (from.has_sms()) {
    mutable_sms()->::api::SMSRequest::MergeFrom(from.sms());
  }
}

void MMSRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.MMSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MMSRequest::CopyFrom(const MMSRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.MMSRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MMSRequest::IsInitialized() const {
  return true;
}

void MMSRequest::Swap(MMSRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MMSRequest::InternalSwap(MMSRequest* other) {
  using std::swap;
  media_url_.Swap(&other->media_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(sms_, other->sms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MMSRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EmailRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmailRequest::kIdFieldNumber;
const int EmailRequest::kSubjectFieldNumber;
const int EmailRequest::kPlainTextFieldNumber;
const int EmailRequest::kHtmlAltFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmailRequest::EmailRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_EmailRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.EmailRequest)
}
EmailRequest::EmailRequest(const EmailRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject().size() > 0) {
    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  plain_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plain_text().size() > 0) {
    plain_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_text_);
  }
  html_alt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.html_alt().size() > 0) {
    html_alt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.html_alt_);
  }
  // @@protoc_insertion_point(copy_constructor:api.EmailRequest)
}

void EmailRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  html_alt_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EmailRequest::~EmailRequest() {
  // @@protoc_insertion_point(destructor:api.EmailRequest)
  SharedDtor();
}

void EmailRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  html_alt_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EmailRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EmailRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmailRequest& EmailRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_EmailRequest.base);
  return *internal_default_instance();
}


void EmailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.EmailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  html_alt_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EmailRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.EmailRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.EmailRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), static_cast<int>(this->subject().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.EmailRequest.subject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plain_text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plain_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plain_text().data(), static_cast<int>(this->plain_text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.EmailRequest.plain_text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string html_alt = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_html_alt()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->html_alt().data(), static_cast<int>(this->html_alt().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.EmailRequest.html_alt"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.EmailRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.EmailRequest)
  return false;
#undef DO_
}

void EmailRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.EmailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string subject = 2;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailRequest.subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->subject(), output);
  }

  // string plain_text = 3;
  if (this->plain_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plain_text().data(), static_cast<int>(this->plain_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailRequest.plain_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->plain_text(), output);
  }

  // string html_alt = 4;
  if (this->html_alt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->html_alt().data(), static_cast<int>(this->html_alt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailRequest.html_alt");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->html_alt(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.EmailRequest)
}

::google::protobuf::uint8* EmailRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.EmailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string subject = 2;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailRequest.subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->subject(), target);
  }

  // string plain_text = 3;
  if (this->plain_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plain_text().data(), static_cast<int>(this->plain_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailRequest.plain_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->plain_text(), target);
  }

  // string html_alt = 4;
  if (this->html_alt().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->html_alt().data(), static_cast<int>(this->html_alt().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailRequest.html_alt");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->html_alt(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.EmailRequest)
  return target;
}

size_t EmailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.EmailRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string subject = 2;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  // string plain_text = 3;
  if (this->plain_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plain_text());
  }

  // string html_alt = 4;
  if (this->html_alt().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->html_alt());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmailRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.EmailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EmailRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmailRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.EmailRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.EmailRequest)
    MergeFrom(*source);
  }
}

void EmailRequest::MergeFrom(const EmailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.EmailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.subject().size() > 0) {

    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  if (from.plain_text().size() > 0) {

    plain_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_text_);
  }
  if (from.html_alt().size() > 0) {

    html_alt_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.html_alt_);
  }
}

void EmailRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.EmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmailRequest::CopyFrom(const EmailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.EmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmailRequest::IsInitialized() const {
  return true;
}

void EmailRequest::Swap(EmailRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmailRequest::InternalSwap(EmailRequest* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subject_.Swap(&other->subject_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plain_text_.Swap(&other->plain_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  html_alt_.Swap(&other->html_alt_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmailRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CustomerRequest::InitAsDefaultInstance() {
  ::api::_CustomerRequest_default_instance_._instance.get_mutable()->address_ = const_cast< ::api::Address*>(
      ::api::Address::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CustomerRequest::kEmailFieldNumber;
const int CustomerRequest::kPlanFieldNumber;
const int CustomerRequest::kPhoneFieldNumber;
const int CustomerRequest::kNameFieldNumber;
const int CustomerRequest::kDescriptionFieldNumber;
const int CustomerRequest::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CustomerRequest::CustomerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_CustomerRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.CustomerRequest)
}
CustomerRequest::CustomerRequest(const CustomerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plan().size() > 0) {
    plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plan_);
  }
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_address()) {
    address_ = new ::api::Address(*from.address_);
  } else {
    address_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.CustomerRequest)
}

void CustomerRequest::SharedCtor() {
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_ = NULL;
}

CustomerRequest::~CustomerRequest() {
  // @@protoc_insertion_point(destructor:api.CustomerRequest)
  SharedDtor();
}

void CustomerRequest::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plan_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete address_;
}

void CustomerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CustomerRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CustomerRequest& CustomerRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_CustomerRequest.base);
  return *internal_default_instance();
}


void CustomerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.CustomerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plan_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  _internal_metadata_.Clear();
}

bool CustomerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.CustomerRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.CustomerRequest.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plan = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plan()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plan().data(), static_cast<int>(this->plan().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.CustomerRequest.plan"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.CustomerRequest.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.CustomerRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.CustomerRequest.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.Address address = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.CustomerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.CustomerRequest)
  return false;
#undef DO_
}

void CustomerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.CustomerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CustomerRequest.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->email(), output);
  }

  // string plan = 2;
  if (this->plan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plan().data(), static_cast<int>(this->plan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CustomerRequest.plan");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->plan(), output);
  }

  // string phone = 3;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CustomerRequest.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->phone(), output);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CustomerRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->name(), output);
  }

  // string description = 7;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CustomerRequest.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->description(), output);
  }

  // .api.Address address = 8;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.CustomerRequest)
}

::google::protobuf::uint8* CustomerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.CustomerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CustomerRequest.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->email(), target);
  }

  // string plan = 2;
  if (this->plan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plan().data(), static_cast<int>(this->plan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CustomerRequest.plan");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->plan(), target);
  }

  // string phone = 3;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CustomerRequest.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->phone(), target);
  }

  // string name = 4;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CustomerRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->name(), target);
  }

  // string description = 7;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.CustomerRequest.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->description(), target);
  }

  // .api.Address address = 8;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_address(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.CustomerRequest)
  return target;
}

size_t CustomerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.CustomerRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string email = 1;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string plan = 2;
  if (this->plan().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plan());
  }

  // string phone = 3;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // string name = 4;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 7;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // .api.Address address = 8;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *address_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CustomerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.CustomerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CustomerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CustomerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.CustomerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.CustomerRequest)
    MergeFrom(*source);
  }
}

void CustomerRequest::MergeFrom(const CustomerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.CustomerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.plan().size() > 0) {

    plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plan_);
  }
  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.has_address()) {
    mutable_address()->::api::Address::MergeFrom(from.address());
  }
}

void CustomerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.CustomerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CustomerRequest::CopyFrom(const CustomerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.CustomerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CustomerRequest::IsInitialized() const {
  return true;
}

void CustomerRequest::Swap(CustomerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CustomerRequest::InternalSwap(CustomerRequest* other) {
  using std::swap;
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plan_.Swap(&other->plan_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phone_.Swap(&other->phone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(address_, other->address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CustomerRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UpdateCustomerRequest::InitAsDefaultInstance() {
  ::api::_UpdateCustomerRequest_default_instance_._instance.get_mutable()->customer_ = const_cast< ::api::CustomerRequest*>(
      ::api::CustomerRequest::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateCustomerRequest::kIdFieldNumber;
const int UpdateCustomerRequest::kCustomerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateCustomerRequest::UpdateCustomerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_UpdateCustomerRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.UpdateCustomerRequest)
}
UpdateCustomerRequest::UpdateCustomerRequest(const UpdateCustomerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_customer()) {
    customer_ = new ::api::CustomerRequest(*from.customer_);
  } else {
    customer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.UpdateCustomerRequest)
}

void UpdateCustomerRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  customer_ = NULL;
}

UpdateCustomerRequest::~UpdateCustomerRequest() {
  // @@protoc_insertion_point(destructor:api.UpdateCustomerRequest)
  SharedDtor();
}

void UpdateCustomerRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete customer_;
}

void UpdateCustomerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UpdateCustomerRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UpdateCustomerRequest& UpdateCustomerRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_UpdateCustomerRequest.base);
  return *internal_default_instance();
}


void UpdateCustomerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.UpdateCustomerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && customer_ != NULL) {
    delete customer_;
  }
  customer_ = NULL;
  _internal_metadata_.Clear();
}

bool UpdateCustomerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.UpdateCustomerRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.UpdateCustomerRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.CustomerRequest customer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_customer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.UpdateCustomerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.UpdateCustomerRequest)
  return false;
#undef DO_
}

void UpdateCustomerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.UpdateCustomerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UpdateCustomerRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .api.CustomerRequest customer = 2;
  if (this->has_customer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_customer(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.UpdateCustomerRequest)
}

::google::protobuf::uint8* UpdateCustomerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.UpdateCustomerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UpdateCustomerRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .api.CustomerRequest customer = 2;
  if (this->has_customer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_customer(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.UpdateCustomerRequest)
  return target;
}

size_t UpdateCustomerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.UpdateCustomerRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .api.CustomerRequest customer = 2;
  if (this->has_customer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *customer_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateCustomerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.UpdateCustomerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateCustomerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateCustomerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.UpdateCustomerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.UpdateCustomerRequest)
    MergeFrom(*source);
  }
}

void UpdateCustomerRequest::MergeFrom(const UpdateCustomerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.UpdateCustomerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_customer()) {
    mutable_customer()->::api::CustomerRequest::MergeFrom(from.customer());
  }
}

void UpdateCustomerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.UpdateCustomerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateCustomerRequest::CopyFrom(const UpdateCustomerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.UpdateCustomerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateCustomerRequest::IsInitialized() const {
  return true;
}

void UpdateCustomerRequest::Swap(UpdateCustomerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateCustomerRequest::InternalSwap(UpdateCustomerRequest* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(customer_, other->customer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UpdateCustomerRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubscribeCustomerRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeCustomerRequest::kIdFieldNumber;
const int SubscribeCustomerRequest::kPlanFieldNumber;
const int SubscribeCustomerRequest::kCardNumberFieldNumber;
const int SubscribeCustomerRequest::kExpMonthFieldNumber;
const int SubscribeCustomerRequest::kExpYearFieldNumber;
const int SubscribeCustomerRequest::kCvcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeCustomerRequest::SubscribeCustomerRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_SubscribeCustomerRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.SubscribeCustomerRequest)
}
SubscribeCustomerRequest::SubscribeCustomerRequest(const SubscribeCustomerRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plan().size() > 0) {
    plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plan_);
  }
  card_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.card_number().size() > 0) {
    card_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_number_);
  }
  exp_month_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exp_month().size() > 0) {
    exp_month_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exp_month_);
  }
  exp_year_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exp_year().size() > 0) {
    exp_year_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exp_year_);
  }
  cvc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cvc().size() > 0) {
    cvc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cvc_);
  }
  // @@protoc_insertion_point(copy_constructor:api.SubscribeCustomerRequest)
}

void SubscribeCustomerRequest::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_month_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_year_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cvc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SubscribeCustomerRequest::~SubscribeCustomerRequest() {
  // @@protoc_insertion_point(destructor:api.SubscribeCustomerRequest)
  SharedDtor();
}

void SubscribeCustomerRequest::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plan_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_month_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_year_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cvc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SubscribeCustomerRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SubscribeCustomerRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscribeCustomerRequest& SubscribeCustomerRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_SubscribeCustomerRequest.base);
  return *internal_default_instance();
}


void SubscribeCustomerRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.SubscribeCustomerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plan_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  card_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_month_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_year_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cvc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SubscribeCustomerRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.SubscribeCustomerRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SubscribeCustomerRequest.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plan = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plan()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plan().data(), static_cast<int>(this->plan().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SubscribeCustomerRequest.plan"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string card_number = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_card_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->card_number().data(), static_cast<int>(this->card_number().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SubscribeCustomerRequest.card_number"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exp_month = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exp_month()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exp_month().data(), static_cast<int>(this->exp_month().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SubscribeCustomerRequest.exp_month"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exp_year = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exp_year()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exp_year().data(), static_cast<int>(this->exp_year().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SubscribeCustomerRequest.exp_year"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cvc = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cvc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cvc().data(), static_cast<int>(this->cvc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SubscribeCustomerRequest.cvc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.SubscribeCustomerRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.SubscribeCustomerRequest)
  return false;
#undef DO_
}

void SubscribeCustomerRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.SubscribeCustomerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SubscribeCustomerRequest.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string plan = 2;
  if (this->plan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plan().data(), static_cast<int>(this->plan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SubscribeCustomerRequest.plan");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->plan(), output);
  }

  // string card_number = 3;
  if (this->card_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->card_number().data(), static_cast<int>(this->card_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SubscribeCustomerRequest.card_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->card_number(), output);
  }

  // string exp_month = 4;
  if (this->exp_month().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exp_month().data(), static_cast<int>(this->exp_month().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SubscribeCustomerRequest.exp_month");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->exp_month(), output);
  }

  // string exp_year = 5;
  if (this->exp_year().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exp_year().data(), static_cast<int>(this->exp_year().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SubscribeCustomerRequest.exp_year");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->exp_year(), output);
  }

  // string cvc = 6;
  if (this->cvc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cvc().data(), static_cast<int>(this->cvc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SubscribeCustomerRequest.cvc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->cvc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.SubscribeCustomerRequest)
}

::google::protobuf::uint8* SubscribeCustomerRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.SubscribeCustomerRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SubscribeCustomerRequest.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string plan = 2;
  if (this->plan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plan().data(), static_cast<int>(this->plan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SubscribeCustomerRequest.plan");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->plan(), target);
  }

  // string card_number = 3;
  if (this->card_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->card_number().data(), static_cast<int>(this->card_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SubscribeCustomerRequest.card_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->card_number(), target);
  }

  // string exp_month = 4;
  if (this->exp_month().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exp_month().data(), static_cast<int>(this->exp_month().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SubscribeCustomerRequest.exp_month");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->exp_month(), target);
  }

  // string exp_year = 5;
  if (this->exp_year().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exp_year().data(), static_cast<int>(this->exp_year().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SubscribeCustomerRequest.exp_year");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->exp_year(), target);
  }

  // string cvc = 6;
  if (this->cvc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cvc().data(), static_cast<int>(this->cvc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SubscribeCustomerRequest.cvc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->cvc(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.SubscribeCustomerRequest)
  return target;
}

size_t SubscribeCustomerRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.SubscribeCustomerRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string plan = 2;
  if (this->plan().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plan());
  }

  // string card_number = 3;
  if (this->card_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->card_number());
  }

  // string exp_month = 4;
  if (this->exp_month().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exp_month());
  }

  // string exp_year = 5;
  if (this->exp_year().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exp_year());
  }

  // string cvc = 6;
  if (this->cvc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cvc());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeCustomerRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.SubscribeCustomerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeCustomerRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribeCustomerRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.SubscribeCustomerRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.SubscribeCustomerRequest)
    MergeFrom(*source);
  }
}

void SubscribeCustomerRequest::MergeFrom(const SubscribeCustomerRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.SubscribeCustomerRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.plan().size() > 0) {

    plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plan_);
  }
  if (from.card_number().size() > 0) {

    card_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_number_);
  }
  if (from.exp_month().size() > 0) {

    exp_month_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exp_month_);
  }
  if (from.exp_year().size() > 0) {

    exp_year_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exp_year_);
  }
  if (from.cvc().size() > 0) {

    cvc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cvc_);
  }
}

void SubscribeCustomerRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.SubscribeCustomerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeCustomerRequest::CopyFrom(const SubscribeCustomerRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.SubscribeCustomerRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeCustomerRequest::IsInitialized() const {
  return true;
}

void SubscribeCustomerRequest::Swap(SubscribeCustomerRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeCustomerRequest::InternalSwap(SubscribeCustomerRequest* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plan_.Swap(&other->plan_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  card_number_.Swap(&other->card_number_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exp_month_.Swap(&other->exp_month_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exp_year_.Swap(&other->exp_year_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cvc_.Swap(&other->cvc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SubscribeCustomerRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AddAccountRequest::InitAsDefaultInstance() {
  ::api::_AddAccountRequest_default_instance_._instance.get_mutable()->customer_ = const_cast< ::api::CustomerRequest*>(
      ::api::CustomerRequest::internal_default_instance());
  ::api::_AddAccountRequest_default_instance_._instance.get_mutable()->access_ = const_cast< ::api::Access*>(
      ::api::Access::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddAccountRequest::kCustomerFieldNumber;
const int AddAccountRequest::kAccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddAccountRequest::AddAccountRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_AddAccountRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.AddAccountRequest)
}
AddAccountRequest::AddAccountRequest(const AddAccountRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_customer()) {
    customer_ = new ::api::CustomerRequest(*from.customer_);
  } else {
    customer_ = NULL;
  }
  if (from.has_access()) {
    access_ = new ::api::Access(*from.access_);
  } else {
    access_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.AddAccountRequest)
}

void AddAccountRequest::SharedCtor() {
  ::memset(&customer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&access_) -
      reinterpret_cast<char*>(&customer_)) + sizeof(access_));
}

AddAccountRequest::~AddAccountRequest() {
  // @@protoc_insertion_point(destructor:api.AddAccountRequest)
  SharedDtor();
}

void AddAccountRequest::SharedDtor() {
  if (this != internal_default_instance()) delete customer_;
  if (this != internal_default_instance()) delete access_;
}

void AddAccountRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddAccountRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddAccountRequest& AddAccountRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_AddAccountRequest.base);
  return *internal_default_instance();
}


void AddAccountRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.AddAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && customer_ != NULL) {
    delete customer_;
  }
  customer_ = NULL;
  if (GetArenaNoVirtual() == NULL && access_ != NULL) {
    delete access_;
  }
  access_ = NULL;
  _internal_metadata_.Clear();
}

bool AddAccountRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.AddAccountRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .api.CustomerRequest customer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_customer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.Access access = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_access()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.AddAccountRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.AddAccountRequest)
  return false;
#undef DO_
}

void AddAccountRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.AddAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.CustomerRequest customer = 1;
  if (this->has_customer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_customer(), output);
  }

  // .api.Access access = 2;
  if (this->has_access()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_access(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.AddAccountRequest)
}

::google::protobuf::uint8* AddAccountRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.AddAccountRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.CustomerRequest customer = 1;
  if (this->has_customer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_customer(), deterministic, target);
  }

  // .api.Access access = 2;
  if (this->has_access()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_access(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.AddAccountRequest)
  return target;
}

size_t AddAccountRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.AddAccountRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .api.CustomerRequest customer = 1;
  if (this->has_customer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *customer_);
  }

  // .api.Access access = 2;
  if (this->has_access()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *access_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddAccountRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.AddAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddAccountRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddAccountRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.AddAccountRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.AddAccountRequest)
    MergeFrom(*source);
  }
}

void AddAccountRequest::MergeFrom(const AddAccountRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.AddAccountRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_customer()) {
    mutable_customer()->::api::CustomerRequest::MergeFrom(from.customer());
  }
  if (from.has_access()) {
    mutable_access()->::api::Access::MergeFrom(from.access());
  }
}

void AddAccountRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.AddAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddAccountRequest::CopyFrom(const AddAccountRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.AddAccountRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddAccountRequest::IsInitialized() const {
  return true;
}

void AddAccountRequest::Swap(AddAccountRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddAccountRequest::InternalSwap(AddAccountRequest* other) {
  using std::swap;
  swap(customer_, other->customer_);
  swap(access_, other->access_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddAccountRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Account::InitAsDefaultInstance() {
  ::api::_Account_default_instance_._instance.get_mutable()->customer_ = const_cast< ::api::Customer*>(
      ::api::Customer::internal_default_instance());
  ::api::_Account_default_instance_._instance.get_mutable()->access_ = const_cast< ::api::Access*>(
      ::api::Access::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Account::kCustomerFieldNumber;
const int Account::kAccessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Account::Account()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Account.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Account)
}
Account::Account(const Account& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_customer()) {
    customer_ = new ::api::Customer(*from.customer_);
  } else {
    customer_ = NULL;
  }
  if (from.has_access()) {
    access_ = new ::api::Access(*from.access_);
  } else {
    access_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.Account)
}

void Account::SharedCtor() {
  ::memset(&customer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&access_) -
      reinterpret_cast<char*>(&customer_)) + sizeof(access_));
}

Account::~Account() {
  // @@protoc_insertion_point(destructor:api.Account)
  SharedDtor();
}

void Account::SharedDtor() {
  if (this != internal_default_instance()) delete customer_;
  if (this != internal_default_instance()) delete access_;
}

void Account::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Account::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Account& Account::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Account.base);
  return *internal_default_instance();
}


void Account::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && customer_ != NULL) {
    delete customer_;
  }
  customer_ = NULL;
  if (GetArenaNoVirtual() == NULL && access_ != NULL) {
    delete access_;
  }
  access_ = NULL;
  _internal_metadata_.Clear();
}

bool Account::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Account)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .api.Customer customer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_customer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.Access access = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_access()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Account)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Account)
  return false;
#undef DO_
}

void Account::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.Customer customer = 1;
  if (this->has_customer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_customer(), output);
  }

  // .api.Access access = 2;
  if (this->has_access()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_access(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Account)
}

::google::protobuf::uint8* Account::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.Customer customer = 1;
  if (this->has_customer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_customer(), deterministic, target);
  }

  // .api.Access access = 2;
  if (this->has_access()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_access(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Account)
  return target;
}

size_t Account::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Account)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .api.Customer customer = 1;
  if (this->has_customer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *customer_);
  }

  // .api.Access access = 2;
  if (this->has_access()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *access_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Account::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Account)
  GOOGLE_DCHECK_NE(&from, this);
  const Account* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Account>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Account)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Account)
    MergeFrom(*source);
  }
}

void Account::MergeFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Account)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_customer()) {
    mutable_customer()->::api::Customer::MergeFrom(from.customer());
  }
  if (from.has_access()) {
    mutable_access()->::api::Access::MergeFrom(from.access());
  }
}

void Account::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Account::CopyFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Account::IsInitialized() const {
  return true;
}

void Account::Swap(Account* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Account::InternalSwap(Account* other) {
  using std::swap;
  swap(customer_, other->customer_);
  swap(access_, other->access_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Account::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void User::InitAsDefaultInstance() {
  ::api::_User_default_instance_._instance.get_mutable()->profile_ = const_cast< ::api::Profile*>(
      ::api::Profile::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int User::kIdFieldNumber;
const int User::kTeamIdFieldNumber;
const int User::kNameFieldNumber;
const int User::kProfileFieldNumber;
const int User::kDeletedFieldNumber;
const int User::kAdminFieldNumber;
const int User::kOwnderFieldNumber;
const int User::kPrimaryOwnerFieldNumber;
const int User::kRestrictedFieldNumber;
const int User::kUltraRestrictedFieldNumber;
const int User::kStrangerFieldNumber;
const int User::kBotFieldNumber;
const int User::kHas2FaFieldNumber;
const int User::kLocaleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

User::User()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_User.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.User)
}
User::User(const User& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  team_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.team_id().size() > 0) {
    team_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team_id_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.locale().size() > 0) {
    locale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locale_);
  }
  if (from.has_profile()) {
    profile_ = new ::api::Profile(*from.profile_);
  } else {
    profile_ = NULL;
  }
  ::memcpy(&deleted_, &from.deleted_,
    static_cast<size_t>(reinterpret_cast<char*>(&has2fa_) -
    reinterpret_cast<char*>(&deleted_)) + sizeof(has2fa_));
  // @@protoc_insertion_point(copy_constructor:api.User)
}

void User::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  team_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&profile_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&has2fa_) -
      reinterpret_cast<char*>(&profile_)) + sizeof(has2fa_));
}

User::~User() {
  // @@protoc_insertion_point(destructor:api.User)
  SharedDtor();
}

void User::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  team_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete profile_;
}

void User::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* User::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const User& User::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_User.base);
  return *internal_default_instance();
}


void User::Clear() {
// @@protoc_insertion_point(message_clear_start:api.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  team_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  locale_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && profile_ != NULL) {
    delete profile_;
  }
  profile_ = NULL;
  ::memset(&deleted_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&has2fa_) -
      reinterpret_cast<char*>(&deleted_)) + sizeof(has2fa_));
  _internal_metadata_.Clear();
}

bool User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.User)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.User.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string team_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_team_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->team_id().data(), static_cast<int>(this->team_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.User.team_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.User.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.Profile profile = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_profile()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool deleted = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &deleted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool admin = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &admin_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ownder = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ownder_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool primary_owner = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &primary_owner_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool restricted = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &restricted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool ultra_restricted = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &ultra_restricted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool stranger = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &stranger_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bot = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool has2fa = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &has2fa_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string locale = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_locale()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->locale().data(), static_cast<int>(this->locale().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.User.locale"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.User)
  return false;
#undef DO_
}

void User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string team_id = 2;
  if (this->team_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->team_id().data(), static_cast<int>(this->team_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.team_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->team_id(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // .api.Profile profile = 4;
  if (this->has_profile()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_profile(), output);
  }

  // bool deleted = 5;
  if (this->deleted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->deleted(), output);
  }

  // bool admin = 6;
  if (this->admin() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->admin(), output);
  }

  // bool ownder = 7;
  if (this->ownder() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->ownder(), output);
  }

  // bool primary_owner = 8;
  if (this->primary_owner() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(8, this->primary_owner(), output);
  }

  // bool restricted = 9;
  if (this->restricted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(9, this->restricted(), output);
  }

  // bool ultra_restricted = 10;
  if (this->ultra_restricted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->ultra_restricted(), output);
  }

  // bool stranger = 11;
  if (this->stranger() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(11, this->stranger(), output);
  }

  // bool bot = 12;
  if (this->bot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(12, this->bot(), output);
  }

  // bool has2fa = 13;
  if (this->has2fa() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->has2fa(), output);
  }

  // string locale = 14;
  if (this->locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locale().data(), static_cast<int>(this->locale().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.locale");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->locale(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.User)
}

::google::protobuf::uint8* User::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string team_id = 2;
  if (this->team_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->team_id().data(), static_cast<int>(this->team_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.team_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->team_id(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // .api.Profile profile = 4;
  if (this->has_profile()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_profile(), deterministic, target);
  }

  // bool deleted = 5;
  if (this->deleted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->deleted(), target);
  }

  // bool admin = 6;
  if (this->admin() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->admin(), target);
  }

  // bool ownder = 7;
  if (this->ownder() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->ownder(), target);
  }

  // bool primary_owner = 8;
  if (this->primary_owner() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(8, this->primary_owner(), target);
  }

  // bool restricted = 9;
  if (this->restricted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(9, this->restricted(), target);
  }

  // bool ultra_restricted = 10;
  if (this->ultra_restricted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->ultra_restricted(), target);
  }

  // bool stranger = 11;
  if (this->stranger() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(11, this->stranger(), target);
  }

  // bool bot = 12;
  if (this->bot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(12, this->bot(), target);
  }

  // bool has2fa = 13;
  if (this->has2fa() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->has2fa(), target);
  }

  // string locale = 14;
  if (this->locale().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->locale().data(), static_cast<int>(this->locale().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.User.locale");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->locale(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.User)
  return target;
}

size_t User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.User)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string team_id = 2;
  if (this->team_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->team_id());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string locale = 14;
  if (this->locale().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->locale());
  }

  // .api.Profile profile = 4;
  if (this->has_profile()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *profile_);
  }

  // bool deleted = 5;
  if (this->deleted() != 0) {
    total_size += 1 + 1;
  }

  // bool admin = 6;
  if (this->admin() != 0) {
    total_size += 1 + 1;
  }

  // bool ownder = 7;
  if (this->ownder() != 0) {
    total_size += 1 + 1;
  }

  // bool primary_owner = 8;
  if (this->primary_owner() != 0) {
    total_size += 1 + 1;
  }

  // bool restricted = 9;
  if (this->restricted() != 0) {
    total_size += 1 + 1;
  }

  // bool ultra_restricted = 10;
  if (this->ultra_restricted() != 0) {
    total_size += 1 + 1;
  }

  // bool stranger = 11;
  if (this->stranger() != 0) {
    total_size += 1 + 1;
  }

  // bool bot = 12;
  if (this->bot() != 0) {
    total_size += 1 + 1;
  }

  // bool has2fa = 13;
  if (this->has2fa() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void User::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.User)
  GOOGLE_DCHECK_NE(&from, this);
  const User* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const User>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.User)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.User)
    MergeFrom(*source);
  }
}

void User::MergeFrom(const User& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.User)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.team_id().size() > 0) {

    team_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team_id_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.locale().size() > 0) {

    locale_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.locale_);
  }
  if (from.has_profile()) {
    mutable_profile()->::api::Profile::MergeFrom(from.profile());
  }
  if (from.deleted() != 0) {
    set_deleted(from.deleted());
  }
  if (from.admin() != 0) {
    set_admin(from.admin());
  }
  if (from.ownder() != 0) {
    set_ownder(from.ownder());
  }
  if (from.primary_owner() != 0) {
    set_primary_owner(from.primary_owner());
  }
  if (from.restricted() != 0) {
    set_restricted(from.restricted());
  }
  if (from.ultra_restricted() != 0) {
    set_ultra_restricted(from.ultra_restricted());
  }
  if (from.stranger() != 0) {
    set_stranger(from.stranger());
  }
  if (from.bot() != 0) {
    set_bot(from.bot());
  }
  if (from.has2fa() != 0) {
    set_has2fa(from.has2fa());
  }
}

void User::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {
  return true;
}

void User::Swap(User* other) {
  if (other == this) return;
  InternalSwap(other);
}
void User::InternalSwap(User* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  team_id_.Swap(&other->team_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  locale_.Swap(&other->locale_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(profile_, other->profile_);
  swap(deleted_, other->deleted_);
  swap(admin_, other->admin_);
  swap(ownder_, other->ownder_);
  swap(primary_owner_, other->primary_owner_);
  swap(restricted_, other->restricted_);
  swap(ultra_restricted_, other->ultra_restricted_);
  swap(stranger_, other->stranger_);
  swap(bot_, other->bot_);
  swap(has2fa_, other->has2fa_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata User::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Profile::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Profile::kAvatarHashFieldNumber;
const int Profile::kStatusFieldNumber;
const int Profile::kStatusEmojiFieldNumber;
const int Profile::kDisplayNameFieldNumber;
const int Profile::kNameFieldNumber;
const int Profile::kEmailFieldNumber;
const int Profile::kImageUrlsFieldNumber;
const int Profile::kTeamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Profile::Profile()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Profile.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Profile)
}
Profile::Profile(const Profile& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      image_urls_(from.image_urls_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  avatar_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.avatar_hash().size() > 0) {
    avatar_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_hash_);
  }
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status().size() > 0) {
    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  status_emoji_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.status_emoji().size() > 0) {
    status_emoji_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_emoji_);
  }
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.display_name().size() > 0) {
    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  team_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.team().size() > 0) {
    team_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team_);
  }
  // @@protoc_insertion_point(copy_constructor:api.Profile)
}

void Profile::SharedCtor() {
  avatar_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_emoji_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  team_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Profile::~Profile() {
  // @@protoc_insertion_point(destructor:api.Profile)
  SharedDtor();
}

void Profile::SharedDtor() {
  avatar_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_emoji_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  team_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Profile::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Profile::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Profile& Profile::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Profile.base);
  return *internal_default_instance();
}


void Profile::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Profile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  image_urls_.Clear();
  avatar_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  status_emoji_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  display_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  team_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Profile::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Profile)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string avatar_hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_avatar_hash()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->avatar_hash().data(), static_cast<int>(this->avatar_hash().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Profile.avatar_hash"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status().data(), static_cast<int>(this->status().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Profile.status"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string status_emoji = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_status_emoji()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->status_emoji().data(), static_cast<int>(this->status_emoji().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Profile.status_emoji"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string display_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_display_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->display_name().data(), static_cast<int>(this->display_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Profile.display_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Profile.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string email = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Profile.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string image_urls = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_image_urls()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_urls(this->image_urls_size() - 1).data(),
            static_cast<int>(this->image_urls(this->image_urls_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Profile.image_urls"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string team = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_team()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->team().data(), static_cast<int>(this->team().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Profile.team"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Profile)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Profile)
  return false;
#undef DO_
}

void Profile::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Profile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string avatar_hash = 1;
  if (this->avatar_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar_hash().data(), static_cast<int>(this->avatar_hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Profile.avatar_hash");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->avatar_hash(), output);
  }

  // string status = 2;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Profile.status");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->status(), output);
  }

  // string status_emoji = 3;
  if (this->status_emoji().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_emoji().data(), static_cast<int>(this->status_emoji().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Profile.status_emoji");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->status_emoji(), output);
  }

  // string display_name = 4;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Profile.display_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->display_name(), output);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Profile.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // string email = 6;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Profile.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->email(), output);
  }

  // repeated string image_urls = 7;
  for (int i = 0, n = this->image_urls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_urls(i).data(), static_cast<int>(this->image_urls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Profile.image_urls");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->image_urls(i), output);
  }

  // string team = 8;
  if (this->team().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->team().data(), static_cast<int>(this->team().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Profile.team");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->team(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Profile)
}

::google::protobuf::uint8* Profile::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Profile)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string avatar_hash = 1;
  if (this->avatar_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->avatar_hash().data(), static_cast<int>(this->avatar_hash().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Profile.avatar_hash");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->avatar_hash(), target);
  }

  // string status = 2;
  if (this->status().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status().data(), static_cast<int>(this->status().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Profile.status");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->status(), target);
  }

  // string status_emoji = 3;
  if (this->status_emoji().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->status_emoji().data(), static_cast<int>(this->status_emoji().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Profile.status_emoji");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->status_emoji(), target);
  }

  // string display_name = 4;
  if (this->display_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->display_name().data(), static_cast<int>(this->display_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Profile.display_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->display_name(), target);
  }

  // string name = 5;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Profile.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // string email = 6;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Profile.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->email(), target);
  }

  // repeated string image_urls = 7;
  for (int i = 0, n = this->image_urls_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_urls(i).data(), static_cast<int>(this->image_urls(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Profile.image_urls");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(7, this->image_urls(i), target);
  }

  // string team = 8;
  if (this->team().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->team().data(), static_cast<int>(this->team().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Profile.team");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->team(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Profile)
  return target;
}

size_t Profile::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Profile)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string image_urls = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->image_urls_size());
  for (int i = 0, n = this->image_urls_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->image_urls(i));
  }

  // string avatar_hash = 1;
  if (this->avatar_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->avatar_hash());
  }

  // string status = 2;
  if (this->status().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status());
  }

  // string status_emoji = 3;
  if (this->status_emoji().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->status_emoji());
  }

  // string display_name = 4;
  if (this->display_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->display_name());
  }

  // string name = 5;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string email = 6;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string team = 8;
  if (this->team().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->team());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Profile::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Profile)
  GOOGLE_DCHECK_NE(&from, this);
  const Profile* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Profile>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Profile)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Profile)
    MergeFrom(*source);
  }
}

void Profile::MergeFrom(const Profile& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Profile)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  image_urls_.MergeFrom(from.image_urls_);
  if (from.avatar_hash().size() > 0) {

    avatar_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.avatar_hash_);
  }
  if (from.status().size() > 0) {

    status_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_);
  }
  if (from.status_emoji().size() > 0) {

    status_emoji_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.status_emoji_);
  }
  if (from.display_name().size() > 0) {

    display_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.display_name_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.team().size() > 0) {

    team_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.team_);
  }
}

void Profile::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Profile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Profile::CopyFrom(const Profile& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Profile)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Profile::IsInitialized() const {
  return true;
}

void Profile::Swap(Profile* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Profile::InternalSwap(Profile* other) {
  using std::swap;
  image_urls_.InternalSwap(CastToBase(&other->image_urls_));
  avatar_hash_.Swap(&other->avatar_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  status_.Swap(&other->status_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  status_emoji_.Swap(&other->status_emoji_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  display_name_.Swap(&other->display_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  team_.Swap(&other->team_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Profile::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Empty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:api.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Empty& Empty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Empty.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Empty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:api.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Empty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Customer_MetadataEntry_DoNotUse::Customer_MetadataEntry_DoNotUse() {}
Customer_MetadataEntry_DoNotUse::Customer_MetadataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Customer_MetadataEntry_DoNotUse::MergeFrom(const Customer_MetadataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Customer_MetadataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[16];
}
void Customer_MetadataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Customer::InitAsDefaultInstance() {
  ::api::_Customer_default_instance_._instance.get_mutable()->address_ = const_cast< ::api::Address*>(
      ::api::Address::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Customer::kIdFieldNumber;
const int Customer::kPlanFieldNumber;
const int Customer::kNameFieldNumber;
const int Customer::kEmailFieldNumber;
const int Customer::kDescriptionFieldNumber;
const int Customer::kPhoneFieldNumber;
const int Customer::kAddressFieldNumber;
const int Customer::kMetadataFieldNumber;
const int Customer::kDeletedFieldNumber;
const int Customer::kCreateDateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Customer::Customer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Customer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Customer)
}
Customer::Customer(const Customer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  metadata_.MergeFrom(from.metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plan().size() > 0) {
    plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plan_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.has_address()) {
    address_ = new ::api::Address(*from.address_);
  } else {
    address_ = NULL;
  }
  ::memcpy(&deleted_, &from.deleted_,
    static_cast<size_t>(reinterpret_cast<char*>(&create_date_) -
    reinterpret_cast<char*>(&deleted_)) + sizeof(create_date_));
  // @@protoc_insertion_point(copy_constructor:api.Customer)
}

void Customer::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&create_date_) -
      reinterpret_cast<char*>(&address_)) + sizeof(create_date_));
}

Customer::~Customer() {
  // @@protoc_insertion_point(destructor:api.Customer)
  SharedDtor();
}

void Customer::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plan_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete address_;
}

void Customer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Customer::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Customer& Customer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Customer.base);
  return *internal_default_instance();
}


void Customer::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Customer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  metadata_.Clear();
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plan_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  ::memset(&deleted_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&create_date_) -
      reinterpret_cast<char*>(&deleted_)) + sizeof(create_date_));
  _internal_metadata_.Clear();
}

bool Customer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Customer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Customer.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plan = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plan()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plan().data(), static_cast<int>(this->plan().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Customer.plan"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Customer.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string email = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Customer.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Customer.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Customer.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.Address address = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> metadata = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          Customer_MetadataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Customer_MetadataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&metadata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Customer.MetadataEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Customer.MetadataEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool deleted = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &deleted_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 create_date = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &create_date_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Customer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Customer)
  return false;
#undef DO_
}

void Customer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Customer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Customer.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string plan = 2;
  if (this->plan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plan().data(), static_cast<int>(this->plan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Customer.plan");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->plan(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Customer.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // string email = 4;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Customer.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->email(), output);
  }

  // string description = 5;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Customer.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->description(), output);
  }

  // string phone = 6;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Customer.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->phone(), output);
  }

  // .api.Address address = 8;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_address(), output);
  }

  // map<string, string> metadata = 9;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.Customer.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.Customer.MetadataEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Customer_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Customer_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            9, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // bool deleted = 10;
  if (this->deleted() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(10, this->deleted(), output);
  }

  // int64 create_date = 20;
  if (this->create_date() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(20, this->create_date(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Customer)
}

::google::protobuf::uint8* Customer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Customer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Customer.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string plan = 2;
  if (this->plan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plan().data(), static_cast<int>(this->plan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Customer.plan");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->plan(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Customer.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // string email = 4;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Customer.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->email(), target);
  }

  // string description = 5;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Customer.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->description(), target);
  }

  // string phone = 6;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Customer.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->phone(), target);
  }

  // .api.Address address = 8;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_address(), deterministic, target);
  }

  // map<string, string> metadata = 9;
  if (!this->metadata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.Customer.MetadataEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.Customer.MetadataEntry.value");
      }
    };

    if (deterministic &&
        this->metadata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->metadata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Customer_MetadataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(metadata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Customer_MetadataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->metadata().begin();
          it != this->metadata().end(); ++it) {
        entry.reset(metadata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       9, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // bool deleted = 10;
  if (this->deleted() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(10, this->deleted(), target);
  }

  // int64 create_date = 20;
  if (this->create_date() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(20, this->create_date(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Customer)
  return target;
}

size_t Customer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Customer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> metadata = 9;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->metadata_size());
  {
    ::std::unique_ptr<Customer_MetadataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->metadata().begin();
        it != this->metadata().end(); ++it) {
      entry.reset(metadata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string plan = 2;
  if (this->plan().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plan());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string email = 4;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string description = 5;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // string phone = 6;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // .api.Address address = 8;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *address_);
  }

  // bool deleted = 10;
  if (this->deleted() != 0) {
    total_size += 1 + 1;
  }

  // int64 create_date = 20;
  if (this->create_date() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->create_date());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Customer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Customer)
  GOOGLE_DCHECK_NE(&from, this);
  const Customer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Customer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Customer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Customer)
    MergeFrom(*source);
  }
}

void Customer::MergeFrom(const Customer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Customer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  metadata_.MergeFrom(from.metadata_);
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.plan().size() > 0) {

    plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plan_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.has_address()) {
    mutable_address()->::api::Address::MergeFrom(from.address());
  }
  if (from.deleted() != 0) {
    set_deleted(from.deleted());
  }
  if (from.create_date() != 0) {
    set_create_date(from.create_date());
  }
}

void Customer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Customer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Customer::CopyFrom(const Customer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Customer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Customer::IsInitialized() const {
  return true;
}

void Customer::Swap(Customer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Customer::InternalSwap(Customer* other) {
  using std::swap;
  metadata_.Swap(&other->metadata_);
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plan_.Swap(&other->plan_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  phone_.Swap(&other->phone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(address_, other->address_);
  swap(deleted_, other->deleted_);
  swap(create_date_, other->create_date_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Customer::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Card::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Card::kCardTypeFieldNumber;
const int Card::kCardNumberFieldNumber;
const int Card::kExpMonthFieldNumber;
const int Card::kExpYearFieldNumber;
const int Card::kCvcFieldNumber;
const int Card::kDebitFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Card::Card()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Card.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Card)
}
Card::Card(const Card& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  card_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.card_number().size() > 0) {
    card_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_number_);
  }
  exp_month_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exp_month().size() > 0) {
    exp_month_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exp_month_);
  }
  exp_year_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.exp_year().size() > 0) {
    exp_year_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exp_year_);
  }
  cvc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.cvc().size() > 0) {
    cvc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cvc_);
  }
  ::memcpy(&card_type_, &from.card_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&debit_) -
    reinterpret_cast<char*>(&card_type_)) + sizeof(debit_));
  // @@protoc_insertion_point(copy_constructor:api.Card)
}

void Card::SharedCtor() {
  card_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_month_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_year_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cvc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&card_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&debit_) -
      reinterpret_cast<char*>(&card_type_)) + sizeof(debit_));
}

Card::~Card() {
  // @@protoc_insertion_point(destructor:api.Card)
  SharedDtor();
}

void Card::SharedDtor() {
  card_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_month_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_year_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cvc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Card::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Card::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Card& Card::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Card.base);
  return *internal_default_instance();
}


void Card::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  card_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_month_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  exp_year_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  cvc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&card_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&debit_) -
      reinterpret_cast<char*>(&card_type_)) + sizeof(debit_));
  _internal_metadata_.Clear();
}

bool Card::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Card)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .api.CardType card_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_card_type(static_cast< ::api::CardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string card_number = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_card_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->card_number().data(), static_cast<int>(this->card_number().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Card.card_number"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exp_month = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exp_month()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exp_month().data(), static_cast<int>(this->exp_month().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Card.exp_month"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string exp_year = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_exp_year()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->exp_year().data(), static_cast<int>(this->exp_year().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Card.exp_year"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string cvc = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_cvc()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->cvc().data(), static_cast<int>(this->cvc().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Card.cvc"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool debit = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &debit_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Card)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Card)
  return false;
#undef DO_
}

void Card::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.CardType card_type = 1;
  if (this->card_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->card_type(), output);
  }

  // string card_number = 3;
  if (this->card_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->card_number().data(), static_cast<int>(this->card_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Card.card_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->card_number(), output);
  }

  // string exp_month = 4;
  if (this->exp_month().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exp_month().data(), static_cast<int>(this->exp_month().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Card.exp_month");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->exp_month(), output);
  }

  // string exp_year = 5;
  if (this->exp_year().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exp_year().data(), static_cast<int>(this->exp_year().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Card.exp_year");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->exp_year(), output);
  }

  // string cvc = 6;
  if (this->cvc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cvc().data(), static_cast<int>(this->cvc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Card.cvc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->cvc(), output);
  }

  // bool debit = 7;
  if (this->debit() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->debit(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Card)
}

::google::protobuf::uint8* Card::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.CardType card_type = 1;
  if (this->card_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->card_type(), target);
  }

  // string card_number = 3;
  if (this->card_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->card_number().data(), static_cast<int>(this->card_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Card.card_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->card_number(), target);
  }

  // string exp_month = 4;
  if (this->exp_month().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exp_month().data(), static_cast<int>(this->exp_month().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Card.exp_month");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->exp_month(), target);
  }

  // string exp_year = 5;
  if (this->exp_year().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->exp_year().data(), static_cast<int>(this->exp_year().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Card.exp_year");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->exp_year(), target);
  }

  // string cvc = 6;
  if (this->cvc().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->cvc().data(), static_cast<int>(this->cvc().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Card.cvc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->cvc(), target);
  }

  // bool debit = 7;
  if (this->debit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->debit(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Card)
  return target;
}

size_t Card::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Card)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string card_number = 3;
  if (this->card_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->card_number());
  }

  // string exp_month = 4;
  if (this->exp_month().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exp_month());
  }

  // string exp_year = 5;
  if (this->exp_year().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->exp_year());
  }

  // string cvc = 6;
  if (this->cvc().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->cvc());
  }

  // .api.CardType card_type = 1;
  if (this->card_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->card_type());
  }

  // bool debit = 7;
  if (this->debit() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Card::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Card)
  GOOGLE_DCHECK_NE(&from, this);
  const Card* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Card>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Card)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Card)
    MergeFrom(*source);
  }
}

void Card::MergeFrom(const Card& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Card)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.card_number().size() > 0) {

    card_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.card_number_);
  }
  if (from.exp_month().size() > 0) {

    exp_month_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exp_month_);
  }
  if (from.exp_year().size() > 0) {

    exp_year_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.exp_year_);
  }
  if (from.cvc().size() > 0) {

    cvc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.cvc_);
  }
  if (from.card_type() != 0) {
    set_card_type(from.card_type());
  }
  if (from.debit() != 0) {
    set_debit(from.debit());
  }
}

void Card::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Card::CopyFrom(const Card& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Card::IsInitialized() const {
  return true;
}

void Card::Swap(Card* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Card::InternalSwap(Card* other) {
  using std::swap;
  card_number_.Swap(&other->card_number_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exp_month_.Swap(&other->exp_month_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  exp_year_.Swap(&other->exp_year_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  cvc_.Swap(&other->cvc_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(card_type_, other->card_type_);
  swap(debit_, other->debit_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Card::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BankAccount::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BankAccount::kAccountNumberFieldNumber;
const int BankAccount::kRoutingNumberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BankAccount::BankAccount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_BankAccount.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.BankAccount)
}
BankAccount::BankAccount(const BankAccount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account_number().size() > 0) {
    account_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_number_);
  }
  routing_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.routing_number().size() > 0) {
    routing_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.routing_number_);
  }
  // @@protoc_insertion_point(copy_constructor:api.BankAccount)
}

void BankAccount::SharedCtor() {
  account_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routing_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

BankAccount::~BankAccount() {
  // @@protoc_insertion_point(destructor:api.BankAccount)
  SharedDtor();
}

void BankAccount::SharedDtor() {
  account_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routing_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void BankAccount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BankAccount::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BankAccount& BankAccount::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_BankAccount.base);
  return *internal_default_instance();
}


void BankAccount::Clear() {
// @@protoc_insertion_point(message_clear_start:api.BankAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  account_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  routing_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool BankAccount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.BankAccount)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string account_number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account_number().data(), static_cast<int>(this->account_number().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.BankAccount.account_number"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string routing_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_routing_number()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->routing_number().data(), static_cast<int>(this->routing_number().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.BankAccount.routing_number"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.BankAccount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.BankAccount)
  return false;
#undef DO_
}

void BankAccount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.BankAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account_number = 1;
  if (this->account_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_number().data(), static_cast<int>(this->account_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.BankAccount.account_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account_number(), output);
  }

  // string routing_number = 2;
  if (this->routing_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->routing_number().data(), static_cast<int>(this->routing_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.BankAccount.routing_number");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->routing_number(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.BankAccount)
}

::google::protobuf::uint8* BankAccount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.BankAccount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string account_number = 1;
  if (this->account_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account_number().data(), static_cast<int>(this->account_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.BankAccount.account_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account_number(), target);
  }

  // string routing_number = 2;
  if (this->routing_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->routing_number().data(), static_cast<int>(this->routing_number().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.BankAccount.routing_number");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->routing_number(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.BankAccount)
  return target;
}

size_t BankAccount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.BankAccount)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string account_number = 1;
  if (this->account_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account_number());
  }

  // string routing_number = 2;
  if (this->routing_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->routing_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BankAccount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.BankAccount)
  GOOGLE_DCHECK_NE(&from, this);
  const BankAccount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BankAccount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.BankAccount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.BankAccount)
    MergeFrom(*source);
  }
}

void BankAccount::MergeFrom(const BankAccount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.BankAccount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.account_number().size() > 0) {

    account_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_number_);
  }
  if (from.routing_number().size() > 0) {

    routing_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.routing_number_);
  }
}

void BankAccount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.BankAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BankAccount::CopyFrom(const BankAccount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.BankAccount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BankAccount::IsInitialized() const {
  return true;
}

void BankAccount::Swap(BankAccount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BankAccount::InternalSwap(BankAccount* other) {
  using std::swap;
  account_number_.Swap(&other->account_number_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  routing_number_.Swap(&other->routing_number_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BankAccount::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Address::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Address::kCityFieldNumber;
const int Address::kCountryFieldNumber;
const int Address::kLine1FieldNumber;
const int Address::kLine2FieldNumber;
const int Address::kPostalCodeFieldNumber;
const int Address::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Address::Address()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Address)
}
Address::Address(const Address& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.city().size() > 0) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.country().size() > 0) {
    country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
  }
  line1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.line1().size() > 0) {
    line1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line1_);
  }
  line2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.line2().size() > 0) {
    line2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line2_);
  }
  postal_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.postal_code().size() > 0) {
    postal_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.postal_code_);
  }
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  // @@protoc_insertion_point(copy_constructor:api.Address)
}

void Address::SharedCtor() {
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  postal_code_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Address::~Address() {
  // @@protoc_insertion_point(destructor:api.Address)
  SharedDtor();
}

void Address::SharedDtor() {
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  postal_code_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Address::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Address::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Address& Address::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Address::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  postal_code_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Address::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Address)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string city = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->city().data(), static_cast<int>(this->city().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Address.city"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string country = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->country().data(), static_cast<int>(this->country().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Address.country"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string line1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_line1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->line1().data(), static_cast<int>(this->line1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Address.line1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string line2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_line2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->line2().data(), static_cast<int>(this->line2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Address.line2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string postal_code = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_postal_code()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->postal_code().data(), static_cast<int>(this->postal_code().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Address.postal_code"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string state = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->state().data(), static_cast<int>(this->state().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Address.state"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Address)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Address)
  return false;
#undef DO_
}

void Address::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string city = 1;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->city(), output);
  }

  // string country = 2;
  if (this->country().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->country().data(), static_cast<int>(this->country().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->country(), output);
  }

  // string line1 = 3;
  if (this->line1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->line1().data(), static_cast<int>(this->line1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.line1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->line1(), output);
  }

  // string line2 = 4;
  if (this->line2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->line2().data(), static_cast<int>(this->line2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.line2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->line2(), output);
  }

  // string postal_code = 5;
  if (this->postal_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->postal_code().data(), static_cast<int>(this->postal_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.postal_code");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->postal_code(), output);
  }

  // string state = 6;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Address)
}

::google::protobuf::uint8* Address::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string city = 1;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->city(), target);
  }

  // string country = 2;
  if (this->country().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->country().data(), static_cast<int>(this->country().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->country(), target);
  }

  // string line1 = 3;
  if (this->line1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->line1().data(), static_cast<int>(this->line1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.line1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->line1(), target);
  }

  // string line2 = 4;
  if (this->line2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->line2().data(), static_cast<int>(this->line2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.line2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->line2(), target);
  }

  // string postal_code = 5;
  if (this->postal_code().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->postal_code().data(), static_cast<int>(this->postal_code().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.postal_code");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->postal_code(), target);
  }

  // string state = 6;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Address)
  return target;
}

size_t Address::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Address)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string city = 1;
  if (this->city().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->city());
  }

  // string country = 2;
  if (this->country().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->country());
  }

  // string line1 = 3;
  if (this->line1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->line1());
  }

  // string line2 = 4;
  if (this->line2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->line2());
  }

  // string postal_code = 5;
  if (this->postal_code().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->postal_code());
  }

  // string state = 6;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Address::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Address)
  GOOGLE_DCHECK_NE(&from, this);
  const Address* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Address>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Address)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Address)
    MergeFrom(*source);
  }
}

void Address::MergeFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Address)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.city().size() > 0) {

    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  if (from.country().size() > 0) {

    country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
  }
  if (from.line1().size() > 0) {

    line1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line1_);
  }
  if (from.line2().size() > 0) {

    line2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line2_);
  }
  if (from.postal_code().size() > 0) {

    postal_code_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.postal_code_);
  }
  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
}

void Address::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Address::CopyFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Address::IsInitialized() const {
  return true;
}

void Address::Swap(Address* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Address::InternalSwap(Address* other) {
  using std::swap;
  city_.Swap(&other->city_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  country_.Swap(&other->country_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  line1_.Swap(&other->line1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  line2_.Swap(&other->line2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  postal_code_.Swap(&other->postal_code_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Address::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChannelReminder::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChannelReminder::kChannelIdFieldNumber;
const int ChannelReminder::kTextFieldNumber;
const int ChannelReminder::kTimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChannelReminder::ChannelReminder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_ChannelReminder.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.ChannelReminder)
}
ChannelReminder::ChannelReminder(const ChannelReminder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.channel_id().size() > 0) {
    channel_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.time().size() > 0) {
    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  // @@protoc_insertion_point(copy_constructor:api.ChannelReminder)
}

void ChannelReminder::SharedCtor() {
  channel_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ChannelReminder::~ChannelReminder() {
  // @@protoc_insertion_point(destructor:api.ChannelReminder)
  SharedDtor();
}

void ChannelReminder::SharedDtor() {
  channel_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChannelReminder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ChannelReminder::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChannelReminder& ChannelReminder::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_ChannelReminder.base);
  return *internal_default_instance();
}


void ChannelReminder::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ChannelReminder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ChannelReminder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.ChannelReminder)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string channel_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channel_id().data(), static_cast<int>(this->channel_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.ChannelReminder.channel_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.ChannelReminder.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->time().data(), static_cast<int>(this->time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.ChannelReminder.time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.ChannelReminder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.ChannelReminder)
  return false;
#undef DO_
}

void ChannelReminder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.ChannelReminder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string channel_id = 1;
  if (this->channel_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_id().data(), static_cast<int>(this->channel_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ChannelReminder.channel_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->channel_id(), output);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ChannelReminder.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // string time = 3;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ChannelReminder.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->time(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.ChannelReminder)
}

::google::protobuf::uint8* ChannelReminder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.ChannelReminder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string channel_id = 1;
  if (this->channel_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel_id().data(), static_cast<int>(this->channel_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ChannelReminder.channel_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->channel_id(), target);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ChannelReminder.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // string time = 3;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ChannelReminder.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->time(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.ChannelReminder)
  return target;
}

size_t ChannelReminder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ChannelReminder)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string channel_id = 1;
  if (this->channel_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channel_id());
  }

  // string text = 2;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // string time = 3;
  if (this->time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ChannelReminder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ChannelReminder)
  GOOGLE_DCHECK_NE(&from, this);
  const ChannelReminder* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChannelReminder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ChannelReminder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ChannelReminder)
    MergeFrom(*source);
  }
}

void ChannelReminder::MergeFrom(const ChannelReminder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ChannelReminder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel_id().size() > 0) {

    channel_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_id_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.time().size() > 0) {

    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
}

void ChannelReminder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ChannelReminder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChannelReminder::CopyFrom(const ChannelReminder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ChannelReminder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChannelReminder::IsInitialized() const {
  return true;
}

void ChannelReminder::Swap(ChannelReminder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChannelReminder::InternalSwap(ChannelReminder* other) {
  using std::swap;
  channel_id_.Swap(&other->channel_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  time_.Swap(&other->time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ChannelReminder::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserReminder::InitAsDefaultInstance() {
  ::api::_UserReminder_default_instance_._instance.get_mutable()->item_ = const_cast< ::api::ItemRef*>(
      ::api::ItemRef::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserReminder::kIdFieldNumber;
const int UserReminder::kTextFieldNumber;
const int UserReminder::kTimeFieldNumber;
const int UserReminder::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserReminder::UserReminder()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_UserReminder.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.UserReminder)
}
UserReminder::UserReminder(const UserReminder& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.time().size() > 0) {
    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  if (from.has_item()) {
    item_ = new ::api::ItemRef(*from.item_);
  } else {
    item_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.UserReminder)
}

void UserReminder::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_ = NULL;
}

UserReminder::~UserReminder() {
  // @@protoc_insertion_point(destructor:api.UserReminder)
  SharedDtor();
}

void UserReminder::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete item_;
}

void UserReminder::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserReminder::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserReminder& UserReminder::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_UserReminder.base);
  return *internal_default_instance();
}


void UserReminder::Clear() {
// @@protoc_insertion_point(message_clear_start:api.UserReminder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
  _internal_metadata_.Clear();
}

bool UserReminder::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.UserReminder)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.UserReminder.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.UserReminder.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string time = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->time().data(), static_cast<int>(this->time().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.UserReminder.time"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.ItemRef item = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.UserReminder)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.UserReminder)
  return false;
#undef DO_
}

void UserReminder::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.UserReminder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UserReminder.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UserReminder.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // string time = 3;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UserReminder.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->time(), output);
  }

  // .api.ItemRef item = 4;
  if (this->has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_item(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.UserReminder)
}

::google::protobuf::uint8* UserReminder::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.UserReminder)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UserReminder.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UserReminder.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // string time = 3;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), static_cast<int>(this->time().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UserReminder.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->time(), target);
  }

  // .api.ItemRef item = 4;
  if (this->has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_item(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.UserReminder)
  return target;
}

size_t UserReminder::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.UserReminder)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // string text = 2;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // string time = 3;
  if (this->time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  // .api.ItemRef item = 4;
  if (this->has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *item_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserReminder::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.UserReminder)
  GOOGLE_DCHECK_NE(&from, this);
  const UserReminder* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserReminder>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.UserReminder)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.UserReminder)
    MergeFrom(*source);
  }
}

void UserReminder::MergeFrom(const UserReminder& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.UserReminder)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.time().size() > 0) {

    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  if (from.has_item()) {
    mutable_item()->::api::ItemRef::MergeFrom(from.item());
  }
}

void UserReminder::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.UserReminder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserReminder::CopyFrom(const UserReminder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.UserReminder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserReminder::IsInitialized() const {
  return true;
}

void UserReminder::Swap(UserReminder* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserReminder::InternalSwap(UserReminder* other) {
  using std::swap;
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  time_.Swap(&other->time_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(item_, other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserReminder::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ItemRef::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ItemRef::kChannelFieldNumber;
const int ItemRef::kFileFieldNumber;
const int ItemRef::kCommentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ItemRef::ItemRef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_ItemRef.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.ItemRef)
}
ItemRef::ItemRef(const ItemRef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.channel().size() > 0) {
    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.file().size() > 0) {
    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.comment().size() > 0) {
    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
  // @@protoc_insertion_point(copy_constructor:api.ItemRef)
}

void ItemRef::SharedCtor() {
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ItemRef::~ItemRef() {
  // @@protoc_insertion_point(destructor:api.ItemRef)
  SharedDtor();
}

void ItemRef::SharedDtor() {
  channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ItemRef::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ItemRef::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ItemRef& ItemRef::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_ItemRef.base);
  return *internal_default_instance();
}


void ItemRef::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ItemRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  file_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  comment_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ItemRef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.ItemRef)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string channel = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channel().data(), static_cast<int>(this->channel().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.ItemRef.channel"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string file = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_file()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->file().data(), static_cast<int>(this->file().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.ItemRef.file"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string comment = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->comment().data(), static_cast<int>(this->comment().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.ItemRef.comment"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.ItemRef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.ItemRef)
  return false;
#undef DO_
}

void ItemRef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.ItemRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string channel = 1;
  if (this->channel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ItemRef.channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->channel(), output);
  }

  // string file = 2;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ItemRef.file");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->file(), output);
  }

  // string comment = 3;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ItemRef.comment");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->comment(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.ItemRef)
}

::google::protobuf::uint8* ItemRef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.ItemRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string channel = 1;
  if (this->channel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ItemRef.channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->channel(), target);
  }

  // string file = 2;
  if (this->file().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->file().data(), static_cast<int>(this->file().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ItemRef.file");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->file(), target);
  }

  // string comment = 3;
  if (this->comment().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->comment().data(), static_cast<int>(this->comment().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.ItemRef.comment");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->comment(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.ItemRef)
  return target;
}

size_t ItemRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ItemRef)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string channel = 1;
  if (this->channel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channel());
  }

  // string file = 2;
  if (this->file().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->file());
  }

  // string comment = 3;
  if (this->comment().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->comment());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ItemRef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ItemRef)
  GOOGLE_DCHECK_NE(&from, this);
  const ItemRef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ItemRef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ItemRef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ItemRef)
    MergeFrom(*source);
  }
}

void ItemRef::MergeFrom(const ItemRef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ItemRef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.channel().size() > 0) {

    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
  if (from.file().size() > 0) {

    file_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.file_);
  }
  if (from.comment().size() > 0) {

    comment_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.comment_);
  }
}

void ItemRef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ItemRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ItemRef::CopyFrom(const ItemRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ItemRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ItemRef::IsInitialized() const {
  return true;
}

void ItemRef::Swap(ItemRef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ItemRef::InternalSwap(ItemRef* other) {
  using std::swap;
  channel_.Swap(&other->channel_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  file_.Swap(&other->file_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  comment_.Swap(&other->comment_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ItemRef::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Star::InitAsDefaultInstance() {
  ::api::_Star_default_instance_._instance.get_mutable()->item_ = const_cast< ::api::ItemRef*>(
      ::api::ItemRef::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Star::kTextFieldNumber;
const int Star::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Star::Star()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Star.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Star)
}
Star::Star(const Star& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_item()) {
    item_ = new ::api::ItemRef(*from.item_);
  } else {
    item_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.Star)
}

void Star::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_ = NULL;
}

Star::~Star() {
  // @@protoc_insertion_point(destructor:api.Star)
  SharedDtor();
}

void Star::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete item_;
}

void Star::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Star::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Star& Star::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Star.base);
  return *internal_default_instance();
}


void Star::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Star)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
  _internal_metadata_.Clear();
}

bool Star::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Star)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Star.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.ItemRef item = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Star)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Star)
  return false;
#undef DO_
}

void Star::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Star)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Star.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // .api.ItemRef item = 4;
  if (this->has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_item(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Star)
}

::google::protobuf::uint8* Star::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Star)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Star.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // .api.ItemRef item = 4;
  if (this->has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_item(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Star)
  return target;
}

size_t Star::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Star)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // .api.ItemRef item = 4;
  if (this->has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *item_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Star::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Star)
  GOOGLE_DCHECK_NE(&from, this);
  const Star* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Star>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Star)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Star)
    MergeFrom(*source);
  }
}

void Star::MergeFrom(const Star& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Star)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_item()) {
    mutable_item()->::api::ItemRef::MergeFrom(from.item());
  }
}

void Star::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Star)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Star::CopyFrom(const Star& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Star)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Star::IsInitialized() const {
  return true;
}

void Star::Swap(Star* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Star::InternalSwap(Star* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(item_, other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Star::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Pin::InitAsDefaultInstance() {
  ::api::_Pin_default_instance_._instance.get_mutable()->item_ = const_cast< ::api::ItemRef*>(
      ::api::ItemRef::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pin::kTextFieldNumber;
const int Pin::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pin::Pin()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Pin.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Pin)
}
Pin::Pin(const Pin& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_item()) {
    item_ = new ::api::ItemRef(*from.item_);
  } else {
    item_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.Pin)
}

void Pin::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_ = NULL;
}

Pin::~Pin() {
  // @@protoc_insertion_point(destructor:api.Pin)
  SharedDtor();
}

void Pin::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete item_;
}

void Pin::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Pin::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pin& Pin::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Pin.base);
  return *internal_default_instance();
}


void Pin::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Pin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
  _internal_metadata_.Clear();
}

bool Pin::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Pin)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Pin.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.ItemRef item = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Pin)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Pin)
  return false;
#undef DO_
}

void Pin::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Pin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Pin.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // .api.ItemRef item = 4;
  if (this->has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_item(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Pin)
}

::google::protobuf::uint8* Pin::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Pin)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Pin.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // .api.ItemRef item = 4;
  if (this->has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_item(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Pin)
  return target;
}

size_t Pin::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Pin)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // .api.ItemRef item = 4;
  if (this->has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *item_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Pin::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Pin)
  GOOGLE_DCHECK_NE(&from, this);
  const Pin* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pin>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Pin)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Pin)
    MergeFrom(*source);
  }
}

void Pin::MergeFrom(const Pin& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Pin)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.has_item()) {
    mutable_item()->::api::ItemRef::MergeFrom(from.item());
  }
}

void Pin::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Pin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pin::CopyFrom(const Pin& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Pin)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pin::IsInitialized() const {
  return true;
}

void Pin::Swap(Pin* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pin::InternalSwap(Pin* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(item_, other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Pin::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SignedKey::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignedKey::kSignedKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignedKey::SignedKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_SignedKey.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.SignedKey)
}
SignedKey::SignedKey(const SignedKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signed_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signed_key().size() > 0) {
    signed_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signed_key_);
  }
  // @@protoc_insertion_point(copy_constructor:api.SignedKey)
}

void SignedKey::SharedCtor() {
  signed_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignedKey::~SignedKey() {
  // @@protoc_insertion_point(destructor:api.SignedKey)
  SharedDtor();
}

void SignedKey::SharedDtor() {
  signed_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignedKey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SignedKey::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SignedKey& SignedKey::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_SignedKey.base);
  return *internal_default_instance();
}


void SignedKey::Clear() {
// @@protoc_insertion_point(message_clear_start:api.SignedKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  signed_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SignedKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.SignedKey)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string signed_key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_signed_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->signed_key().data(), static_cast<int>(this->signed_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SignedKey.signed_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.SignedKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.SignedKey)
  return false;
#undef DO_
}

void SignedKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.SignedKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signed_key = 1;
  if (this->signed_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signed_key().data(), static_cast<int>(this->signed_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SignedKey.signed_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->signed_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.SignedKey)
}

::google::protobuf::uint8* SignedKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.SignedKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string signed_key = 1;
  if (this->signed_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->signed_key().data(), static_cast<int>(this->signed_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SignedKey.signed_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->signed_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.SignedKey)
  return target;
}

size_t SignedKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.SignedKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string signed_key = 1;
  if (this->signed_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->signed_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SignedKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.SignedKey)
  GOOGLE_DCHECK_NE(&from, this);
  const SignedKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignedKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.SignedKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.SignedKey)
    MergeFrom(*source);
  }
}

void SignedKey::MergeFrom(const SignedKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.SignedKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.signed_key().size() > 0) {

    signed_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signed_key_);
  }
}

void SignedKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.SignedKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignedKey::CopyFrom(const SignedKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.SignedKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignedKey::IsInitialized() const {
  return true;
}

void SignedKey::Swap(SignedKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignedKey::InternalSwap(SignedKey* other) {
  using std::swap;
  signed_key_.Swap(&other->signed_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SignedKey::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnImplemented::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnImplemented::UnImplemented()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_UnImplemented.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.UnImplemented)
}
UnImplemented::UnImplemented(const UnImplemented& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.UnImplemented)
}

void UnImplemented::SharedCtor() {
}

UnImplemented::~UnImplemented() {
  // @@protoc_insertion_point(destructor:api.UnImplemented)
  SharedDtor();
}

void UnImplemented::SharedDtor() {
}

void UnImplemented::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UnImplemented::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnImplemented& UnImplemented::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_UnImplemented.base);
  return *internal_default_instance();
}


void UnImplemented::Clear() {
// @@protoc_insertion_point(message_clear_start:api.UnImplemented)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool UnImplemented::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.UnImplemented)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:api.UnImplemented)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.UnImplemented)
  return false;
#undef DO_
}

void UnImplemented::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.UnImplemented)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.UnImplemented)
}

::google::protobuf::uint8* UnImplemented::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.UnImplemented)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.UnImplemented)
  return target;
}

size_t UnImplemented::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.UnImplemented)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnImplemented::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.UnImplemented)
  GOOGLE_DCHECK_NE(&from, this);
  const UnImplemented* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnImplemented>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.UnImplemented)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.UnImplemented)
    MergeFrom(*source);
  }
}

void UnImplemented::MergeFrom(const UnImplemented& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.UnImplemented)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void UnImplemented::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.UnImplemented)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnImplemented::CopyFrom(const UnImplemented& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.UnImplemented)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnImplemented::IsInitialized() const {
  return true;
}

void UnImplemented::Swap(UnImplemented* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnImplemented::InternalSwap(UnImplemented* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UnImplemented::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Access::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Access::kAutom8TerAccountFieldNumber;
const int Access::kAutom8TerKeyFieldNumber;
const int Access::kTwilioAccountFieldNumber;
const int Access::kTwilioKeyFieldNumber;
const int Access::kSendgridAccountFieldNumber;
const int Access::kSendgridKeyFieldNumber;
const int Access::kStripeAccountFieldNumber;
const int Access::kStripeKeyFieldNumber;
const int Access::kSlackAccountFieldNumber;
const int Access::kSlackKeyFieldNumber;
const int Access::kGcpProjectFieldNumber;
const int Access::kGcpKeyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Access::Access()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Access.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Access)
}
Access::Access(const Access& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  autom8ter_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.autom8ter_account().size() > 0) {
    autom8ter_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.autom8ter_account_);
  }
  autom8ter_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.autom8ter_key().size() > 0) {
    autom8ter_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.autom8ter_key_);
  }
  twilio_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.twilio_account().size() > 0) {
    twilio_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.twilio_account_);
  }
  twilio_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.twilio_key().size() > 0) {
    twilio_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.twilio_key_);
  }
  sendgrid_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sendgrid_account().size() > 0) {
    sendgrid_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendgrid_account_);
  }
  sendgrid_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sendgrid_key().size() > 0) {
    sendgrid_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendgrid_key_);
  }
  stripe_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stripe_account().size() > 0) {
    stripe_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stripe_account_);
  }
  stripe_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.stripe_key().size() > 0) {
    stripe_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stripe_key_);
  }
  slack_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.slack_account().size() > 0) {
    slack_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slack_account_);
  }
  slack_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.slack_key().size() > 0) {
    slack_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slack_key_);
  }
  gcp_project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gcp_project().size() > 0) {
    gcp_project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcp_project_);
  }
  gcp_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gcp_key().size() > 0) {
    gcp_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcp_key_);
  }
  // @@protoc_insertion_point(copy_constructor:api.Access)
}

void Access::SharedCtor() {
  autom8ter_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  autom8ter_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  twilio_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  twilio_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendgrid_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendgrid_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stripe_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stripe_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slack_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slack_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcp_project_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcp_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Access::~Access() {
  // @@protoc_insertion_point(destructor:api.Access)
  SharedDtor();
}

void Access::SharedDtor() {
  autom8ter_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  autom8ter_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  twilio_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  twilio_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendgrid_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendgrid_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stripe_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stripe_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slack_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slack_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcp_project_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcp_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Access::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Access::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Access& Access::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Access.base);
  return *internal_default_instance();
}


void Access::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Access)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  autom8ter_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  autom8ter_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  twilio_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  twilio_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendgrid_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sendgrid_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stripe_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  stripe_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slack_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  slack_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcp_project_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gcp_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Access::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Access)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string autom8ter_account = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_autom8ter_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->autom8ter_account().data(), static_cast<int>(this->autom8ter_account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Access.autom8ter_account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string autom8ter_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_autom8ter_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->autom8ter_key().data(), static_cast<int>(this->autom8ter_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Access.autom8ter_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string twilio_account = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_twilio_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->twilio_account().data(), static_cast<int>(this->twilio_account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Access.twilio_account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string twilio_key = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_twilio_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->twilio_key().data(), static_cast<int>(this->twilio_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Access.twilio_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sendgrid_account = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sendgrid_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sendgrid_account().data(), static_cast<int>(this->sendgrid_account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Access.sendgrid_account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sendgrid_key = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sendgrid_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sendgrid_key().data(), static_cast<int>(this->sendgrid_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Access.sendgrid_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string stripe_account = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stripe_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stripe_account().data(), static_cast<int>(this->stripe_account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Access.stripe_account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string stripe_key = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stripe_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stripe_key().data(), static_cast<int>(this->stripe_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Access.stripe_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string slack_account = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_slack_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->slack_account().data(), static_cast<int>(this->slack_account().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Access.slack_account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string slack_key = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_slack_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->slack_key().data(), static_cast<int>(this->slack_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Access.slack_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gcp_project = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gcp_project()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gcp_project().data(), static_cast<int>(this->gcp_project().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Access.gcp_project"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gcp_key = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gcp_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gcp_key().data(), static_cast<int>(this->gcp_key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Access.gcp_key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Access)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Access)
  return false;
#undef DO_
}

void Access::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Access)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string autom8ter_account = 1;
  if (this->autom8ter_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->autom8ter_account().data(), static_cast<int>(this->autom8ter_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.autom8ter_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->autom8ter_account(), output);
  }

  // string autom8ter_key = 2;
  if (this->autom8ter_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->autom8ter_key().data(), static_cast<int>(this->autom8ter_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.autom8ter_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->autom8ter_key(), output);
  }

  // string twilio_account = 3;
  if (this->twilio_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->twilio_account().data(), static_cast<int>(this->twilio_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.twilio_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->twilio_account(), output);
  }

  // string twilio_key = 4;
  if (this->twilio_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->twilio_key().data(), static_cast<int>(this->twilio_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.twilio_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->twilio_key(), output);
  }

  // string sendgrid_account = 5;
  if (this->sendgrid_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendgrid_account().data(), static_cast<int>(this->sendgrid_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.sendgrid_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->sendgrid_account(), output);
  }

  // string sendgrid_key = 6;
  if (this->sendgrid_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendgrid_key().data(), static_cast<int>(this->sendgrid_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.sendgrid_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->sendgrid_key(), output);
  }

  // string stripe_account = 7;
  if (this->stripe_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stripe_account().data(), static_cast<int>(this->stripe_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.stripe_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->stripe_account(), output);
  }

  // string stripe_key = 8;
  if (this->stripe_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stripe_key().data(), static_cast<int>(this->stripe_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.stripe_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->stripe_key(), output);
  }

  // string slack_account = 9;
  if (this->slack_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->slack_account().data(), static_cast<int>(this->slack_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.slack_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->slack_account(), output);
  }

  // string slack_key = 10;
  if (this->slack_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->slack_key().data(), static_cast<int>(this->slack_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.slack_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->slack_key(), output);
  }

  // string gcp_project = 11;
  if (this->gcp_project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcp_project().data(), static_cast<int>(this->gcp_project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.gcp_project");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->gcp_project(), output);
  }

  // string gcp_key = 12;
  if (this->gcp_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcp_key().data(), static_cast<int>(this->gcp_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.gcp_key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->gcp_key(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Access)
}

::google::protobuf::uint8* Access::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Access)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string autom8ter_account = 1;
  if (this->autom8ter_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->autom8ter_account().data(), static_cast<int>(this->autom8ter_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.autom8ter_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->autom8ter_account(), target);
  }

  // string autom8ter_key = 2;
  if (this->autom8ter_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->autom8ter_key().data(), static_cast<int>(this->autom8ter_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.autom8ter_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->autom8ter_key(), target);
  }

  // string twilio_account = 3;
  if (this->twilio_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->twilio_account().data(), static_cast<int>(this->twilio_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.twilio_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->twilio_account(), target);
  }

  // string twilio_key = 4;
  if (this->twilio_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->twilio_key().data(), static_cast<int>(this->twilio_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.twilio_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->twilio_key(), target);
  }

  // string sendgrid_account = 5;
  if (this->sendgrid_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendgrid_account().data(), static_cast<int>(this->sendgrid_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.sendgrid_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->sendgrid_account(), target);
  }

  // string sendgrid_key = 6;
  if (this->sendgrid_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sendgrid_key().data(), static_cast<int>(this->sendgrid_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.sendgrid_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->sendgrid_key(), target);
  }

  // string stripe_account = 7;
  if (this->stripe_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stripe_account().data(), static_cast<int>(this->stripe_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.stripe_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->stripe_account(), target);
  }

  // string stripe_key = 8;
  if (this->stripe_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stripe_key().data(), static_cast<int>(this->stripe_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.stripe_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->stripe_key(), target);
  }

  // string slack_account = 9;
  if (this->slack_account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->slack_account().data(), static_cast<int>(this->slack_account().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.slack_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->slack_account(), target);
  }

  // string slack_key = 10;
  if (this->slack_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->slack_key().data(), static_cast<int>(this->slack_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.slack_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->slack_key(), target);
  }

  // string gcp_project = 11;
  if (this->gcp_project().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcp_project().data(), static_cast<int>(this->gcp_project().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.gcp_project");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->gcp_project(), target);
  }

  // string gcp_key = 12;
  if (this->gcp_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gcp_key().data(), static_cast<int>(this->gcp_key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Access.gcp_key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->gcp_key(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Access)
  return target;
}

size_t Access::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Access)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string autom8ter_account = 1;
  if (this->autom8ter_account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->autom8ter_account());
  }

  // string autom8ter_key = 2;
  if (this->autom8ter_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->autom8ter_key());
  }

  // string twilio_account = 3;
  if (this->twilio_account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->twilio_account());
  }

  // string twilio_key = 4;
  if (this->twilio_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->twilio_key());
  }

  // string sendgrid_account = 5;
  if (this->sendgrid_account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sendgrid_account());
  }

  // string sendgrid_key = 6;
  if (this->sendgrid_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sendgrid_key());
  }

  // string stripe_account = 7;
  if (this->stripe_account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stripe_account());
  }

  // string stripe_key = 8;
  if (this->stripe_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->stripe_key());
  }

  // string slack_account = 9;
  if (this->slack_account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->slack_account());
  }

  // string slack_key = 10;
  if (this->slack_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->slack_key());
  }

  // string gcp_project = 11;
  if (this->gcp_project().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gcp_project());
  }

  // string gcp_key = 12;
  if (this->gcp_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gcp_key());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Access::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Access)
  GOOGLE_DCHECK_NE(&from, this);
  const Access* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Access>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Access)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Access)
    MergeFrom(*source);
  }
}

void Access::MergeFrom(const Access& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Access)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.autom8ter_account().size() > 0) {

    autom8ter_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.autom8ter_account_);
  }
  if (from.autom8ter_key().size() > 0) {

    autom8ter_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.autom8ter_key_);
  }
  if (from.twilio_account().size() > 0) {

    twilio_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.twilio_account_);
  }
  if (from.twilio_key().size() > 0) {

    twilio_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.twilio_key_);
  }
  if (from.sendgrid_account().size() > 0) {

    sendgrid_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendgrid_account_);
  }
  if (from.sendgrid_key().size() > 0) {

    sendgrid_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sendgrid_key_);
  }
  if (from.stripe_account().size() > 0) {

    stripe_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stripe_account_);
  }
  if (from.stripe_key().size() > 0) {

    stripe_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stripe_key_);
  }
  if (from.slack_account().size() > 0) {

    slack_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slack_account_);
  }
  if (from.slack_key().size() > 0) {

    slack_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.slack_key_);
  }
  if (from.gcp_project().size() > 0) {

    gcp_project_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcp_project_);
  }
  if (from.gcp_key().size() > 0) {

    gcp_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gcp_key_);
  }
}

void Access::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Access)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Access::CopyFrom(const Access& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Access)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Access::IsInitialized() const {
  return true;
}

void Access::Swap(Access* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Access::InternalSwap(Access* other) {
  using std::swap;
  autom8ter_account_.Swap(&other->autom8ter_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  autom8ter_key_.Swap(&other->autom8ter_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  twilio_account_.Swap(&other->twilio_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  twilio_key_.Swap(&other->twilio_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sendgrid_account_.Swap(&other->sendgrid_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sendgrid_key_.Swap(&other->sendgrid_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stripe_account_.Swap(&other->stripe_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  stripe_key_.Swap(&other->stripe_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  slack_account_.Swap(&other->slack_account_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  slack_key_.Swap(&other->slack_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gcp_project_.Swap(&other->gcp_project_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gcp_key_.Swap(&other->gcp_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Access::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StandardClaims::InitAsDefaultInstance() {
  ::api::_StandardClaims_default_instance_._instance.get_mutable()->access_ = const_cast< ::api::Access*>(
      ::api::Access::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StandardClaims::kAccessFieldNumber;
const int StandardClaims::kAudienceFieldNumber;
const int StandardClaims::kSubjectFieldNumber;
const int StandardClaims::kExpiresAtFieldNumber;
const int StandardClaims::kIdFieldNumber;
const int StandardClaims::kIssuedAtFieldNumber;
const int StandardClaims::kNotBeforeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StandardClaims::StandardClaims()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_StandardClaims.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.StandardClaims)
}
StandardClaims::StandardClaims(const StandardClaims& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  audience_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.audience().size() > 0) {
    audience_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audience_);
  }
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject().size() > 0) {
    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_access()) {
    access_ = new ::api::Access(*from.access_);
  } else {
    access_ = NULL;
  }
  ::memcpy(&expires_at_, &from.expires_at_,
    static_cast<size_t>(reinterpret_cast<char*>(&not_before_) -
    reinterpret_cast<char*>(&expires_at_)) + sizeof(not_before_));
  // @@protoc_insertion_point(copy_constructor:api.StandardClaims)
}

void StandardClaims::SharedCtor() {
  audience_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&access_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&not_before_) -
      reinterpret_cast<char*>(&access_)) + sizeof(not_before_));
}

StandardClaims::~StandardClaims() {
  // @@protoc_insertion_point(destructor:api.StandardClaims)
  SharedDtor();
}

void StandardClaims::SharedDtor() {
  audience_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete access_;
}

void StandardClaims::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StandardClaims::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StandardClaims& StandardClaims::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_StandardClaims.base);
  return *internal_default_instance();
}


void StandardClaims::Clear() {
// @@protoc_insertion_point(message_clear_start:api.StandardClaims)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  audience_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && access_ != NULL) {
    delete access_;
  }
  access_ = NULL;
  ::memset(&expires_at_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&not_before_) -
      reinterpret_cast<char*>(&expires_at_)) + sizeof(not_before_));
  _internal_metadata_.Clear();
}

bool StandardClaims::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.StandardClaims)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .api.Access access = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_access()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string audience = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_audience()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->audience().data(), static_cast<int>(this->audience().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.StandardClaims.audience"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subject = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), static_cast<int>(this->subject().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.StandardClaims.subject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 expires_at = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &expires_at_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.StandardClaims.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 issued_at = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &issued_at_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 not_before = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &not_before_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.StandardClaims)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.StandardClaims)
  return false;
#undef DO_
}

void StandardClaims::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.StandardClaims)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.Access access = 1;
  if (this->has_access()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_access(), output);
  }

  // string audience = 2;
  if (this->audience().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audience().data(), static_cast<int>(this->audience().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.StandardClaims.audience");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->audience(), output);
  }

  // string subject = 3;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.StandardClaims.subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->subject(), output);
  }

  // int64 expires_at = 4;
  if (this->expires_at() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->expires_at(), output);
  }

  // string id = 5;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.StandardClaims.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->id(), output);
  }

  // int64 issued_at = 6;
  if (this->issued_at() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->issued_at(), output);
  }

  // int64 not_before = 7;
  if (this->not_before() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->not_before(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.StandardClaims)
}

::google::protobuf::uint8* StandardClaims::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.StandardClaims)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.Access access = 1;
  if (this->has_access()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_access(), deterministic, target);
  }

  // string audience = 2;
  if (this->audience().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->audience().data(), static_cast<int>(this->audience().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.StandardClaims.audience");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->audience(), target);
  }

  // string subject = 3;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.StandardClaims.subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->subject(), target);
  }

  // int64 expires_at = 4;
  if (this->expires_at() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->expires_at(), target);
  }

  // string id = 5;
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.StandardClaims.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->id(), target);
  }

  // int64 issued_at = 6;
  if (this->issued_at() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->issued_at(), target);
  }

  // int64 not_before = 7;
  if (this->not_before() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->not_before(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.StandardClaims)
  return target;
}

size_t StandardClaims::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.StandardClaims)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string audience = 2;
  if (this->audience().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->audience());
  }

  // string subject = 3;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  // string id = 5;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .api.Access access = 1;
  if (this->has_access()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *access_);
  }

  // int64 expires_at = 4;
  if (this->expires_at() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->expires_at());
  }

  // int64 issued_at = 6;
  if (this->issued_at() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->issued_at());
  }

  // int64 not_before = 7;
  if (this->not_before() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->not_before());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StandardClaims::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.StandardClaims)
  GOOGLE_DCHECK_NE(&from, this);
  const StandardClaims* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StandardClaims>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.StandardClaims)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.StandardClaims)
    MergeFrom(*source);
  }
}

void StandardClaims::MergeFrom(const StandardClaims& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.StandardClaims)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.audience().size() > 0) {

    audience_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audience_);
  }
  if (from.subject().size() > 0) {

    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_access()) {
    mutable_access()->::api::Access::MergeFrom(from.access());
  }
  if (from.expires_at() != 0) {
    set_expires_at(from.expires_at());
  }
  if (from.issued_at() != 0) {
    set_issued_at(from.issued_at());
  }
  if (from.not_before() != 0) {
    set_not_before(from.not_before());
  }
}

void StandardClaims::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.StandardClaims)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StandardClaims::CopyFrom(const StandardClaims& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.StandardClaims)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StandardClaims::IsInitialized() const {
  return true;
}

void StandardClaims::Swap(StandardClaims* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StandardClaims::InternalSwap(StandardClaims* other) {
  using std::swap;
  audience_.Swap(&other->audience_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  subject_.Swap(&other->subject_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  id_.Swap(&other->id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(access_, other->access_);
  swap(expires_at_, other->expires_at_);
  swap(issued_at_, other->issued_at_);
  swap(not_before_, other->not_before_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StandardClaims::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogConfig::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogConfig::kUsernameFieldNumber;
const int LogConfig::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogConfig::LogConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_LogConfig.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.LogConfig)
}
LogConfig::LogConfig(const LogConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.username().size() > 0) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.channel().size() > 0) {
    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
  // @@protoc_insertion_point(copy_constructor:api.LogConfig)
}

void LogConfig::SharedCtor() {
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LogConfig::~LogConfig() {
  // @@protoc_insertion_point(destructor:api.LogConfig)
  SharedDtor();
}

void LogConfig::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogConfig::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogConfig& LogConfig::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_LogConfig.base);
  return *internal_default_instance();
}


void LogConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:api.LogConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  channel_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LogConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.LogConfig)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string username = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->username().data(), static_cast<int>(this->username().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.LogConfig.username"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_channel()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->channel().data(), static_cast<int>(this->channel().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.LogConfig.channel"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.LogConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.LogConfig)
  return false;
#undef DO_
}

void LogConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.LogConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.LogConfig.username");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // string channel = 2;
  if (this->channel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.LogConfig.channel");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->channel(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.LogConfig)
}

::google::protobuf::uint8* LogConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.LogConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string username = 1;
  if (this->username().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->username().data(), static_cast<int>(this->username().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.LogConfig.username");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // string channel = 2;
  if (this->channel().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->channel().data(), static_cast<int>(this->channel().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.LogConfig.channel");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->channel(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.LogConfig)
  return target;
}

size_t LogConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.LogConfig)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string username = 1;
  if (this->username().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  // string channel = 2;
  if (this->channel().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->channel());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.LogConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const LogConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.LogConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.LogConfig)
    MergeFrom(*source);
  }
}

void LogConfig::MergeFrom(const LogConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.LogConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.username().size() > 0) {

    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  if (from.channel().size() > 0) {

    channel_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.channel_);
  }
}

void LogConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.LogConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogConfig::CopyFrom(const LogConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.LogConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogConfig::IsInitialized() const {
  return true;
}

void LogConfig::Swap(LogConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogConfig::InternalSwap(LogConfig* other) {
  using std::swap;
  username_.Swap(&other->username_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  channel_.Swap(&other->channel_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogConfig::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EmailAddress::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmailAddress::kNameFieldNumber;
const int EmailAddress::kAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmailAddress::EmailAddress()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_EmailAddress.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.EmailAddress)
}
EmailAddress::EmailAddress(const EmailAddress& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  // @@protoc_insertion_point(copy_constructor:api.EmailAddress)
}

void EmailAddress::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EmailAddress::~EmailAddress() {
  // @@protoc_insertion_point(destructor:api.EmailAddress)
  SharedDtor();
}

void EmailAddress::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EmailAddress::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EmailAddress::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmailAddress& EmailAddress::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_EmailAddress.base);
  return *internal_default_instance();
}


void EmailAddress::Clear() {
// @@protoc_insertion_point(message_clear_start:api.EmailAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EmailAddress::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.EmailAddress)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.EmailAddress.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.EmailAddress.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.EmailAddress)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.EmailAddress)
  return false;
#undef DO_
}

void EmailAddress::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.EmailAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailAddress.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailAddress.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->address(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.EmailAddress)
}

::google::protobuf::uint8* EmailAddress::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.EmailAddress)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailAddress.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string address = 2;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EmailAddress.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->address(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.EmailAddress)
  return target;
}

size_t EmailAddress::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.EmailAddress)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string address = 2;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmailAddress::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.EmailAddress)
  GOOGLE_DCHECK_NE(&from, this);
  const EmailAddress* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmailAddress>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.EmailAddress)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.EmailAddress)
    MergeFrom(*source);
  }
}

void EmailAddress::MergeFrom(const EmailAddress& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.EmailAddress)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
}

void EmailAddress::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.EmailAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmailAddress::CopyFrom(const EmailAddress& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.EmailAddress)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmailAddress::IsInitialized() const {
  return true;
}

void EmailAddress::Swap(EmailAddress* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmailAddress::InternalSwap(EmailAddress* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmailAddress::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Email::InitAsDefaultInstance() {
  ::api::_Email_default_instance_._instance.get_mutable()->from_ = const_cast< ::api::EmailAddress*>(
      ::api::EmailAddress::internal_default_instance());
  ::api::_Email_default_instance_._instance.get_mutable()->recipient_ = const_cast< ::api::RecipientEmail*>(
      ::api::RecipientEmail::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Email::kFromFieldNumber;
const int Email::kRecipientFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Email::Email()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Email.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Email)
}
Email::Email(const Email& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_from()) {
    from_ = new ::api::EmailAddress(*from.from_);
  } else {
    from_ = NULL;
  }
  if (from.has_recipient()) {
    recipient_ = new ::api::RecipientEmail(*from.recipient_);
  } else {
    recipient_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.Email)
}

void Email::SharedCtor() {
  ::memset(&from_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&recipient_) -
      reinterpret_cast<char*>(&from_)) + sizeof(recipient_));
}

Email::~Email() {
  // @@protoc_insertion_point(destructor:api.Email)
  SharedDtor();
}

void Email::SharedDtor() {
  if (this != internal_default_instance()) delete from_;
  if (this != internal_default_instance()) delete recipient_;
}

void Email::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Email::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Email& Email::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Email.base);
  return *internal_default_instance();
}


void Email::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Email)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && from_ != NULL) {
    delete from_;
  }
  from_ = NULL;
  if (GetArenaNoVirtual() == NULL && recipient_ != NULL) {
    delete recipient_;
  }
  recipient_ = NULL;
  _internal_metadata_.Clear();
}

bool Email::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Email)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .api.EmailAddress from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.RecipientEmail recipient = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_recipient()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Email)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Email)
  return false;
#undef DO_
}

void Email::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Email)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.EmailAddress from = 1;
  if (this->has_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_from(), output);
  }

  // .api.RecipientEmail recipient = 2;
  if (this->has_recipient()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_recipient(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Email)
}

::google::protobuf::uint8* Email::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Email)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.EmailAddress from = 1;
  if (this->has_from()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_from(), deterministic, target);
  }

  // .api.RecipientEmail recipient = 2;
  if (this->has_recipient()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_recipient(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Email)
  return target;
}

size_t Email::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Email)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .api.EmailAddress from = 1;
  if (this->has_from()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *from_);
  }

  // .api.RecipientEmail recipient = 2;
  if (this->has_recipient()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *recipient_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Email::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Email)
  GOOGLE_DCHECK_NE(&from, this);
  const Email* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Email>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Email)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Email)
    MergeFrom(*source);
  }
}

void Email::MergeFrom(const Email& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Email)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_from()) {
    mutable_from()->::api::EmailAddress::MergeFrom(from.from());
  }
  if (from.has_recipient()) {
    mutable_recipient()->::api::RecipientEmail::MergeFrom(from.recipient());
  }
}

void Email::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Email)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Email::CopyFrom(const Email& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Email)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Email::IsInitialized() const {
  return true;
}

void Email::Swap(Email* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Email::InternalSwap(Email* other) {
  using std::swap;
  swap(from_, other->from_);
  swap(recipient_, other->recipient_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Email::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RecipientEmail::InitAsDefaultInstance() {
  ::api::_RecipientEmail_default_instance_._instance.get_mutable()->to_ = const_cast< ::api::EmailAddress*>(
      ::api::EmailAddress::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RecipientEmail::kToFieldNumber;
const int RecipientEmail::kSubjectFieldNumber;
const int RecipientEmail::kPlainTextFieldNumber;
const int RecipientEmail::kHtmlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RecipientEmail::RecipientEmail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_RecipientEmail.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.RecipientEmail)
}
RecipientEmail::RecipientEmail(const RecipientEmail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.subject().size() > 0) {
    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  plain_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plain_text().size() > 0) {
    plain_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_text_);
  }
  html_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.html().size() > 0) {
    html_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.html_);
  }
  if (from.has_to()) {
    to_ = new ::api::EmailAddress(*from.to_);
  } else {
    to_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.RecipientEmail)
}

void RecipientEmail::SharedCtor() {
  subject_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  html_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_ = NULL;
}

RecipientEmail::~RecipientEmail() {
  // @@protoc_insertion_point(destructor:api.RecipientEmail)
  SharedDtor();
}

void RecipientEmail::SharedDtor() {
  subject_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  html_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete to_;
}

void RecipientEmail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RecipientEmail::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RecipientEmail& RecipientEmail::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_RecipientEmail.base);
  return *internal_default_instance();
}


void RecipientEmail::Clear() {
// @@protoc_insertion_point(message_clear_start:api.RecipientEmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subject_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plain_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  html_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && to_ != NULL) {
    delete to_;
  }
  to_ = NULL;
  _internal_metadata_.Clear();
}

bool RecipientEmail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.RecipientEmail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .api.EmailAddress to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string subject = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subject()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->subject().data(), static_cast<int>(this->subject().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.RecipientEmail.subject"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plain_text = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plain_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plain_text().data(), static_cast<int>(this->plain_text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.RecipientEmail.plain_text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string html = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_html()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->html().data(), static_cast<int>(this->html().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.RecipientEmail.html"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.RecipientEmail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.RecipientEmail)
  return false;
#undef DO_
}

void RecipientEmail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.RecipientEmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.EmailAddress to = 2;
  if (this->has_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_to(), output);
  }

  // string subject = 3;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RecipientEmail.subject");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->subject(), output);
  }

  // string plain_text = 4;
  if (this->plain_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plain_text().data(), static_cast<int>(this->plain_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RecipientEmail.plain_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->plain_text(), output);
  }

  // string html = 5;
  if (this->html().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->html().data(), static_cast<int>(this->html().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RecipientEmail.html");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->html(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.RecipientEmail)
}

::google::protobuf::uint8* RecipientEmail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.RecipientEmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.EmailAddress to = 2;
  if (this->has_to()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_to(), deterministic, target);
  }

  // string subject = 3;
  if (this->subject().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->subject().data(), static_cast<int>(this->subject().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RecipientEmail.subject");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->subject(), target);
  }

  // string plain_text = 4;
  if (this->plain_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plain_text().data(), static_cast<int>(this->plain_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RecipientEmail.plain_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->plain_text(), target);
  }

  // string html = 5;
  if (this->html().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->html().data(), static_cast<int>(this->html().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.RecipientEmail.html");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->html(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.RecipientEmail)
  return target;
}

size_t RecipientEmail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.RecipientEmail)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string subject = 3;
  if (this->subject().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->subject());
  }

  // string plain_text = 4;
  if (this->plain_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plain_text());
  }

  // string html = 5;
  if (this->html().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->html());
  }

  // .api.EmailAddress to = 2;
  if (this->has_to()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *to_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecipientEmail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.RecipientEmail)
  GOOGLE_DCHECK_NE(&from, this);
  const RecipientEmail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RecipientEmail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.RecipientEmail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.RecipientEmail)
    MergeFrom(*source);
  }
}

void RecipientEmail::MergeFrom(const RecipientEmail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.RecipientEmail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subject().size() > 0) {

    subject_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subject_);
  }
  if (from.plain_text().size() > 0) {

    plain_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plain_text_);
  }
  if (from.html().size() > 0) {

    html_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.html_);
  }
  if (from.has_to()) {
    mutable_to()->::api::EmailAddress::MergeFrom(from.to());
  }
}

void RecipientEmail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.RecipientEmail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecipientEmail::CopyFrom(const RecipientEmail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.RecipientEmail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecipientEmail::IsInitialized() const {
  return true;
}

void RecipientEmail::Swap(RecipientEmail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RecipientEmail::InternalSwap(RecipientEmail* other) {
  using std::swap;
  subject_.Swap(&other->subject_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plain_text_.Swap(&other->plain_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  html_.Swap(&other->html_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(to_, other->to_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RecipientEmail::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SMS::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SMS::kToFieldNumber;
const int SMS::kFromFieldNumber;
const int SMS::kBodyFieldNumber;
const int SMS::kMediaUrlFieldNumber;
const int SMS::kCallbackFieldNumber;
const int SMS::kAppFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SMS::SMS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_SMS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.SMS)
}
SMS::SMS(const SMS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to().size() > 0) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.body().size() > 0) {
    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  media_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.media_url().size() > 0) {
    media_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.media_url_);
  }
  callback_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callback().size() > 0) {
    callback_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callback_);
  }
  app_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.app().size() > 0) {
    app_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_);
  }
  // @@protoc_insertion_point(copy_constructor:api.SMS)
}

void SMS::SharedCtor() {
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  media_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SMS::~SMS() {
  // @@protoc_insertion_point(destructor:api.SMS)
  SharedDtor();
}

void SMS::SharedDtor() {
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  media_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SMS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SMS::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SMS& SMS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_SMS.base);
  return *internal_default_instance();
}


void SMS::Clear() {
// @@protoc_insertion_point(message_clear_start:api.SMS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  body_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  media_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  app_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool SMS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.SMS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string to = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SMS.to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SMS.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string body = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_body()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->body().data(), static_cast<int>(this->body().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SMS.body"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string media_url = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_media_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->media_url().data(), static_cast<int>(this->media_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SMS.media_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string callback = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callback()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callback().data(), static_cast<int>(this->callback().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SMS.callback"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string app = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_app()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->app().data(), static_cast<int>(this->app().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.SMS.app"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.SMS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.SMS)
  return false;
#undef DO_
}

void SMS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.SMS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string to = 1;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->to(), output);
  }

  // string from = 2;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from(), output);
  }

  // string body = 3;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->body().data(), static_cast<int>(this->body().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.body");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->body(), output);
  }

  // string media_url = 4;
  if (this->media_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->media_url().data(), static_cast<int>(this->media_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.media_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->media_url(), output);
  }

  // string callback = 5;
  if (this->callback().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callback().data(), static_cast<int>(this->callback().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.callback");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->callback(), output);
  }

  // string app = 6;
  if (this->app().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app().data(), static_cast<int>(this->app().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.app");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->app(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.SMS)
}

::google::protobuf::uint8* SMS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.SMS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string to = 1;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->to(), target);
  }

  // string from = 2;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from(), target);
  }

  // string body = 3;
  if (this->body().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->body().data(), static_cast<int>(this->body().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.body");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->body(), target);
  }

  // string media_url = 4;
  if (this->media_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->media_url().data(), static_cast<int>(this->media_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.media_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->media_url(), target);
  }

  // string callback = 5;
  if (this->callback().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callback().data(), static_cast<int>(this->callback().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.callback");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->callback(), target);
  }

  // string app = 6;
  if (this->app().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->app().data(), static_cast<int>(this->app().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.SMS.app");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->app(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.SMS)
  return target;
}

size_t SMS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.SMS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string to = 1;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // string from = 2;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  // string body = 3;
  if (this->body().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->body());
  }

  // string media_url = 4;
  if (this->media_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->media_url());
  }

  // string callback = 5;
  if (this->callback().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callback());
  }

  // string app = 6;
  if (this->app().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->app());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SMS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.SMS)
  GOOGLE_DCHECK_NE(&from, this);
  const SMS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SMS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.SMS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.SMS)
    MergeFrom(*source);
  }
}

void SMS::MergeFrom(const SMS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.SMS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.body().size() > 0) {

    body_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.body_);
  }
  if (from.media_url().size() > 0) {

    media_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.media_url_);
  }
  if (from.callback().size() > 0) {

    callback_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callback_);
  }
  if (from.app().size() > 0) {

    app_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.app_);
  }
}

void SMS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.SMS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SMS::CopyFrom(const SMS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.SMS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SMS::IsInitialized() const {
  return true;
}

void SMS::Swap(SMS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SMS::InternalSwap(SMS* other) {
  using std::swap;
  to_.Swap(&other->to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  from_.Swap(&other->from_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  body_.Swap(&other->body_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  media_url_.Swap(&other->media_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  callback_.Swap(&other->callback_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  app_.Swap(&other->app_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SMS::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Call::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Call::kToFieldNumber;
const int Call::kFromFieldNumber;
const int Call::kCallbackFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Call::Call()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Call.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Call)
}
Call::Call(const Call& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to().size() > 0) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  callback_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callback().size() > 0) {
    callback_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callback_);
  }
  // @@protoc_insertion_point(copy_constructor:api.Call)
}

void Call::SharedCtor() {
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Call::~Call() {
  // @@protoc_insertion_point(destructor:api.Call)
  SharedDtor();
}

void Call::SharedDtor() {
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Call::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Call::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Call& Call::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Call.base);
  return *internal_default_instance();
}


void Call::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Call::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Call)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string to = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Call.to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Call.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string callback = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callback()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callback().data(), static_cast<int>(this->callback().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Call.callback"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Call)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Call)
  return false;
#undef DO_
}

void Call::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string to = 1;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Call.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->to(), output);
  }

  // string from = 2;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Call.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from(), output);
  }

  // string callback = 5;
  if (this->callback().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callback().data(), static_cast<int>(this->callback().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Call.callback");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->callback(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Call)
}

::google::protobuf::uint8* Call::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string to = 1;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Call.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->to(), target);
  }

  // string from = 2;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Call.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from(), target);
  }

  // string callback = 5;
  if (this->callback().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callback().data(), static_cast<int>(this->callback().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Call.callback");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->callback(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Call)
  return target;
}

size_t Call::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Call)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string to = 1;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // string from = 2;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  // string callback = 5;
  if (this->callback().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callback());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Call::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Call)
  GOOGLE_DCHECK_NE(&from, this);
  const Call* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Call>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Call)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Call)
    MergeFrom(*source);
  }
}

void Call::MergeFrom(const Call& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Call)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.callback().size() > 0) {

    callback_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callback_);
  }
}

void Call::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Call::CopyFrom(const Call& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Call::IsInitialized() const {
  return true;
}

void Call::Swap(Call* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Call::InternalSwap(Call* other) {
  using std::swap;
  to_.Swap(&other->to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  from_.Swap(&other->from_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  callback_.Swap(&other->callback_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Call::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Fax::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Fax::kToFieldNumber;
const int Fax::kFromFieldNumber;
const int Fax::kMediaUrlFieldNumber;
const int Fax::kQualityFieldNumber;
const int Fax::kCallbackFieldNumber;
const int Fax::kStoreMediaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Fax::Fax()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Fax.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Fax)
}
Fax::Fax(const Fax& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to().size() > 0) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  media_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.media_url().size() > 0) {
    media_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.media_url_);
  }
  quality_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.quality().size() > 0) {
    quality_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quality_);
  }
  callback_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callback().size() > 0) {
    callback_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callback_);
  }
  store_media_ = from.store_media_;
  // @@protoc_insertion_point(copy_constructor:api.Fax)
}

void Fax::SharedCtor() {
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  media_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quality_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  store_media_ = false;
}

Fax::~Fax() {
  // @@protoc_insertion_point(destructor:api.Fax)
  SharedDtor();
}

void Fax::SharedDtor() {
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  media_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quality_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Fax::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Fax::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Fax& Fax::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Fax.base);
  return *internal_default_instance();
}


void Fax::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Fax)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  media_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  quality_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  store_media_ = false;
  _internal_metadata_.Clear();
}

bool Fax::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Fax)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string to = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_to()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->to().data(), static_cast<int>(this->to().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Fax.to"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string from = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Fax.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string media_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_media_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->media_url().data(), static_cast<int>(this->media_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Fax.media_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string quality = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_quality()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->quality().data(), static_cast<int>(this->quality().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Fax.quality"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string callback = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callback()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callback().data(), static_cast<int>(this->callback().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Fax.callback"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool store_media = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &store_media_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Fax)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Fax)
  return false;
#undef DO_
}

void Fax::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Fax)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string to = 1;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Fax.to");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->to(), output);
  }

  // string from = 2;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Fax.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->from(), output);
  }

  // string media_url = 3;
  if (this->media_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->media_url().data(), static_cast<int>(this->media_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Fax.media_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->media_url(), output);
  }

  // string quality = 4;
  if (this->quality().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quality().data(), static_cast<int>(this->quality().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Fax.quality");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->quality(), output);
  }

  // string callback = 5;
  if (this->callback().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callback().data(), static_cast<int>(this->callback().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Fax.callback");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->callback(), output);
  }

  // bool store_media = 6;
  if (this->store_media() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->store_media(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Fax)
}

::google::protobuf::uint8* Fax::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Fax)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string to = 1;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->to().data(), static_cast<int>(this->to().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Fax.to");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->to(), target);
  }

  // string from = 2;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Fax.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->from(), target);
  }

  // string media_url = 3;
  if (this->media_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->media_url().data(), static_cast<int>(this->media_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Fax.media_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->media_url(), target);
  }

  // string quality = 4;
  if (this->quality().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->quality().data(), static_cast<int>(this->quality().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Fax.quality");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->quality(), target);
  }

  // string callback = 5;
  if (this->callback().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callback().data(), static_cast<int>(this->callback().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Fax.callback");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->callback(), target);
  }

  // bool store_media = 6;
  if (this->store_media() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->store_media(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Fax)
  return target;
}

size_t Fax::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Fax)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string to = 1;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->to());
  }

  // string from = 2;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  // string media_url = 3;
  if (this->media_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->media_url());
  }

  // string quality = 4;
  if (this->quality().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->quality());
  }

  // string callback = 5;
  if (this->callback().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callback());
  }

  // bool store_media = 6;
  if (this->store_media() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Fax::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Fax)
  GOOGLE_DCHECK_NE(&from, this);
  const Fax* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Fax>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Fax)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Fax)
    MergeFrom(*source);
  }
}

void Fax::MergeFrom(const Fax& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Fax)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.media_url().size() > 0) {

    media_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.media_url_);
  }
  if (from.quality().size() > 0) {

    quality_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.quality_);
  }
  if (from.callback().size() > 0) {

    callback_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callback_);
  }
  if (from.store_media() != 0) {
    set_store_media(from.store_media());
  }
}

void Fax::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Fax)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Fax::CopyFrom(const Fax& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Fax)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Fax::IsInitialized() const {
  return true;
}

void Fax::Swap(Fax* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Fax::InternalSwap(Fax* other) {
  using std::swap;
  to_.Swap(&other->to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  from_.Swap(&other->from_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  media_url_.Swap(&other->media_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  quality_.Swap(&other->quality_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  callback_.Swap(&other->callback_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(store_media_, other->store_media_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Fax::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogHook::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogHook::kAuthorFieldNumber;
const int LogHook::kIconFieldNumber;
const int LogHook::kTitleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogHook::LogHook()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_LogHook.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.LogHook)
}
LogHook::LogHook(const LogHook& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.author().size() > 0) {
    author_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_);
  }
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.icon().size() > 0) {
    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  // @@protoc_insertion_point(copy_constructor:api.LogHook)
}

void LogHook::SharedCtor() {
  author_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LogHook::~LogHook() {
  // @@protoc_insertion_point(destructor:api.LogHook)
  SharedDtor();
}

void LogHook::SharedDtor() {
  author_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogHook::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* LogHook::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogHook& LogHook::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_LogHook.base);
  return *internal_default_instance();
}


void LogHook::Clear() {
// @@protoc_insertion_point(message_clear_start:api.LogHook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  author_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LogHook::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.LogHook)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string author = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_author()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->author().data(), static_cast<int>(this->author().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.LogHook.author"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string icon = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_icon()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->icon().data(), static_cast<int>(this->icon().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.LogHook.icon"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.LogHook.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.LogHook)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.LogHook)
  return false;
#undef DO_
}

void LogHook::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.LogHook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string author = 1;
  if (this->author().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author().data(), static_cast<int>(this->author().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.LogHook.author");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->author(), output);
  }

  // string icon = 2;
  if (this->icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.LogHook.icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->icon(), output);
  }

  // string title = 3;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.LogHook.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->title(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.LogHook)
}

::google::protobuf::uint8* LogHook::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.LogHook)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string author = 1;
  if (this->author().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author().data(), static_cast<int>(this->author().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.LogHook.author");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->author(), target);
  }

  // string icon = 2;
  if (this->icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->icon().data(), static_cast<int>(this->icon().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.LogHook.icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->icon(), target);
  }

  // string title = 3;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.LogHook.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->title(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.LogHook)
  return target;
}

size_t LogHook::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.LogHook)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string author = 1;
  if (this->author().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->author());
  }

  // string icon = 2;
  if (this->icon().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->icon());
  }

  // string title = 3;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LogHook::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.LogHook)
  GOOGLE_DCHECK_NE(&from, this);
  const LogHook* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogHook>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.LogHook)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.LogHook)
    MergeFrom(*source);
  }
}

void LogHook::MergeFrom(const LogHook& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.LogHook)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.author().size() > 0) {

    author_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_);
  }
  if (from.icon().size() > 0) {

    icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.icon_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
}

void LogHook::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.LogHook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogHook::CopyFrom(const LogHook& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.LogHook)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogHook::IsInitialized() const {
  return true;
}

void LogHook::Swap(LogHook* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogHook::InternalSwap(LogHook* other) {
  using std::swap;
  author_.Swap(&other->author_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  icon_.Swap(&other->icon_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata LogHook::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Attachment::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Attachment::kColorFieldNumber;
const int Attachment::kFallbackFieldNumber;
const int Attachment::kCallbackIdFieldNumber;
const int Attachment::kIdFieldNumber;
const int Attachment::kAuthorIdFieldNumber;
const int Attachment::kAuthorNameFieldNumber;
const int Attachment::kAuthorLinkFieldNumber;
const int Attachment::kAuthorIconFieldNumber;
const int Attachment::kTitleFieldNumber;
const int Attachment::kTitlePrefixFieldNumber;
const int Attachment::kPretextFieldNumber;
const int Attachment::kTextFieldNumber;
const int Attachment::kImageUrlFieldNumber;
const int Attachment::kThumbUrlFieldNumber;
const int Attachment::kFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Attachment::Attachment()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Attachment.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Attachment)
}
Attachment::Attachment(const Attachment& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      fields_(from.fields_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.color().size() > 0) {
    color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color_);
  }
  fallback_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.fallback().size() > 0) {
    fallback_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fallback_);
  }
  callback_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.callback_id().size() > 0) {
    callback_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callback_id_);
  }
  author_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.author_id().size() > 0) {
    author_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_id_);
  }
  author_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.author_name().size() > 0) {
    author_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_name_);
  }
  author_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.author_link().size() > 0) {
    author_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_link_);
  }
  author_icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.author_icon().size() > 0) {
    author_icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_icon_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  title_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title_prefix().size() > 0) {
    title_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_prefix_);
  }
  pretext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pretext().size() > 0) {
    pretext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pretext_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  image_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.image_url().size() > 0) {
    image_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_url_);
  }
  thumb_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.thumb_url().size() > 0) {
    thumb_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumb_url_);
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:api.Attachment)
}

void Attachment::SharedCtor() {
  color_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fallback_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  author_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  author_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  author_link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  author_icon_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_prefix_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pretext_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumb_url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
}

Attachment::~Attachment() {
  // @@protoc_insertion_point(destructor:api.Attachment)
  SharedDtor();
}

void Attachment::SharedDtor() {
  color_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fallback_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  author_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  author_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  author_link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  author_icon_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_prefix_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pretext_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumb_url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Attachment::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Attachment::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Attachment& Attachment::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Attachment.base);
  return *internal_default_instance();
}


void Attachment::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Attachment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fields_.Clear();
  color_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  fallback_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  callback_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  author_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  author_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  author_link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  author_icon_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_prefix_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pretext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  image_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  thumb_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  id_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Attachment::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Attachment)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string color = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_color()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->color().data(), static_cast<int>(this->color().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Attachment.color"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string fallback = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_fallback()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->fallback().data(), static_cast<int>(this->fallback().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Attachment.fallback"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string callback_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_callback_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->callback_id().data(), static_cast<int>(this->callback_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Attachment.callback_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string author_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_author_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->author_id().data(), static_cast<int>(this->author_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Attachment.author_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string author_name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_author_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->author_name().data(), static_cast<int>(this->author_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Attachment.author_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string author_link = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_author_link()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->author_link().data(), static_cast<int>(this->author_link().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Attachment.author_link"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string author_icon = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_author_icon()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->author_icon().data(), static_cast<int>(this->author_icon().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Attachment.author_icon"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Attachment.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string title_prefix = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title_prefix()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title_prefix().data(), static_cast<int>(this->title_prefix().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Attachment.title_prefix"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pretext = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pretext()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pretext().data(), static_cast<int>(this->pretext().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Attachment.pretext"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Attachment.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string image_url = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_image_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->image_url().data(), static_cast<int>(this->image_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Attachment.image_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string thumb_url = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_thumb_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->thumb_url().data(), static_cast<int>(this->thumb_url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Attachment.thumb_url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .api.AttachmentField fields = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Attachment)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Attachment)
  return false;
#undef DO_
}

void Attachment::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Attachment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string color = 1;
  if (this->color().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->color().data(), static_cast<int>(this->color().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.color");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->color(), output);
  }

  // string fallback = 2;
  if (this->fallback().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fallback().data(), static_cast<int>(this->fallback().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.fallback");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->fallback(), output);
  }

  // string callback_id = 3;
  if (this->callback_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callback_id().data(), static_cast<int>(this->callback_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.callback_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->callback_id(), output);
  }

  // int64 id = 4;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->id(), output);
  }

  // string author_id = 5;
  if (this->author_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author_id().data(), static_cast<int>(this->author_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.author_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->author_id(), output);
  }

  // string author_name = 6;
  if (this->author_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author_name().data(), static_cast<int>(this->author_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.author_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->author_name(), output);
  }

  // string author_link = 7;
  if (this->author_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author_link().data(), static_cast<int>(this->author_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.author_link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->author_link(), output);
  }

  // string author_icon = 8;
  if (this->author_icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author_icon().data(), static_cast<int>(this->author_icon().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.author_icon");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->author_icon(), output);
  }

  // string title = 9;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->title(), output);
  }

  // string title_prefix = 10;
  if (this->title_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title_prefix().data(), static_cast<int>(this->title_prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.title_prefix");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->title_prefix(), output);
  }

  // string pretext = 11;
  if (this->pretext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pretext().data(), static_cast<int>(this->pretext().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.pretext");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->pretext(), output);
  }

  // string text = 12;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->text(), output);
  }

  // string image_url = 13;
  if (this->image_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_url().data(), static_cast<int>(this->image_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.image_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->image_url(), output);
  }

  // string thumb_url = 14;
  if (this->thumb_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumb_url().data(), static_cast<int>(this->thumb_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.thumb_url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->thumb_url(), output);
  }

  // repeated .api.AttachmentField fields = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15,
      this->fields(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Attachment)
}

::google::protobuf::uint8* Attachment::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Attachment)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string color = 1;
  if (this->color().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->color().data(), static_cast<int>(this->color().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.color");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->color(), target);
  }

  // string fallback = 2;
  if (this->fallback().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->fallback().data(), static_cast<int>(this->fallback().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.fallback");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->fallback(), target);
  }

  // string callback_id = 3;
  if (this->callback_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->callback_id().data(), static_cast<int>(this->callback_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.callback_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->callback_id(), target);
  }

  // int64 id = 4;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->id(), target);
  }

  // string author_id = 5;
  if (this->author_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author_id().data(), static_cast<int>(this->author_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.author_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->author_id(), target);
  }

  // string author_name = 6;
  if (this->author_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author_name().data(), static_cast<int>(this->author_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.author_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->author_name(), target);
  }

  // string author_link = 7;
  if (this->author_link().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author_link().data(), static_cast<int>(this->author_link().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.author_link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->author_link(), target);
  }

  // string author_icon = 8;
  if (this->author_icon().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->author_icon().data(), static_cast<int>(this->author_icon().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.author_icon");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->author_icon(), target);
  }

  // string title = 9;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->title(), target);
  }

  // string title_prefix = 10;
  if (this->title_prefix().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title_prefix().data(), static_cast<int>(this->title_prefix().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.title_prefix");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->title_prefix(), target);
  }

  // string pretext = 11;
  if (this->pretext().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pretext().data(), static_cast<int>(this->pretext().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.pretext");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->pretext(), target);
  }

  // string text = 12;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->text(), target);
  }

  // string image_url = 13;
  if (this->image_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->image_url().data(), static_cast<int>(this->image_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.image_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->image_url(), target);
  }

  // string thumb_url = 14;
  if (this->thumb_url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->thumb_url().data(), static_cast<int>(this->thumb_url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Attachment.thumb_url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->thumb_url(), target);
  }

  // repeated .api.AttachmentField fields = 15;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->fields_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->fields(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Attachment)
  return target;
}

size_t Attachment::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Attachment)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .api.AttachmentField fields = 15;
  {
    unsigned int count = static_cast<unsigned int>(this->fields_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->fields(static_cast<int>(i)));
    }
  }

  // string color = 1;
  if (this->color().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->color());
  }

  // string fallback = 2;
  if (this->fallback().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->fallback());
  }

  // string callback_id = 3;
  if (this->callback_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->callback_id());
  }

  // string author_id = 5;
  if (this->author_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->author_id());
  }

  // string author_name = 6;
  if (this->author_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->author_name());
  }

  // string author_link = 7;
  if (this->author_link().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->author_link());
  }

  // string author_icon = 8;
  if (this->author_icon().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->author_icon());
  }

  // string title = 9;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string title_prefix = 10;
  if (this->title_prefix().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title_prefix());
  }

  // string pretext = 11;
  if (this->pretext().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pretext());
  }

  // string text = 12;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // string image_url = 13;
  if (this->image_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->image_url());
  }

  // string thumb_url = 14;
  if (this->thumb_url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->thumb_url());
  }

  // int64 id = 4;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Attachment::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Attachment)
  GOOGLE_DCHECK_NE(&from, this);
  const Attachment* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Attachment>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Attachment)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Attachment)
    MergeFrom(*source);
  }
}

void Attachment::MergeFrom(const Attachment& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Attachment)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  fields_.MergeFrom(from.fields_);
  if (from.color().size() > 0) {

    color_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.color_);
  }
  if (from.fallback().size() > 0) {

    fallback_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.fallback_);
  }
  if (from.callback_id().size() > 0) {

    callback_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.callback_id_);
  }
  if (from.author_id().size() > 0) {

    author_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_id_);
  }
  if (from.author_name().size() > 0) {

    author_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_name_);
  }
  if (from.author_link().size() > 0) {

    author_link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_link_);
  }
  if (from.author_icon().size() > 0) {

    author_icon_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.author_icon_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.title_prefix().size() > 0) {

    title_prefix_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_prefix_);
  }
  if (from.pretext().size() > 0) {

    pretext_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pretext_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.image_url().size() > 0) {

    image_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.image_url_);
  }
  if (from.thumb_url().size() > 0) {

    thumb_url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.thumb_url_);
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Attachment::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Attachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Attachment::CopyFrom(const Attachment& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Attachment)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Attachment::IsInitialized() const {
  return true;
}

void Attachment::Swap(Attachment* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Attachment::InternalSwap(Attachment* other) {
  using std::swap;
  CastToBase(&fields_)->InternalSwap(CastToBase(&other->fields_));
  color_.Swap(&other->color_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  fallback_.Swap(&other->fallback_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  callback_id_.Swap(&other->callback_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  author_id_.Swap(&other->author_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  author_name_.Swap(&other->author_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  author_link_.Swap(&other->author_link_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  author_icon_.Swap(&other->author_icon_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_prefix_.Swap(&other->title_prefix_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pretext_.Swap(&other->pretext_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  image_url_.Swap(&other->image_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  thumb_url_.Swap(&other->thumb_url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Attachment::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AttachmentAction::InitAsDefaultInstance() {
  ::api::_AttachmentAction_default_instance_._instance.get_mutable()->confirm_ = const_cast< ::api::AttachmentConfirmationField*>(
      ::api::AttachmentConfirmationField::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttachmentAction::kNameFieldNumber;
const int AttachmentAction::kTextFieldNumber;
const int AttachmentAction::kStyleFieldNumber;
const int AttachmentAction::kTypeFieldNumber;
const int AttachmentAction::kValueFieldNumber;
const int AttachmentAction::kDataSourceFieldNumber;
const int AttachmentAction::kMinQueryLengthFieldNumber;
const int AttachmentAction::kOptionsFieldNumber;
const int AttachmentAction::kSelectedOptionsFieldNumber;
const int AttachmentAction::kOptionGroupsFieldNumber;
const int AttachmentAction::kConfirmFieldNumber;
const int AttachmentAction::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttachmentAction::AttachmentAction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_AttachmentAction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.AttachmentAction)
}
AttachmentAction::AttachmentAction(const AttachmentAction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      options_(from.options_),
      selected_options_(from.selected_options_),
      option_groups_(from.option_groups_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  style_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.style().size() > 0) {
    style_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.style_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  data_source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_source().size() > 0) {
    data_source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_source_);
  }
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.url().size() > 0) {
    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.has_confirm()) {
    confirm_ = new ::api::AttachmentConfirmationField(*from.confirm_);
  } else {
    confirm_ = NULL;
  }
  min_query_length_ = from.min_query_length_;
  // @@protoc_insertion_point(copy_constructor:api.AttachmentAction)
}

void AttachmentAction::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  style_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&confirm_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_query_length_) -
      reinterpret_cast<char*>(&confirm_)) + sizeof(min_query_length_));
}

AttachmentAction::~AttachmentAction() {
  // @@protoc_insertion_point(destructor:api.AttachmentAction)
  SharedDtor();
}

void AttachmentAction::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  style_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete confirm_;
}

void AttachmentAction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AttachmentAction::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttachmentAction& AttachmentAction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_AttachmentAction.base);
  return *internal_default_instance();
}


void AttachmentAction::Clear() {
// @@protoc_insertion_point(message_clear_start:api.AttachmentAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  options_.Clear();
  selected_options_.Clear();
  option_groups_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  style_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  data_source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && confirm_ != NULL) {
    delete confirm_;
  }
  confirm_ = NULL;
  min_query_length_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool AttachmentAction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.AttachmentAction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AttachmentAction.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AttachmentAction.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string style = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_style()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->style().data(), static_cast<int>(this->style().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AttachmentAction.style"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AttachmentAction.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AttachmentAction.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string data_source = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_data_source()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->data_source().data(), static_cast<int>(this->data_source().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AttachmentAction.data_source"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 min_query_length = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &min_query_length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .api.AttachmentActionOption options = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .api.AttachmentActionOption selected_options = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_selected_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .api.AttachmentActionOptionGroup option_groups = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_option_groups()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.AttachmentConfirmationField confirm = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_confirm()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string url = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_url()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->url().data(), static_cast<int>(this->url().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AttachmentAction.url"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.AttachmentAction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.AttachmentAction)
  return false;
#undef DO_
}

void AttachmentAction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.AttachmentAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentAction.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentAction.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // string style = 3;
  if (this->style().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->style().data(), static_cast<int>(this->style().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentAction.style");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->style(), output);
  }

  // string type = 4;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentAction.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->type(), output);
  }

  // string value = 5;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentAction.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->value(), output);
  }

  // string data_source = 6;
  if (this->data_source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_source().data(), static_cast<int>(this->data_source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentAction.data_source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->data_source(), output);
  }

  // int64 min_query_length = 7;
  if (this->min_query_length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->min_query_length(), output);
  }

  // repeated .api.AttachmentActionOption options = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8,
      this->options(static_cast<int>(i)),
      output);
  }

  // repeated .api.AttachmentActionOption selected_options = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->selected_options_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->selected_options(static_cast<int>(i)),
      output);
  }

  // repeated .api.AttachmentActionOptionGroup option_groups = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->option_groups_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10,
      this->option_groups(static_cast<int>(i)),
      output);
  }

  // .api.AttachmentConfirmationField confirm = 11;
  if (this->has_confirm()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_confirm(), output);
  }

  // string url = 12;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentAction.url");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.AttachmentAction)
}

::google::protobuf::uint8* AttachmentAction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.AttachmentAction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentAction.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentAction.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // string style = 3;
  if (this->style().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->style().data(), static_cast<int>(this->style().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentAction.style");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->style(), target);
  }

  // string type = 4;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentAction.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->type(), target);
  }

  // string value = 5;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentAction.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->value(), target);
  }

  // string data_source = 6;
  if (this->data_source().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->data_source().data(), static_cast<int>(this->data_source().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentAction.data_source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->data_source(), target);
  }

  // int64 min_query_length = 7;
  if (this->min_query_length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->min_query_length(), target);
  }

  // repeated .api.AttachmentActionOption options = 8;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->options(static_cast<int>(i)), deterministic, target);
  }

  // repeated .api.AttachmentActionOption selected_options = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->selected_options_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->selected_options(static_cast<int>(i)), deterministic, target);
  }

  // repeated .api.AttachmentActionOptionGroup option_groups = 10;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->option_groups_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->option_groups(static_cast<int>(i)), deterministic, target);
  }

  // .api.AttachmentConfirmationField confirm = 11;
  if (this->has_confirm()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_confirm(), deterministic, target);
  }

  // string url = 12;
  if (this->url().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->url().data(), static_cast<int>(this->url().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentAction.url");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->url(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.AttachmentAction)
  return target;
}

size_t AttachmentAction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.AttachmentAction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .api.AttachmentActionOption options = 8;
  {
    unsigned int count = static_cast<unsigned int>(this->options_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->options(static_cast<int>(i)));
    }
  }

  // repeated .api.AttachmentActionOption selected_options = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->selected_options_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->selected_options(static_cast<int>(i)));
    }
  }

  // repeated .api.AttachmentActionOptionGroup option_groups = 10;
  {
    unsigned int count = static_cast<unsigned int>(this->option_groups_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->option_groups(static_cast<int>(i)));
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string text = 2;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // string style = 3;
  if (this->style().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->style());
  }

  // string type = 4;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string value = 5;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // string data_source = 6;
  if (this->data_source().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->data_source());
  }

  // string url = 12;
  if (this->url().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->url());
  }

  // .api.AttachmentConfirmationField confirm = 11;
  if (this->has_confirm()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *confirm_);
  }

  // int64 min_query_length = 7;
  if (this->min_query_length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->min_query_length());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttachmentAction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.AttachmentAction)
  GOOGLE_DCHECK_NE(&from, this);
  const AttachmentAction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttachmentAction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.AttachmentAction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.AttachmentAction)
    MergeFrom(*source);
  }
}

void AttachmentAction::MergeFrom(const AttachmentAction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.AttachmentAction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  options_.MergeFrom(from.options_);
  selected_options_.MergeFrom(from.selected_options_);
  option_groups_.MergeFrom(from.option_groups_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.style().size() > 0) {

    style_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.style_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.data_source().size() > 0) {

    data_source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_source_);
  }
  if (from.url().size() > 0) {

    url_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.url_);
  }
  if (from.has_confirm()) {
    mutable_confirm()->::api::AttachmentConfirmationField::MergeFrom(from.confirm());
  }
  if (from.min_query_length() != 0) {
    set_min_query_length(from.min_query_length());
  }
}

void AttachmentAction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.AttachmentAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttachmentAction::CopyFrom(const AttachmentAction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.AttachmentAction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttachmentAction::IsInitialized() const {
  return true;
}

void AttachmentAction::Swap(AttachmentAction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttachmentAction::InternalSwap(AttachmentAction* other) {
  using std::swap;
  CastToBase(&options_)->InternalSwap(CastToBase(&other->options_));
  CastToBase(&selected_options_)->InternalSwap(CastToBase(&other->selected_options_));
  CastToBase(&option_groups_)->InternalSwap(CastToBase(&other->option_groups_));
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  style_.Swap(&other->style_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  data_source_.Swap(&other->data_source_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  url_.Swap(&other->url_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(confirm_, other->confirm_);
  swap(min_query_length_, other->min_query_length_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AttachmentAction::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AttachmentConfirmationField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttachmentConfirmationField::kTitleFieldNumber;
const int AttachmentConfirmationField::kTextFieldNumber;
const int AttachmentConfirmationField::kOkTextFieldNumber;
const int AttachmentConfirmationField::kDismissTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttachmentConfirmationField::AttachmentConfirmationField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_AttachmentConfirmationField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.AttachmentConfirmationField)
}
AttachmentConfirmationField::AttachmentConfirmationField(const AttachmentConfirmationField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  ok_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ok_text().size() > 0) {
    ok_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ok_text_);
  }
  dismiss_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.dismiss_text().size() > 0) {
    dismiss_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dismiss_text_);
  }
  // @@protoc_insertion_point(copy_constructor:api.AttachmentConfirmationField)
}

void AttachmentConfirmationField::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ok_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dismiss_text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AttachmentConfirmationField::~AttachmentConfirmationField() {
  // @@protoc_insertion_point(destructor:api.AttachmentConfirmationField)
  SharedDtor();
}

void AttachmentConfirmationField::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ok_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dismiss_text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AttachmentConfirmationField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AttachmentConfirmationField::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttachmentConfirmationField& AttachmentConfirmationField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_AttachmentConfirmationField.base);
  return *internal_default_instance();
}


void AttachmentConfirmationField::Clear() {
// @@protoc_insertion_point(message_clear_start:api.AttachmentConfirmationField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ok_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dismiss_text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AttachmentConfirmationField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.AttachmentConfirmationField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AttachmentConfirmationField.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AttachmentConfirmationField.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string ok_text = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ok_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ok_text().data(), static_cast<int>(this->ok_text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AttachmentConfirmationField.ok_text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string dismiss_text = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dismiss_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dismiss_text().data(), static_cast<int>(this->dismiss_text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AttachmentConfirmationField.dismiss_text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.AttachmentConfirmationField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.AttachmentConfirmationField)
  return false;
#undef DO_
}

void AttachmentConfirmationField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.AttachmentConfirmationField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentConfirmationField.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentConfirmationField.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->text(), output);
  }

  // string ok_text = 3;
  if (this->ok_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ok_text().data(), static_cast<int>(this->ok_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentConfirmationField.ok_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->ok_text(), output);
  }

  // string dismiss_text = 4;
  if (this->dismiss_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dismiss_text().data(), static_cast<int>(this->dismiss_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentConfirmationField.dismiss_text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->dismiss_text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.AttachmentConfirmationField)
}

::google::protobuf::uint8* AttachmentConfirmationField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.AttachmentConfirmationField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentConfirmationField.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // string text = 2;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentConfirmationField.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->text(), target);
  }

  // string ok_text = 3;
  if (this->ok_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ok_text().data(), static_cast<int>(this->ok_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentConfirmationField.ok_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->ok_text(), target);
  }

  // string dismiss_text = 4;
  if (this->dismiss_text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dismiss_text().data(), static_cast<int>(this->dismiss_text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentConfirmationField.dismiss_text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->dismiss_text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.AttachmentConfirmationField)
  return target;
}

size_t AttachmentConfirmationField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.AttachmentConfirmationField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string text = 2;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  // string ok_text = 3;
  if (this->ok_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ok_text());
  }

  // string dismiss_text = 4;
  if (this->dismiss_text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dismiss_text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttachmentConfirmationField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.AttachmentConfirmationField)
  GOOGLE_DCHECK_NE(&from, this);
  const AttachmentConfirmationField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttachmentConfirmationField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.AttachmentConfirmationField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.AttachmentConfirmationField)
    MergeFrom(*source);
  }
}

void AttachmentConfirmationField::MergeFrom(const AttachmentConfirmationField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.AttachmentConfirmationField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  if (from.ok_text().size() > 0) {

    ok_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ok_text_);
  }
  if (from.dismiss_text().size() > 0) {

    dismiss_text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dismiss_text_);
  }
}

void AttachmentConfirmationField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.AttachmentConfirmationField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttachmentConfirmationField::CopyFrom(const AttachmentConfirmationField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.AttachmentConfirmationField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttachmentConfirmationField::IsInitialized() const {
  return true;
}

void AttachmentConfirmationField::Swap(AttachmentConfirmationField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttachmentConfirmationField::InternalSwap(AttachmentConfirmationField* other) {
  using std::swap;
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  ok_text_.Swap(&other->ok_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  dismiss_text_.Swap(&other->dismiss_text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AttachmentConfirmationField::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AttachmentActionOptionGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttachmentActionOptionGroup::kTextFieldNumber;
const int AttachmentActionOptionGroup::kOptionsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttachmentActionOptionGroup::AttachmentActionOptionGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_AttachmentActionOptionGroup.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.AttachmentActionOptionGroup)
}
AttachmentActionOptionGroup::AttachmentActionOptionGroup(const AttachmentActionOptionGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      options_(from.options_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:api.AttachmentActionOptionGroup)
}

void AttachmentActionOptionGroup::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AttachmentActionOptionGroup::~AttachmentActionOptionGroup() {
  // @@protoc_insertion_point(destructor:api.AttachmentActionOptionGroup)
  SharedDtor();
}

void AttachmentActionOptionGroup::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AttachmentActionOptionGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AttachmentActionOptionGroup::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttachmentActionOptionGroup& AttachmentActionOptionGroup::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_AttachmentActionOptionGroup.base);
  return *internal_default_instance();
}


void AttachmentActionOptionGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:api.AttachmentActionOptionGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  options_.Clear();
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AttachmentActionOptionGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.AttachmentActionOptionGroup)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AttachmentActionOptionGroup.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .api.AttachmentActionOption options = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_options()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.AttachmentActionOptionGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.AttachmentActionOptionGroup)
  return false;
#undef DO_
}

void AttachmentActionOptionGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.AttachmentActionOptionGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentActionOptionGroup.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // repeated .api.AttachmentActionOption options = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->options(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.AttachmentActionOptionGroup)
}

::google::protobuf::uint8* AttachmentActionOptionGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.AttachmentActionOptionGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentActionOptionGroup.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // repeated .api.AttachmentActionOption options = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->options_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->options(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.AttachmentActionOptionGroup)
  return target;
}

size_t AttachmentActionOptionGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.AttachmentActionOptionGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .api.AttachmentActionOption options = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->options_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->options(static_cast<int>(i)));
    }
  }

  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttachmentActionOptionGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.AttachmentActionOptionGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const AttachmentActionOptionGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttachmentActionOptionGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.AttachmentActionOptionGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.AttachmentActionOptionGroup)
    MergeFrom(*source);
  }
}

void AttachmentActionOptionGroup::MergeFrom(const AttachmentActionOptionGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.AttachmentActionOptionGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  options_.MergeFrom(from.options_);
  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void AttachmentActionOptionGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.AttachmentActionOptionGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttachmentActionOptionGroup::CopyFrom(const AttachmentActionOptionGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.AttachmentActionOptionGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttachmentActionOptionGroup::IsInitialized() const {
  return true;
}

void AttachmentActionOptionGroup::Swap(AttachmentActionOptionGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttachmentActionOptionGroup::InternalSwap(AttachmentActionOptionGroup* other) {
  using std::swap;
  CastToBase(&options_)->InternalSwap(CastToBase(&other->options_));
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AttachmentActionOptionGroup::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AttachmentActionOption::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttachmentActionOption::kTitleFieldNumber;
const int AttachmentActionOption::kValueFieldNumber;
const int AttachmentActionOption::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttachmentActionOption::AttachmentActionOption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_AttachmentActionOption.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.AttachmentActionOption)
}
AttachmentActionOption::AttachmentActionOption(const AttachmentActionOption& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  // @@protoc_insertion_point(copy_constructor:api.AttachmentActionOption)
}

void AttachmentActionOption::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AttachmentActionOption::~AttachmentActionOption() {
  // @@protoc_insertion_point(destructor:api.AttachmentActionOption)
  SharedDtor();
}

void AttachmentActionOption::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AttachmentActionOption::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AttachmentActionOption::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttachmentActionOption& AttachmentActionOption::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_AttachmentActionOption.base);
  return *internal_default_instance();
}


void AttachmentActionOption::Clear() {
// @@protoc_insertion_point(message_clear_start:api.AttachmentActionOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool AttachmentActionOption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.AttachmentActionOption)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AttachmentActionOption.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AttachmentActionOption.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AttachmentActionOption.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.AttachmentActionOption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.AttachmentActionOption)
  return false;
#undef DO_
}

void AttachmentActionOption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.AttachmentActionOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentActionOption.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentActionOption.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentActionOption.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.AttachmentActionOption)
}

::google::protobuf::uint8* AttachmentActionOption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.AttachmentActionOption)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentActionOption.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentActionOption.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentActionOption.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.AttachmentActionOption)
  return target;
}

size_t AttachmentActionOption::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.AttachmentActionOption)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttachmentActionOption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.AttachmentActionOption)
  GOOGLE_DCHECK_NE(&from, this);
  const AttachmentActionOption* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttachmentActionOption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.AttachmentActionOption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.AttachmentActionOption)
    MergeFrom(*source);
  }
}

void AttachmentActionOption::MergeFrom(const AttachmentActionOption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.AttachmentActionOption)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
}

void AttachmentActionOption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.AttachmentActionOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttachmentActionOption::CopyFrom(const AttachmentActionOption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.AttachmentActionOption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttachmentActionOption::IsInitialized() const {
  return true;
}

void AttachmentActionOption::Swap(AttachmentActionOption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttachmentActionOption::InternalSwap(AttachmentActionOption* other) {
  using std::swap;
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AttachmentActionOption::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AttachmentField::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AttachmentField::kTitleFieldNumber;
const int AttachmentField::kValueFieldNumber;
const int AttachmentField::kShortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AttachmentField::AttachmentField()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_AttachmentField.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.AttachmentField)
}
AttachmentField::AttachmentField(const AttachmentField& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  short__ = from.short__;
  // @@protoc_insertion_point(copy_constructor:api.AttachmentField)
}

void AttachmentField::SharedCtor() {
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short__ = false;
}

AttachmentField::~AttachmentField() {
  // @@protoc_insertion_point(destructor:api.AttachmentField)
  SharedDtor();
}

void AttachmentField::SharedDtor() {
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AttachmentField::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AttachmentField::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AttachmentField& AttachmentField::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_AttachmentField.base);
  return *internal_default_instance();
}


void AttachmentField::Clear() {
// @@protoc_insertion_point(message_clear_start:api.AttachmentField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  short__ = false;
  _internal_metadata_.Clear();
}

bool AttachmentField::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.AttachmentField)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string title = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_title()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->title().data(), static_cast<int>(this->title().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AttachmentField.title"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AttachmentField.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool short = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &short__)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.AttachmentField)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.AttachmentField)
  return false;
#undef DO_
}

void AttachmentField::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.AttachmentField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentField.title");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->title(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentField.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  // bool short = 3;
  if (this->short_() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->short_(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.AttachmentField)
}

::google::protobuf::uint8* AttachmentField::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.AttachmentField)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string title = 1;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->title().data(), static_cast<int>(this->title().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentField.title");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->title(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AttachmentField.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // bool short = 3;
  if (this->short_() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->short_(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.AttachmentField)
  return target;
}

size_t AttachmentField::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.AttachmentField)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string title = 1;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->title());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  // bool short = 3;
  if (this->short_() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AttachmentField::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.AttachmentField)
  GOOGLE_DCHECK_NE(&from, this);
  const AttachmentField* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AttachmentField>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.AttachmentField)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.AttachmentField)
    MergeFrom(*source);
  }
}

void AttachmentField::MergeFrom(const AttachmentField& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.AttachmentField)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.short_() != 0) {
    set_short_(from.short_());
  }
}

void AttachmentField::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.AttachmentField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AttachmentField::CopyFrom(const AttachmentField& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.AttachmentField)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AttachmentField::IsInitialized() const {
  return true;
}

void AttachmentField::Swap(AttachmentField* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AttachmentField::InternalSwap(AttachmentField* other) {
  using std::swap;
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(short__, other->short__);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AttachmentField::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JSON::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JSON::kDataFieldNumber;
const int JSON::kSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JSON::JSON()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_JSON.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.JSON)
}
JSON::JSON(const JSON& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:api.JSON)
}

void JSON::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = GOOGLE_LONGLONG(0);
}

JSON::~JSON() {
  // @@protoc_insertion_point(destructor:api.JSON)
  SharedDtor();
}

void JSON::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void JSON::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JSON::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JSON& JSON::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_JSON.base);
  return *internal_default_instance();
}


void JSON::Clear() {
// @@protoc_insertion_point(message_clear_start:api.JSON)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool JSON::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.JSON)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.JSON)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.JSON)
  return false;
#undef DO_
}

void JSON::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.JSON)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  // int64 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.JSON)
}

::google::protobuf::uint8* JSON::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.JSON)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // int64 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->size(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.JSON)
  return target;
}

size_t JSON::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.JSON)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // int64 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JSON::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.JSON)
  GOOGLE_DCHECK_NE(&from, this);
  const JSON* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JSON>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.JSON)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.JSON)
    MergeFrom(*source);
  }
}

void JSON::MergeFrom(const JSON& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.JSON)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void JSON::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.JSON)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JSON::CopyFrom(const JSON& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.JSON)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSON::IsInitialized() const {
  return true;
}

void JSON::Swap(JSON* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JSON::InternalSwap(JSON* other) {
  using std::swap;
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JSON::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

File_TagsEntry_DoNotUse::File_TagsEntry_DoNotUse() {}
File_TagsEntry_DoNotUse::File_TagsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void File_TagsEntry_DoNotUse::MergeFrom(const File_TagsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata File_TagsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[45];
}
void File_TagsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void File::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int File::kDataFieldNumber;
const int File::kSizeFieldNumber;
const int File::kNameFieldNumber;
const int File::kTagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

File::File()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_File.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.File)
}
File::File(const File& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tags_.MergeFrom(from.tags_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  size_ = from.size_;
  // @@protoc_insertion_point(copy_constructor:api.File)
}

void File::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = GOOGLE_LONGLONG(0);
}

File::~File() {
  // @@protoc_insertion_point(destructor:api.File)
  SharedDtor();
}

void File::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void File::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* File::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const File& File::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_File.base);
  return *internal_default_instance();
}


void File::Clear() {
// @@protoc_insertion_point(message_clear_start:api.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  size_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool File::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.File)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 size = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &size_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.File.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> tags = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          File_TagsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              File_TagsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&tags_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.File.TagsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.File.TagsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.File)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.File)
  return false;
#undef DO_
}

void File::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  // int64 size = 2;
  if (this->size() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->size(), output);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.File.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // map<string, string> tags = 4;
  if (!this->tags().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.File.TagsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.File.TagsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->tags().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tags().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<File_TagsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tags_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<File_TagsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it) {
        entry.reset(tags_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            4, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.File)
}

::google::protobuf::uint8* File::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.File)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // int64 size = 2;
  if (this->size() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->size(), target);
  }

  // string name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.File.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // map<string, string> tags = 4;
  if (!this->tags().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.File.TagsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.File.TagsEntry.value");
      }
    };

    if (deterministic &&
        this->tags().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tags().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<File_TagsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tags_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<File_TagsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it) {
        entry.reset(tags_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       4, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.File)
  return target;
}

size_t File::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.File)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, string> tags = 4;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  {
    ::std::unique_ptr<File_TagsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->tags().begin();
        it != this->tags().end(); ++it) {
      entry.reset(tags_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // string name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // int64 size = 2;
  if (this->size() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->size());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void File::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.File)
  GOOGLE_DCHECK_NE(&from, this);
  const File* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const File>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.File)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.File)
    MergeFrom(*source);
  }
}

void File::MergeFrom(const File& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.File)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.size() != 0) {
    set_size(from.size());
  }
}

void File::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void File::CopyFrom(const File& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.File)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool File::IsInitialized() const {
  return true;
}

void File::Swap(File* other) {
  if (other == this) return;
  InternalSwap(other);
}
void File::InternalSwap(File* other) {
  using std::swap;
  tags_.Swap(&other->tags_);
  data_.Swap(&other->data_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(size_, other->size_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata File::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Product_TagsEntry_DoNotUse::Product_TagsEntry_DoNotUse() {}
Product_TagsEntry_DoNotUse::Product_TagsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Product_TagsEntry_DoNotUse::MergeFrom(const Product_TagsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Product_TagsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[47];
}
void Product_TagsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Product::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Product::kNameFieldNumber;
const int Product::kAmountFieldNumber;
const int Product::kDescriptionFieldNumber;
const int Product::kFilesFieldNumber;
const int Product::kTagsFieldNumber;
const int Product::kAvailableFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Product::Product()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Product.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Product)
}
Product::Product(const Product& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      files_(from.files_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tags_.MergeFrom(from.tags_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.description().size() > 0) {
    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  ::memcpy(&amount_, &from.amount_,
    static_cast<size_t>(reinterpret_cast<char*>(&available_) -
    reinterpret_cast<char*>(&amount_)) + sizeof(available_));
  // @@protoc_insertion_point(copy_constructor:api.Product)
}

void Product::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&available_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(available_));
}

Product::~Product() {
  // @@protoc_insertion_point(destructor:api.Product)
  SharedDtor();
}

void Product::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Product::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Product::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Product& Product::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Product.base);
  return *internal_default_instance();
}


void Product::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  files_.Clear();
  tags_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&amount_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&available_) -
      reinterpret_cast<char*>(&amount_)) + sizeof(available_));
  _internal_metadata_.Clear();
}

bool Product::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Product)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Product.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 amount = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &amount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Product.description"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .api.File files = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_files()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, string> tags = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          Product_TagsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Product_TagsEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&tags_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Product.TagsEntry.key"));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Product.TagsEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool available = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &available_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Product)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Product)
  return false;
#undef DO_
}

void Product::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Product.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->amount(), output);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Product.description");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->description(), output);
  }

  // repeated .api.File files = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->files_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->files(static_cast<int>(i)),
      output);
  }

  // map<string, string> tags = 5;
  if (!this->tags().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.Product.TagsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.Product.TagsEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->tags().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tags().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Product_TagsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tags_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Product_TagsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it) {
        entry.reset(tags_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // bool available = 6;
  if (this->available() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->available(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Product)
}

::google::protobuf::uint8* Product::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Product.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->amount(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->description().data(), static_cast<int>(this->description().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Product.description");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->description(), target);
  }

  // repeated .api.File files = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->files_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->files(static_cast<int>(i)), deterministic, target);
  }

  // map<string, string> tags = 5;
  if (!this->tags().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.Product.TagsEntry.key");
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "api.Product.TagsEntry.value");
      }
    };

    if (deterministic &&
        this->tags().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->tags().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<Product_TagsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(tags_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<Product_TagsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->tags().begin();
          it != this->tags().end(); ++it) {
        entry.reset(tags_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       5, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // bool available = 6;
  if (this->available() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->available(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Product)
  return target;
}

size_t Product::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Product)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .api.File files = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->files_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->files(static_cast<int>(i)));
    }
  }

  // map<string, string> tags = 5;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->tags_size());
  {
    ::std::unique_ptr<Product_TagsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->tags().begin();
        it != this->tags().end(); ++it) {
      entry.reset(tags_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->description());
  }

  // int64 amount = 2;
  if (this->amount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->amount());
  }

  // bool available = 6;
  if (this->available() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Product::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Product)
  GOOGLE_DCHECK_NE(&from, this);
  const Product* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Product>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Product)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Product)
    MergeFrom(*source);
  }
}

void Product::MergeFrom(const Product& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Product)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  files_.MergeFrom(from.files_);
  tags_.MergeFrom(from.tags_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.description().size() > 0) {

    description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.description_);
  }
  if (from.amount() != 0) {
    set_amount(from.amount());
  }
  if (from.available() != 0) {
    set_available(from.available());
  }
}

void Product::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Product::CopyFrom(const Product& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Product::IsInitialized() const {
  return true;
}

void Product::Swap(Product* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Product::InternalSwap(Product* other) {
  using std::swap;
  CastToBase(&files_)->InternalSwap(CastToBase(&other->files_));
  tags_.Swap(&other->tags_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  description_.Swap(&other->description_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(amount_, other->amount_);
  swap(available_, other->available_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Product::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::RefundRequest* Arena::CreateMaybeMessage< ::api::RefundRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::RefundRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::ChargeRequest* Arena::CreateMaybeMessage< ::api::ChargeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::ChargeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::CancelSubscriptionRequest* Arena::CreateMaybeMessage< ::api::CancelSubscriptionRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::CancelSubscriptionRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::CreatePlanRequest* Arena::CreateMaybeMessage< ::api::CreatePlanRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::CreatePlanRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::SMSRequest* Arena::CreateMaybeMessage< ::api::SMSRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::SMSRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::CallRequest* Arena::CreateMaybeMessage< ::api::CallRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::CallRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::MMSRequest* Arena::CreateMaybeMessage< ::api::MMSRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::MMSRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::EmailRequest* Arena::CreateMaybeMessage< ::api::EmailRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::EmailRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::CustomerRequest* Arena::CreateMaybeMessage< ::api::CustomerRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::CustomerRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::UpdateCustomerRequest* Arena::CreateMaybeMessage< ::api::UpdateCustomerRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::UpdateCustomerRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::SubscribeCustomerRequest* Arena::CreateMaybeMessage< ::api::SubscribeCustomerRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::SubscribeCustomerRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::AddAccountRequest* Arena::CreateMaybeMessage< ::api::AddAccountRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::AddAccountRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Account* Arena::CreateMaybeMessage< ::api::Account >(Arena* arena) {
  return Arena::CreateInternal< ::api::Account >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::User* Arena::CreateMaybeMessage< ::api::User >(Arena* arena) {
  return Arena::CreateInternal< ::api::User >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Profile* Arena::CreateMaybeMessage< ::api::Profile >(Arena* arena) {
  return Arena::CreateInternal< ::api::Profile >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Empty* Arena::CreateMaybeMessage< ::api::Empty >(Arena* arena) {
  return Arena::CreateInternal< ::api::Empty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Customer_MetadataEntry_DoNotUse* Arena::CreateMaybeMessage< ::api::Customer_MetadataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::api::Customer_MetadataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Customer* Arena::CreateMaybeMessage< ::api::Customer >(Arena* arena) {
  return Arena::CreateInternal< ::api::Customer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Card* Arena::CreateMaybeMessage< ::api::Card >(Arena* arena) {
  return Arena::CreateInternal< ::api::Card >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::BankAccount* Arena::CreateMaybeMessage< ::api::BankAccount >(Arena* arena) {
  return Arena::CreateInternal< ::api::BankAccount >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Address* Arena::CreateMaybeMessage< ::api::Address >(Arena* arena) {
  return Arena::CreateInternal< ::api::Address >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::ChannelReminder* Arena::CreateMaybeMessage< ::api::ChannelReminder >(Arena* arena) {
  return Arena::CreateInternal< ::api::ChannelReminder >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::UserReminder* Arena::CreateMaybeMessage< ::api::UserReminder >(Arena* arena) {
  return Arena::CreateInternal< ::api::UserReminder >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::ItemRef* Arena::CreateMaybeMessage< ::api::ItemRef >(Arena* arena) {
  return Arena::CreateInternal< ::api::ItemRef >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Star* Arena::CreateMaybeMessage< ::api::Star >(Arena* arena) {
  return Arena::CreateInternal< ::api::Star >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Pin* Arena::CreateMaybeMessage< ::api::Pin >(Arena* arena) {
  return Arena::CreateInternal< ::api::Pin >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::SignedKey* Arena::CreateMaybeMessage< ::api::SignedKey >(Arena* arena) {
  return Arena::CreateInternal< ::api::SignedKey >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::UnImplemented* Arena::CreateMaybeMessage< ::api::UnImplemented >(Arena* arena) {
  return Arena::CreateInternal< ::api::UnImplemented >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Access* Arena::CreateMaybeMessage< ::api::Access >(Arena* arena) {
  return Arena::CreateInternal< ::api::Access >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::StandardClaims* Arena::CreateMaybeMessage< ::api::StandardClaims >(Arena* arena) {
  return Arena::CreateInternal< ::api::StandardClaims >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::LogConfig* Arena::CreateMaybeMessage< ::api::LogConfig >(Arena* arena) {
  return Arena::CreateInternal< ::api::LogConfig >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::EmailAddress* Arena::CreateMaybeMessage< ::api::EmailAddress >(Arena* arena) {
  return Arena::CreateInternal< ::api::EmailAddress >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Email* Arena::CreateMaybeMessage< ::api::Email >(Arena* arena) {
  return Arena::CreateInternal< ::api::Email >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::RecipientEmail* Arena::CreateMaybeMessage< ::api::RecipientEmail >(Arena* arena) {
  return Arena::CreateInternal< ::api::RecipientEmail >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::SMS* Arena::CreateMaybeMessage< ::api::SMS >(Arena* arena) {
  return Arena::CreateInternal< ::api::SMS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Call* Arena::CreateMaybeMessage< ::api::Call >(Arena* arena) {
  return Arena::CreateInternal< ::api::Call >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Fax* Arena::CreateMaybeMessage< ::api::Fax >(Arena* arena) {
  return Arena::CreateInternal< ::api::Fax >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::LogHook* Arena::CreateMaybeMessage< ::api::LogHook >(Arena* arena) {
  return Arena::CreateInternal< ::api::LogHook >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Attachment* Arena::CreateMaybeMessage< ::api::Attachment >(Arena* arena) {
  return Arena::CreateInternal< ::api::Attachment >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::AttachmentAction* Arena::CreateMaybeMessage< ::api::AttachmentAction >(Arena* arena) {
  return Arena::CreateInternal< ::api::AttachmentAction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::AttachmentConfirmationField* Arena::CreateMaybeMessage< ::api::AttachmentConfirmationField >(Arena* arena) {
  return Arena::CreateInternal< ::api::AttachmentConfirmationField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::AttachmentActionOptionGroup* Arena::CreateMaybeMessage< ::api::AttachmentActionOptionGroup >(Arena* arena) {
  return Arena::CreateInternal< ::api::AttachmentActionOptionGroup >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::AttachmentActionOption* Arena::CreateMaybeMessage< ::api::AttachmentActionOption >(Arena* arena) {
  return Arena::CreateInternal< ::api::AttachmentActionOption >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::AttachmentField* Arena::CreateMaybeMessage< ::api::AttachmentField >(Arena* arena) {
  return Arena::CreateInternal< ::api::AttachmentField >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::JSON* Arena::CreateMaybeMessage< ::api::JSON >(Arena* arena) {
  return Arena::CreateInternal< ::api::JSON >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::File_TagsEntry_DoNotUse* Arena::CreateMaybeMessage< ::api::File_TagsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::api::File_TagsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::File* Arena::CreateMaybeMessage< ::api::File >(Arena* arena) {
  return Arena::CreateInternal< ::api::File >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Product_TagsEntry_DoNotUse* Arena::CreateMaybeMessage< ::api::Product_TagsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::api::Product_TagsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Product* Arena::CreateMaybeMessage< ::api::Product >(Arena* arena) {
  return Arena::CreateInternal< ::api::Product >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
