// Code generated by protoc-gen-go. DO NOT EDIT.
// source: net/net.proto

package net

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Network struct {
	Network              string   `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Network) Reset()         { *m = Network{} }
func (m *Network) String() string { return proto.CompactTextString(m) }
func (*Network) ProtoMessage()    {}
func (*Network) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{0}
}

func (m *Network) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Network.Unmarshal(m, b)
}
func (m *Network) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Network.Marshal(b, m, deterministic)
}
func (m *Network) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Network.Merge(m, src)
}
func (m *Network) XXX_Size() int {
	return xxx_messageInfo_Network.Size(m)
}
func (m *Network) XXX_DiscardUnknown() {
	xxx_messageInfo_Network.DiscardUnknown(m)
}

var xxx_messageInfo_Network proto.InternalMessageInfo

func (m *Network) GetNetwork() string {
	if m != nil {
		return m.Network
	}
	return ""
}

func (m *Network) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type ConnInfo struct {
	ServiceId            uint32   `protobuf:"varint,1,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	Network              *Network `protobuf:"bytes,2,opt,name=network,proto3" json:"network,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnInfo) Reset()         { *m = ConnInfo{} }
func (m *ConnInfo) String() string { return proto.CompactTextString(m) }
func (*ConnInfo) ProtoMessage()    {}
func (*ConnInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{1}
}

func (m *ConnInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnInfo.Unmarshal(m, b)
}
func (m *ConnInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnInfo.Marshal(b, m, deterministic)
}
func (m *ConnInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnInfo.Merge(m, src)
}
func (m *ConnInfo) XXX_Size() int {
	return xxx_messageInfo_ConnInfo.Size(m)
}
func (m *ConnInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ConnInfo proto.InternalMessageInfo

func (m *ConnInfo) GetServiceId() uint32 {
	if m != nil {
		return m.ServiceId
	}
	return 0
}

func (m *ConnInfo) GetNetwork() *Network {
	if m != nil {
		return m.Network
	}
	return nil
}

type Dataset struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Scope                string   `protobuf:"bytes,2,opt,name=scope,proto3" json:"scope,omitempty"`
	Definition           string   `protobuf:"bytes,3,opt,name=definition,proto3" json:"definition,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dataset) Reset()         { *m = Dataset{} }
func (m *Dataset) String() string { return proto.CompactTextString(m) }
func (*Dataset) ProtoMessage()    {}
func (*Dataset) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{2}
}

func (m *Dataset) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dataset.Unmarshal(m, b)
}
func (m *Dataset) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dataset.Marshal(b, m, deterministic)
}
func (m *Dataset) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dataset.Merge(m, src)
}
func (m *Dataset) XXX_Size() int {
	return xxx_messageInfo_Dataset.Size(m)
}
func (m *Dataset) XXX_DiscardUnknown() {
	xxx_messageInfo_Dataset.DiscardUnknown(m)
}

var xxx_messageInfo_Dataset proto.InternalMessageInfo

func (m *Dataset) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Dataset) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *Dataset) GetDefinition() string {
	if m != nil {
		return m.Definition
	}
	return ""
}

type HostLocation struct {
	City                 string   `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	RegionCode           string   `protobuf:"bytes,2,opt,name=region_code,json=regionCode,proto3" json:"region_code,omitempty"`
	AreaCode             int64    `protobuf:"varint,3,opt,name=area_code,json=areaCode,proto3" json:"area_code,omitempty"`
	Latitude             float64  `protobuf:"fixed64,4,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            float64  `protobuf:"fixed64,5,opt,name=longitude,proto3" json:"longitude,omitempty"`
	CountryName          string   `protobuf:"bytes,6,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty"`
	CountryCode3         string   `protobuf:"bytes,7,opt,name=country_code3,json=countryCode3,proto3" json:"country_code3,omitempty"`
	PostalCode           string   `protobuf:"bytes,8,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	DmaCode              int64    `protobuf:"varint,9,opt,name=dma_code,json=dmaCode,proto3" json:"dma_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostLocation) Reset()         { *m = HostLocation{} }
func (m *HostLocation) String() string { return proto.CompactTextString(m) }
func (*HostLocation) ProtoMessage()    {}
func (*HostLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{3}
}

func (m *HostLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostLocation.Unmarshal(m, b)
}
func (m *HostLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostLocation.Marshal(b, m, deterministic)
}
func (m *HostLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostLocation.Merge(m, src)
}
func (m *HostLocation) XXX_Size() int {
	return xxx_messageInfo_HostLocation.Size(m)
}
func (m *HostLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_HostLocation.DiscardUnknown(m)
}

var xxx_messageInfo_HostLocation proto.InternalMessageInfo

func (m *HostLocation) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *HostLocation) GetRegionCode() string {
	if m != nil {
		return m.RegionCode
	}
	return ""
}

func (m *HostLocation) GetAreaCode() int64 {
	if m != nil {
		return m.AreaCode
	}
	return 0
}

func (m *HostLocation) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *HostLocation) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *HostLocation) GetCountryName() string {
	if m != nil {
		return m.CountryName
	}
	return ""
}

func (m *HostLocation) GetCountryCode3() string {
	if m != nil {
		return m.CountryCode3
	}
	return ""
}

func (m *HostLocation) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *HostLocation) GetDmaCode() int64 {
	if m != nil {
		return m.DmaCode
	}
	return 0
}

type HostCertificateAttributes struct {
	C                    string   `protobuf:"bytes,1,opt,name=C,proto3" json:"C,omitempty"`
	CN                   string   `protobuf:"bytes,2,opt,name=CN,proto3" json:"CN,omitempty"`
	L                    string   `protobuf:"bytes,3,opt,name=L,proto3" json:"L,omitempty"`
	O                    string   `protobuf:"bytes,4,opt,name=O,proto3" json:"O,omitempty"`
	ST                   string   `protobuf:"bytes,5,opt,name=ST,proto3" json:"ST,omitempty"`
	ON                   string   `protobuf:"bytes,6,opt,name=ON,proto3" json:"ON,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostCertificateAttributes) Reset()         { *m = HostCertificateAttributes{} }
func (m *HostCertificateAttributes) String() string { return proto.CompactTextString(m) }
func (*HostCertificateAttributes) ProtoMessage()    {}
func (*HostCertificateAttributes) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{4}
}

func (m *HostCertificateAttributes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostCertificateAttributes.Unmarshal(m, b)
}
func (m *HostCertificateAttributes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostCertificateAttributes.Marshal(b, m, deterministic)
}
func (m *HostCertificateAttributes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostCertificateAttributes.Merge(m, src)
}
func (m *HostCertificateAttributes) XXX_Size() int {
	return xxx_messageInfo_HostCertificateAttributes.Size(m)
}
func (m *HostCertificateAttributes) XXX_DiscardUnknown() {
	xxx_messageInfo_HostCertificateAttributes.DiscardUnknown(m)
}

var xxx_messageInfo_HostCertificateAttributes proto.InternalMessageInfo

func (m *HostCertificateAttributes) GetC() string {
	if m != nil {
		return m.C
	}
	return ""
}

func (m *HostCertificateAttributes) GetCN() string {
	if m != nil {
		return m.CN
	}
	return ""
}

func (m *HostCertificateAttributes) GetL() string {
	if m != nil {
		return m.L
	}
	return ""
}

func (m *HostCertificateAttributes) GetO() string {
	if m != nil {
		return m.O
	}
	return ""
}

func (m *HostCertificateAttributes) GetST() string {
	if m != nil {
		return m.ST
	}
	return ""
}

func (m *HostCertificateAttributes) GetON() string {
	if m != nil {
		return m.ON
	}
	return ""
}

type HostCertificate struct {
	SigAlg               string                     `protobuf:"bytes,1,opt,name=sig_alg,json=sigAlg,proto3" json:"sig_alg,omitempty"`
	Expired              bool                       `protobuf:"varint,2,opt,name=expired,proto3" json:"expired,omitempty"`
	Version              int64                      `protobuf:"varint,3,opt,name=version,proto3" json:"version,omitempty"`
	Serial               int64                      `protobuf:"varint,4,opt,name=serial,proto3" json:"serial,omitempty"`
	Issued               string                     `protobuf:"bytes,5,opt,name=issued,proto3" json:"issued,omitempty"`
	Expires              string                     `protobuf:"bytes,6,opt,name=expires,proto3" json:"expires,omitempty"`
	Fingerprint          map[string]string          `protobuf:"bytes,7,rep,name=fingerprint,proto3" json:"fingerprint,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Issuer               *HostCertificateAttributes `protobuf:"bytes,8,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Subject              *HostCertificateAttributes `protobuf:"bytes,9,opt,name=subject,proto3" json:"subject,omitempty"`
	Pubkey               *HostCertificateAttributes `protobuf:"bytes,10,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	Extensions           *HostCertificateAttributes `protobuf:"bytes,11,opt,name=extensions,proto3" json:"extensions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *HostCertificate) Reset()         { *m = HostCertificate{} }
func (m *HostCertificate) String() string { return proto.CompactTextString(m) }
func (*HostCertificate) ProtoMessage()    {}
func (*HostCertificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{5}
}

func (m *HostCertificate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostCertificate.Unmarshal(m, b)
}
func (m *HostCertificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostCertificate.Marshal(b, m, deterministic)
}
func (m *HostCertificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostCertificate.Merge(m, src)
}
func (m *HostCertificate) XXX_Size() int {
	return xxx_messageInfo_HostCertificate.Size(m)
}
func (m *HostCertificate) XXX_DiscardUnknown() {
	xxx_messageInfo_HostCertificate.DiscardUnknown(m)
}

var xxx_messageInfo_HostCertificate proto.InternalMessageInfo

func (m *HostCertificate) GetSigAlg() string {
	if m != nil {
		return m.SigAlg
	}
	return ""
}

func (m *HostCertificate) GetExpired() bool {
	if m != nil {
		return m.Expired
	}
	return false
}

func (m *HostCertificate) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *HostCertificate) GetSerial() int64 {
	if m != nil {
		return m.Serial
	}
	return 0
}

func (m *HostCertificate) GetIssued() string {
	if m != nil {
		return m.Issued
	}
	return ""
}

func (m *HostCertificate) GetExpires() string {
	if m != nil {
		return m.Expires
	}
	return ""
}

func (m *HostCertificate) GetFingerprint() map[string]string {
	if m != nil {
		return m.Fingerprint
	}
	return nil
}

func (m *HostCertificate) GetIssuer() *HostCertificateAttributes {
	if m != nil {
		return m.Issuer
	}
	return nil
}

func (m *HostCertificate) GetSubject() *HostCertificateAttributes {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *HostCertificate) GetPubkey() *HostCertificateAttributes {
	if m != nil {
		return m.Pubkey
	}
	return nil
}

func (m *HostCertificate) GetExtensions() *HostCertificateAttributes {
	if m != nil {
		return m.Extensions
	}
	return nil
}

type HostTLSExtEntry struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostTLSExtEntry) Reset()         { *m = HostTLSExtEntry{} }
func (m *HostTLSExtEntry) String() string { return proto.CompactTextString(m) }
func (*HostTLSExtEntry) ProtoMessage()    {}
func (*HostTLSExtEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{6}
}

func (m *HostTLSExtEntry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostTLSExtEntry.Unmarshal(m, b)
}
func (m *HostTLSExtEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostTLSExtEntry.Marshal(b, m, deterministic)
}
func (m *HostTLSExtEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostTLSExtEntry.Merge(m, src)
}
func (m *HostTLSExtEntry) XXX_Size() int {
	return xxx_messageInfo_HostTLSExtEntry.Size(m)
}
func (m *HostTLSExtEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_HostTLSExtEntry.DiscardUnknown(m)
}

var xxx_messageInfo_HostTLSExtEntry proto.InternalMessageInfo

func (m *HostTLSExtEntry) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *HostTLSExtEntry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HostCipher struct {
	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Bits                 int64    `protobuf:"varint,2,opt,name=bits,proto3" json:"bits,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostCipher) Reset()         { *m = HostCipher{} }
func (m *HostCipher) String() string { return proto.CompactTextString(m) }
func (*HostCipher) ProtoMessage()    {}
func (*HostCipher) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{7}
}

func (m *HostCipher) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostCipher.Unmarshal(m, b)
}
func (m *HostCipher) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostCipher.Marshal(b, m, deterministic)
}
func (m *HostCipher) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostCipher.Merge(m, src)
}
func (m *HostCipher) XXX_Size() int {
	return xxx_messageInfo_HostCipher.Size(m)
}
func (m *HostCipher) XXX_DiscardUnknown() {
	xxx_messageInfo_HostCipher.DiscardUnknown(m)
}

var xxx_messageInfo_HostCipher proto.InternalMessageInfo

func (m *HostCipher) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *HostCipher) GetBits() int64 {
	if m != nil {
		return m.Bits
	}
	return 0
}

func (m *HostCipher) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HostSSL struct {
	Versions             []string           `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
	Chain                []string           `protobuf:"bytes,2,rep,name=chain,proto3" json:"chain,omitempty"`
	Dhparams             *HostDHParams      `protobuf:"bytes,3,opt,name=dhparams,proto3" json:"dhparams,omitempty"`
	Tlsext               []*HostTLSExtEntry `protobuf:"bytes,4,rep,name=tlsext,proto3" json:"tlsext,omitempty"`
	Cipher               *HostCipher        `protobuf:"bytes,5,opt,name=cipher,proto3" json:"cipher,omitempty"`
	Cert                 *HostCertificate   `protobuf:"bytes,6,opt,name=cert,proto3" json:"cert,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *HostSSL) Reset()         { *m = HostSSL{} }
func (m *HostSSL) String() string { return proto.CompactTextString(m) }
func (*HostSSL) ProtoMessage()    {}
func (*HostSSL) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{8}
}

func (m *HostSSL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostSSL.Unmarshal(m, b)
}
func (m *HostSSL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostSSL.Marshal(b, m, deterministic)
}
func (m *HostSSL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostSSL.Merge(m, src)
}
func (m *HostSSL) XXX_Size() int {
	return xxx_messageInfo_HostSSL.Size(m)
}
func (m *HostSSL) XXX_DiscardUnknown() {
	xxx_messageInfo_HostSSL.DiscardUnknown(m)
}

var xxx_messageInfo_HostSSL proto.InternalMessageInfo

func (m *HostSSL) GetVersions() []string {
	if m != nil {
		return m.Versions
	}
	return nil
}

func (m *HostSSL) GetChain() []string {
	if m != nil {
		return m.Chain
	}
	return nil
}

func (m *HostSSL) GetDhparams() *HostDHParams {
	if m != nil {
		return m.Dhparams
	}
	return nil
}

func (m *HostSSL) GetTlsext() []*HostTLSExtEntry {
	if m != nil {
		return m.Tlsext
	}
	return nil
}

func (m *HostSSL) GetCipher() *HostCipher {
	if m != nil {
		return m.Cipher
	}
	return nil
}

func (m *HostSSL) GetCert() *HostCertificate {
	if m != nil {
		return m.Cert
	}
	return nil
}

type HostDHParams struct {
	Prime                string   `protobuf:"bytes,1,opt,name=prime,proto3" json:"prime,omitempty"`
	PublicKey            string   `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Bits                 int64    `protobuf:"varint,3,opt,name=bits,proto3" json:"bits,omitempty"`
	Generator            string   `protobuf:"bytes,4,opt,name=generator,proto3" json:"generator,omitempty"`
	Fingerprint          string   `protobuf:"bytes,5,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HostDHParams) Reset()         { *m = HostDHParams{} }
func (m *HostDHParams) String() string { return proto.CompactTextString(m) }
func (*HostDHParams) ProtoMessage()    {}
func (*HostDHParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{9}
}

func (m *HostDHParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostDHParams.Unmarshal(m, b)
}
func (m *HostDHParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostDHParams.Marshal(b, m, deterministic)
}
func (m *HostDHParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostDHParams.Merge(m, src)
}
func (m *HostDHParams) XXX_Size() int {
	return xxx_messageInfo_HostDHParams.Size(m)
}
func (m *HostDHParams) XXX_DiscardUnknown() {
	xxx_messageInfo_HostDHParams.DiscardUnknown(m)
}

var xxx_messageInfo_HostDHParams proto.InternalMessageInfo

func (m *HostDHParams) GetPrime() string {
	if m != nil {
		return m.Prime
	}
	return ""
}

func (m *HostDHParams) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *HostDHParams) GetBits() int64 {
	if m != nil {
		return m.Bits
	}
	return 0
}

func (m *HostDHParams) GetGenerator() string {
	if m != nil {
		return m.Generator
	}
	return ""
}

func (m *HostDHParams) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

type HostData struct {
	Product              string            `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Hostnames            []string          `protobuf:"bytes,2,rep,name=hostnames,proto3" json:"hostnames,omitempty"`
	Version              string            `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Title                string            `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Ssl                  *HostSSL          `protobuf:"bytes,5,opt,name=ssl,proto3" json:"ssl,omitempty"`
	IpStr                []byte            `protobuf:"bytes,6,opt,name=ip_str,json=ipStr,proto3" json:"ip_str,omitempty"`
	Os                   string            `protobuf:"bytes,7,opt,name=os,proto3" json:"os,omitempty"`
	Org                  string            `protobuf:"bytes,8,opt,name=org,proto3" json:"org,omitempty"`
	Isp                  string            `protobuf:"bytes,9,opt,name=isp,proto3" json:"isp,omitempty"`
	Cpe                  []string          `protobuf:"bytes,10,rep,name=cpe,proto3" json:"cpe,omitempty"`
	Data                 string            `protobuf:"bytes,11,opt,name=data,proto3" json:"data,omitempty"`
	Asn                  string            `protobuf:"bytes,12,opt,name=asn,proto3" json:"asn,omitempty"`
	Port                 int64             `protobuf:"varint,13,opt,name=port,proto3" json:"port,omitempty"`
	Html                 string            `protobuf:"bytes,14,opt,name=html,proto3" json:"html,omitempty"`
	Banner               string            `protobuf:"bytes,15,opt,name=banner,proto3" json:"banner,omitempty"`
	Link                 string            `protobuf:"bytes,16,opt,name=link,proto3" json:"link,omitempty"`
	Transport            string            `protobuf:"bytes,17,opt,name=transport,proto3" json:"transport,omitempty"`
	Domains              []string          `protobuf:"bytes,18,rep,name=domains,proto3" json:"domains,omitempty"`
	Timestamp            string            `protobuf:"bytes,19,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DeviceType           string            `protobuf:"bytes,20,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	Location             *HostLocation     `protobuf:"bytes,21,opt,name=location,proto3" json:"location,omitempty"`
	ExtraData            map[string][]byte `protobuf:"bytes,22,rep,name=extra_data,json=extraData,proto3" json:"extra_data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Opts                 map[string][]byte `protobuf:"bytes,23,rep,name=opts,proto3" json:"opts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HostData) Reset()         { *m = HostData{} }
func (m *HostData) String() string { return proto.CompactTextString(m) }
func (*HostData) ProtoMessage()    {}
func (*HostData) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{10}
}

func (m *HostData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HostData.Unmarshal(m, b)
}
func (m *HostData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HostData.Marshal(b, m, deterministic)
}
func (m *HostData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HostData.Merge(m, src)
}
func (m *HostData) XXX_Size() int {
	return xxx_messageInfo_HostData.Size(m)
}
func (m *HostData) XXX_DiscardUnknown() {
	xxx_messageInfo_HostData.DiscardUnknown(m)
}

var xxx_messageInfo_HostData proto.InternalMessageInfo

func (m *HostData) GetProduct() string {
	if m != nil {
		return m.Product
	}
	return ""
}

func (m *HostData) GetHostnames() []string {
	if m != nil {
		return m.Hostnames
	}
	return nil
}

func (m *HostData) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *HostData) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *HostData) GetSsl() *HostSSL {
	if m != nil {
		return m.Ssl
	}
	return nil
}

func (m *HostData) GetIpStr() []byte {
	if m != nil {
		return m.IpStr
	}
	return nil
}

func (m *HostData) GetOs() string {
	if m != nil {
		return m.Os
	}
	return ""
}

func (m *HostData) GetOrg() string {
	if m != nil {
		return m.Org
	}
	return ""
}

func (m *HostData) GetIsp() string {
	if m != nil {
		return m.Isp
	}
	return ""
}

func (m *HostData) GetCpe() []string {
	if m != nil {
		return m.Cpe
	}
	return nil
}

func (m *HostData) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *HostData) GetAsn() string {
	if m != nil {
		return m.Asn
	}
	return ""
}

func (m *HostData) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *HostData) GetHtml() string {
	if m != nil {
		return m.Html
	}
	return ""
}

func (m *HostData) GetBanner() string {
	if m != nil {
		return m.Banner
	}
	return ""
}

func (m *HostData) GetLink() string {
	if m != nil {
		return m.Link
	}
	return ""
}

func (m *HostData) GetTransport() string {
	if m != nil {
		return m.Transport
	}
	return ""
}

func (m *HostData) GetDomains() []string {
	if m != nil {
		return m.Domains
	}
	return nil
}

func (m *HostData) GetTimestamp() string {
	if m != nil {
		return m.Timestamp
	}
	return ""
}

func (m *HostData) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *HostData) GetLocation() *HostLocation {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *HostData) GetExtraData() map[string][]byte {
	if m != nil {
		return m.ExtraData
	}
	return nil
}

func (m *HostData) GetOpts() map[string][]byte {
	if m != nil {
		return m.Opts
	}
	return nil
}

type Exploit struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Bid                  []int64  `protobuf:"varint,2,rep,packed,name=bid,proto3" json:"bid,omitempty"`
	Cve                  []string `protobuf:"bytes,3,rep,name=cve,proto3" json:"cve,omitempty"`
	Msb                  []string `protobuf:"bytes,4,rep,name=msb,proto3" json:"msb,omitempty"`
	Osvdb                [][]byte `protobuf:"bytes,5,rep,name=osvdb,proto3" json:"osvdb,omitempty"`
	Description          string   `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Source               string   `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`
	Author               []byte   `protobuf:"bytes,8,opt,name=author,proto3" json:"author,omitempty"`
	Code                 string   `protobuf:"bytes,9,opt,name=code,proto3" json:"code,omitempty"`
	Platform             []byte   `protobuf:"bytes,10,opt,name=platform,proto3" json:"platform,omitempty"`
	Port                 int64    `protobuf:"varint,11,opt,name=port,proto3" json:"port,omitempty"`
	Type                 string   `protobuf:"bytes,12,opt,name=type,proto3" json:"type,omitempty"`
	Priviliged           bool     `protobuf:"varint,13,opt,name=priviliged,proto3" json:"priviliged,omitempty"`
	Rank                 string   `protobuf:"bytes,14,opt,name=rank,proto3" json:"rank,omitempty"`
	Version              string   `protobuf:"bytes,15,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Exploit) Reset()         { *m = Exploit{} }
func (m *Exploit) String() string { return proto.CompactTextString(m) }
func (*Exploit) ProtoMessage()    {}
func (*Exploit) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{11}
}

func (m *Exploit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Exploit.Unmarshal(m, b)
}
func (m *Exploit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Exploit.Marshal(b, m, deterministic)
}
func (m *Exploit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Exploit.Merge(m, src)
}
func (m *Exploit) XXX_Size() int {
	return xxx_messageInfo_Exploit.Size(m)
}
func (m *Exploit) XXX_DiscardUnknown() {
	xxx_messageInfo_Exploit.DiscardUnknown(m)
}

var xxx_messageInfo_Exploit proto.InternalMessageInfo

func (m *Exploit) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Exploit) GetBid() []int64 {
	if m != nil {
		return m.Bid
	}
	return nil
}

func (m *Exploit) GetCve() []string {
	if m != nil {
		return m.Cve
	}
	return nil
}

func (m *Exploit) GetMsb() []string {
	if m != nil {
		return m.Msb
	}
	return nil
}

func (m *Exploit) GetOsvdb() [][]byte {
	if m != nil {
		return m.Osvdb
	}
	return nil
}

func (m *Exploit) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Exploit) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *Exploit) GetAuthor() []byte {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Exploit) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Exploit) GetPlatform() []byte {
	if m != nil {
		return m.Platform
	}
	return nil
}

func (m *Exploit) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Exploit) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Exploit) GetPriviliged() bool {
	if m != nil {
		return m.Priviliged
	}
	return false
}

func (m *Exploit) GetRank() string {
	if m != nil {
		return m.Rank
	}
	return ""
}

func (m *Exploit) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

//Filtered by ASN
//This stream provides a filtered, bandwidth-saving view of the Banners stream in case you are only interested in devices located in certain ASNs.
//
//Parameters
//asn: [String] Comma-separated list of ASNs; example "3303,32475"
type ASNRequest struct {
	Asn                  []string `protobuf:"bytes,1,rep,name=asn,proto3" json:"asn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ASNRequest) Reset()         { *m = ASNRequest{} }
func (m *ASNRequest) String() string { return proto.CompactTextString(m) }
func (*ASNRequest) ProtoMessage()    {}
func (*ASNRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{12}
}

func (m *ASNRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ASNRequest.Unmarshal(m, b)
}
func (m *ASNRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ASNRequest.Marshal(b, m, deterministic)
}
func (m *ASNRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ASNRequest.Merge(m, src)
}
func (m *ASNRequest) XXX_Size() int {
	return xxx_messageInfo_ASNRequest.Size(m)
}
func (m *ASNRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ASNRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ASNRequest proto.InternalMessageInfo

func (m *ASNRequest) GetAsn() []string {
	if m != nil {
		return m.Asn
	}
	return nil
}

type AlertRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AlertRequest) Reset()         { *m = AlertRequest{} }
func (m *AlertRequest) String() string { return proto.CompactTextString(m) }
func (*AlertRequest) ProtoMessage()    {}
func (*AlertRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{13}
}

func (m *AlertRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlertRequest.Unmarshal(m, b)
}
func (m *AlertRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlertRequest.Marshal(b, m, deterministic)
}
func (m *AlertRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlertRequest.Merge(m, src)
}
func (m *AlertRequest) XXX_Size() int {
	return xxx_messageInfo_AlertRequest.Size(m)
}
func (m *AlertRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AlertRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AlertRequest proto.InternalMessageInfo

func (m *AlertRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CountriesRequest struct {
	Countries            []string `protobuf:"bytes,1,rep,name=countries,proto3" json:"countries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CountriesRequest) Reset()         { *m = CountriesRequest{} }
func (m *CountriesRequest) String() string { return proto.CompactTextString(m) }
func (*CountriesRequest) ProtoMessage()    {}
func (*CountriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{14}
}

func (m *CountriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CountriesRequest.Unmarshal(m, b)
}
func (m *CountriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CountriesRequest.Marshal(b, m, deterministic)
}
func (m *CountriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CountriesRequest.Merge(m, src)
}
func (m *CountriesRequest) XXX_Size() int {
	return xxx_messageInfo_CountriesRequest.Size(m)
}
func (m *CountriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CountriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CountriesRequest proto.InternalMessageInfo

func (m *CountriesRequest) GetCountries() []string {
	if m != nil {
		return m.Countries
	}
	return nil
}

type PortsRequest struct {
	Ports                []string `protobuf:"bytes,1,rep,name=ports,proto3" json:"ports,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PortsRequest) Reset()         { *m = PortsRequest{} }
func (m *PortsRequest) String() string { return proto.CompactTextString(m) }
func (*PortsRequest) ProtoMessage()    {}
func (*PortsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{15}
}

func (m *PortsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PortsRequest.Unmarshal(m, b)
}
func (m *PortsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PortsRequest.Marshal(b, m, deterministic)
}
func (m *PortsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PortsRequest.Merge(m, src)
}
func (m *PortsRequest) XXX_Size() int {
	return xxx_messageInfo_PortsRequest.Size(m)
}
func (m *PortsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PortsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PortsRequest proto.InternalMessageInfo

func (m *PortsRequest) GetPorts() []string {
	if m != nil {
		return m.Ports
	}
	return nil
}

type DNSRequest struct {
	Hosts                []string `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DNSRequest) Reset()         { *m = DNSRequest{} }
func (m *DNSRequest) String() string { return proto.CompactTextString(m) }
func (*DNSRequest) ProtoMessage()    {}
func (*DNSRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{16}
}

func (m *DNSRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DNSRequest.Unmarshal(m, b)
}
func (m *DNSRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DNSRequest.Marshal(b, m, deterministic)
}
func (m *DNSRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DNSRequest.Merge(m, src)
}
func (m *DNSRequest) XXX_Size() int {
	return xxx_messageInfo_DNSRequest.Size(m)
}
func (m *DNSRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DNSRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DNSRequest proto.InternalMessageInfo

func (m *DNSRequest) GetHosts() []string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

type DNSResponse struct {
	Ips                  map[string]string `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DNSResponse) Reset()         { *m = DNSResponse{} }
func (m *DNSResponse) String() string { return proto.CompactTextString(m) }
func (*DNSResponse) ProtoMessage()    {}
func (*DNSResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{17}
}

func (m *DNSResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DNSResponse.Unmarshal(m, b)
}
func (m *DNSResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DNSResponse.Marshal(b, m, deterministic)
}
func (m *DNSResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DNSResponse.Merge(m, src)
}
func (m *DNSResponse) XXX_Size() int {
	return xxx_messageInfo_DNSResponse.Size(m)
}
func (m *DNSResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DNSResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DNSResponse proto.InternalMessageInfo

func (m *DNSResponse) GetIps() map[string]string {
	if m != nil {
		return m.Ips
	}
	return nil
}

type DNSReverseRequest struct {
	Ips                  []string `protobuf:"bytes,1,rep,name=ips,proto3" json:"ips,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DNSReverseRequest) Reset()         { *m = DNSReverseRequest{} }
func (m *DNSReverseRequest) String() string { return proto.CompactTextString(m) }
func (*DNSReverseRequest) ProtoMessage()    {}
func (*DNSReverseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{18}
}

func (m *DNSReverseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DNSReverseRequest.Unmarshal(m, b)
}
func (m *DNSReverseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DNSReverseRequest.Marshal(b, m, deterministic)
}
func (m *DNSReverseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DNSReverseRequest.Merge(m, src)
}
func (m *DNSReverseRequest) XXX_Size() int {
	return xxx_messageInfo_DNSReverseRequest.Size(m)
}
func (m *DNSReverseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DNSReverseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DNSReverseRequest proto.InternalMessageInfo

func (m *DNSReverseRequest) GetIps() []string {
	if m != nil {
		return m.Ips
	}
	return nil
}

type DNSReverseResponse struct {
	Hosts                map[string]string `protobuf:"bytes,1,rep,name=hosts,proto3" json:"hosts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *DNSReverseResponse) Reset()         { *m = DNSReverseResponse{} }
func (m *DNSReverseResponse) String() string { return proto.CompactTextString(m) }
func (*DNSReverseResponse) ProtoMessage()    {}
func (*DNSReverseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{19}
}

func (m *DNSReverseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DNSReverseResponse.Unmarshal(m, b)
}
func (m *DNSReverseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DNSReverseResponse.Marshal(b, m, deterministic)
}
func (m *DNSReverseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DNSReverseResponse.Merge(m, src)
}
func (m *DNSReverseResponse) XXX_Size() int {
	return xxx_messageInfo_DNSReverseResponse.Size(m)
}
func (m *DNSReverseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DNSReverseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DNSReverseResponse proto.InternalMessageInfo

func (m *DNSReverseResponse) GetHosts() map[string]string {
	if m != nil {
		return m.Hosts
	}
	return nil
}

type DataSetsRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataSetsRequest) Reset()         { *m = DataSetsRequest{} }
func (m *DataSetsRequest) String() string { return proto.CompactTextString(m) }
func (*DataSetsRequest) ProtoMessage()    {}
func (*DataSetsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{20}
}

func (m *DataSetsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataSetsRequest.Unmarshal(m, b)
}
func (m *DataSetsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataSetsRequest.Marshal(b, m, deterministic)
}
func (m *DataSetsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataSetsRequest.Merge(m, src)
}
func (m *DataSetsRequest) XXX_Size() int {
	return xxx_messageInfo_DataSetsRequest.Size(m)
}
func (m *DataSetsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DataSetsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DataSetsRequest proto.InternalMessageInfo

func (m *DataSetsRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type DataSetsResponse struct {
	Datasets             []*Dataset `protobuf:"bytes,1,rep,name=datasets,proto3" json:"datasets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DataSetsResponse) Reset()         { *m = DataSetsResponse{} }
func (m *DataSetsResponse) String() string { return proto.CompactTextString(m) }
func (*DataSetsResponse) ProtoMessage()    {}
func (*DataSetsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8b79b5a127a76ba1, []int{21}
}

func (m *DataSetsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataSetsResponse.Unmarshal(m, b)
}
func (m *DataSetsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataSetsResponse.Marshal(b, m, deterministic)
}
func (m *DataSetsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataSetsResponse.Merge(m, src)
}
func (m *DataSetsResponse) XXX_Size() int {
	return xxx_messageInfo_DataSetsResponse.Size(m)
}
func (m *DataSetsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DataSetsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DataSetsResponse proto.InternalMessageInfo

func (m *DataSetsResponse) GetDatasets() []*Dataset {
	if m != nil {
		return m.Datasets
	}
	return nil
}

func init() {
	proto.RegisterType((*Network)(nil), "net.Network")
	proto.RegisterType((*ConnInfo)(nil), "net.ConnInfo")
	proto.RegisterType((*Dataset)(nil), "net.Dataset")
	proto.RegisterType((*HostLocation)(nil), "net.HostLocation")
	proto.RegisterType((*HostCertificateAttributes)(nil), "net.HostCertificateAttributes")
	proto.RegisterType((*HostCertificate)(nil), "net.HostCertificate")
	proto.RegisterMapType((map[string]string)(nil), "net.HostCertificate.FingerprintEntry")
	proto.RegisterType((*HostTLSExtEntry)(nil), "net.HostTLSExtEntry")
	proto.RegisterType((*HostCipher)(nil), "net.HostCipher")
	proto.RegisterType((*HostSSL)(nil), "net.HostSSL")
	proto.RegisterType((*HostDHParams)(nil), "net.HostDHParams")
	proto.RegisterType((*HostData)(nil), "net.HostData")
	proto.RegisterMapType((map[string][]byte)(nil), "net.HostData.ExtraDataEntry")
	proto.RegisterMapType((map[string][]byte)(nil), "net.HostData.OptsEntry")
	proto.RegisterType((*Exploit)(nil), "net.Exploit")
	proto.RegisterType((*ASNRequest)(nil), "net.ASNRequest")
	proto.RegisterType((*AlertRequest)(nil), "net.AlertRequest")
	proto.RegisterType((*CountriesRequest)(nil), "net.CountriesRequest")
	proto.RegisterType((*PortsRequest)(nil), "net.PortsRequest")
	proto.RegisterType((*DNSRequest)(nil), "net.DNSRequest")
	proto.RegisterType((*DNSResponse)(nil), "net.DNSResponse")
	proto.RegisterMapType((map[string]string)(nil), "net.DNSResponse.IpsEntry")
	proto.RegisterType((*DNSReverseRequest)(nil), "net.DNSReverseRequest")
	proto.RegisterType((*DNSReverseResponse)(nil), "net.DNSReverseResponse")
	proto.RegisterMapType((map[string]string)(nil), "net.DNSReverseResponse.HostsEntry")
	proto.RegisterType((*DataSetsRequest)(nil), "net.DataSetsRequest")
	proto.RegisterType((*DataSetsResponse)(nil), "net.DataSetsResponse")
}

func init() { proto.RegisterFile("net/net.proto", fileDescriptor_8b79b5a127a76ba1) }

var fileDescriptor_8b79b5a127a76ba1 = []byte{
	// 1473 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x57, 0xef, 0x6e, 0xdc, 0x44,
	0x10, 0xd7, 0x9d, 0x93, 0xdc, 0x79, 0xee, 0xf2, 0xa7, 0x4b, 0xda, 0xba, 0x21, 0x84, 0x60, 0x28,
	0x44, 0x2a, 0x04, 0x94, 0x8a, 0x12, 0x41, 0xa9, 0x14, 0x5d, 0x03, 0xad, 0x88, 0x2e, 0xc5, 0x97,
	0xef, 0xd1, 0x9e, 0xbd, 0xb9, 0x2c, 0xf1, 0x79, 0xcd, 0xee, 0x5e, 0x48, 0xde, 0x80, 0x37, 0xe0,
	0x03, 0x12, 0x6f, 0xc6, 0x13, 0xf0, 0x85, 0x47, 0x40, 0x33, 0xbb, 0xf6, 0x39, 0x51, 0xa5, 0xb6,
	0x7c, 0x9b, 0xff, 0xf3, 0xdb, 0xd9, 0x99, 0x59, 0x1b, 0x96, 0x0b, 0x61, 0xbf, 0x2c, 0x84, 0xdd,
	0x2d, 0xb5, 0xb2, 0x8a, 0x05, 0x85, 0xb0, 0xf1, 0xf7, 0xd0, 0x19, 0x0a, 0xfb, 0x9b, 0xd2, 0x17,
	0x2c, 0x82, 0x4e, 0xe1, 0xc8, 0xa8, 0xb5, 0xdd, 0xda, 0x09, 0x93, 0x8a, 0x45, 0x0d, 0xcf, 0x32,
	0x2d, 0x8c, 0x89, 0xda, 0x4e, 0xe3, 0xd9, 0xf8, 0x67, 0xe8, 0x0e, 0x54, 0x51, 0xbc, 0x2c, 0xce,
	0x14, 0xfb, 0x00, 0xc0, 0x08, 0x7d, 0x29, 0x53, 0x71, 0x2a, 0x33, 0x0a, 0xb1, 0x9c, 0x84, 0x5e,
	0xf2, 0x32, 0x63, 0x9f, 0xce, 0xc3, 0x63, 0x90, 0xde, 0x5e, 0x7f, 0x17, 0xb1, 0xf8, 0xec, 0x75,
	0xb2, 0x78, 0x04, 0x9d, 0xe7, 0xdc, 0x72, 0x23, 0x2c, 0x63, 0xb0, 0x50, 0xf0, 0xa9, 0xf0, 0x70,
	0x88, 0x66, 0xeb, 0xb0, 0x68, 0x52, 0x55, 0x0a, 0x8f, 0xc4, 0x31, 0x6c, 0x0b, 0x20, 0x13, 0x67,
	0xb2, 0x90, 0x56, 0xaa, 0x22, 0x0a, 0x48, 0xd5, 0x90, 0xc4, 0x7f, 0xb5, 0xa1, 0xff, 0x42, 0x19,
	0x7b, 0xa4, 0x52, 0x8e, 0x02, 0x0c, 0x9d, 0x4a, 0x7b, 0x5d, 0x85, 0x46, 0x9a, 0x7d, 0x08, 0x3d,
	0x2d, 0x26, 0x52, 0x15, 0xa7, 0xa9, 0xca, 0xaa, 0x04, 0xe0, 0x44, 0x03, 0x95, 0x09, 0xf6, 0x3e,
	0x84, 0x5c, 0x0b, 0xee, 0xd4, 0x98, 0x24, 0x48, 0xba, 0x28, 0x20, 0xe5, 0x06, 0x74, 0x73, 0x6e,
	0xa5, 0x9d, 0x65, 0x22, 0x5a, 0xd8, 0x6e, 0xed, 0xb4, 0x92, 0x9a, 0x67, 0x9b, 0x10, 0xe6, 0xaa,
	0x98, 0x38, 0xe5, 0x22, 0x29, 0xe7, 0x02, 0xf6, 0x11, 0xf4, 0x53, 0x35, 0x2b, 0xac, 0xbe, 0x3e,
	0xa5, 0xe3, 0x2e, 0x51, 0xe2, 0x9e, 0x97, 0x0d, 0xf1, 0xd4, 0x1f, 0xc3, 0x72, 0x65, 0x82, 0xc9,
	0x1f, 0x47, 0x1d, 0xb2, 0xa9, 0xfc, 0x10, 0xc0, 0x63, 0xc4, 0x5f, 0x2a, 0x63, 0x79, 0xee, 0x00,
	0x76, 0x1d, 0x7e, 0x27, 0x22, 0x88, 0x0f, 0xa0, 0x9b, 0x4d, 0x3d, 0xfc, 0x90, 0xe0, 0x77, 0xb2,
	0x29, 0xa1, 0x8f, 0x67, 0xf0, 0x00, 0xeb, 0x33, 0x10, 0xda, 0xca, 0x33, 0x99, 0x72, 0x2b, 0x0e,
	0xac, 0xd5, 0x72, 0x3c, 0xb3, 0xc2, 0xb0, 0x3e, 0xb4, 0x06, 0xbe, 0x52, 0xad, 0x01, 0x5b, 0x81,
	0xf6, 0x60, 0xe8, 0xab, 0xd3, 0x1e, 0x0c, 0x51, 0x7b, 0xe4, 0x4b, 0xde, 0x3a, 0x42, 0xee, 0x98,
	0xce, 0x1f, 0x26, 0xad, 0x63, 0xb4, 0x1d, 0x9d, 0xd0, 0x89, 0xc3, 0xa4, 0x3d, 0x3a, 0x41, 0xfe,
	0x78, 0xe8, 0x0f, 0xd8, 0x3e, 0x1e, 0xc6, 0x7f, 0x2e, 0xc0, 0xea, 0xad, 0xbc, 0xec, 0x3e, 0x74,
	0x8c, 0x9c, 0x9c, 0xf2, 0x7c, 0xe2, 0x73, 0x2e, 0x19, 0x39, 0x39, 0xc8, 0x27, 0xd8, 0x86, 0xe2,
	0xaa, 0x94, 0x5a, 0x64, 0x94, 0xbd, 0x9b, 0x54, 0x2c, 0x6a, 0x2e, 0x85, 0x36, 0xd5, 0xdd, 0x07,
	0x49, 0xc5, 0xb2, 0x7b, 0xb0, 0x64, 0x84, 0x96, 0x3c, 0x27, 0x4c, 0x41, 0xe2, 0x39, 0x94, 0x4b,
	0x63, 0x66, 0x22, 0xf3, 0xe0, 0x3c, 0x37, 0xcf, 0x61, 0x3c, 0xca, 0x8a, 0x65, 0x3f, 0x42, 0xef,
	0x4c, 0x16, 0x13, 0xa1, 0x4b, 0x2d, 0x0b, 0x1b, 0x75, 0xb6, 0x83, 0x9d, 0xde, 0xde, 0x43, 0xea,
	0xe1, 0x5b, 0x27, 0xd8, 0xfd, 0x61, 0x6e, 0x77, 0x88, 0xd7, 0x93, 0x34, 0x3d, 0xd9, 0x13, 0x9f,
	0x5a, 0xd3, 0x0d, 0xf5, 0xf6, 0xb6, 0x5e, 0x17, 0x63, 0x5e, 0x7d, 0x0f, 0x4d, 0xb3, 0x7d, 0xe8,
	0x98, 0xd9, 0xf8, 0x17, 0x91, 0x5a, 0xba, 0xbc, 0x37, 0x3b, 0x56, 0xe6, 0x98, 0xb1, 0x9c, 0x8d,
	0x2f, 0xc4, 0x75, 0x04, 0x6f, 0x97, 0xd1, 0x59, 0xb3, 0x67, 0x00, 0xe2, 0xca, 0x8a, 0x02, 0x2b,
	0x69, 0xa2, 0xde, 0x5b, 0xf9, 0x36, 0x3c, 0x36, 0x9e, 0xc1, 0xda, 0xed, 0x52, 0xb0, 0x35, 0x08,
	0x10, 0x88, 0xbb, 0x59, 0x24, 0x71, 0xa2, 0x2f, 0x79, 0x3e, 0xab, 0x27, 0x9a, 0x98, 0x6f, 0xdb,
	0xfb, 0xad, 0xf8, 0x6b, 0xd7, 0x1c, 0x27, 0x47, 0xa3, 0xc3, 0x2b, 0xef, 0xbe, 0x02, 0x6d, 0xbf,
	0x5c, 0x82, 0xa4, 0x2d, 0xb3, 0x7a, 0x45, 0xb4, 0xe7, 0x2b, 0x22, 0x1e, 0x02, 0x10, 0x3e, 0x59,
	0x9e, 0x0b, 0xdd, 0xec, 0x0d, 0xbf, 0xd6, 0xaa, 0xde, 0x60, 0xb0, 0x30, 0x96, 0xd6, 0xed, 0xb4,
	0x20, 0x21, 0xba, 0x8e, 0x17, 0x34, 0xe2, 0xfd, 0xd3, 0x82, 0x0e, 0x06, 0x1c, 0x8d, 0x8e, 0x70,
	0xca, 0xbd, 0xbb, 0x89, 0x5a, 0xdb, 0xc1, 0x4e, 0x98, 0xd4, 0x3c, 0x1e, 0x24, 0x3d, 0xe7, 0xb2,
	0x88, 0xda, 0xa4, 0x70, 0x0c, 0xfb, 0x02, 0xba, 0xd9, 0x79, 0xc9, 0x35, 0x9f, 0x1a, 0x8a, 0xda,
	0xdb, 0xbb, 0x53, 0x97, 0xf0, 0xf9, 0x8b, 0x57, 0xa4, 0x48, 0x6a, 0x13, 0xf6, 0x39, 0x2c, 0xd9,
	0xdc, 0x88, 0x2b, 0x1b, 0x2d, 0x50, 0x87, 0xad, 0xd7, 0xc6, 0x8d, 0x32, 0x24, 0xde, 0x86, 0x7d,
	0x06, 0x4b, 0x29, 0x1d, 0x93, 0xda, 0xb8, 0xb7, 0xb7, 0x3a, 0xbf, 0x1d, 0x12, 0x27, 0x5e, 0xcd,
	0x76, 0x60, 0x21, 0x15, 0xda, 0x52, 0x53, 0x37, 0x83, 0x36, 0x2e, 0x31, 0x21, 0x8b, 0xf8, 0x8f,
	0x96, 0x5b, 0x95, 0x15, 0x36, 0x3c, 0x56, 0xa9, 0x65, 0xbd, 0x86, 0x1d, 0x83, 0xdb, 0xbe, 0x9c,
	0x8d, 0x73, 0x99, 0x9e, 0xe2, 0x75, 0xba, 0xf2, 0x87, 0x4e, 0xf2, 0x93, 0xb8, 0xae, 0x6b, 0x1b,
	0x34, 0x6a, 0xbb, 0x09, 0xe1, 0x44, 0x14, 0x42, 0x73, 0xab, 0xb4, 0x5f, 0x11, 0x73, 0x01, 0xdb,
	0xbe, 0x39, 0x5f, 0x6e, 0x2c, 0x9b, 0xa2, 0xf8, 0xdf, 0x45, 0xe8, 0x12, 0x32, 0x6e, 0x39, 0x5e,
	0x6b, 0xa9, 0x55, 0x36, 0x4b, 0x6d, 0x75, 0xad, 0x9e, 0xc5, 0x34, 0xe7, 0xca, 0x58, 0xbc, 0x3a,
	0xe3, 0xaf, 0x62, 0x2e, 0xb8, 0xbd, 0x2a, 0x1a, 0xed, 0xb0, 0x0e, 0x8b, 0x56, 0xda, 0x5c, 0x78,
	0x68, 0x8e, 0x61, 0x5b, 0x10, 0x18, 0x93, 0xfb, 0xf2, 0xf6, 0xeb, 0xba, 0x8d, 0x46, 0x47, 0x09,
	0x2a, 0xd8, 0x5d, 0x58, 0x92, 0xe5, 0xa9, 0xb1, 0x9a, 0x4a, 0xdb, 0x4f, 0x16, 0x65, 0x39, 0xb2,
	0x1a, 0xfb, 0x54, 0x19, 0xbf, 0xa5, 0xdb, 0xca, 0x60, 0xdb, 0x2b, 0x3d, 0xf1, 0x3b, 0x19, 0x49,
	0x94, 0x48, 0x53, 0xd2, 0x28, 0x87, 0x09, 0x92, 0x28, 0x49, 0x4b, 0x11, 0x01, 0x41, 0x46, 0x12,
	0xab, 0x98, 0x71, 0xcb, 0x69, 0xf4, 0xc2, 0x84, 0x68, 0xb4, 0xe2, 0xa6, 0x88, 0xfa, 0xce, 0x8f,
	0x1b, 0xea, 0xe3, 0x52, 0x69, 0x1b, 0x2d, 0xbb, 0x5a, 0x23, 0x8d, 0xb2, 0x73, 0x3b, 0xcd, 0xa3,
	0x15, 0xe7, 0x89, 0x34, 0xee, 0xbc, 0x31, 0x2f, 0x0a, 0xa1, 0xa3, 0x55, 0xb7, 0xf3, 0x1c, 0x87,
	0xb6, 0xb9, 0x2c, 0x2e, 0xa2, 0x35, 0x67, 0x8b, 0x34, 0x16, 0xd1, 0x6a, 0x5e, 0x18, 0x0a, 0x7c,
	0xc7, 0xdd, 0x55, 0x2d, 0xc0, 0x22, 0x66, 0x6a, 0xca, 0x65, 0x61, 0x22, 0x46, 0x68, 0x2b, 0x96,
	0xfc, 0xe4, 0x54, 0x18, 0xcb, 0xa7, 0x65, 0xf4, 0x9e, 0xf7, 0xab, 0x04, 0xf8, 0x42, 0x65, 0x82,
	0xbe, 0x10, 0xec, 0x75, 0x29, 0xa2, 0xf5, 0xea, 0x9d, 0x46, 0xd1, 0xc9, 0x75, 0x29, 0x70, 0x58,
	0x72, 0xff, 0x44, 0x47, 0x77, 0x6f, 0x0d, 0x4b, 0xf5, 0x76, 0x27, 0xb5, 0x09, 0xfb, 0x8e, 0x16,
	0x94, 0xe6, 0xa7, 0x54, 0xa5, 0x7b, 0x34, 0x30, 0x9b, 0xf3, 0xe9, 0xe2, 0x96, 0xef, 0x1e, 0xa2,
	0x1e, 0x29, 0x37, 0x38, 0xa1, 0xa8, 0x78, 0xf6, 0x08, 0x16, 0x54, 0x69, 0x4d, 0x74, 0x9f, 0xdc,
	0xee, 0xdf, 0x74, 0x3b, 0x2e, 0xad, 0x71, 0x1e, 0x64, 0xb4, 0xf1, 0x14, 0x56, 0x6e, 0x46, 0x7a,
	0xd3, 0x22, 0xeb, 0x37, 0x16, 0xd9, 0xc6, 0x37, 0x10, 0xd6, 0x01, 0xdf, 0xc5, 0x31, 0xfe, 0xbb,
	0x0d, 0x9d, 0xc3, 0xab, 0x32, 0x57, 0xd2, 0x36, 0x56, 0x5f, 0x9f, 0x56, 0xdf, 0x1a, 0x04, 0x63,
	0x99, 0x51, 0x87, 0x07, 0x09, 0x92, 0xd4, 0x40, 0x97, 0xb8, 0xbb, 0x5c, 0x03, 0x5d, 0x0a, 0x94,
	0x4c, 0xcd, 0x98, 0x56, 0x49, 0x98, 0x20, 0x89, 0xb9, 0x94, 0xb9, 0xcc, 0xc6, 0xd1, 0xe2, 0x76,
	0x80, 0xb9, 0x88, 0xc1, 0xe1, 0xcb, 0x84, 0x49, 0xb5, 0x2c, 0xa9, 0xf4, 0xfe, 0x0b, 0xa4, 0x21,
	0xa2, 0x87, 0x54, 0xcd, 0x74, 0x2a, 0x7c, 0x53, 0x7b, 0x0e, 0xe5, 0x7c, 0x66, 0xcf, 0x95, 0x7b,
	0xcd, 0xfa, 0x89, 0xe7, 0xe8, 0x03, 0xab, 0xfa, 0xce, 0xc0, 0x0f, 0x2c, 0xff, 0x89, 0x54, 0xe6,
	0xdc, 0x9e, 0x29, 0x3d, 0xa5, 0x97, 0xa8, 0x9f, 0xd4, 0x7c, 0xdd, 0xc4, 0xbd, 0x9b, 0x4d, 0x4c,
	0x7d, 0xe2, 0x7a, 0x9d, 0x68, 0xfc, 0xd2, 0x2b, 0xb5, 0xbc, 0x94, 0xb9, 0x9c, 0x88, 0x8c, 0x5a,
	0xbe, 0x9b, 0x34, 0x24, 0xe8, 0xa3, 0x79, 0x71, 0x51, 0x35, 0x3e, 0xd2, 0xcd, 0x99, 0x5f, 0xbd,
	0x31, 0xf3, 0xf1, 0x16, 0xc0, 0xc1, 0x68, 0x98, 0x88, 0x5f, 0x67, 0xc2, 0xd8, 0x6a, 0xb4, 0xdc,
	0x5e, 0x47, 0x32, 0xde, 0x82, 0xfe, 0x41, 0x2e, 0xb4, 0xad, 0x2c, 0xe6, 0x77, 0x10, 0xe2, 0x1d,
	0xc4, 0x5f, 0xc1, 0xda, 0x80, 0x3e, 0xc1, 0xa4, 0x30, 0x95, 0xcd, 0x26, 0x84, 0x69, 0x25, 0xf3,
	0xb1, 0xe6, 0x82, 0xf8, 0x13, 0xe8, 0xbf, 0x52, 0xda, 0xd6, 0xd6, 0xb8, 0x5d, 0x91, 0xf7, 0x96,
	0x8e, 0x89, 0x63, 0x80, 0xe7, 0xc3, 0x51, 0xc3, 0x06, 0x17, 0x58, 0x6d, 0x43, 0x4c, 0xac, 0xa1,
	0x47, 0x36, 0xa6, 0x54, 0x85, 0x11, 0xec, 0x11, 0x04, 0xb2, 0x74, 0x26, 0xbd, 0xbd, 0x07, 0xd4,
	0xcd, 0x0d, 0xf5, 0xee, 0xcb, 0xd2, 0xf7, 0x33, 0x5a, 0x6d, 0x3c, 0x81, 0x6e, 0x25, 0x78, 0xa7,
	0x17, 0xf9, 0x21, 0xdc, 0xa1, 0xa0, 0x58, 0x3f, 0xd1, 0x28, 0x5b, 0x95, 0x39, 0xa4, 0xf0, 0xf1,
	0xef, 0x2d, 0x60, 0x4d, 0x3b, 0x0f, 0x71, 0xbf, 0x79, 0x8e, 0xde, 0x5e, 0x3c, 0x07, 0x79, 0xc3,
	0x8e, 0xa6, 0xd0, 0xa3, 0x75, 0x0e, 0x1b, 0xfb, 0xee, 0x49, 0xff, 0x5f, 0x88, 0x57, 0x71, 0x66,
	0x47, 0x62, 0x5e, 0xf2, 0xd7, 0xfc, 0x56, 0xc4, 0x4f, 0x61, 0x6d, 0x6e, 0xe6, 0xe1, 0xee, 0x40,
	0x37, 0x73, 0x7f, 0x22, 0x15, 0x62, 0xb7, 0xff, 0xfd, 0xef, 0x49, 0x52, 0x6b, 0xc7, 0x4b, 0xf4,
	0x47, 0xf5, 0xf8, 0xbf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x6d, 0x00, 0xa6, 0x7c, 0x62, 0x0d, 0x00,
	0x00,
}
