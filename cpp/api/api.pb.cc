// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

#include "api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_api_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Address;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Card;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Identity;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Product;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Role;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_JSONWebKeys;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<4> scc_info_Plan;
}  // namespace protobuf_api_2eproto
namespace protobuf_common_2fcommon_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_String;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Identifier;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StringArray;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StringMap;
}  // namespace protobuf_common_2fcommon_2eproto
namespace api {
class AddUserRolesRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AddUserRolesRequest>
      _instance;
} _AddUserRolesRequest_default_instance_;
class SubscribeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubscribeRequest>
      _instance;
} _SubscribeRequest_default_instance_;
class UnSubscribeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnSubscribeRequest>
      _instance;
} _UnSubscribeRequest_default_instance_;
class CardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Card>
      _instance;
} _Card_default_instance_;
class UserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<User>
      _instance;
} _User_default_instance_;
class UserMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserMetadata>
      _instance;
} _UserMetadata_default_instance_;
class AddressDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Address>
      _instance;
} _Address_default_instance_;
class AppMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AppMetadata>
      _instance;
} _AppMetadata_default_instance_;
class PlanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Plan>
      _instance;
} _Plan_default_instance_;
class ProductDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Product>
      _instance;
} _Product_default_instance_;
class IdentityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Identity>
      _instance;
} _Identity_default_instance_;
class RoleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Role>
      _instance;
} _Role_default_instance_;
class OAuth2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OAuth2>
      _instance;
} _OAuth2_default_instance_;
class ClientCredentialsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientCredentials>
      _instance;
} _ClientCredentials_default_instance_;
class JWTDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JWT>
      _instance;
} _JWT_default_instance_;
class QueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Query>
      _instance;
} _Query_default_instance_;
class EventDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Event>
      _instance;
} _Event_default_instance_;
class EventQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EventQuery>
      _instance;
} _EventQuery_default_instance_;
class JSONWebKeysDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JSONWebKeys>
      _instance;
} _JSONWebKeys_default_instance_;
class JwksDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Jwks>
      _instance;
} _Jwks_default_instance_;
}  // namespace api
namespace protobuf_api_2eproto {
static void InitDefaultsAddUserRolesRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_AddUserRolesRequest_default_instance_;
    new (ptr) ::api::AddUserRolesRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::AddUserRolesRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_AddUserRolesRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsAddUserRolesRequest}, {
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,
      &protobuf_api_2eproto::scc_info_Role.base,}};

static void InitDefaultsSubscribeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_SubscribeRequest_default_instance_;
    new (ptr) ::api::SubscribeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::SubscribeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SubscribeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSubscribeRequest}, {
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,
      &protobuf_api_2eproto::scc_info_Card.base,}};

static void InitDefaultsUnSubscribeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_UnSubscribeRequest_default_instance_;
    new (ptr) ::api::UnSubscribeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::UnSubscribeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_UnSubscribeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsUnSubscribeRequest}, {
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsCard() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Card_default_instance_;
    new (ptr) ::api::Card();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Card::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Card =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCard}, {
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_User_default_instance_;
    new (ptr) ::api::User();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::User::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_User =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsUser}, {
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringMap.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringArray.base,
      &protobuf_api_2eproto::scc_info_Identity.base,}};

static void InitDefaultsUserMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_UserMetadata_default_instance_;
    new (ptr) ::api::UserMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::UserMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_UserMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsUserMetadata}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringMap.base,
      &protobuf_api_2eproto::scc_info_Address.base,}};

static void InitDefaultsAddress() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Address_default_instance_;
    new (ptr) ::api::Address();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Address::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Address =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAddress}, {}};

static void InitDefaultsAppMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_AppMetadata_default_instance_;
    new (ptr) ::api::AppMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::AppMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_AppMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsAppMetadata}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_api_2eproto::scc_info_Plan.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringMap.base,}};

static void InitDefaultsPlan() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Plan_default_instance_;
    new (ptr) ::api::Plan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Plan::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<4> scc_info_Plan =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 4, InitDefaultsPlan}, {
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,
      &protobuf_common_2fcommon_2eproto::scc_info_Int64.base,
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_api_2eproto::scc_info_Product.base,}};

static void InitDefaultsProduct() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Product_default_instance_;
    new (ptr) ::api::Product();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Product::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Product =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsProduct}, {
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsIdentity() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Identity_default_instance_;
    new (ptr) ::api::Identity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Identity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Identity =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsIdentity}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,}};

static void InitDefaultsRole() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Role_default_instance_;
    new (ptr) ::api::Role();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Role::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Role =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRole}, {
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsOAuth2() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_OAuth2_default_instance_;
    new (ptr) ::api::OAuth2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::OAuth2::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_OAuth2 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsOAuth2}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringArray.base,}};

static void InitDefaultsClientCredentials() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_ClientCredentials_default_instance_;
    new (ptr) ::api::ClientCredentials();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::ClientCredentials::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_ClientCredentials =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsClientCredentials}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringArray.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringMap.base,}};

static void InitDefaultsJWT() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_JWT_default_instance_;
    new (ptr) ::api::JWT();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::JWT::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_JWT =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsJWT}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringArray.base,}};

static void InitDefaultsQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Query_default_instance_;
    new (ptr) ::api::Query();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Query::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Query =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQuery}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsEvent() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Event_default_instance_;
    new (ptr) ::api::Event();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Event::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Event =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEvent}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsEventQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_EventQuery_default_instance_;
    new (ptr) ::api::EventQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::EventQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_EventQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEventQuery}, {}};

static void InitDefaultsJSONWebKeys() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_JSONWebKeys_default_instance_;
    new (ptr) ::api::JSONWebKeys();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::JSONWebKeys::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_JSONWebKeys =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsJSONWebKeys}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringArray.base,}};

static void InitDefaultsJwks() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Jwks_default_instance_;
    new (ptr) ::api::Jwks();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Jwks::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Jwks =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJwks}, {
      &protobuf_api_2eproto::scc_info_JSONWebKeys.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_AddUserRolesRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SubscribeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnSubscribeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Card.base);
  ::google::protobuf::internal::InitSCC(&scc_info_User.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Address.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AppMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Plan.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Product.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Identity.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Role.base);
  ::google::protobuf::internal::InitSCC(&scc_info_OAuth2.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ClientCredentials.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JWT.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Query.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Event.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EventQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JSONWebKeys.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Jwks.base);
}

::google::protobuf::Metadata file_level_metadata[20];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AddUserRolesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AddUserRolesRequest, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AddUserRolesRequest, roles_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscribeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscribeRequest, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscribeRequest, plan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscribeRequest, card_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UnSubscribeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UnSubscribeRequest, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UnSubscribeRequest, plan_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, exp_month_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, exp_year_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, cvc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, given_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, family_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, gender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, birthdate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, phone_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, picture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, user_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, app_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, last_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, blocked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, multifactor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, created_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, updated_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, phone_verified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, email_verified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, identities_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserMetadata, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserMetadata, bio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserMetadata, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserMetadata, tags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Address, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Address, city_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Address, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Address, line1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Address, line2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Address, zip_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AppMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AppMetadata, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AppMetadata, account_balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AppMetadata, plan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AppMetadata, tags_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Plan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Plan, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Plan, active_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Plan, amount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Plan, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Plan, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Plan, product_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Product, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Product, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Product, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Product, url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Identity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Identity, connection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Identity, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Identity, provider_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Identity, issocial_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Role, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Role, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Role, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Role, description_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::OAuth2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::OAuth2, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::OAuth2, client_secret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::OAuth2, token_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::OAuth2, auth_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::OAuth2, scopes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::OAuth2, redirect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::OAuth2, code_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::ClientCredentials, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::ClientCredentials, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::ClientCredentials, client_secret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::ClientCredentials, token_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::ClientCredentials, scopes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::ClientCredentials, endpoint_params_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JWT, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JWT, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JWT, private_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JWT, prive_key_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JWT, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JWT, scopes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JWT, token_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JWT, expires_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JWT, audience_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Query, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Query, query_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Query, fields_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Event, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Event, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Event, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Event, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Event, client_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Event, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Event, location_info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Event, details_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Event, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EventQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EventQuery, date_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EventQuery, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EventQuery, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EventQuery, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, kty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, kid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, use_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, e_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, x5c_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Jwks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Jwks, keys_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::api::AddUserRolesRequest)},
  { 7, -1, sizeof(::api::SubscribeRequest)},
  { 15, -1, sizeof(::api::UnSubscribeRequest)},
  { 22, -1, sizeof(::api::Card)},
  { 31, -1, sizeof(::api::User)},
  { 57, -1, sizeof(::api::UserMetadata)},
  { 66, -1, sizeof(::api::Address)},
  { 76, -1, sizeof(::api::AppMetadata)},
  { 85, -1, sizeof(::api::Plan)},
  { 96, -1, sizeof(::api::Product)},
  { 104, -1, sizeof(::api::Identity)},
  { 113, -1, sizeof(::api::Role)},
  { 121, -1, sizeof(::api::OAuth2)},
  { 133, -1, sizeof(::api::ClientCredentials)},
  { 143, -1, sizeof(::api::JWT)},
  { 156, -1, sizeof(::api::Query)},
  { 163, -1, sizeof(::api::Event)},
  { 176, -1, sizeof(::api::EventQuery)},
  { 185, -1, sizeof(::api::JSONWebKeys)},
  { 196, -1, sizeof(::api::Jwks)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_AddUserRolesRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_SubscribeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_UnSubscribeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Card_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_User_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_UserMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Address_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_AppMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Plan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Product_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Identity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Role_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_OAuth2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_ClientCredentials_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_JWT_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Query_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Event_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_EventQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_JSONWebKeys_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Jwks_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "api.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 20);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tapi.proto\022\003api\032\034google/api/annotations"
      ".proto\032\023common/common.proto\"R\n\023AddUserRo"
      "lesRequest\022!\n\005email\030\001 \001(\0132\022.common.Ident"
      "ifier\022\030\n\005roles\030\002 \003(\0132\t.api.Role\"p\n\020Subsc"
      "ribeRequest\022!\n\005email\030\001 \001(\0132\022.common.Iden"
      "tifier\022 \n\004plan\030\002 \001(\0132\022.common.Identifier"
      "\022\027\n\004card\030\003 \001(\0132\t.api.Card\"U\n\022UnSubscribe"
      "Request\022!\n\005email\030\001 \001(\0132\022.common.Identifi"
      "er\022\034\n\004plan\030\002 \001(\0132\016.common.String\"\214\001\n\004Car"
      "d\022\"\n\006number\030\001 \001(\0132\022.common.Identifier\022!\n"
      "\texp_month\030\002 \001(\0132\016.common.String\022 \n\010exp_"
      "year\030\003 \001(\0132\016.common.String\022\033\n\003cvc\030\004 \001(\0132"
      "\016.common.String\"\321\005\n\004User\022#\n\007user_id\030\001 \001("
      "\0132\022.common.Identifier\022\034\n\004name\030\002 \001(\0132\016.co"
      "mmon.String\022\"\n\ngiven_name\030\003 \001(\0132\016.common"
      ".String\022#\n\013family_name\030\004 \001(\0132\016.common.St"
      "ring\022\036\n\006gender\030\005 \001(\0132\016.common.String\022!\n\t"
      "birthdate\030\006 \001(\0132\016.common.String\022!\n\005email"
      "\030\007 \001(\0132\022.common.Identifier\022(\n\014phone_numb"
      "er\030\010 \001(\0132\022.common.Identifier\022\037\n\007picture\030"
      "\t \001(\0132\016.common.String\022 \n\010nickname\030\016 \001(\0132"
      "\016.common.String\022(\n\ruser_metadata\030\n \001(\0132\021"
      ".common.StringMap\022\'\n\014app_metadata\030\013 \001(\0132"
      "\021.common.StringMap\022\037\n\007last_ip\030\014 \001(\0132\016.co"
      "mmon.String\022\017\n\007blocked\030\r \001(\010\022(\n\013multifac"
      "tor\030\017 \001(\0132\023.common.StringArray\022\"\n\ncreate"
      "d_at\030\021 \001(\0132\016.common.String\022\"\n\nupdated_at"
      "\030\022 \001(\0132\016.common.String\022\026\n\016phone_verified"
      "\030\023 \001(\010\022\026\n\016email_verified\030\024 \001(\010\022 \n\010passwo"
      "rd\030\025 \001(\0132\016.common.String\022!\n\nidentities\030\026"
      " \003(\0132\r.api.Identity\"\216\001\n\014UserMetadata\022\036\n\006"
      "status\030\001 \001(\0132\016.common.String\022\036\n\003bio\030\002 \001("
      "\0132\021.common.StringMap\022\035\n\007address\030\003 \001(\0132\014."
      "api.Address\022\037\n\004tags\030\004 \001(\0132\021.common.Strin"
      "gMap\"Q\n\007Address\022\014\n\004city\030\001 \001(\t\022\r\n\005state\030\002"
      " \001(\t\022\r\n\005line1\030\003 \001(\t\022\r\n\005line2\030\004 \001(\t\022\013\n\003zi"
      "p\030\005 \001(\t\"\225\001\n\013AppMetadata\022#\n\013description\030\001"
      " \001(\0132\016.common.String\022\'\n\017account_balance\030"
      "\002 \001(\0132\016.common.String\022\027\n\004plan\030\003 \001(\0132\t.ap"
      "i.Plan\022\037\n\004tags\030\004 \001(\0132\021.common.StringMap\""
      "\276\001\n\004Plan\022\036\n\002id\030\001 \001(\0132\022.common.Identifier"
      "\022\016\n\006active\030\002 \001(\010\022\035\n\006amount\030\003 \001(\0132\r.commo"
      "n.Int64\022&\n\010interval\030\004 \001(\0162\024.api.BillingI"
      "nterval\022 \n\010nickname\030\005 \001(\0132\016.common.Strin"
      "g\022\035\n\007product\030\006 \001(\0132\014.api.Product\"k\n\007Prod"
      "uct\022\036\n\002id\030\001 \001(\0132\022.common.Identifier\022#\n\013d"
      "escription\030\002 \001(\0132\016.common.String\022\033\n\003url\030"
      "\003 \001(\0132\016.common.String\"\207\001\n\010Identity\022\"\n\nco"
      "nnection\030\001 \001(\0132\016.common.String\022#\n\007user_i"
      "d\030\002 \001(\0132\022.common.Identifier\022 \n\010provider\030"
      "\003 \001(\0132\016.common.String\022\020\n\010isSocial\030\004 \001(\010\""
      "i\n\004Role\022\036\n\002id\030\001 \001(\0132\022.common.Identifier\022"
      "\034\n\004name\030\002 \001(\0132\016.common.String\022#\n\013descrip"
      "tion\030\003 \001(\0132\016.common.String\"\374\001\n\006OAuth2\022!\n"
      "\tclient_id\030\001 \001(\0132\016.common.String\022%\n\rclie"
      "nt_secret\030\002 \001(\0132\016.common.String\022!\n\ttoken"
      "_url\030\003 \001(\0132\016.common.String\022 \n\010auth_url\030\004"
      " \001(\0132\016.common.String\022#\n\006scopes\030\005 \001(\0132\023.c"
      "ommon.StringArray\022 \n\010redirect\030\006 \001(\0132\016.co"
      "mmon.String\022\034\n\004code\030\007 \001(\0132\016.common.Strin"
      "g\"\321\001\n\021ClientCredentials\022!\n\tclient_id\030\001 \001"
      "(\0132\016.common.String\022%\n\rclient_secret\030\002 \001("
      "\0132\016.common.String\022!\n\ttoken_url\030\003 \001(\0132\016.c"
      "ommon.String\022#\n\006scopes\030\004 \001(\0132\023.common.St"
      "ringArray\022*\n\017endpoint_params\030\005 \001(\0132\021.com"
      "mon.StringMap\"\213\002\n\003JWT\022\035\n\005email\030\001 \001(\0132\016.c"
      "ommon.String\022\023\n\013private_key\030\002 \001(\014\022$\n\014pri"
      "ve_key_id\030\003 \001(\0132\016.common.String\022\037\n\007subje"
      "ct\030\004 \001(\0132\016.common.String\022#\n\006scopes\030\005 \001(\013"
      "2\023.common.StringArray\022!\n\ttoken_url\030\006 \001(\013"
      "2\016.common.String\022\037\n\007expires\030\007 \001(\0132\016.comm"
      "on.String\022 \n\010audience\030\010 \001(\0132\016.common.Str"
      "ing\"F\n\005Query\022\035\n\005query\030\004 \001(\0132\016.common.Str"
      "ing\022\036\n\006fields\030\005 \001(\0132\016.common.String\"\220\002\n\005"
      "Event\022\034\n\004date\030\001 \001(\0132\016.common.String\022\034\n\004t"
      "ype\030\002 \001(\0132\016.common.String\022!\n\tclient_id\030\003"
      " \001(\0132\016.common.String\022#\n\013client_name\030\004 \001("
      "\0132\016.common.String\022\032\n\002ip\030\005 \001(\0132\016.common.S"
      "tring\022%\n\rlocation_info\030\006 \001(\0132\016.common.St"
      "ring\022\037\n\007details\030\007 \001(\0132\016.common.String\022\037\n"
      "\007user_id\030\010 \001(\0132\016.common.String\"L\n\nEventQ"
      "uery\022\014\n\004date\030\001 \001(\t\022\014\n\004type\030\002 \001(\t\022\021\n\tclie"
      "nt_id\030\003 \001(\t\022\017\n\007user_id\030\004 \001(\t\"\300\001\n\013JSONWeb"
      "Keys\022\033\n\003kty\030\001 \001(\0132\016.common.String\022\037\n\003kid"
      "\030\002 \001(\0132\022.common.Identifier\022\033\n\003use\030\003 \001(\0132"
      "\016.common.String\022\031\n\001n\030\004 \001(\0132\016.common.Stri"
      "ng\022\031\n\001e\030\005 \001(\0132\016.common.String\022 \n\003x5c\030\006 \001"
      "(\0132\023.common.StringArray\"&\n\004Jwks\022\036\n\004keys\030"
      "\001 \003(\0132\020.api.JSONWebKeys*A\n\017BillingInterv"
      "al\022\t\n\005DAILY\020\000\022\n\n\006WEEKLY\020\001\022\013\n\007MONTHLY\020\002\022\n"
      "\n\006YEARLY\020\0032I\n\014DebugService\0229\n\004Echo\022\016.com"
      "mon.String\032\016.common.String\"\021\202\323\344\223\002\013\"\006/deb"
      "ug:\001*2\247\001\n\023SubscriptionService\022D\n\tSubscri"
      "be\022\025.api.SubscribeRequest\032\t.api.User\"\025\202\323"
      "\344\223\002\017\"\n/subscribe:\001*\022J\n\013Unsubscribe\022\027.api"
      ".UnSubscribeRequest\032\t.api.User\"\027\202\323\344\223\002\021\"\014"
      "/unsubscribe:\001*2\315\001\n\014CacheService\022<\n\003Get\022"
      "\016.common.String\032\016.common.String\"\025\202\323\344\223\002\017\""
      "\n/cache/get:\001*\022\?\n\006Exists\022\016.common.String"
      "\032\016.common.String\"\025\202\323\344\223\002\017\"\n/cache/get:\001*\022"
      ">\n\003Set\022\021.common.StringMap\032\r.common.Empty"
      "\"\025\202\323\344\223\002\017\"\n/cache/set:\001*2\\\n\025Authenticatio"
      "nService\022C\n\007GetUser\022\021.common.AuthToken\032\t"
      ".api.User\"\032\202\323\344\223\002\024\"\017/authentication:\001*2\230\003"
      "\n\013UserService\022H\n\nQueryUsers\022\n.api.Query\032"
      "\t.api.User\"!\202\323\344\223\002\033\"\026/management/user/que"
      "ry:\001*0\001\022I\n\007GetUser\022\022.common.Identifier\032\t"
      ".api.User\"\037\202\323\344\223\002\031\"\024/management/user/get:"
      "\001*\022F\n\nUpdateUser\022\t.api.User\032\t.api.User\"\""
      "\202\323\344\223\002\034\"\027/management/user/update:\001*\022O\n\tUs"
      "erRoles\022\022.common.Identifier\032\t.api.Role\"!"
      "\202\323\344\223\002\033\"\026/management/user/roles:\001*0\001\022[\n\014A"
      "ddUserRoles\022\030.api.AddUserRolesRequest\032\016."
      "common.String\"!\202\323\344\223\002\033\"\026/management/user/"
      "roles:\001*2N\n\014EventService\022>\n\tGetEvents\022\017."
      "api.EventQuery\032\n.api.Event\"\022\202\323\344\223\002\014\"\007/eve"
      "nts:\001*0\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4656);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_common_2fcommon_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_api_2eproto
namespace api {
const ::google::protobuf::EnumDescriptor* BillingInterval_descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_enum_descriptors[0];
}
bool BillingInterval_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void AddUserRolesRequest::InitAsDefaultInstance() {
  ::api::_AddUserRolesRequest_default_instance_._instance.get_mutable()->email_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
}
void AddUserRolesRequest::clear_email() {
  if (GetArenaNoVirtual() == NULL && email_ != NULL) {
    delete email_;
  }
  email_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddUserRolesRequest::kEmailFieldNumber;
const int AddUserRolesRequest::kRolesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddUserRolesRequest::AddUserRolesRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_AddUserRolesRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.AddUserRolesRequest)
}
AddUserRolesRequest::AddUserRolesRequest(const AddUserRolesRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      roles_(from.roles_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_email()) {
    email_ = new ::common::Identifier(*from.email_);
  } else {
    email_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.AddUserRolesRequest)
}

void AddUserRolesRequest::SharedCtor() {
  email_ = NULL;
}

AddUserRolesRequest::~AddUserRolesRequest() {
  // @@protoc_insertion_point(destructor:api.AddUserRolesRequest)
  SharedDtor();
}

void AddUserRolesRequest::SharedDtor() {
  if (this != internal_default_instance()) delete email_;
}

void AddUserRolesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AddUserRolesRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AddUserRolesRequest& AddUserRolesRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_AddUserRolesRequest.base);
  return *internal_default_instance();
}


void AddUserRolesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.AddUserRolesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roles_.Clear();
  if (GetArenaNoVirtual() == NULL && email_ != NULL) {
    delete email_;
  }
  email_ = NULL;
  _internal_metadata_.Clear();
}

bool AddUserRolesRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.AddUserRolesRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Identifier email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .api.Role roles = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_roles()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.AddUserRolesRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.AddUserRolesRequest)
  return false;
#undef DO_
}

void AddUserRolesRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.AddUserRolesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier email = 1;
  if (this->has_email()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_email(), output);
  }

  // repeated .api.Role roles = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->roles(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.AddUserRolesRequest)
}

::google::protobuf::uint8* AddUserRolesRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.AddUserRolesRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier email = 1;
  if (this->has_email()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_email(), deterministic, target);
  }

  // repeated .api.Role roles = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->roles_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->roles(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.AddUserRolesRequest)
  return target;
}

size_t AddUserRolesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.AddUserRolesRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .api.Role roles = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->roles_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->roles(static_cast<int>(i)));
    }
  }

  // .common.Identifier email = 1;
  if (this->has_email()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *email_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddUserRolesRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.AddUserRolesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddUserRolesRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddUserRolesRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.AddUserRolesRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.AddUserRolesRequest)
    MergeFrom(*source);
  }
}

void AddUserRolesRequest::MergeFrom(const AddUserRolesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.AddUserRolesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roles_.MergeFrom(from.roles_);
  if (from.has_email()) {
    mutable_email()->::common::Identifier::MergeFrom(from.email());
  }
}

void AddUserRolesRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.AddUserRolesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddUserRolesRequest::CopyFrom(const AddUserRolesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.AddUserRolesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddUserRolesRequest::IsInitialized() const {
  return true;
}

void AddUserRolesRequest::Swap(AddUserRolesRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddUserRolesRequest::InternalSwap(AddUserRolesRequest* other) {
  using std::swap;
  CastToBase(&roles_)->InternalSwap(CastToBase(&other->roles_));
  swap(email_, other->email_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AddUserRolesRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubscribeRequest::InitAsDefaultInstance() {
  ::api::_SubscribeRequest_default_instance_._instance.get_mutable()->email_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_SubscribeRequest_default_instance_._instance.get_mutable()->plan_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_SubscribeRequest_default_instance_._instance.get_mutable()->card_ = const_cast< ::api::Card*>(
      ::api::Card::internal_default_instance());
}
void SubscribeRequest::clear_email() {
  if (GetArenaNoVirtual() == NULL && email_ != NULL) {
    delete email_;
  }
  email_ = NULL;
}
void SubscribeRequest::clear_plan() {
  if (GetArenaNoVirtual() == NULL && plan_ != NULL) {
    delete plan_;
  }
  plan_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeRequest::kEmailFieldNumber;
const int SubscribeRequest::kPlanFieldNumber;
const int SubscribeRequest::kCardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeRequest::SubscribeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_SubscribeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.SubscribeRequest)
}
SubscribeRequest::SubscribeRequest(const SubscribeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_email()) {
    email_ = new ::common::Identifier(*from.email_);
  } else {
    email_ = NULL;
  }
  if (from.has_plan()) {
    plan_ = new ::common::Identifier(*from.plan_);
  } else {
    plan_ = NULL;
  }
  if (from.has_card()) {
    card_ = new ::api::Card(*from.card_);
  } else {
    card_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.SubscribeRequest)
}

void SubscribeRequest::SharedCtor() {
  ::memset(&email_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&card_) -
      reinterpret_cast<char*>(&email_)) + sizeof(card_));
}

SubscribeRequest::~SubscribeRequest() {
  // @@protoc_insertion_point(destructor:api.SubscribeRequest)
  SharedDtor();
}

void SubscribeRequest::SharedDtor() {
  if (this != internal_default_instance()) delete email_;
  if (this != internal_default_instance()) delete plan_;
  if (this != internal_default_instance()) delete card_;
}

void SubscribeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SubscribeRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscribeRequest& SubscribeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_SubscribeRequest.base);
  return *internal_default_instance();
}


void SubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && email_ != NULL) {
    delete email_;
  }
  email_ = NULL;
  if (GetArenaNoVirtual() == NULL && plan_ != NULL) {
    delete plan_;
  }
  plan_ = NULL;
  if (GetArenaNoVirtual() == NULL && card_ != NULL) {
    delete card_;
  }
  card_ = NULL;
  _internal_metadata_.Clear();
}

bool SubscribeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.SubscribeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Identifier email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Identifier plan = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_plan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.Card card = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_card()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.SubscribeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.SubscribeRequest)
  return false;
#undef DO_
}

void SubscribeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier email = 1;
  if (this->has_email()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_email(), output);
  }

  // .common.Identifier plan = 2;
  if (this->has_plan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_plan(), output);
  }

  // .api.Card card = 3;
  if (this->has_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_card(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.SubscribeRequest)
}

::google::protobuf::uint8* SubscribeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier email = 1;
  if (this->has_email()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_email(), deterministic, target);
  }

  // .common.Identifier plan = 2;
  if (this->has_plan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_plan(), deterministic, target);
  }

  // .api.Card card = 3;
  if (this->has_card()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_card(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.SubscribeRequest)
  return target;
}

size_t SubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.SubscribeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.Identifier email = 1;
  if (this->has_email()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *email_);
  }

  // .common.Identifier plan = 2;
  if (this->has_plan()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *plan_);
  }

  // .api.Card card = 3;
  if (this->has_card()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *card_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.SubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.SubscribeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.SubscribeRequest)
    MergeFrom(*source);
  }
}

void SubscribeRequest::MergeFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.SubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_email()) {
    mutable_email()->::common::Identifier::MergeFrom(from.email());
  }
  if (from.has_plan()) {
    mutable_plan()->::common::Identifier::MergeFrom(from.plan());
  }
  if (from.has_card()) {
    mutable_card()->::api::Card::MergeFrom(from.card());
  }
}

void SubscribeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeRequest::CopyFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeRequest::IsInitialized() const {
  return true;
}

void SubscribeRequest::Swap(SubscribeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeRequest::InternalSwap(SubscribeRequest* other) {
  using std::swap;
  swap(email_, other->email_);
  swap(plan_, other->plan_);
  swap(card_, other->card_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SubscribeRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnSubscribeRequest::InitAsDefaultInstance() {
  ::api::_UnSubscribeRequest_default_instance_._instance.get_mutable()->email_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_UnSubscribeRequest_default_instance_._instance.get_mutable()->plan_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void UnSubscribeRequest::clear_email() {
  if (GetArenaNoVirtual() == NULL && email_ != NULL) {
    delete email_;
  }
  email_ = NULL;
}
void UnSubscribeRequest::clear_plan() {
  if (GetArenaNoVirtual() == NULL && plan_ != NULL) {
    delete plan_;
  }
  plan_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnSubscribeRequest::kEmailFieldNumber;
const int UnSubscribeRequest::kPlanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnSubscribeRequest::UnSubscribeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_UnSubscribeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.UnSubscribeRequest)
}
UnSubscribeRequest::UnSubscribeRequest(const UnSubscribeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_email()) {
    email_ = new ::common::Identifier(*from.email_);
  } else {
    email_ = NULL;
  }
  if (from.has_plan()) {
    plan_ = new ::common::String(*from.plan_);
  } else {
    plan_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.UnSubscribeRequest)
}

void UnSubscribeRequest::SharedCtor() {
  ::memset(&email_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&plan_) -
      reinterpret_cast<char*>(&email_)) + sizeof(plan_));
}

UnSubscribeRequest::~UnSubscribeRequest() {
  // @@protoc_insertion_point(destructor:api.UnSubscribeRequest)
  SharedDtor();
}

void UnSubscribeRequest::SharedDtor() {
  if (this != internal_default_instance()) delete email_;
  if (this != internal_default_instance()) delete plan_;
}

void UnSubscribeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UnSubscribeRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnSubscribeRequest& UnSubscribeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_UnSubscribeRequest.base);
  return *internal_default_instance();
}


void UnSubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.UnSubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && email_ != NULL) {
    delete email_;
  }
  email_ = NULL;
  if (GetArenaNoVirtual() == NULL && plan_ != NULL) {
    delete plan_;
  }
  plan_ = NULL;
  _internal_metadata_.Clear();
}

bool UnSubscribeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.UnSubscribeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Identifier email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String plan = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_plan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.UnSubscribeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.UnSubscribeRequest)
  return false;
#undef DO_
}

void UnSubscribeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.UnSubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier email = 1;
  if (this->has_email()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_email(), output);
  }

  // .common.String plan = 2;
  if (this->has_plan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_plan(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.UnSubscribeRequest)
}

::google::protobuf::uint8* UnSubscribeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.UnSubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier email = 1;
  if (this->has_email()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_email(), deterministic, target);
  }

  // .common.String plan = 2;
  if (this->has_plan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_plan(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.UnSubscribeRequest)
  return target;
}

size_t UnSubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.UnSubscribeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.Identifier email = 1;
  if (this->has_email()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *email_);
  }

  // .common.String plan = 2;
  if (this->has_plan()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *plan_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnSubscribeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.UnSubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnSubscribeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnSubscribeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.UnSubscribeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.UnSubscribeRequest)
    MergeFrom(*source);
  }
}

void UnSubscribeRequest::MergeFrom(const UnSubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.UnSubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_email()) {
    mutable_email()->::common::Identifier::MergeFrom(from.email());
  }
  if (from.has_plan()) {
    mutable_plan()->::common::String::MergeFrom(from.plan());
  }
}

void UnSubscribeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.UnSubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnSubscribeRequest::CopyFrom(const UnSubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.UnSubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnSubscribeRequest::IsInitialized() const {
  return true;
}

void UnSubscribeRequest::Swap(UnSubscribeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnSubscribeRequest::InternalSwap(UnSubscribeRequest* other) {
  using std::swap;
  swap(email_, other->email_);
  swap(plan_, other->plan_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UnSubscribeRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Card::InitAsDefaultInstance() {
  ::api::_Card_default_instance_._instance.get_mutable()->number_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_Card_default_instance_._instance.get_mutable()->exp_month_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Card_default_instance_._instance.get_mutable()->exp_year_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Card_default_instance_._instance.get_mutable()->cvc_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void Card::clear_number() {
  if (GetArenaNoVirtual() == NULL && number_ != NULL) {
    delete number_;
  }
  number_ = NULL;
}
void Card::clear_exp_month() {
  if (GetArenaNoVirtual() == NULL && exp_month_ != NULL) {
    delete exp_month_;
  }
  exp_month_ = NULL;
}
void Card::clear_exp_year() {
  if (GetArenaNoVirtual() == NULL && exp_year_ != NULL) {
    delete exp_year_;
  }
  exp_year_ = NULL;
}
void Card::clear_cvc() {
  if (GetArenaNoVirtual() == NULL && cvc_ != NULL) {
    delete cvc_;
  }
  cvc_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Card::kNumberFieldNumber;
const int Card::kExpMonthFieldNumber;
const int Card::kExpYearFieldNumber;
const int Card::kCvcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Card::Card()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Card.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Card)
}
Card::Card(const Card& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_number()) {
    number_ = new ::common::Identifier(*from.number_);
  } else {
    number_ = NULL;
  }
  if (from.has_exp_month()) {
    exp_month_ = new ::common::String(*from.exp_month_);
  } else {
    exp_month_ = NULL;
  }
  if (from.has_exp_year()) {
    exp_year_ = new ::common::String(*from.exp_year_);
  } else {
    exp_year_ = NULL;
  }
  if (from.has_cvc()) {
    cvc_ = new ::common::String(*from.cvc_);
  } else {
    cvc_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.Card)
}

void Card::SharedCtor() {
  ::memset(&number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cvc_) -
      reinterpret_cast<char*>(&number_)) + sizeof(cvc_));
}

Card::~Card() {
  // @@protoc_insertion_point(destructor:api.Card)
  SharedDtor();
}

void Card::SharedDtor() {
  if (this != internal_default_instance()) delete number_;
  if (this != internal_default_instance()) delete exp_month_;
  if (this != internal_default_instance()) delete exp_year_;
  if (this != internal_default_instance()) delete cvc_;
}

void Card::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Card::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Card& Card::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Card.base);
  return *internal_default_instance();
}


void Card::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && number_ != NULL) {
    delete number_;
  }
  number_ = NULL;
  if (GetArenaNoVirtual() == NULL && exp_month_ != NULL) {
    delete exp_month_;
  }
  exp_month_ = NULL;
  if (GetArenaNoVirtual() == NULL && exp_year_ != NULL) {
    delete exp_year_;
  }
  exp_year_ = NULL;
  if (GetArenaNoVirtual() == NULL && cvc_ != NULL) {
    delete cvc_;
  }
  cvc_ = NULL;
  _internal_metadata_.Clear();
}

bool Card::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Card)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Identifier number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_number()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String exp_month = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exp_month()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String exp_year = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exp_year()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String cvc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cvc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Card)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Card)
  return false;
#undef DO_
}

void Card::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier number = 1;
  if (this->has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_number(), output);
  }

  // .common.String exp_month = 2;
  if (this->has_exp_month()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_exp_month(), output);
  }

  // .common.String exp_year = 3;
  if (this->has_exp_year()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_exp_year(), output);
  }

  // .common.String cvc = 4;
  if (this->has_cvc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_cvc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Card)
}

::google::protobuf::uint8* Card::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier number = 1;
  if (this->has_number()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_number(), deterministic, target);
  }

  // .common.String exp_month = 2;
  if (this->has_exp_month()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_exp_month(), deterministic, target);
  }

  // .common.String exp_year = 3;
  if (this->has_exp_year()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_exp_year(), deterministic, target);
  }

  // .common.String cvc = 4;
  if (this->has_cvc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_cvc(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Card)
  return target;
}

size_t Card::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Card)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.Identifier number = 1;
  if (this->has_number()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *number_);
  }

  // .common.String exp_month = 2;
  if (this->has_exp_month()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *exp_month_);
  }

  // .common.String exp_year = 3;
  if (this->has_exp_year()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *exp_year_);
  }

  // .common.String cvc = 4;
  if (this->has_cvc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cvc_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Card::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Card)
  GOOGLE_DCHECK_NE(&from, this);
  const Card* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Card>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Card)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Card)
    MergeFrom(*source);
  }
}

void Card::MergeFrom(const Card& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Card)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_number()) {
    mutable_number()->::common::Identifier::MergeFrom(from.number());
  }
  if (from.has_exp_month()) {
    mutable_exp_month()->::common::String::MergeFrom(from.exp_month());
  }
  if (from.has_exp_year()) {
    mutable_exp_year()->::common::String::MergeFrom(from.exp_year());
  }
  if (from.has_cvc()) {
    mutable_cvc()->::common::String::MergeFrom(from.cvc());
  }
}

void Card::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Card::CopyFrom(const Card& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Card::IsInitialized() const {
  return true;
}

void Card::Swap(Card* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Card::InternalSwap(Card* other) {
  using std::swap;
  swap(number_, other->number_);
  swap(exp_month_, other->exp_month_);
  swap(exp_year_, other->exp_year_);
  swap(cvc_, other->cvc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Card::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void User::InitAsDefaultInstance() {
  ::api::_User_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->name_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->given_name_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->family_name_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->gender_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->birthdate_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->email_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->phone_number_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->picture_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->nickname_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->user_metadata_ = const_cast< ::common::StringMap*>(
      ::common::StringMap::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->app_metadata_ = const_cast< ::common::StringMap*>(
      ::common::StringMap::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->last_ip_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->multifactor_ = const_cast< ::common::StringArray*>(
      ::common::StringArray::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->created_at_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->updated_at_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->password_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void User::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) {
    delete user_id_;
  }
  user_id_ = NULL;
}
void User::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void User::clear_given_name() {
  if (GetArenaNoVirtual() == NULL && given_name_ != NULL) {
    delete given_name_;
  }
  given_name_ = NULL;
}
void User::clear_family_name() {
  if (GetArenaNoVirtual() == NULL && family_name_ != NULL) {
    delete family_name_;
  }
  family_name_ = NULL;
}
void User::clear_gender() {
  if (GetArenaNoVirtual() == NULL && gender_ != NULL) {
    delete gender_;
  }
  gender_ = NULL;
}
void User::clear_birthdate() {
  if (GetArenaNoVirtual() == NULL && birthdate_ != NULL) {
    delete birthdate_;
  }
  birthdate_ = NULL;
}
void User::clear_email() {
  if (GetArenaNoVirtual() == NULL && email_ != NULL) {
    delete email_;
  }
  email_ = NULL;
}
void User::clear_phone_number() {
  if (GetArenaNoVirtual() == NULL && phone_number_ != NULL) {
    delete phone_number_;
  }
  phone_number_ = NULL;
}
void User::clear_picture() {
  if (GetArenaNoVirtual() == NULL && picture_ != NULL) {
    delete picture_;
  }
  picture_ = NULL;
}
void User::clear_nickname() {
  if (GetArenaNoVirtual() == NULL && nickname_ != NULL) {
    delete nickname_;
  }
  nickname_ = NULL;
}
void User::clear_user_metadata() {
  if (GetArenaNoVirtual() == NULL && user_metadata_ != NULL) {
    delete user_metadata_;
  }
  user_metadata_ = NULL;
}
void User::clear_app_metadata() {
  if (GetArenaNoVirtual() == NULL && app_metadata_ != NULL) {
    delete app_metadata_;
  }
  app_metadata_ = NULL;
}
void User::clear_last_ip() {
  if (GetArenaNoVirtual() == NULL && last_ip_ != NULL) {
    delete last_ip_;
  }
  last_ip_ = NULL;
}
void User::clear_multifactor() {
  if (GetArenaNoVirtual() == NULL && multifactor_ != NULL) {
    delete multifactor_;
  }
  multifactor_ = NULL;
}
void User::clear_created_at() {
  if (GetArenaNoVirtual() == NULL && created_at_ != NULL) {
    delete created_at_;
  }
  created_at_ = NULL;
}
void User::clear_updated_at() {
  if (GetArenaNoVirtual() == NULL && updated_at_ != NULL) {
    delete updated_at_;
  }
  updated_at_ = NULL;
}
void User::clear_password() {
  if (GetArenaNoVirtual() == NULL && password_ != NULL) {
    delete password_;
  }
  password_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int User::kUserIdFieldNumber;
const int User::kNameFieldNumber;
const int User::kGivenNameFieldNumber;
const int User::kFamilyNameFieldNumber;
const int User::kGenderFieldNumber;
const int User::kBirthdateFieldNumber;
const int User::kEmailFieldNumber;
const int User::kPhoneNumberFieldNumber;
const int User::kPictureFieldNumber;
const int User::kNicknameFieldNumber;
const int User::kUserMetadataFieldNumber;
const int User::kAppMetadataFieldNumber;
const int User::kLastIpFieldNumber;
const int User::kBlockedFieldNumber;
const int User::kMultifactorFieldNumber;
const int User::kCreatedAtFieldNumber;
const int User::kUpdatedAtFieldNumber;
const int User::kPhoneVerifiedFieldNumber;
const int User::kEmailVerifiedFieldNumber;
const int User::kPasswordFieldNumber;
const int User::kIdentitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

User::User()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_User.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.User)
}
User::User(const User& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      identities_(from.identities_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user_id()) {
    user_id_ = new ::common::Identifier(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::common::String(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_given_name()) {
    given_name_ = new ::common::String(*from.given_name_);
  } else {
    given_name_ = NULL;
  }
  if (from.has_family_name()) {
    family_name_ = new ::common::String(*from.family_name_);
  } else {
    family_name_ = NULL;
  }
  if (from.has_gender()) {
    gender_ = new ::common::String(*from.gender_);
  } else {
    gender_ = NULL;
  }
  if (from.has_birthdate()) {
    birthdate_ = new ::common::String(*from.birthdate_);
  } else {
    birthdate_ = NULL;
  }
  if (from.has_email()) {
    email_ = new ::common::Identifier(*from.email_);
  } else {
    email_ = NULL;
  }
  if (from.has_phone_number()) {
    phone_number_ = new ::common::Identifier(*from.phone_number_);
  } else {
    phone_number_ = NULL;
  }
  if (from.has_picture()) {
    picture_ = new ::common::String(*from.picture_);
  } else {
    picture_ = NULL;
  }
  if (from.has_user_metadata()) {
    user_metadata_ = new ::common::StringMap(*from.user_metadata_);
  } else {
    user_metadata_ = NULL;
  }
  if (from.has_app_metadata()) {
    app_metadata_ = new ::common::StringMap(*from.app_metadata_);
  } else {
    app_metadata_ = NULL;
  }
  if (from.has_last_ip()) {
    last_ip_ = new ::common::String(*from.last_ip_);
  } else {
    last_ip_ = NULL;
  }
  if (from.has_nickname()) {
    nickname_ = new ::common::String(*from.nickname_);
  } else {
    nickname_ = NULL;
  }
  if (from.has_multifactor()) {
    multifactor_ = new ::common::StringArray(*from.multifactor_);
  } else {
    multifactor_ = NULL;
  }
  if (from.has_created_at()) {
    created_at_ = new ::common::String(*from.created_at_);
  } else {
    created_at_ = NULL;
  }
  if (from.has_updated_at()) {
    updated_at_ = new ::common::String(*from.updated_at_);
  } else {
    updated_at_ = NULL;
  }
  if (from.has_password()) {
    password_ = new ::common::String(*from.password_);
  } else {
    password_ = NULL;
  }
  ::memcpy(&blocked_, &from.blocked_,
    static_cast<size_t>(reinterpret_cast<char*>(&email_verified_) -
    reinterpret_cast<char*>(&blocked_)) + sizeof(email_verified_));
  // @@protoc_insertion_point(copy_constructor:api.User)
}

void User::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&email_verified_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(email_verified_));
}

User::~User() {
  // @@protoc_insertion_point(destructor:api.User)
  SharedDtor();
}

void User::SharedDtor() {
  if (this != internal_default_instance()) delete user_id_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete given_name_;
  if (this != internal_default_instance()) delete family_name_;
  if (this != internal_default_instance()) delete gender_;
  if (this != internal_default_instance()) delete birthdate_;
  if (this != internal_default_instance()) delete email_;
  if (this != internal_default_instance()) delete phone_number_;
  if (this != internal_default_instance()) delete picture_;
  if (this != internal_default_instance()) delete user_metadata_;
  if (this != internal_default_instance()) delete app_metadata_;
  if (this != internal_default_instance()) delete last_ip_;
  if (this != internal_default_instance()) delete nickname_;
  if (this != internal_default_instance()) delete multifactor_;
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete updated_at_;
  if (this != internal_default_instance()) delete password_;
}

void User::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* User::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const User& User::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_User.base);
  return *internal_default_instance();
}


void User::Clear() {
// @@protoc_insertion_point(message_clear_start:api.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identities_.Clear();
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) {
    delete user_id_;
  }
  user_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && given_name_ != NULL) {
    delete given_name_;
  }
  given_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && family_name_ != NULL) {
    delete family_name_;
  }
  family_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && gender_ != NULL) {
    delete gender_;
  }
  gender_ = NULL;
  if (GetArenaNoVirtual() == NULL && birthdate_ != NULL) {
    delete birthdate_;
  }
  birthdate_ = NULL;
  if (GetArenaNoVirtual() == NULL && email_ != NULL) {
    delete email_;
  }
  email_ = NULL;
  if (GetArenaNoVirtual() == NULL && phone_number_ != NULL) {
    delete phone_number_;
  }
  phone_number_ = NULL;
  if (GetArenaNoVirtual() == NULL && picture_ != NULL) {
    delete picture_;
  }
  picture_ = NULL;
  if (GetArenaNoVirtual() == NULL && user_metadata_ != NULL) {
    delete user_metadata_;
  }
  user_metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && app_metadata_ != NULL) {
    delete app_metadata_;
  }
  app_metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_ip_ != NULL) {
    delete last_ip_;
  }
  last_ip_ = NULL;
  if (GetArenaNoVirtual() == NULL && nickname_ != NULL) {
    delete nickname_;
  }
  nickname_ = NULL;
  if (GetArenaNoVirtual() == NULL && multifactor_ != NULL) {
    delete multifactor_;
  }
  multifactor_ = NULL;
  if (GetArenaNoVirtual() == NULL && created_at_ != NULL) {
    delete created_at_;
  }
  created_at_ = NULL;
  if (GetArenaNoVirtual() == NULL && updated_at_ != NULL) {
    delete updated_at_;
  }
  updated_at_ = NULL;
  if (GetArenaNoVirtual() == NULL && password_ != NULL) {
    delete password_;
  }
  password_ = NULL;
  ::memset(&blocked_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&email_verified_) -
      reinterpret_cast<char*>(&blocked_)) + sizeof(email_verified_));
  _internal_metadata_.Clear();
}

bool User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.User)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Identifier user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String given_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_given_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String family_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_family_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String gender = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gender()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String birthdate = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_birthdate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Identifier email = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Identifier phone_number = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phone_number()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String picture = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_picture()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringMap user_metadata = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringMap app_metadata = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_app_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String last_ip = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool blocked = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &blocked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String nickname = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nickname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringArray multifactor = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_multifactor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String created_at = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_created_at()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String updated_at = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_updated_at()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool phone_verified = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &phone_verified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool email_verified = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &email_verified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String password = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_password()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .api.Identity identities = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.User)
  return false;
#undef DO_
}

void User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier user_id = 1;
  if (this->has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_user_id(), output);
  }

  // .common.String name = 2;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_name(), output);
  }

  // .common.String given_name = 3;
  if (this->has_given_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_given_name(), output);
  }

  // .common.String family_name = 4;
  if (this->has_family_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_family_name(), output);
  }

  // .common.String gender = 5;
  if (this->has_gender()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_gender(), output);
  }

  // .common.String birthdate = 6;
  if (this->has_birthdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_birthdate(), output);
  }

  // .common.Identifier email = 7;
  if (this->has_email()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_email(), output);
  }

  // .common.Identifier phone_number = 8;
  if (this->has_phone_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_phone_number(), output);
  }

  // .common.String picture = 9;
  if (this->has_picture()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_picture(), output);
  }

  // .common.StringMap user_metadata = 10;
  if (this->has_user_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_user_metadata(), output);
  }

  // .common.StringMap app_metadata = 11;
  if (this->has_app_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_app_metadata(), output);
  }

  // .common.String last_ip = 12;
  if (this->has_last_ip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_last_ip(), output);
  }

  // bool blocked = 13;
  if (this->blocked() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->blocked(), output);
  }

  // .common.String nickname = 14;
  if (this->has_nickname()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_nickname(), output);
  }

  // .common.StringArray multifactor = 15;
  if (this->has_multifactor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_multifactor(), output);
  }

  // .common.String created_at = 17;
  if (this->has_created_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_created_at(), output);
  }

  // .common.String updated_at = 18;
  if (this->has_updated_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_updated_at(), output);
  }

  // bool phone_verified = 19;
  if (this->phone_verified() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->phone_verified(), output);
  }

  // bool email_verified = 20;
  if (this->email_verified() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->email_verified(), output);
  }

  // .common.String password = 21;
  if (this->has_password()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_password(), output);
  }

  // repeated .api.Identity identities = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identities_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22,
      this->identities(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.User)
}

::google::protobuf::uint8* User::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier user_id = 1;
  if (this->has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_user_id(), deterministic, target);
  }

  // .common.String name = 2;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_name(), deterministic, target);
  }

  // .common.String given_name = 3;
  if (this->has_given_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_given_name(), deterministic, target);
  }

  // .common.String family_name = 4;
  if (this->has_family_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_family_name(), deterministic, target);
  }

  // .common.String gender = 5;
  if (this->has_gender()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_gender(), deterministic, target);
  }

  // .common.String birthdate = 6;
  if (this->has_birthdate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_birthdate(), deterministic, target);
  }

  // .common.Identifier email = 7;
  if (this->has_email()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_email(), deterministic, target);
  }

  // .common.Identifier phone_number = 8;
  if (this->has_phone_number()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_phone_number(), deterministic, target);
  }

  // .common.String picture = 9;
  if (this->has_picture()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_picture(), deterministic, target);
  }

  // .common.StringMap user_metadata = 10;
  if (this->has_user_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_user_metadata(), deterministic, target);
  }

  // .common.StringMap app_metadata = 11;
  if (this->has_app_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_app_metadata(), deterministic, target);
  }

  // .common.String last_ip = 12;
  if (this->has_last_ip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_last_ip(), deterministic, target);
  }

  // bool blocked = 13;
  if (this->blocked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->blocked(), target);
  }

  // .common.String nickname = 14;
  if (this->has_nickname()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_nickname(), deterministic, target);
  }

  // .common.StringArray multifactor = 15;
  if (this->has_multifactor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_multifactor(), deterministic, target);
  }

  // .common.String created_at = 17;
  if (this->has_created_at()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_created_at(), deterministic, target);
  }

  // .common.String updated_at = 18;
  if (this->has_updated_at()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_updated_at(), deterministic, target);
  }

  // bool phone_verified = 19;
  if (this->phone_verified() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->phone_verified(), target);
  }

  // bool email_verified = 20;
  if (this->email_verified() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->email_verified(), target);
  }

  // .common.String password = 21;
  if (this->has_password()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_password(), deterministic, target);
  }

  // repeated .api.Identity identities = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identities_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->identities(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.User)
  return target;
}

size_t User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.User)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .api.Identity identities = 22;
  {
    unsigned int count = static_cast<unsigned int>(this->identities_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identities(static_cast<int>(i)));
    }
  }

  // .common.Identifier user_id = 1;
  if (this->has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_id_);
  }

  // .common.String name = 2;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .common.String given_name = 3;
  if (this->has_given_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *given_name_);
  }

  // .common.String family_name = 4;
  if (this->has_family_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *family_name_);
  }

  // .common.String gender = 5;
  if (this->has_gender()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gender_);
  }

  // .common.String birthdate = 6;
  if (this->has_birthdate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *birthdate_);
  }

  // .common.Identifier email = 7;
  if (this->has_email()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *email_);
  }

  // .common.Identifier phone_number = 8;
  if (this->has_phone_number()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phone_number_);
  }

  // .common.String picture = 9;
  if (this->has_picture()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *picture_);
  }

  // .common.StringMap user_metadata = 10;
  if (this->has_user_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_metadata_);
  }

  // .common.StringMap app_metadata = 11;
  if (this->has_app_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *app_metadata_);
  }

  // .common.String last_ip = 12;
  if (this->has_last_ip()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *last_ip_);
  }

  // .common.String nickname = 14;
  if (this->has_nickname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *nickname_);
  }

  // .common.StringArray multifactor = 15;
  if (this->has_multifactor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *multifactor_);
  }

  // .common.String created_at = 17;
  if (this->has_created_at()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .common.String updated_at = 18;
  if (this->has_updated_at()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *updated_at_);
  }

  // .common.String password = 21;
  if (this->has_password()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *password_);
  }

  // bool blocked = 13;
  if (this->blocked() != 0) {
    total_size += 1 + 1;
  }

  // bool phone_verified = 19;
  if (this->phone_verified() != 0) {
    total_size += 2 + 1;
  }

  // bool email_verified = 20;
  if (this->email_verified() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void User::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.User)
  GOOGLE_DCHECK_NE(&from, this);
  const User* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const User>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.User)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.User)
    MergeFrom(*source);
  }
}

void User::MergeFrom(const User& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.User)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  identities_.MergeFrom(from.identities_);
  if (from.has_user_id()) {
    mutable_user_id()->::common::Identifier::MergeFrom(from.user_id());
  }
  if (from.has_name()) {
    mutable_name()->::common::String::MergeFrom(from.name());
  }
  if (from.has_given_name()) {
    mutable_given_name()->::common::String::MergeFrom(from.given_name());
  }
  if (from.has_family_name()) {
    mutable_family_name()->::common::String::MergeFrom(from.family_name());
  }
  if (from.has_gender()) {
    mutable_gender()->::common::String::MergeFrom(from.gender());
  }
  if (from.has_birthdate()) {
    mutable_birthdate()->::common::String::MergeFrom(from.birthdate());
  }
  if (from.has_email()) {
    mutable_email()->::common::Identifier::MergeFrom(from.email());
  }
  if (from.has_phone_number()) {
    mutable_phone_number()->::common::Identifier::MergeFrom(from.phone_number());
  }
  if (from.has_picture()) {
    mutable_picture()->::common::String::MergeFrom(from.picture());
  }
  if (from.has_user_metadata()) {
    mutable_user_metadata()->::common::StringMap::MergeFrom(from.user_metadata());
  }
  if (from.has_app_metadata()) {
    mutable_app_metadata()->::common::StringMap::MergeFrom(from.app_metadata());
  }
  if (from.has_last_ip()) {
    mutable_last_ip()->::common::String::MergeFrom(from.last_ip());
  }
  if (from.has_nickname()) {
    mutable_nickname()->::common::String::MergeFrom(from.nickname());
  }
  if (from.has_multifactor()) {
    mutable_multifactor()->::common::StringArray::MergeFrom(from.multifactor());
  }
  if (from.has_created_at()) {
    mutable_created_at()->::common::String::MergeFrom(from.created_at());
  }
  if (from.has_updated_at()) {
    mutable_updated_at()->::common::String::MergeFrom(from.updated_at());
  }
  if (from.has_password()) {
    mutable_password()->::common::String::MergeFrom(from.password());
  }
  if (from.blocked() != 0) {
    set_blocked(from.blocked());
  }
  if (from.phone_verified() != 0) {
    set_phone_verified(from.phone_verified());
  }
  if (from.email_verified() != 0) {
    set_email_verified(from.email_verified());
  }
}

void User::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {
  return true;
}

void User::Swap(User* other) {
  if (other == this) return;
  InternalSwap(other);
}
void User::InternalSwap(User* other) {
  using std::swap;
  CastToBase(&identities_)->InternalSwap(CastToBase(&other->identities_));
  swap(user_id_, other->user_id_);
  swap(name_, other->name_);
  swap(given_name_, other->given_name_);
  swap(family_name_, other->family_name_);
  swap(gender_, other->gender_);
  swap(birthdate_, other->birthdate_);
  swap(email_, other->email_);
  swap(phone_number_, other->phone_number_);
  swap(picture_, other->picture_);
  swap(user_metadata_, other->user_metadata_);
  swap(app_metadata_, other->app_metadata_);
  swap(last_ip_, other->last_ip_);
  swap(nickname_, other->nickname_);
  swap(multifactor_, other->multifactor_);
  swap(created_at_, other->created_at_);
  swap(updated_at_, other->updated_at_);
  swap(password_, other->password_);
  swap(blocked_, other->blocked_);
  swap(phone_verified_, other->phone_verified_);
  swap(email_verified_, other->email_verified_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata User::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserMetadata::InitAsDefaultInstance() {
  ::api::_UserMetadata_default_instance_._instance.get_mutable()->status_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_UserMetadata_default_instance_._instance.get_mutable()->bio_ = const_cast< ::common::StringMap*>(
      ::common::StringMap::internal_default_instance());
  ::api::_UserMetadata_default_instance_._instance.get_mutable()->address_ = const_cast< ::api::Address*>(
      ::api::Address::internal_default_instance());
  ::api::_UserMetadata_default_instance_._instance.get_mutable()->tags_ = const_cast< ::common::StringMap*>(
      ::common::StringMap::internal_default_instance());
}
void UserMetadata::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void UserMetadata::clear_bio() {
  if (GetArenaNoVirtual() == NULL && bio_ != NULL) {
    delete bio_;
  }
  bio_ = NULL;
}
void UserMetadata::clear_tags() {
  if (GetArenaNoVirtual() == NULL && tags_ != NULL) {
    delete tags_;
  }
  tags_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserMetadata::kStatusFieldNumber;
const int UserMetadata::kBioFieldNumber;
const int UserMetadata::kAddressFieldNumber;
const int UserMetadata::kTagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserMetadata::UserMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_UserMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.UserMetadata)
}
UserMetadata::UserMetadata(const UserMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_status()) {
    status_ = new ::common::String(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_bio()) {
    bio_ = new ::common::StringMap(*from.bio_);
  } else {
    bio_ = NULL;
  }
  if (from.has_address()) {
    address_ = new ::api::Address(*from.address_);
  } else {
    address_ = NULL;
  }
  if (from.has_tags()) {
    tags_ = new ::common::StringMap(*from.tags_);
  } else {
    tags_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.UserMetadata)
}

void UserMetadata::SharedCtor() {
  ::memset(&status_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tags_) -
      reinterpret_cast<char*>(&status_)) + sizeof(tags_));
}

UserMetadata::~UserMetadata() {
  // @@protoc_insertion_point(destructor:api.UserMetadata)
  SharedDtor();
}

void UserMetadata::SharedDtor() {
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete bio_;
  if (this != internal_default_instance()) delete address_;
  if (this != internal_default_instance()) delete tags_;
}

void UserMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserMetadata::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserMetadata& UserMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_UserMetadata.base);
  return *internal_default_instance();
}


void UserMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:api.UserMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && bio_ != NULL) {
    delete bio_;
  }
  bio_ = NULL;
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  if (GetArenaNoVirtual() == NULL && tags_ != NULL) {
    delete tags_;
  }
  tags_ = NULL;
  _internal_metadata_.Clear();
}

bool UserMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.UserMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String status = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringMap bio = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.Address address = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringMap tags = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.UserMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.UserMetadata)
  return false;
#undef DO_
}

void UserMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.UserMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String status = 1;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_status(), output);
  }

  // .common.StringMap bio = 2;
  if (this->has_bio()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_bio(), output);
  }

  // .api.Address address = 3;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_address(), output);
  }

  // .common.StringMap tags = 4;
  if (this->has_tags()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_tags(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.UserMetadata)
}

::google::protobuf::uint8* UserMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.UserMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String status = 1;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_status(), deterministic, target);
  }

  // .common.StringMap bio = 2;
  if (this->has_bio()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_bio(), deterministic, target);
  }

  // .api.Address address = 3;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_address(), deterministic, target);
  }

  // .common.StringMap tags = 4;
  if (this->has_tags()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_tags(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.UserMetadata)
  return target;
}

size_t UserMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.UserMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String status = 1;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .common.StringMap bio = 2;
  if (this->has_bio()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *bio_);
  }

  // .api.Address address = 3;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *address_);
  }

  // .common.StringMap tags = 4;
  if (this->has_tags()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tags_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.UserMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const UserMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.UserMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.UserMetadata)
    MergeFrom(*source);
  }
}

void UserMetadata::MergeFrom(const UserMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.UserMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_status()) {
    mutable_status()->::common::String::MergeFrom(from.status());
  }
  if (from.has_bio()) {
    mutable_bio()->::common::StringMap::MergeFrom(from.bio());
  }
  if (from.has_address()) {
    mutable_address()->::api::Address::MergeFrom(from.address());
  }
  if (from.has_tags()) {
    mutable_tags()->::common::StringMap::MergeFrom(from.tags());
  }
}

void UserMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.UserMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserMetadata::CopyFrom(const UserMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.UserMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserMetadata::IsInitialized() const {
  return true;
}

void UserMetadata::Swap(UserMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserMetadata::InternalSwap(UserMetadata* other) {
  using std::swap;
  swap(status_, other->status_);
  swap(bio_, other->bio_);
  swap(address_, other->address_);
  swap(tags_, other->tags_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserMetadata::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Address::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Address::kCityFieldNumber;
const int Address::kStateFieldNumber;
const int Address::kLine1FieldNumber;
const int Address::kLine2FieldNumber;
const int Address::kZipFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Address::Address()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Address.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Address)
}
Address::Address(const Address& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.city().size() > 0) {
    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state().size() > 0) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  line1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.line1().size() > 0) {
    line1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line1_);
  }
  line2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.line2().size() > 0) {
    line2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line2_);
  }
  zip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.zip().size() > 0) {
    zip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zip_);
  }
  // @@protoc_insertion_point(copy_constructor:api.Address)
}

void Address::SharedCtor() {
  city_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Address::~Address() {
  // @@protoc_insertion_point(destructor:api.Address)
  SharedDtor();
}

void Address::SharedDtor() {
  city_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Address::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Address::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Address& Address::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Address.base);
  return *internal_default_instance();
}


void Address::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  city_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  line2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Address::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Address)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string city = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_city()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->city().data(), static_cast<int>(this->city().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Address.city"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string state = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->state().data(), static_cast<int>(this->state().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Address.state"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string line1 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_line1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->line1().data(), static_cast<int>(this->line1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Address.line1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string line2 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_line2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->line2().data(), static_cast<int>(this->line2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Address.line2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string zip = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_zip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->zip().data(), static_cast<int>(this->zip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.Address.zip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Address)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Address)
  return false;
#undef DO_
}

void Address::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string city = 1;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.city");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->city(), output);
  }

  // string state = 2;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->state(), output);
  }

  // string line1 = 3;
  if (this->line1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->line1().data(), static_cast<int>(this->line1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.line1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->line1(), output);
  }

  // string line2 = 4;
  if (this->line2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->line2().data(), static_cast<int>(this->line2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.line2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->line2(), output);
  }

  // string zip = 5;
  if (this->zip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zip().data(), static_cast<int>(this->zip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.zip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->zip(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Address)
}

::google::protobuf::uint8* Address::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Address)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string city = 1;
  if (this->city().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->city().data(), static_cast<int>(this->city().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.city");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->city(), target);
  }

  // string state = 2;
  if (this->state().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->state().data(), static_cast<int>(this->state().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->state(), target);
  }

  // string line1 = 3;
  if (this->line1().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->line1().data(), static_cast<int>(this->line1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.line1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->line1(), target);
  }

  // string line2 = 4;
  if (this->line2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->line2().data(), static_cast<int>(this->line2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.line2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->line2(), target);
  }

  // string zip = 5;
  if (this->zip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->zip().data(), static_cast<int>(this->zip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.Address.zip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->zip(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Address)
  return target;
}

size_t Address::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Address)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string city = 1;
  if (this->city().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->city());
  }

  // string state = 2;
  if (this->state().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->state());
  }

  // string line1 = 3;
  if (this->line1().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->line1());
  }

  // string line2 = 4;
  if (this->line2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->line2());
  }

  // string zip = 5;
  if (this->zip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->zip());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Address::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Address)
  GOOGLE_DCHECK_NE(&from, this);
  const Address* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Address>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Address)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Address)
    MergeFrom(*source);
  }
}

void Address::MergeFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Address)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.city().size() > 0) {

    city_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.city_);
  }
  if (from.state().size() > 0) {

    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  if (from.line1().size() > 0) {

    line1_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line1_);
  }
  if (from.line2().size() > 0) {

    line2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.line2_);
  }
  if (from.zip().size() > 0) {

    zip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.zip_);
  }
}

void Address::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Address::CopyFrom(const Address& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Address)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Address::IsInitialized() const {
  return true;
}

void Address::Swap(Address* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Address::InternalSwap(Address* other) {
  using std::swap;
  city_.Swap(&other->city_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  state_.Swap(&other->state_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  line1_.Swap(&other->line1_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  line2_.Swap(&other->line2_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  zip_.Swap(&other->zip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Address::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AppMetadata::InitAsDefaultInstance() {
  ::api::_AppMetadata_default_instance_._instance.get_mutable()->description_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_AppMetadata_default_instance_._instance.get_mutable()->account_balance_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_AppMetadata_default_instance_._instance.get_mutable()->plan_ = const_cast< ::api::Plan*>(
      ::api::Plan::internal_default_instance());
  ::api::_AppMetadata_default_instance_._instance.get_mutable()->tags_ = const_cast< ::common::StringMap*>(
      ::common::StringMap::internal_default_instance());
}
void AppMetadata::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void AppMetadata::clear_account_balance() {
  if (GetArenaNoVirtual() == NULL && account_balance_ != NULL) {
    delete account_balance_;
  }
  account_balance_ = NULL;
}
void AppMetadata::clear_tags() {
  if (GetArenaNoVirtual() == NULL && tags_ != NULL) {
    delete tags_;
  }
  tags_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AppMetadata::kDescriptionFieldNumber;
const int AppMetadata::kAccountBalanceFieldNumber;
const int AppMetadata::kPlanFieldNumber;
const int AppMetadata::kTagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AppMetadata::AppMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_AppMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.AppMetadata)
}
AppMetadata::AppMetadata(const AppMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_description()) {
    description_ = new ::common::String(*from.description_);
  } else {
    description_ = NULL;
  }
  if (from.has_account_balance()) {
    account_balance_ = new ::common::String(*from.account_balance_);
  } else {
    account_balance_ = NULL;
  }
  if (from.has_plan()) {
    plan_ = new ::api::Plan(*from.plan_);
  } else {
    plan_ = NULL;
  }
  if (from.has_tags()) {
    tags_ = new ::common::StringMap(*from.tags_);
  } else {
    tags_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.AppMetadata)
}

void AppMetadata::SharedCtor() {
  ::memset(&description_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tags_) -
      reinterpret_cast<char*>(&description_)) + sizeof(tags_));
}

AppMetadata::~AppMetadata() {
  // @@protoc_insertion_point(destructor:api.AppMetadata)
  SharedDtor();
}

void AppMetadata::SharedDtor() {
  if (this != internal_default_instance()) delete description_;
  if (this != internal_default_instance()) delete account_balance_;
  if (this != internal_default_instance()) delete plan_;
  if (this != internal_default_instance()) delete tags_;
}

void AppMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AppMetadata::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AppMetadata& AppMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_AppMetadata.base);
  return *internal_default_instance();
}


void AppMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:api.AppMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  if (GetArenaNoVirtual() == NULL && account_balance_ != NULL) {
    delete account_balance_;
  }
  account_balance_ = NULL;
  if (GetArenaNoVirtual() == NULL && plan_ != NULL) {
    delete plan_;
  }
  plan_ = NULL;
  if (GetArenaNoVirtual() == NULL && tags_ != NULL) {
    delete tags_;
  }
  tags_ = NULL;
  _internal_metadata_.Clear();
}

bool AppMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.AppMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String description = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String account_balance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_account_balance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.Plan plan = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_plan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringMap tags = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tags()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.AppMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.AppMetadata)
  return false;
#undef DO_
}

void AppMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.AppMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String description = 1;
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_description(), output);
  }

  // .common.String account_balance = 2;
  if (this->has_account_balance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_account_balance(), output);
  }

  // .api.Plan plan = 3;
  if (this->has_plan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_plan(), output);
  }

  // .common.StringMap tags = 4;
  if (this->has_tags()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_tags(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.AppMetadata)
}

::google::protobuf::uint8* AppMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.AppMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String description = 1;
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_description(), deterministic, target);
  }

  // .common.String account_balance = 2;
  if (this->has_account_balance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_account_balance(), deterministic, target);
  }

  // .api.Plan plan = 3;
  if (this->has_plan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_plan(), deterministic, target);
  }

  // .common.StringMap tags = 4;
  if (this->has_tags()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_tags(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.AppMetadata)
  return target;
}

size_t AppMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.AppMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String description = 1;
  if (this->has_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *description_);
  }

  // .common.String account_balance = 2;
  if (this->has_account_balance()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *account_balance_);
  }

  // .api.Plan plan = 3;
  if (this->has_plan()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *plan_);
  }

  // .common.StringMap tags = 4;
  if (this->has_tags()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *tags_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AppMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.AppMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const AppMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AppMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.AppMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.AppMetadata)
    MergeFrom(*source);
  }
}

void AppMetadata::MergeFrom(const AppMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.AppMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_description()) {
    mutable_description()->::common::String::MergeFrom(from.description());
  }
  if (from.has_account_balance()) {
    mutable_account_balance()->::common::String::MergeFrom(from.account_balance());
  }
  if (from.has_plan()) {
    mutable_plan()->::api::Plan::MergeFrom(from.plan());
  }
  if (from.has_tags()) {
    mutable_tags()->::common::StringMap::MergeFrom(from.tags());
  }
}

void AppMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.AppMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AppMetadata::CopyFrom(const AppMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.AppMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AppMetadata::IsInitialized() const {
  return true;
}

void AppMetadata::Swap(AppMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AppMetadata::InternalSwap(AppMetadata* other) {
  using std::swap;
  swap(description_, other->description_);
  swap(account_balance_, other->account_balance_);
  swap(plan_, other->plan_);
  swap(tags_, other->tags_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AppMetadata::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Plan::InitAsDefaultInstance() {
  ::api::_Plan_default_instance_._instance.get_mutable()->id_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_Plan_default_instance_._instance.get_mutable()->amount_ = const_cast< ::common::Int64*>(
      ::common::Int64::internal_default_instance());
  ::api::_Plan_default_instance_._instance.get_mutable()->nickname_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Plan_default_instance_._instance.get_mutable()->product_ = const_cast< ::api::Product*>(
      ::api::Product::internal_default_instance());
}
void Plan::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void Plan::clear_amount() {
  if (GetArenaNoVirtual() == NULL && amount_ != NULL) {
    delete amount_;
  }
  amount_ = NULL;
}
void Plan::clear_nickname() {
  if (GetArenaNoVirtual() == NULL && nickname_ != NULL) {
    delete nickname_;
  }
  nickname_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Plan::kIdFieldNumber;
const int Plan::kActiveFieldNumber;
const int Plan::kAmountFieldNumber;
const int Plan::kIntervalFieldNumber;
const int Plan::kNicknameFieldNumber;
const int Plan::kProductFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Plan::Plan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Plan.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Plan)
}
Plan::Plan(const Plan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::common::Identifier(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_amount()) {
    amount_ = new ::common::Int64(*from.amount_);
  } else {
    amount_ = NULL;
  }
  if (from.has_nickname()) {
    nickname_ = new ::common::String(*from.nickname_);
  } else {
    nickname_ = NULL;
  }
  if (from.has_product()) {
    product_ = new ::api::Product(*from.product_);
  } else {
    product_ = NULL;
  }
  ::memcpy(&active_, &from.active_,
    static_cast<size_t>(reinterpret_cast<char*>(&interval_) -
    reinterpret_cast<char*>(&active_)) + sizeof(interval_));
  // @@protoc_insertion_point(copy_constructor:api.Plan)
}

void Plan::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interval_) -
      reinterpret_cast<char*>(&id_)) + sizeof(interval_));
}

Plan::~Plan() {
  // @@protoc_insertion_point(destructor:api.Plan)
  SharedDtor();
}

void Plan::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete amount_;
  if (this != internal_default_instance()) delete nickname_;
  if (this != internal_default_instance()) delete product_;
}

void Plan::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Plan::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Plan& Plan::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Plan.base);
  return *internal_default_instance();
}


void Plan::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Plan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && amount_ != NULL) {
    delete amount_;
  }
  amount_ = NULL;
  if (GetArenaNoVirtual() == NULL && nickname_ != NULL) {
    delete nickname_;
  }
  nickname_ = NULL;
  if (GetArenaNoVirtual() == NULL && product_ != NULL) {
    delete product_;
  }
  product_ = NULL;
  ::memset(&active_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interval_) -
      reinterpret_cast<char*>(&active_)) + sizeof(interval_));
  _internal_metadata_.Clear();
}

bool Plan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Plan)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Identifier id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool active = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &active_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Int64 amount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_amount()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.BillingInterval interval = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_interval(static_cast< ::api::BillingInterval >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String nickname = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nickname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.Product product = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_product()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Plan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Plan)
  return false;
#undef DO_
}

void Plan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Plan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // bool active = 2;
  if (this->active() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->active(), output);
  }

  // .common.Int64 amount = 3;
  if (this->has_amount()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_amount(), output);
  }

  // .api.BillingInterval interval = 4;
  if (this->interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->interval(), output);
  }

  // .common.String nickname = 5;
  if (this->has_nickname()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_nickname(), output);
  }

  // .api.Product product = 6;
  if (this->has_product()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_product(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Plan)
}

::google::protobuf::uint8* Plan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Plan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // bool active = 2;
  if (this->active() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->active(), target);
  }

  // .common.Int64 amount = 3;
  if (this->has_amount()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_amount(), deterministic, target);
  }

  // .api.BillingInterval interval = 4;
  if (this->interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->interval(), target);
  }

  // .common.String nickname = 5;
  if (this->has_nickname()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_nickname(), deterministic, target);
  }

  // .api.Product product = 6;
  if (this->has_product()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_product(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Plan)
  return target;
}

size_t Plan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Plan)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.Identifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .common.Int64 amount = 3;
  if (this->has_amount()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *amount_);
  }

  // .common.String nickname = 5;
  if (this->has_nickname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *nickname_);
  }

  // .api.Product product = 6;
  if (this->has_product()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *product_);
  }

  // bool active = 2;
  if (this->active() != 0) {
    total_size += 1 + 1;
  }

  // .api.BillingInterval interval = 4;
  if (this->interval() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->interval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Plan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Plan)
  GOOGLE_DCHECK_NE(&from, this);
  const Plan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Plan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Plan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Plan)
    MergeFrom(*source);
  }
}

void Plan::MergeFrom(const Plan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Plan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::common::Identifier::MergeFrom(from.id());
  }
  if (from.has_amount()) {
    mutable_amount()->::common::Int64::MergeFrom(from.amount());
  }
  if (from.has_nickname()) {
    mutable_nickname()->::common::String::MergeFrom(from.nickname());
  }
  if (from.has_product()) {
    mutable_product()->::api::Product::MergeFrom(from.product());
  }
  if (from.active() != 0) {
    set_active(from.active());
  }
  if (from.interval() != 0) {
    set_interval(from.interval());
  }
}

void Plan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Plan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Plan::CopyFrom(const Plan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Plan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Plan::IsInitialized() const {
  return true;
}

void Plan::Swap(Plan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Plan::InternalSwap(Plan* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(amount_, other->amount_);
  swap(nickname_, other->nickname_);
  swap(product_, other->product_);
  swap(active_, other->active_);
  swap(interval_, other->interval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Plan::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Product::InitAsDefaultInstance() {
  ::api::_Product_default_instance_._instance.get_mutable()->id_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_Product_default_instance_._instance.get_mutable()->description_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Product_default_instance_._instance.get_mutable()->url_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void Product::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void Product::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void Product::clear_url() {
  if (GetArenaNoVirtual() == NULL && url_ != NULL) {
    delete url_;
  }
  url_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Product::kIdFieldNumber;
const int Product::kDescriptionFieldNumber;
const int Product::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Product::Product()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Product.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Product)
}
Product::Product(const Product& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::common::Identifier(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::common::String(*from.description_);
  } else {
    description_ = NULL;
  }
  if (from.has_url()) {
    url_ = new ::common::String(*from.url_);
  } else {
    url_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.Product)
}

void Product::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&url_) -
      reinterpret_cast<char*>(&id_)) + sizeof(url_));
}

Product::~Product() {
  // @@protoc_insertion_point(destructor:api.Product)
  SharedDtor();
}

void Product::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete description_;
  if (this != internal_default_instance()) delete url_;
}

void Product::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Product::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Product& Product::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Product.base);
  return *internal_default_instance();
}


void Product::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  if (GetArenaNoVirtual() == NULL && url_ != NULL) {
    delete url_;
  }
  url_ = NULL;
  _internal_metadata_.Clear();
}

bool Product::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Product)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Identifier id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String description = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Product)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Product)
  return false;
#undef DO_
}

void Product::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .common.String description = 2;
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_description(), output);
  }

  // .common.String url = 3;
  if (this->has_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_url(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Product)
}

::google::protobuf::uint8* Product::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Product)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .common.String description = 2;
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_description(), deterministic, target);
  }

  // .common.String url = 3;
  if (this->has_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_url(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Product)
  return target;
}

size_t Product::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Product)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.Identifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .common.String description = 2;
  if (this->has_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *description_);
  }

  // .common.String url = 3;
  if (this->has_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *url_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Product::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Product)
  GOOGLE_DCHECK_NE(&from, this);
  const Product* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Product>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Product)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Product)
    MergeFrom(*source);
  }
}

void Product::MergeFrom(const Product& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Product)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::common::Identifier::MergeFrom(from.id());
  }
  if (from.has_description()) {
    mutable_description()->::common::String::MergeFrom(from.description());
  }
  if (from.has_url()) {
    mutable_url()->::common::String::MergeFrom(from.url());
  }
}

void Product::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Product::CopyFrom(const Product& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Product)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Product::IsInitialized() const {
  return true;
}

void Product::Swap(Product* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Product::InternalSwap(Product* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(description_, other->description_);
  swap(url_, other->url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Product::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Identity::InitAsDefaultInstance() {
  ::api::_Identity_default_instance_._instance.get_mutable()->connection_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Identity_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_Identity_default_instance_._instance.get_mutable()->provider_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void Identity::clear_connection() {
  if (GetArenaNoVirtual() == NULL && connection_ != NULL) {
    delete connection_;
  }
  connection_ = NULL;
}
void Identity::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) {
    delete user_id_;
  }
  user_id_ = NULL;
}
void Identity::clear_provider() {
  if (GetArenaNoVirtual() == NULL && provider_ != NULL) {
    delete provider_;
  }
  provider_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Identity::kConnectionFieldNumber;
const int Identity::kUserIdFieldNumber;
const int Identity::kProviderFieldNumber;
const int Identity::kIsSocialFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Identity::Identity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Identity.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Identity)
}
Identity::Identity(const Identity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_connection()) {
    connection_ = new ::common::String(*from.connection_);
  } else {
    connection_ = NULL;
  }
  if (from.has_user_id()) {
    user_id_ = new ::common::Identifier(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  if (from.has_provider()) {
    provider_ = new ::common::String(*from.provider_);
  } else {
    provider_ = NULL;
  }
  issocial_ = from.issocial_;
  // @@protoc_insertion_point(copy_constructor:api.Identity)
}

void Identity::SharedCtor() {
  ::memset(&connection_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&issocial_) -
      reinterpret_cast<char*>(&connection_)) + sizeof(issocial_));
}

Identity::~Identity() {
  // @@protoc_insertion_point(destructor:api.Identity)
  SharedDtor();
}

void Identity::SharedDtor() {
  if (this != internal_default_instance()) delete connection_;
  if (this != internal_default_instance()) delete user_id_;
  if (this != internal_default_instance()) delete provider_;
}

void Identity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Identity::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Identity& Identity::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Identity.base);
  return *internal_default_instance();
}


void Identity::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Identity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && connection_ != NULL) {
    delete connection_;
  }
  connection_ = NULL;
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) {
    delete user_id_;
  }
  user_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && provider_ != NULL) {
    delete provider_;
  }
  provider_ = NULL;
  issocial_ = false;
  _internal_metadata_.Clear();
}

bool Identity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Identity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String connection = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_connection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Identifier user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String provider = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_provider()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isSocial = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issocial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Identity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Identity)
  return false;
#undef DO_
}

void Identity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Identity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String connection = 1;
  if (this->has_connection()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_connection(), output);
  }

  // .common.Identifier user_id = 2;
  if (this->has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_user_id(), output);
  }

  // .common.String provider = 3;
  if (this->has_provider()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_provider(), output);
  }

  // bool isSocial = 4;
  if (this->issocial() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->issocial(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Identity)
}

::google::protobuf::uint8* Identity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Identity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String connection = 1;
  if (this->has_connection()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_connection(), deterministic, target);
  }

  // .common.Identifier user_id = 2;
  if (this->has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_user_id(), deterministic, target);
  }

  // .common.String provider = 3;
  if (this->has_provider()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_provider(), deterministic, target);
  }

  // bool isSocial = 4;
  if (this->issocial() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->issocial(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Identity)
  return target;
}

size_t Identity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Identity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String connection = 1;
  if (this->has_connection()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *connection_);
  }

  // .common.Identifier user_id = 2;
  if (this->has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_id_);
  }

  // .common.String provider = 3;
  if (this->has_provider()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *provider_);
  }

  // bool isSocial = 4;
  if (this->issocial() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Identity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Identity)
  GOOGLE_DCHECK_NE(&from, this);
  const Identity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Identity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Identity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Identity)
    MergeFrom(*source);
  }
}

void Identity::MergeFrom(const Identity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Identity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_connection()) {
    mutable_connection()->::common::String::MergeFrom(from.connection());
  }
  if (from.has_user_id()) {
    mutable_user_id()->::common::Identifier::MergeFrom(from.user_id());
  }
  if (from.has_provider()) {
    mutable_provider()->::common::String::MergeFrom(from.provider());
  }
  if (from.issocial() != 0) {
    set_issocial(from.issocial());
  }
}

void Identity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Identity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identity::CopyFrom(const Identity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Identity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identity::IsInitialized() const {
  return true;
}

void Identity::Swap(Identity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Identity::InternalSwap(Identity* other) {
  using std::swap;
  swap(connection_, other->connection_);
  swap(user_id_, other->user_id_);
  swap(provider_, other->provider_);
  swap(issocial_, other->issocial_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Identity::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Role::InitAsDefaultInstance() {
  ::api::_Role_default_instance_._instance.get_mutable()->id_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_Role_default_instance_._instance.get_mutable()->name_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Role_default_instance_._instance.get_mutable()->description_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void Role::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void Role::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void Role::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Role::kIdFieldNumber;
const int Role::kNameFieldNumber;
const int Role::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Role::Role()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Role.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Role)
}
Role::Role(const Role& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::common::Identifier(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::common::String(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::common::String(*from.description_);
  } else {
    description_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.Role)
}

void Role::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&description_) -
      reinterpret_cast<char*>(&id_)) + sizeof(description_));
}

Role::~Role() {
  // @@protoc_insertion_point(destructor:api.Role)
  SharedDtor();
}

void Role::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete description_;
}

void Role::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Role::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Role& Role::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Role.base);
  return *internal_default_instance();
}


void Role::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Role)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  _internal_metadata_.Clear();
}

bool Role::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Role)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Identifier id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Role)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Role)
  return false;
#undef DO_
}

void Role::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Role)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .common.String name = 2;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_name(), output);
  }

  // .common.String description = 3;
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Role)
}

::google::protobuf::uint8* Role::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Role)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .common.String name = 2;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_name(), deterministic, target);
  }

  // .common.String description = 3;
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_description(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Role)
  return target;
}

size_t Role::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Role)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.Identifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .common.String name = 2;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .common.String description = 3;
  if (this->has_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *description_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Role::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Role)
  GOOGLE_DCHECK_NE(&from, this);
  const Role* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Role>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Role)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Role)
    MergeFrom(*source);
  }
}

void Role::MergeFrom(const Role& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Role)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::common::Identifier::MergeFrom(from.id());
  }
  if (from.has_name()) {
    mutable_name()->::common::String::MergeFrom(from.name());
  }
  if (from.has_description()) {
    mutable_description()->::common::String::MergeFrom(from.description());
  }
}

void Role::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Role::CopyFrom(const Role& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Role::IsInitialized() const {
  return true;
}

void Role::Swap(Role* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Role::InternalSwap(Role* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(name_, other->name_);
  swap(description_, other->description_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Role::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OAuth2::InitAsDefaultInstance() {
  ::api::_OAuth2_default_instance_._instance.get_mutable()->client_id_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_OAuth2_default_instance_._instance.get_mutable()->client_secret_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_OAuth2_default_instance_._instance.get_mutable()->token_url_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_OAuth2_default_instance_._instance.get_mutable()->auth_url_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_OAuth2_default_instance_._instance.get_mutable()->scopes_ = const_cast< ::common::StringArray*>(
      ::common::StringArray::internal_default_instance());
  ::api::_OAuth2_default_instance_._instance.get_mutable()->redirect_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_OAuth2_default_instance_._instance.get_mutable()->code_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void OAuth2::clear_client_id() {
  if (GetArenaNoVirtual() == NULL && client_id_ != NULL) {
    delete client_id_;
  }
  client_id_ = NULL;
}
void OAuth2::clear_client_secret() {
  if (GetArenaNoVirtual() == NULL && client_secret_ != NULL) {
    delete client_secret_;
  }
  client_secret_ = NULL;
}
void OAuth2::clear_token_url() {
  if (GetArenaNoVirtual() == NULL && token_url_ != NULL) {
    delete token_url_;
  }
  token_url_ = NULL;
}
void OAuth2::clear_auth_url() {
  if (GetArenaNoVirtual() == NULL && auth_url_ != NULL) {
    delete auth_url_;
  }
  auth_url_ = NULL;
}
void OAuth2::clear_scopes() {
  if (GetArenaNoVirtual() == NULL && scopes_ != NULL) {
    delete scopes_;
  }
  scopes_ = NULL;
}
void OAuth2::clear_redirect() {
  if (GetArenaNoVirtual() == NULL && redirect_ != NULL) {
    delete redirect_;
  }
  redirect_ = NULL;
}
void OAuth2::clear_code() {
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OAuth2::kClientIdFieldNumber;
const int OAuth2::kClientSecretFieldNumber;
const int OAuth2::kTokenUrlFieldNumber;
const int OAuth2::kAuthUrlFieldNumber;
const int OAuth2::kScopesFieldNumber;
const int OAuth2::kRedirectFieldNumber;
const int OAuth2::kCodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OAuth2::OAuth2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_OAuth2.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.OAuth2)
}
OAuth2::OAuth2(const OAuth2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_client_id()) {
    client_id_ = new ::common::String(*from.client_id_);
  } else {
    client_id_ = NULL;
  }
  if (from.has_client_secret()) {
    client_secret_ = new ::common::String(*from.client_secret_);
  } else {
    client_secret_ = NULL;
  }
  if (from.has_token_url()) {
    token_url_ = new ::common::String(*from.token_url_);
  } else {
    token_url_ = NULL;
  }
  if (from.has_auth_url()) {
    auth_url_ = new ::common::String(*from.auth_url_);
  } else {
    auth_url_ = NULL;
  }
  if (from.has_scopes()) {
    scopes_ = new ::common::StringArray(*from.scopes_);
  } else {
    scopes_ = NULL;
  }
  if (from.has_redirect()) {
    redirect_ = new ::common::String(*from.redirect_);
  } else {
    redirect_ = NULL;
  }
  if (from.has_code()) {
    code_ = new ::common::String(*from.code_);
  } else {
    code_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.OAuth2)
}

void OAuth2::SharedCtor() {
  ::memset(&client_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&code_) -
      reinterpret_cast<char*>(&client_id_)) + sizeof(code_));
}

OAuth2::~OAuth2() {
  // @@protoc_insertion_point(destructor:api.OAuth2)
  SharedDtor();
}

void OAuth2::SharedDtor() {
  if (this != internal_default_instance()) delete client_id_;
  if (this != internal_default_instance()) delete client_secret_;
  if (this != internal_default_instance()) delete token_url_;
  if (this != internal_default_instance()) delete auth_url_;
  if (this != internal_default_instance()) delete scopes_;
  if (this != internal_default_instance()) delete redirect_;
  if (this != internal_default_instance()) delete code_;
}

void OAuth2::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* OAuth2::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OAuth2& OAuth2::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_OAuth2.base);
  return *internal_default_instance();
}


void OAuth2::Clear() {
// @@protoc_insertion_point(message_clear_start:api.OAuth2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && client_id_ != NULL) {
    delete client_id_;
  }
  client_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && client_secret_ != NULL) {
    delete client_secret_;
  }
  client_secret_ = NULL;
  if (GetArenaNoVirtual() == NULL && token_url_ != NULL) {
    delete token_url_;
  }
  token_url_ = NULL;
  if (GetArenaNoVirtual() == NULL && auth_url_ != NULL) {
    delete auth_url_;
  }
  auth_url_ = NULL;
  if (GetArenaNoVirtual() == NULL && scopes_ != NULL) {
    delete scopes_;
  }
  scopes_ = NULL;
  if (GetArenaNoVirtual() == NULL && redirect_ != NULL) {
    delete redirect_;
  }
  redirect_ = NULL;
  if (GetArenaNoVirtual() == NULL && code_ != NULL) {
    delete code_;
  }
  code_ = NULL;
  _internal_metadata_.Clear();
}

bool OAuth2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.OAuth2)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String client_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String client_secret = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client_secret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String token_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_token_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String auth_url = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_auth_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringArray scopes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scopes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String redirect = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_redirect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String code = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.OAuth2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.OAuth2)
  return false;
#undef DO_
}

void OAuth2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.OAuth2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String client_id = 1;
  if (this->has_client_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_client_id(), output);
  }

  // .common.String client_secret = 2;
  if (this->has_client_secret()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_client_secret(), output);
  }

  // .common.String token_url = 3;
  if (this->has_token_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_token_url(), output);
  }

  // .common.String auth_url = 4;
  if (this->has_auth_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_auth_url(), output);
  }

  // .common.StringArray scopes = 5;
  if (this->has_scopes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_scopes(), output);
  }

  // .common.String redirect = 6;
  if (this->has_redirect()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_redirect(), output);
  }

  // .common.String code = 7;
  if (this->has_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_code(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.OAuth2)
}

::google::protobuf::uint8* OAuth2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.OAuth2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String client_id = 1;
  if (this->has_client_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_client_id(), deterministic, target);
  }

  // .common.String client_secret = 2;
  if (this->has_client_secret()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_client_secret(), deterministic, target);
  }

  // .common.String token_url = 3;
  if (this->has_token_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_token_url(), deterministic, target);
  }

  // .common.String auth_url = 4;
  if (this->has_auth_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_auth_url(), deterministic, target);
  }

  // .common.StringArray scopes = 5;
  if (this->has_scopes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_scopes(), deterministic, target);
  }

  // .common.String redirect = 6;
  if (this->has_redirect()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_redirect(), deterministic, target);
  }

  // .common.String code = 7;
  if (this->has_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_code(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.OAuth2)
  return target;
}

size_t OAuth2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.OAuth2)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String client_id = 1;
  if (this->has_client_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *client_id_);
  }

  // .common.String client_secret = 2;
  if (this->has_client_secret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *client_secret_);
  }

  // .common.String token_url = 3;
  if (this->has_token_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *token_url_);
  }

  // .common.String auth_url = 4;
  if (this->has_auth_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *auth_url_);
  }

  // .common.StringArray scopes = 5;
  if (this->has_scopes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *scopes_);
  }

  // .common.String redirect = 6;
  if (this->has_redirect()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *redirect_);
  }

  // .common.String code = 7;
  if (this->has_code()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *code_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OAuth2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.OAuth2)
  GOOGLE_DCHECK_NE(&from, this);
  const OAuth2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OAuth2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.OAuth2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.OAuth2)
    MergeFrom(*source);
  }
}

void OAuth2::MergeFrom(const OAuth2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.OAuth2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_client_id()) {
    mutable_client_id()->::common::String::MergeFrom(from.client_id());
  }
  if (from.has_client_secret()) {
    mutable_client_secret()->::common::String::MergeFrom(from.client_secret());
  }
  if (from.has_token_url()) {
    mutable_token_url()->::common::String::MergeFrom(from.token_url());
  }
  if (from.has_auth_url()) {
    mutable_auth_url()->::common::String::MergeFrom(from.auth_url());
  }
  if (from.has_scopes()) {
    mutable_scopes()->::common::StringArray::MergeFrom(from.scopes());
  }
  if (from.has_redirect()) {
    mutable_redirect()->::common::String::MergeFrom(from.redirect());
  }
  if (from.has_code()) {
    mutable_code()->::common::String::MergeFrom(from.code());
  }
}

void OAuth2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.OAuth2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OAuth2::CopyFrom(const OAuth2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.OAuth2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OAuth2::IsInitialized() const {
  return true;
}

void OAuth2::Swap(OAuth2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OAuth2::InternalSwap(OAuth2* other) {
  using std::swap;
  swap(client_id_, other->client_id_);
  swap(client_secret_, other->client_secret_);
  swap(token_url_, other->token_url_);
  swap(auth_url_, other->auth_url_);
  swap(scopes_, other->scopes_);
  swap(redirect_, other->redirect_);
  swap(code_, other->code_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata OAuth2::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientCredentials::InitAsDefaultInstance() {
  ::api::_ClientCredentials_default_instance_._instance.get_mutable()->client_id_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_ClientCredentials_default_instance_._instance.get_mutable()->client_secret_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_ClientCredentials_default_instance_._instance.get_mutable()->token_url_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_ClientCredentials_default_instance_._instance.get_mutable()->scopes_ = const_cast< ::common::StringArray*>(
      ::common::StringArray::internal_default_instance());
  ::api::_ClientCredentials_default_instance_._instance.get_mutable()->endpoint_params_ = const_cast< ::common::StringMap*>(
      ::common::StringMap::internal_default_instance());
}
void ClientCredentials::clear_client_id() {
  if (GetArenaNoVirtual() == NULL && client_id_ != NULL) {
    delete client_id_;
  }
  client_id_ = NULL;
}
void ClientCredentials::clear_client_secret() {
  if (GetArenaNoVirtual() == NULL && client_secret_ != NULL) {
    delete client_secret_;
  }
  client_secret_ = NULL;
}
void ClientCredentials::clear_token_url() {
  if (GetArenaNoVirtual() == NULL && token_url_ != NULL) {
    delete token_url_;
  }
  token_url_ = NULL;
}
void ClientCredentials::clear_scopes() {
  if (GetArenaNoVirtual() == NULL && scopes_ != NULL) {
    delete scopes_;
  }
  scopes_ = NULL;
}
void ClientCredentials::clear_endpoint_params() {
  if (GetArenaNoVirtual() == NULL && endpoint_params_ != NULL) {
    delete endpoint_params_;
  }
  endpoint_params_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientCredentials::kClientIdFieldNumber;
const int ClientCredentials::kClientSecretFieldNumber;
const int ClientCredentials::kTokenUrlFieldNumber;
const int ClientCredentials::kScopesFieldNumber;
const int ClientCredentials::kEndpointParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientCredentials::ClientCredentials()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_ClientCredentials.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.ClientCredentials)
}
ClientCredentials::ClientCredentials(const ClientCredentials& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_client_id()) {
    client_id_ = new ::common::String(*from.client_id_);
  } else {
    client_id_ = NULL;
  }
  if (from.has_client_secret()) {
    client_secret_ = new ::common::String(*from.client_secret_);
  } else {
    client_secret_ = NULL;
  }
  if (from.has_token_url()) {
    token_url_ = new ::common::String(*from.token_url_);
  } else {
    token_url_ = NULL;
  }
  if (from.has_scopes()) {
    scopes_ = new ::common::StringArray(*from.scopes_);
  } else {
    scopes_ = NULL;
  }
  if (from.has_endpoint_params()) {
    endpoint_params_ = new ::common::StringMap(*from.endpoint_params_);
  } else {
    endpoint_params_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.ClientCredentials)
}

void ClientCredentials::SharedCtor() {
  ::memset(&client_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&endpoint_params_) -
      reinterpret_cast<char*>(&client_id_)) + sizeof(endpoint_params_));
}

ClientCredentials::~ClientCredentials() {
  // @@protoc_insertion_point(destructor:api.ClientCredentials)
  SharedDtor();
}

void ClientCredentials::SharedDtor() {
  if (this != internal_default_instance()) delete client_id_;
  if (this != internal_default_instance()) delete client_secret_;
  if (this != internal_default_instance()) delete token_url_;
  if (this != internal_default_instance()) delete scopes_;
  if (this != internal_default_instance()) delete endpoint_params_;
}

void ClientCredentials::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ClientCredentials::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientCredentials& ClientCredentials::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_ClientCredentials.base);
  return *internal_default_instance();
}


void ClientCredentials::Clear() {
// @@protoc_insertion_point(message_clear_start:api.ClientCredentials)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && client_id_ != NULL) {
    delete client_id_;
  }
  client_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && client_secret_ != NULL) {
    delete client_secret_;
  }
  client_secret_ = NULL;
  if (GetArenaNoVirtual() == NULL && token_url_ != NULL) {
    delete token_url_;
  }
  token_url_ = NULL;
  if (GetArenaNoVirtual() == NULL && scopes_ != NULL) {
    delete scopes_;
  }
  scopes_ = NULL;
  if (GetArenaNoVirtual() == NULL && endpoint_params_ != NULL) {
    delete endpoint_params_;
  }
  endpoint_params_ = NULL;
  _internal_metadata_.Clear();
}

bool ClientCredentials::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.ClientCredentials)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String client_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String client_secret = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client_secret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String token_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_token_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringArray scopes = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scopes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringMap endpoint_params = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_endpoint_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.ClientCredentials)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.ClientCredentials)
  return false;
#undef DO_
}

void ClientCredentials::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.ClientCredentials)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String client_id = 1;
  if (this->has_client_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_client_id(), output);
  }

  // .common.String client_secret = 2;
  if (this->has_client_secret()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_client_secret(), output);
  }

  // .common.String token_url = 3;
  if (this->has_token_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_token_url(), output);
  }

  // .common.StringArray scopes = 4;
  if (this->has_scopes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_scopes(), output);
  }

  // .common.StringMap endpoint_params = 5;
  if (this->has_endpoint_params()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_endpoint_params(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.ClientCredentials)
}

::google::protobuf::uint8* ClientCredentials::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.ClientCredentials)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String client_id = 1;
  if (this->has_client_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_client_id(), deterministic, target);
  }

  // .common.String client_secret = 2;
  if (this->has_client_secret()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_client_secret(), deterministic, target);
  }

  // .common.String token_url = 3;
  if (this->has_token_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_token_url(), deterministic, target);
  }

  // .common.StringArray scopes = 4;
  if (this->has_scopes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_scopes(), deterministic, target);
  }

  // .common.StringMap endpoint_params = 5;
  if (this->has_endpoint_params()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_endpoint_params(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.ClientCredentials)
  return target;
}

size_t ClientCredentials::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.ClientCredentials)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String client_id = 1;
  if (this->has_client_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *client_id_);
  }

  // .common.String client_secret = 2;
  if (this->has_client_secret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *client_secret_);
  }

  // .common.String token_url = 3;
  if (this->has_token_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *token_url_);
  }

  // .common.StringArray scopes = 4;
  if (this->has_scopes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *scopes_);
  }

  // .common.StringMap endpoint_params = 5;
  if (this->has_endpoint_params()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *endpoint_params_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientCredentials::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.ClientCredentials)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientCredentials* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientCredentials>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.ClientCredentials)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.ClientCredentials)
    MergeFrom(*source);
  }
}

void ClientCredentials::MergeFrom(const ClientCredentials& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.ClientCredentials)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_client_id()) {
    mutable_client_id()->::common::String::MergeFrom(from.client_id());
  }
  if (from.has_client_secret()) {
    mutable_client_secret()->::common::String::MergeFrom(from.client_secret());
  }
  if (from.has_token_url()) {
    mutable_token_url()->::common::String::MergeFrom(from.token_url());
  }
  if (from.has_scopes()) {
    mutable_scopes()->::common::StringArray::MergeFrom(from.scopes());
  }
  if (from.has_endpoint_params()) {
    mutable_endpoint_params()->::common::StringMap::MergeFrom(from.endpoint_params());
  }
}

void ClientCredentials::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.ClientCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientCredentials::CopyFrom(const ClientCredentials& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.ClientCredentials)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientCredentials::IsInitialized() const {
  return true;
}

void ClientCredentials::Swap(ClientCredentials* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientCredentials::InternalSwap(ClientCredentials* other) {
  using std::swap;
  swap(client_id_, other->client_id_);
  swap(client_secret_, other->client_secret_);
  swap(token_url_, other->token_url_);
  swap(scopes_, other->scopes_);
  swap(endpoint_params_, other->endpoint_params_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ClientCredentials::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JWT::InitAsDefaultInstance() {
  ::api::_JWT_default_instance_._instance.get_mutable()->email_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_JWT_default_instance_._instance.get_mutable()->prive_key_id_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_JWT_default_instance_._instance.get_mutable()->subject_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_JWT_default_instance_._instance.get_mutable()->scopes_ = const_cast< ::common::StringArray*>(
      ::common::StringArray::internal_default_instance());
  ::api::_JWT_default_instance_._instance.get_mutable()->token_url_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_JWT_default_instance_._instance.get_mutable()->expires_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_JWT_default_instance_._instance.get_mutable()->audience_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void JWT::clear_email() {
  if (GetArenaNoVirtual() == NULL && email_ != NULL) {
    delete email_;
  }
  email_ = NULL;
}
void JWT::clear_prive_key_id() {
  if (GetArenaNoVirtual() == NULL && prive_key_id_ != NULL) {
    delete prive_key_id_;
  }
  prive_key_id_ = NULL;
}
void JWT::clear_subject() {
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
}
void JWT::clear_scopes() {
  if (GetArenaNoVirtual() == NULL && scopes_ != NULL) {
    delete scopes_;
  }
  scopes_ = NULL;
}
void JWT::clear_token_url() {
  if (GetArenaNoVirtual() == NULL && token_url_ != NULL) {
    delete token_url_;
  }
  token_url_ = NULL;
}
void JWT::clear_expires() {
  if (GetArenaNoVirtual() == NULL && expires_ != NULL) {
    delete expires_;
  }
  expires_ = NULL;
}
void JWT::clear_audience() {
  if (GetArenaNoVirtual() == NULL && audience_ != NULL) {
    delete audience_;
  }
  audience_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JWT::kEmailFieldNumber;
const int JWT::kPrivateKeyFieldNumber;
const int JWT::kPriveKeyIdFieldNumber;
const int JWT::kSubjectFieldNumber;
const int JWT::kScopesFieldNumber;
const int JWT::kTokenUrlFieldNumber;
const int JWT::kExpiresFieldNumber;
const int JWT::kAudienceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JWT::JWT()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_JWT.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.JWT)
}
JWT::JWT(const JWT& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  private_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.private_key().size() > 0) {
    private_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_key_);
  }
  if (from.has_email()) {
    email_ = new ::common::String(*from.email_);
  } else {
    email_ = NULL;
  }
  if (from.has_prive_key_id()) {
    prive_key_id_ = new ::common::String(*from.prive_key_id_);
  } else {
    prive_key_id_ = NULL;
  }
  if (from.has_subject()) {
    subject_ = new ::common::String(*from.subject_);
  } else {
    subject_ = NULL;
  }
  if (from.has_scopes()) {
    scopes_ = new ::common::StringArray(*from.scopes_);
  } else {
    scopes_ = NULL;
  }
  if (from.has_token_url()) {
    token_url_ = new ::common::String(*from.token_url_);
  } else {
    token_url_ = NULL;
  }
  if (from.has_expires()) {
    expires_ = new ::common::String(*from.expires_);
  } else {
    expires_ = NULL;
  }
  if (from.has_audience()) {
    audience_ = new ::common::String(*from.audience_);
  } else {
    audience_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.JWT)
}

void JWT::SharedCtor() {
  private_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&email_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&audience_) -
      reinterpret_cast<char*>(&email_)) + sizeof(audience_));
}

JWT::~JWT() {
  // @@protoc_insertion_point(destructor:api.JWT)
  SharedDtor();
}

void JWT::SharedDtor() {
  private_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete email_;
  if (this != internal_default_instance()) delete prive_key_id_;
  if (this != internal_default_instance()) delete subject_;
  if (this != internal_default_instance()) delete scopes_;
  if (this != internal_default_instance()) delete token_url_;
  if (this != internal_default_instance()) delete expires_;
  if (this != internal_default_instance()) delete audience_;
}

void JWT::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JWT::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JWT& JWT::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_JWT.base);
  return *internal_default_instance();
}


void JWT::Clear() {
// @@protoc_insertion_point(message_clear_start:api.JWT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  private_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && email_ != NULL) {
    delete email_;
  }
  email_ = NULL;
  if (GetArenaNoVirtual() == NULL && prive_key_id_ != NULL) {
    delete prive_key_id_;
  }
  prive_key_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
  if (GetArenaNoVirtual() == NULL && scopes_ != NULL) {
    delete scopes_;
  }
  scopes_ = NULL;
  if (GetArenaNoVirtual() == NULL && token_url_ != NULL) {
    delete token_url_;
  }
  token_url_ = NULL;
  if (GetArenaNoVirtual() == NULL && expires_ != NULL) {
    delete expires_;
  }
  expires_ = NULL;
  if (GetArenaNoVirtual() == NULL && audience_ != NULL) {
    delete audience_;
  }
  audience_ = NULL;
  _internal_metadata_.Clear();
}

bool JWT::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.JWT)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes private_key = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_private_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String prive_key_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_prive_key_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String subject = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringArray scopes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scopes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String token_url = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_token_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String expires = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expires()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String audience = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_audience()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.JWT)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.JWT)
  return false;
#undef DO_
}

void JWT::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.JWT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String email = 1;
  if (this->has_email()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_email(), output);
  }

  // bytes private_key = 2;
  if (this->private_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->private_key(), output);
  }

  // .common.String prive_key_id = 3;
  if (this->has_prive_key_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_prive_key_id(), output);
  }

  // .common.String subject = 4;
  if (this->has_subject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_subject(), output);
  }

  // .common.StringArray scopes = 5;
  if (this->has_scopes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_scopes(), output);
  }

  // .common.String token_url = 6;
  if (this->has_token_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_token_url(), output);
  }

  // .common.String expires = 7;
  if (this->has_expires()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_expires(), output);
  }

  // .common.String audience = 8;
  if (this->has_audience()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_audience(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.JWT)
}

::google::protobuf::uint8* JWT::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.JWT)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String email = 1;
  if (this->has_email()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_email(), deterministic, target);
  }

  // bytes private_key = 2;
  if (this->private_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->private_key(), target);
  }

  // .common.String prive_key_id = 3;
  if (this->has_prive_key_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_prive_key_id(), deterministic, target);
  }

  // .common.String subject = 4;
  if (this->has_subject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_subject(), deterministic, target);
  }

  // .common.StringArray scopes = 5;
  if (this->has_scopes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_scopes(), deterministic, target);
  }

  // .common.String token_url = 6;
  if (this->has_token_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_token_url(), deterministic, target);
  }

  // .common.String expires = 7;
  if (this->has_expires()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_expires(), deterministic, target);
  }

  // .common.String audience = 8;
  if (this->has_audience()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_audience(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.JWT)
  return target;
}

size_t JWT::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.JWT)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes private_key = 2;
  if (this->private_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->private_key());
  }

  // .common.String email = 1;
  if (this->has_email()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *email_);
  }

  // .common.String prive_key_id = 3;
  if (this->has_prive_key_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *prive_key_id_);
  }

  // .common.String subject = 4;
  if (this->has_subject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *subject_);
  }

  // .common.StringArray scopes = 5;
  if (this->has_scopes()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *scopes_);
  }

  // .common.String token_url = 6;
  if (this->has_token_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *token_url_);
  }

  // .common.String expires = 7;
  if (this->has_expires()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expires_);
  }

  // .common.String audience = 8;
  if (this->has_audience()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *audience_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JWT::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.JWT)
  GOOGLE_DCHECK_NE(&from, this);
  const JWT* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JWT>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.JWT)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.JWT)
    MergeFrom(*source);
  }
}

void JWT::MergeFrom(const JWT& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.JWT)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.private_key().size() > 0) {

    private_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.private_key_);
  }
  if (from.has_email()) {
    mutable_email()->::common::String::MergeFrom(from.email());
  }
  if (from.has_prive_key_id()) {
    mutable_prive_key_id()->::common::String::MergeFrom(from.prive_key_id());
  }
  if (from.has_subject()) {
    mutable_subject()->::common::String::MergeFrom(from.subject());
  }
  if (from.has_scopes()) {
    mutable_scopes()->::common::StringArray::MergeFrom(from.scopes());
  }
  if (from.has_token_url()) {
    mutable_token_url()->::common::String::MergeFrom(from.token_url());
  }
  if (from.has_expires()) {
    mutable_expires()->::common::String::MergeFrom(from.expires());
  }
  if (from.has_audience()) {
    mutable_audience()->::common::String::MergeFrom(from.audience());
  }
}

void JWT::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.JWT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JWT::CopyFrom(const JWT& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.JWT)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JWT::IsInitialized() const {
  return true;
}

void JWT::Swap(JWT* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JWT::InternalSwap(JWT* other) {
  using std::swap;
  private_key_.Swap(&other->private_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(email_, other->email_);
  swap(prive_key_id_, other->prive_key_id_);
  swap(subject_, other->subject_);
  swap(scopes_, other->scopes_);
  swap(token_url_, other->token_url_);
  swap(expires_, other->expires_);
  swap(audience_, other->audience_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JWT::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Query::InitAsDefaultInstance() {
  ::api::_Query_default_instance_._instance.get_mutable()->query_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Query_default_instance_._instance.get_mutable()->fields_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void Query::clear_query() {
  if (GetArenaNoVirtual() == NULL && query_ != NULL) {
    delete query_;
  }
  query_ = NULL;
}
void Query::clear_fields() {
  if (GetArenaNoVirtual() == NULL && fields_ != NULL) {
    delete fields_;
  }
  fields_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Query::kQueryFieldNumber;
const int Query::kFieldsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Query::Query()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Query.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Query)
}
Query::Query(const Query& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_query()) {
    query_ = new ::common::String(*from.query_);
  } else {
    query_ = NULL;
  }
  if (from.has_fields()) {
    fields_ = new ::common::String(*from.fields_);
  } else {
    fields_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.Query)
}

void Query::SharedCtor() {
  ::memset(&query_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&fields_) -
      reinterpret_cast<char*>(&query_)) + sizeof(fields_));
}

Query::~Query() {
  // @@protoc_insertion_point(destructor:api.Query)
  SharedDtor();
}

void Query::SharedDtor() {
  if (this != internal_default_instance()) delete query_;
  if (this != internal_default_instance()) delete fields_;
}

void Query::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Query::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Query& Query::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Query.base);
  return *internal_default_instance();
}


void Query::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && query_ != NULL) {
    delete query_;
  }
  query_ = NULL;
  if (GetArenaNoVirtual() == NULL && fields_ != NULL) {
    delete fields_;
  }
  fields_ = NULL;
  _internal_metadata_.Clear();
}

bool Query::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Query)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String query = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String fields = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fields()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Query)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Query)
  return false;
#undef DO_
}

void Query::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String query = 4;
  if (this->has_query()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_query(), output);
  }

  // .common.String fields = 5;
  if (this->has_fields()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_fields(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Query)
}

::google::protobuf::uint8* Query::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Query)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String query = 4;
  if (this->has_query()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_query(), deterministic, target);
  }

  // .common.String fields = 5;
  if (this->has_fields()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_fields(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Query)
  return target;
}

size_t Query::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Query)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String query = 4;
  if (this->has_query()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *query_);
  }

  // .common.String fields = 5;
  if (this->has_fields()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *fields_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Query::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Query)
  GOOGLE_DCHECK_NE(&from, this);
  const Query* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Query>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Query)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Query)
    MergeFrom(*source);
  }
}

void Query::MergeFrom(const Query& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Query)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_query()) {
    mutable_query()->::common::String::MergeFrom(from.query());
  }
  if (from.has_fields()) {
    mutable_fields()->::common::String::MergeFrom(from.fields());
  }
}

void Query::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Query)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Query::CopyFrom(const Query& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Query)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Query::IsInitialized() const {
  return true;
}

void Query::Swap(Query* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Query::InternalSwap(Query* other) {
  using std::swap;
  swap(query_, other->query_);
  swap(fields_, other->fields_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Query::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Event::InitAsDefaultInstance() {
  ::api::_Event_default_instance_._instance.get_mutable()->date_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Event_default_instance_._instance.get_mutable()->type_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Event_default_instance_._instance.get_mutable()->client_id_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Event_default_instance_._instance.get_mutable()->client_name_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Event_default_instance_._instance.get_mutable()->ip_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Event_default_instance_._instance.get_mutable()->location_info_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Event_default_instance_._instance.get_mutable()->details_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Event_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void Event::clear_date() {
  if (GetArenaNoVirtual() == NULL && date_ != NULL) {
    delete date_;
  }
  date_ = NULL;
}
void Event::clear_type() {
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
}
void Event::clear_client_id() {
  if (GetArenaNoVirtual() == NULL && client_id_ != NULL) {
    delete client_id_;
  }
  client_id_ = NULL;
}
void Event::clear_client_name() {
  if (GetArenaNoVirtual() == NULL && client_name_ != NULL) {
    delete client_name_;
  }
  client_name_ = NULL;
}
void Event::clear_ip() {
  if (GetArenaNoVirtual() == NULL && ip_ != NULL) {
    delete ip_;
  }
  ip_ = NULL;
}
void Event::clear_location_info() {
  if (GetArenaNoVirtual() == NULL && location_info_ != NULL) {
    delete location_info_;
  }
  location_info_ = NULL;
}
void Event::clear_details() {
  if (GetArenaNoVirtual() == NULL && details_ != NULL) {
    delete details_;
  }
  details_ = NULL;
}
void Event::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) {
    delete user_id_;
  }
  user_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kDateFieldNumber;
const int Event::kTypeFieldNumber;
const int Event::kClientIdFieldNumber;
const int Event::kClientNameFieldNumber;
const int Event::kIpFieldNumber;
const int Event::kLocationInfoFieldNumber;
const int Event::kDetailsFieldNumber;
const int Event::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Event.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Event)
}
Event::Event(const Event& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_date()) {
    date_ = new ::common::String(*from.date_);
  } else {
    date_ = NULL;
  }
  if (from.has_type()) {
    type_ = new ::common::String(*from.type_);
  } else {
    type_ = NULL;
  }
  if (from.has_client_id()) {
    client_id_ = new ::common::String(*from.client_id_);
  } else {
    client_id_ = NULL;
  }
  if (from.has_client_name()) {
    client_name_ = new ::common::String(*from.client_name_);
  } else {
    client_name_ = NULL;
  }
  if (from.has_ip()) {
    ip_ = new ::common::String(*from.ip_);
  } else {
    ip_ = NULL;
  }
  if (from.has_location_info()) {
    location_info_ = new ::common::String(*from.location_info_);
  } else {
    location_info_ = NULL;
  }
  if (from.has_details()) {
    details_ = new ::common::String(*from.details_);
  } else {
    details_ = NULL;
  }
  if (from.has_user_id()) {
    user_id_ = new ::common::String(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.Event)
}

void Event::SharedCtor() {
  ::memset(&date_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&date_)) + sizeof(user_id_));
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:api.Event)
  SharedDtor();
}

void Event::SharedDtor() {
  if (this != internal_default_instance()) delete date_;
  if (this != internal_default_instance()) delete type_;
  if (this != internal_default_instance()) delete client_id_;
  if (this != internal_default_instance()) delete client_name_;
  if (this != internal_default_instance()) delete ip_;
  if (this != internal_default_instance()) delete location_info_;
  if (this != internal_default_instance()) delete details_;
  if (this != internal_default_instance()) delete user_id_;
}

void Event::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Event::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Event& Event::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Event.base);
  return *internal_default_instance();
}


void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && date_ != NULL) {
    delete date_;
  }
  date_ = NULL;
  if (GetArenaNoVirtual() == NULL && type_ != NULL) {
    delete type_;
  }
  type_ = NULL;
  if (GetArenaNoVirtual() == NULL && client_id_ != NULL) {
    delete client_id_;
  }
  client_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && client_name_ != NULL) {
    delete client_name_;
  }
  client_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && ip_ != NULL) {
    delete ip_;
  }
  ip_ = NULL;
  if (GetArenaNoVirtual() == NULL && location_info_ != NULL) {
    delete location_info_;
  }
  location_info_ = NULL;
  if (GetArenaNoVirtual() == NULL && details_ != NULL) {
    delete details_;
  }
  details_ = NULL;
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) {
    delete user_id_;
  }
  user_id_ = NULL;
  _internal_metadata_.Clear();
}

bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Event)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String date = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String client_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String client_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String ip = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String location_info = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_location_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String details = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_details()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String user_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Event)
  return false;
#undef DO_
}

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String date = 1;
  if (this->has_date()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_date(), output);
  }

  // .common.String type = 2;
  if (this->has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_type(), output);
  }

  // .common.String client_id = 3;
  if (this->has_client_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_client_id(), output);
  }

  // .common.String client_name = 4;
  if (this->has_client_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_client_name(), output);
  }

  // .common.String ip = 5;
  if (this->has_ip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_ip(), output);
  }

  // .common.String location_info = 6;
  if (this->has_location_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_location_info(), output);
  }

  // .common.String details = 7;
  if (this->has_details()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_details(), output);
  }

  // .common.String user_id = 8;
  if (this->has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Event)
}

::google::protobuf::uint8* Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Event)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String date = 1;
  if (this->has_date()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_date(), deterministic, target);
  }

  // .common.String type = 2;
  if (this->has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_type(), deterministic, target);
  }

  // .common.String client_id = 3;
  if (this->has_client_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_client_id(), deterministic, target);
  }

  // .common.String client_name = 4;
  if (this->has_client_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_client_name(), deterministic, target);
  }

  // .common.String ip = 5;
  if (this->has_ip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_ip(), deterministic, target);
  }

  // .common.String location_info = 6;
  if (this->has_location_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_location_info(), deterministic, target);
  }

  // .common.String details = 7;
  if (this->has_details()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_details(), deterministic, target);
  }

  // .common.String user_id = 8;
  if (this->has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_user_id(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Event)
  return target;
}

size_t Event::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Event)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String date = 1;
  if (this->has_date()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *date_);
  }

  // .common.String type = 2;
  if (this->has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *type_);
  }

  // .common.String client_id = 3;
  if (this->has_client_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *client_id_);
  }

  // .common.String client_name = 4;
  if (this->has_client_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *client_name_);
  }

  // .common.String ip = 5;
  if (this->has_ip()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *ip_);
  }

  // .common.String location_info = 6;
  if (this->has_location_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *location_info_);
  }

  // .common.String details = 7;
  if (this->has_details()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *details_);
  }

  // .common.String user_id = 8;
  if (this->has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Event)
  GOOGLE_DCHECK_NE(&from, this);
  const Event* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Event>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Event)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Event)
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Event)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_date()) {
    mutable_date()->::common::String::MergeFrom(from.date());
  }
  if (from.has_type()) {
    mutable_type()->::common::String::MergeFrom(from.type());
  }
  if (from.has_client_id()) {
    mutable_client_id()->::common::String::MergeFrom(from.client_id());
  }
  if (from.has_client_name()) {
    mutable_client_name()->::common::String::MergeFrom(from.client_name());
  }
  if (from.has_ip()) {
    mutable_ip()->::common::String::MergeFrom(from.ip());
  }
  if (from.has_location_info()) {
    mutable_location_info()->::common::String::MergeFrom(from.location_info());
  }
  if (from.has_details()) {
    mutable_details()->::common::String::MergeFrom(from.details());
  }
  if (from.has_user_id()) {
    mutable_user_id()->::common::String::MergeFrom(from.user_id());
  }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {
  return true;
}

void Event::Swap(Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
  using std::swap;
  swap(date_, other->date_);
  swap(type_, other->type_);
  swap(client_id_, other->client_id_);
  swap(client_name_, other->client_name_);
  swap(ip_, other->ip_);
  swap(location_info_, other->location_info_);
  swap(details_, other->details_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EventQuery::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventQuery::kDateFieldNumber;
const int EventQuery::kTypeFieldNumber;
const int EventQuery::kClientIdFieldNumber;
const int EventQuery::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventQuery::EventQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_EventQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.EventQuery)
}
EventQuery::EventQuery(const EventQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.date().size() > 0) {
    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.client_id().size() > 0) {
    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.user_id().size() > 0) {
    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
  // @@protoc_insertion_point(copy_constructor:api.EventQuery)
}

void EventQuery::SharedCtor() {
  date_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

EventQuery::~EventQuery() {
  // @@protoc_insertion_point(destructor:api.EventQuery)
  SharedDtor();
}

void EventQuery::SharedDtor() {
  date_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EventQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EventQuery::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventQuery& EventQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_EventQuery.base);
  return *internal_default_instance();
}


void EventQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:api.EventQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  date_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  client_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  user_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EventQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.EventQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string date = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_date()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->date().data(), static_cast<int>(this->date().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.EventQuery.date"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.EventQuery.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string client_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_client_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->client_id().data(), static_cast<int>(this->client_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.EventQuery.client_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string user_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_user_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->user_id().data(), static_cast<int>(this->user_id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.EventQuery.user_id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.EventQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.EventQuery)
  return false;
#undef DO_
}

void EventQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.EventQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string date = 1;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EventQuery.date");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->date(), output);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EventQuery.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->type(), output);
  }

  // string client_id = 3;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EventQuery.client_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->client_id(), output);
  }

  // string user_id = 4;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EventQuery.user_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.EventQuery)
}

::google::protobuf::uint8* EventQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.EventQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string date = 1;
  if (this->date().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->date().data(), static_cast<int>(this->date().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EventQuery.date");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->date(), target);
  }

  // string type = 2;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EventQuery.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->type(), target);
  }

  // string client_id = 3;
  if (this->client_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->client_id().data(), static_cast<int>(this->client_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EventQuery.client_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->client_id(), target);
  }

  // string user_id = 4;
  if (this->user_id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->user_id().data(), static_cast<int>(this->user_id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.EventQuery.user_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.EventQuery)
  return target;
}

size_t EventQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.EventQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string date = 1;
  if (this->date().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->date());
  }

  // string type = 2;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // string client_id = 3;
  if (this->client_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->client_id());
  }

  // string user_id = 4;
  if (this->user_id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->user_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EventQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.EventQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const EventQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EventQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.EventQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.EventQuery)
    MergeFrom(*source);
  }
}

void EventQuery::MergeFrom(const EventQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.EventQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.date().size() > 0) {

    date_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.date_);
  }
  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.client_id().size() > 0) {

    client_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.client_id_);
  }
  if (from.user_id().size() > 0) {

    user_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.user_id_);
  }
}

void EventQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.EventQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EventQuery::CopyFrom(const EventQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.EventQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EventQuery::IsInitialized() const {
  return true;
}

void EventQuery::Swap(EventQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EventQuery::InternalSwap(EventQuery* other) {
  using std::swap;
  date_.Swap(&other->date_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  client_id_.Swap(&other->client_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  user_id_.Swap(&other->user_id_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EventQuery::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JSONWebKeys::InitAsDefaultInstance() {
  ::api::_JSONWebKeys_default_instance_._instance.get_mutable()->kty_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_JSONWebKeys_default_instance_._instance.get_mutable()->kid_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_JSONWebKeys_default_instance_._instance.get_mutable()->use_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_JSONWebKeys_default_instance_._instance.get_mutable()->n_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_JSONWebKeys_default_instance_._instance.get_mutable()->e_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_JSONWebKeys_default_instance_._instance.get_mutable()->x5c_ = const_cast< ::common::StringArray*>(
      ::common::StringArray::internal_default_instance());
}
void JSONWebKeys::clear_kty() {
  if (GetArenaNoVirtual() == NULL && kty_ != NULL) {
    delete kty_;
  }
  kty_ = NULL;
}
void JSONWebKeys::clear_kid() {
  if (GetArenaNoVirtual() == NULL && kid_ != NULL) {
    delete kid_;
  }
  kid_ = NULL;
}
void JSONWebKeys::clear_use() {
  if (GetArenaNoVirtual() == NULL && use_ != NULL) {
    delete use_;
  }
  use_ = NULL;
}
void JSONWebKeys::clear_n() {
  if (GetArenaNoVirtual() == NULL && n_ != NULL) {
    delete n_;
  }
  n_ = NULL;
}
void JSONWebKeys::clear_e() {
  if (GetArenaNoVirtual() == NULL && e_ != NULL) {
    delete e_;
  }
  e_ = NULL;
}
void JSONWebKeys::clear_x5c() {
  if (GetArenaNoVirtual() == NULL && x5c_ != NULL) {
    delete x5c_;
  }
  x5c_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JSONWebKeys::kKtyFieldNumber;
const int JSONWebKeys::kKidFieldNumber;
const int JSONWebKeys::kUseFieldNumber;
const int JSONWebKeys::kNFieldNumber;
const int JSONWebKeys::kEFieldNumber;
const int JSONWebKeys::kX5CFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JSONWebKeys::JSONWebKeys()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_JSONWebKeys.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.JSONWebKeys)
}
JSONWebKeys::JSONWebKeys(const JSONWebKeys& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_kty()) {
    kty_ = new ::common::String(*from.kty_);
  } else {
    kty_ = NULL;
  }
  if (from.has_kid()) {
    kid_ = new ::common::Identifier(*from.kid_);
  } else {
    kid_ = NULL;
  }
  if (from.has_use()) {
    use_ = new ::common::String(*from.use_);
  } else {
    use_ = NULL;
  }
  if (from.has_n()) {
    n_ = new ::common::String(*from.n_);
  } else {
    n_ = NULL;
  }
  if (from.has_e()) {
    e_ = new ::common::String(*from.e_);
  } else {
    e_ = NULL;
  }
  if (from.has_x5c()) {
    x5c_ = new ::common::StringArray(*from.x5c_);
  } else {
    x5c_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.JSONWebKeys)
}

void JSONWebKeys::SharedCtor() {
  ::memset(&kty_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&x5c_) -
      reinterpret_cast<char*>(&kty_)) + sizeof(x5c_));
}

JSONWebKeys::~JSONWebKeys() {
  // @@protoc_insertion_point(destructor:api.JSONWebKeys)
  SharedDtor();
}

void JSONWebKeys::SharedDtor() {
  if (this != internal_default_instance()) delete kty_;
  if (this != internal_default_instance()) delete kid_;
  if (this != internal_default_instance()) delete use_;
  if (this != internal_default_instance()) delete n_;
  if (this != internal_default_instance()) delete e_;
  if (this != internal_default_instance()) delete x5c_;
}

void JSONWebKeys::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JSONWebKeys::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JSONWebKeys& JSONWebKeys::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_JSONWebKeys.base);
  return *internal_default_instance();
}


void JSONWebKeys::Clear() {
// @@protoc_insertion_point(message_clear_start:api.JSONWebKeys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && kty_ != NULL) {
    delete kty_;
  }
  kty_ = NULL;
  if (GetArenaNoVirtual() == NULL && kid_ != NULL) {
    delete kid_;
  }
  kid_ = NULL;
  if (GetArenaNoVirtual() == NULL && use_ != NULL) {
    delete use_;
  }
  use_ = NULL;
  if (GetArenaNoVirtual() == NULL && n_ != NULL) {
    delete n_;
  }
  n_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ != NULL) {
    delete e_;
  }
  e_ = NULL;
  if (GetArenaNoVirtual() == NULL && x5c_ != NULL) {
    delete x5c_;
  }
  x5c_ = NULL;
  _internal_metadata_.Clear();
}

bool JSONWebKeys::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.JSONWebKeys)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String kty = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kty()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Identifier kid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String use = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_use()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String n = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_n()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String e = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_e()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringArray x5c = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_x5c()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.JSONWebKeys)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.JSONWebKeys)
  return false;
#undef DO_
}

void JSONWebKeys::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.JSONWebKeys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String kty = 1;
  if (this->has_kty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_kty(), output);
  }

  // .common.Identifier kid = 2;
  if (this->has_kid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_kid(), output);
  }

  // .common.String use = 3;
  if (this->has_use()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_use(), output);
  }

  // .common.String n = 4;
  if (this->has_n()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_n(), output);
  }

  // .common.String e = 5;
  if (this->has_e()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_e(), output);
  }

  // .common.StringArray x5c = 6;
  if (this->has_x5c()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_x5c(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.JSONWebKeys)
}

::google::protobuf::uint8* JSONWebKeys::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.JSONWebKeys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String kty = 1;
  if (this->has_kty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_kty(), deterministic, target);
  }

  // .common.Identifier kid = 2;
  if (this->has_kid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_kid(), deterministic, target);
  }

  // .common.String use = 3;
  if (this->has_use()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_use(), deterministic, target);
  }

  // .common.String n = 4;
  if (this->has_n()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_n(), deterministic, target);
  }

  // .common.String e = 5;
  if (this->has_e()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_e(), deterministic, target);
  }

  // .common.StringArray x5c = 6;
  if (this->has_x5c()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_x5c(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.JSONWebKeys)
  return target;
}

size_t JSONWebKeys::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.JSONWebKeys)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String kty = 1;
  if (this->has_kty()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *kty_);
  }

  // .common.Identifier kid = 2;
  if (this->has_kid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *kid_);
  }

  // .common.String use = 3;
  if (this->has_use()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *use_);
  }

  // .common.String n = 4;
  if (this->has_n()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *n_);
  }

  // .common.String e = 5;
  if (this->has_e()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *e_);
  }

  // .common.StringArray x5c = 6;
  if (this->has_x5c()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *x5c_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JSONWebKeys::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.JSONWebKeys)
  GOOGLE_DCHECK_NE(&from, this);
  const JSONWebKeys* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JSONWebKeys>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.JSONWebKeys)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.JSONWebKeys)
    MergeFrom(*source);
  }
}

void JSONWebKeys::MergeFrom(const JSONWebKeys& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.JSONWebKeys)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_kty()) {
    mutable_kty()->::common::String::MergeFrom(from.kty());
  }
  if (from.has_kid()) {
    mutable_kid()->::common::Identifier::MergeFrom(from.kid());
  }
  if (from.has_use()) {
    mutable_use()->::common::String::MergeFrom(from.use());
  }
  if (from.has_n()) {
    mutable_n()->::common::String::MergeFrom(from.n());
  }
  if (from.has_e()) {
    mutable_e()->::common::String::MergeFrom(from.e());
  }
  if (from.has_x5c()) {
    mutable_x5c()->::common::StringArray::MergeFrom(from.x5c());
  }
}

void JSONWebKeys::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.JSONWebKeys)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JSONWebKeys::CopyFrom(const JSONWebKeys& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.JSONWebKeys)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSONWebKeys::IsInitialized() const {
  return true;
}

void JSONWebKeys::Swap(JSONWebKeys* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JSONWebKeys::InternalSwap(JSONWebKeys* other) {
  using std::swap;
  swap(kty_, other->kty_);
  swap(kid_, other->kid_);
  swap(use_, other->use_);
  swap(n_, other->n_);
  swap(e_, other->e_);
  swap(x5c_, other->x5c_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JSONWebKeys::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Jwks::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Jwks::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Jwks::Jwks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Jwks.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Jwks)
}
Jwks::Jwks(const Jwks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.Jwks)
}

void Jwks::SharedCtor() {
}

Jwks::~Jwks() {
  // @@protoc_insertion_point(destructor:api.Jwks)
  SharedDtor();
}

void Jwks::SharedDtor() {
}

void Jwks::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Jwks::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Jwks& Jwks::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Jwks.base);
  return *internal_default_instance();
}


void Jwks::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Jwks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  _internal_metadata_.Clear();
}

bool Jwks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Jwks)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .api.JSONWebKeys keys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Jwks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Jwks)
  return false;
#undef DO_
}

void Jwks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Jwks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .api.JSONWebKeys keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->keys(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Jwks)
}

::google::protobuf::uint8* Jwks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Jwks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .api.JSONWebKeys keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->keys(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Jwks)
  return target;
}

size_t Jwks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Jwks)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .api.JSONWebKeys keys = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Jwks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Jwks)
  GOOGLE_DCHECK_NE(&from, this);
  const Jwks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Jwks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Jwks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Jwks)
    MergeFrom(*source);
  }
}

void Jwks::MergeFrom(const Jwks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Jwks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
}

void Jwks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Jwks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Jwks::CopyFrom(const Jwks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Jwks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Jwks::IsInitialized() const {
  return true;
}

void Jwks::Swap(Jwks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Jwks::InternalSwap(Jwks* other) {
  using std::swap;
  CastToBase(&keys_)->InternalSwap(CastToBase(&other->keys_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Jwks::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::AddUserRolesRequest* Arena::CreateMaybeMessage< ::api::AddUserRolesRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::AddUserRolesRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::SubscribeRequest* Arena::CreateMaybeMessage< ::api::SubscribeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::SubscribeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::UnSubscribeRequest* Arena::CreateMaybeMessage< ::api::UnSubscribeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::UnSubscribeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Card* Arena::CreateMaybeMessage< ::api::Card >(Arena* arena) {
  return Arena::CreateInternal< ::api::Card >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::User* Arena::CreateMaybeMessage< ::api::User >(Arena* arena) {
  return Arena::CreateInternal< ::api::User >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::UserMetadata* Arena::CreateMaybeMessage< ::api::UserMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::api::UserMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Address* Arena::CreateMaybeMessage< ::api::Address >(Arena* arena) {
  return Arena::CreateInternal< ::api::Address >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::AppMetadata* Arena::CreateMaybeMessage< ::api::AppMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::api::AppMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Plan* Arena::CreateMaybeMessage< ::api::Plan >(Arena* arena) {
  return Arena::CreateInternal< ::api::Plan >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Product* Arena::CreateMaybeMessage< ::api::Product >(Arena* arena) {
  return Arena::CreateInternal< ::api::Product >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Identity* Arena::CreateMaybeMessage< ::api::Identity >(Arena* arena) {
  return Arena::CreateInternal< ::api::Identity >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Role* Arena::CreateMaybeMessage< ::api::Role >(Arena* arena) {
  return Arena::CreateInternal< ::api::Role >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::OAuth2* Arena::CreateMaybeMessage< ::api::OAuth2 >(Arena* arena) {
  return Arena::CreateInternal< ::api::OAuth2 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::ClientCredentials* Arena::CreateMaybeMessage< ::api::ClientCredentials >(Arena* arena) {
  return Arena::CreateInternal< ::api::ClientCredentials >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::JWT* Arena::CreateMaybeMessage< ::api::JWT >(Arena* arena) {
  return Arena::CreateInternal< ::api::JWT >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Query* Arena::CreateMaybeMessage< ::api::Query >(Arena* arena) {
  return Arena::CreateInternal< ::api::Query >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Event* Arena::CreateMaybeMessage< ::api::Event >(Arena* arena) {
  return Arena::CreateInternal< ::api::Event >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::EventQuery* Arena::CreateMaybeMessage< ::api::EventQuery >(Arena* arena) {
  return Arena::CreateInternal< ::api::EventQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::JSONWebKeys* Arena::CreateMaybeMessage< ::api::JSONWebKeys >(Arena* arena) {
  return Arena::CreateInternal< ::api::JSONWebKeys >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Jwks* Arena::CreateMaybeMessage< ::api::Jwks >(Arena* arena) {
  return Arena::CreateInternal< ::api::Jwks >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
