/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var time_time_pb = require('../time/time_pb.js');
var geo_geo_pb = require('../geo/geo_pb.js');
goog.exportSymbol('proto.user.User', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.user.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.user.User.repeatedFields_, null);
};
goog.inherits(proto.user.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.user.User.displayName = 'proto.user.User';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.user.User.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.user.User.prototype.toObject = function(opt_includeInstance) {
  return proto.user.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.user.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    photo: jspb.Message.getFieldWithDefault(msg, 3, ""),
    email: jspb.Message.getFieldWithDefault(msg, 4, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 5, ""),
    registered: jspb.Message.getFieldWithDefault(msg, 6, false),
    verified: jspb.Message.getFieldWithDefault(msg, 7, false),
    accountBalance: jspb.Message.getFieldWithDefault(msg, 8, 0),
    description: jspb.Message.getFieldWithDefault(msg, 9, ""),
    tokensList: jspb.Message.getRepeatedField(msg, 10),
    password: jspb.Message.getFieldWithDefault(msg, 11, ""),
    recoveryQuestion: jspb.Message.getFieldWithDefault(msg, 12, ""),
    recoveryAnswer: jspb.Message.getFieldWithDefault(msg, 13, ""),
    trialEnd: jspb.Message.getFieldWithDefault(msg, 14, 0),
    metaMap: (f = msg.getMetaMap()) ? f.toObject(includeInstance, undefined) : [],
    postal: (f = msg.getPostal()) && geo_geo_pb.PostalAddress.toObject(includeInstance, f),
    tracker: (f = msg.getTracker()) && time_time_pb.Tracker.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.user.User}
 */
proto.user.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.user.User;
  return proto.user.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.user.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.user.User}
 */
proto.user.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhoto(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRegistered(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVerified(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setAccountBalance(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.addTokens(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecoveryQuestion(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setRecoveryAnswer(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTrialEnd(value);
      break;
    case 15:
      var value = msg.getMetaMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readBytes, null, "");
         });
      break;
    case 16:
      var value = new geo_geo_pb.PostalAddress;
      reader.readMessage(value,geo_geo_pb.PostalAddress.deserializeBinaryFromReader);
      msg.setPostal(value);
      break;
    case 17:
      var value = new time_time_pb.Tracker;
      reader.readMessage(value,time_time_pb.Tracker.deserializeBinaryFromReader);
      msg.setTracker(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.user.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.user.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.user.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.user.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPhoto();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRegistered();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getVerified();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getAccountBalance();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getTokensList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      10,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getRecoveryQuestion();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getRecoveryAnswer();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getTrialEnd();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getMetaMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(15, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeBytes);
  }
  f = message.getPostal();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      geo_geo_pb.PostalAddress.serializeBinaryToWriter
    );
  }
  f = message.getTracker();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      time_time_pb.Tracker.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.user.User.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.user.User.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string display_name = 2;
 * @return {string}
 */
proto.user.User.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.user.User.prototype.setDisplayName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string photo = 3;
 * @return {string}
 */
proto.user.User.prototype.getPhoto = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.user.User.prototype.setPhoto = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string email = 4;
 * @return {string}
 */
proto.user.User.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.user.User.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string phone = 5;
 * @return {string}
 */
proto.user.User.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.user.User.prototype.setPhone = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool registered = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.user.User.prototype.getRegistered = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.user.User.prototype.setRegistered = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional bool verified = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.user.User.prototype.getVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.user.User.prototype.setVerified = function(value) {
  jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional int64 account_balance = 8;
 * @return {number}
 */
proto.user.User.prototype.getAccountBalance = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.user.User.prototype.setAccountBalance = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string description = 9;
 * @return {string}
 */
proto.user.User.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.user.User.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * repeated string tokens = 10;
 * @return {!Array<string>}
 */
proto.user.User.prototype.getTokensList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));
};


/** @param {!Array<string>} value */
proto.user.User.prototype.setTokensList = function(value) {
  jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.user.User.prototype.addTokens = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


proto.user.User.prototype.clearTokensList = function() {
  this.setTokensList([]);
};


/**
 * optional string password = 11;
 * @return {string}
 */
proto.user.User.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.user.User.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string recovery_question = 12;
 * @return {string}
 */
proto.user.User.prototype.getRecoveryQuestion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.user.User.prototype.setRecoveryQuestion = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string recovery_answer = 13;
 * @return {string}
 */
proto.user.User.prototype.getRecoveryAnswer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.user.User.prototype.setRecoveryAnswer = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional int64 trial_end = 14;
 * @return {number}
 */
proto.user.User.prototype.getTrialEnd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.user.User.prototype.setTrialEnd = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * map<string, bytes> meta = 15;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,!(string|Uint8Array)>}
 */
proto.user.User.prototype.getMetaMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,!(string|Uint8Array)>} */ (
      jspb.Message.getMapField(this, 15, opt_noLazyCreate,
      null));
};


proto.user.User.prototype.clearMetaMap = function() {
  this.getMetaMap().clear();
};


/**
 * optional geo.PostalAddress postal = 16;
 * @return {?proto.geo.PostalAddress}
 */
proto.user.User.prototype.getPostal = function() {
  return /** @type{?proto.geo.PostalAddress} */ (
    jspb.Message.getWrapperField(this, geo_geo_pb.PostalAddress, 16));
};


/** @param {?proto.geo.PostalAddress|undefined} value */
proto.user.User.prototype.setPostal = function(value) {
  jspb.Message.setWrapperField(this, 16, value);
};


proto.user.User.prototype.clearPostal = function() {
  this.setPostal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.user.User.prototype.hasPostal = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional time.Tracker tracker = 17;
 * @return {?proto.time.Tracker}
 */
proto.user.User.prototype.getTracker = function() {
  return /** @type{?proto.time.Tracker} */ (
    jspb.Message.getWrapperField(this, time_time_pb.Tracker, 17));
};


/** @param {?proto.time.Tracker|undefined} value */
proto.user.User.prototype.setTracker = function(value) {
  jspb.Message.setWrapperField(this, 17, value);
};


proto.user.User.prototype.clearTracker = function() {
  this.setTracker(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.user.User.prototype.hasTracker = function() {
  return jspb.Message.getField(this, 17) != null;
};


goog.object.extend(exports, proto.user);
