// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Api {

  /// <summary>Holder for reflection information generated from api.proto</summary>
  public static partial class ApiReflection {

    #region Descriptor
    /// <summary>File descriptor for api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglhcGkucHJvdG8SA2FwaRocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90",
            "byIbCgpHZXRCeUVtYWlsEg0KBWVtYWlsGAEgASgJIsQBCgdJRFRva2VuEgsK",
            "A2lzcxgBIAEoCRILCgNzdWIYAiABKAkSCwoDYXVkGAMgASgJEgsKA2V4cBgE",
            "IAEoAxILCgNpYXQYBSABKAMSDAoEbmFtZRgGIAEoCRISCgpnaXZlbl9uYW1l",
            "GAcgASgJEhMKC2ZhbWlseV9uYW1lGAggASgJEg4KBmdlbmRlchgJIAEoCRIR",
            "CgliaXJ0aGRhdGUYCiABKAkSDQoFZW1haWwYCyABKAkSDwoHcGljdHVyZRgM",
            "IAEoCSJUCgxVc2VyTWV0YWRhdGESDQoFcGhvbmUYASABKAkSDAoEcGxhbhgC",
            "IAEoCRIRCglwYXlfdG9rZW4YAyABKAkSFAoMbGFzdF9jb250YWN0GAQgASgJ",
            "ImoKC0FjY2Vzc1Rva2VuEgsKA2lzcxgBIAEoCRILCgNzdWIYAiABKAkSCwoD",
            "YXVkGAMgAygJEgsKA2F6cBgEIAEoCRILCgNleHAYBSABKAMSCwoDaWF0GAYg",
            "ASgDEg0KBXNjb3BlGAcgASgJMlQKCUlEU2VydmljZRJHCgpHZXRJRFRva2Vu",
            "Eg8uYXBpLkdldEJ5RW1haWwaDC5hcGkuSURUb2tlbiIagtPkkwIUIg8vYXBp",
            "L2lkL3tlbWFpbH06ASoyYAoNQWNjZXNzU2VydmljZRJPCgpHZXRJRFRva2Vu",
            "Eg8uYXBpLkdldEJ5RW1haWwaEC5hcGkuQWNjZXNzVG9rZW4iHoLT5JMCGCIT",
            "L2FwaS9hY2Nlc3Mve2VtYWlsfToBKmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.GetByEmail), global::Api.GetByEmail.Parser, new[]{ "Email" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.IDToken), global::Api.IDToken.Parser, new[]{ "Iss", "Sub", "Aud", "Exp", "Iat", "Name", "GivenName", "FamilyName", "Gender", "Birthdate", "Email", "Picture" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.UserMetadata), global::Api.UserMetadata.Parser, new[]{ "Phone", "Plan", "PayToken", "LastContact" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.AccessToken), global::Api.AccessToken.Parser, new[]{ "Iss", "Sub", "Aud", "Azp", "Exp", "Iat", "Scope" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetByEmail : pb::IMessage<GetByEmail> {
    private static readonly pb::MessageParser<GetByEmail> _parser = new pb::MessageParser<GetByEmail>(() => new GetByEmail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetByEmail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByEmail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByEmail(GetByEmail other) : this() {
      email_ = other.email_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetByEmail Clone() {
      return new GetByEmail(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetByEmail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetByEmail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetByEmail other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class IDToken : pb::IMessage<IDToken> {
    private static readonly pb::MessageParser<IDToken> _parser = new pb::MessageParser<IDToken>(() => new IDToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<IDToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IDToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IDToken(IDToken other) : this() {
      iss_ = other.iss_;
      sub_ = other.sub_;
      aud_ = other.aud_;
      exp_ = other.exp_;
      iat_ = other.iat_;
      name_ = other.name_;
      givenName_ = other.givenName_;
      familyName_ = other.familyName_;
      gender_ = other.gender_;
      birthdate_ = other.birthdate_;
      email_ = other.email_;
      picture_ = other.picture_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IDToken Clone() {
      return new IDToken(this);
    }

    /// <summary>Field number for the "iss" field.</summary>
    public const int IssFieldNumber = 1;
    private string iss_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Iss {
      get { return iss_; }
      set {
        iss_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sub" field.</summary>
    public const int SubFieldNumber = 2;
    private string sub_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sub {
      get { return sub_; }
      set {
        sub_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aud" field.</summary>
    public const int AudFieldNumber = 3;
    private string aud_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Aud {
      get { return aud_; }
      set {
        aud_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 4;
    private long exp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    /// <summary>Field number for the "iat" field.</summary>
    public const int IatFieldNumber = 5;
    private long iat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Iat {
      get { return iat_; }
      set {
        iat_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "given_name" field.</summary>
    public const int GivenNameFieldNumber = 7;
    private string givenName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GivenName {
      get { return givenName_; }
      set {
        givenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "family_name" field.</summary>
    public const int FamilyNameFieldNumber = 8;
    private string familyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FamilyName {
      get { return familyName_; }
      set {
        familyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 9;
    private string gender_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gender {
      get { return gender_; }
      set {
        gender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "birthdate" field.</summary>
    public const int BirthdateFieldNumber = 10;
    private string birthdate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Birthdate {
      get { return birthdate_; }
      set {
        birthdate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 11;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "picture" field.</summary>
    public const int PictureFieldNumber = 12;
    private string picture_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Picture {
      get { return picture_; }
      set {
        picture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as IDToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(IDToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Iss != other.Iss) return false;
      if (Sub != other.Sub) return false;
      if (Aud != other.Aud) return false;
      if (Exp != other.Exp) return false;
      if (Iat != other.Iat) return false;
      if (Name != other.Name) return false;
      if (GivenName != other.GivenName) return false;
      if (FamilyName != other.FamilyName) return false;
      if (Gender != other.Gender) return false;
      if (Birthdate != other.Birthdate) return false;
      if (Email != other.Email) return false;
      if (Picture != other.Picture) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Iss.Length != 0) hash ^= Iss.GetHashCode();
      if (Sub.Length != 0) hash ^= Sub.GetHashCode();
      if (Aud.Length != 0) hash ^= Aud.GetHashCode();
      if (Exp != 0L) hash ^= Exp.GetHashCode();
      if (Iat != 0L) hash ^= Iat.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (GivenName.Length != 0) hash ^= GivenName.GetHashCode();
      if (FamilyName.Length != 0) hash ^= FamilyName.GetHashCode();
      if (Gender.Length != 0) hash ^= Gender.GetHashCode();
      if (Birthdate.Length != 0) hash ^= Birthdate.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Picture.Length != 0) hash ^= Picture.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Iss.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Iss);
      }
      if (Sub.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Sub);
      }
      if (Aud.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Aud);
      }
      if (Exp != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Exp);
      }
      if (Iat != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Iat);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (GivenName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(GivenName);
      }
      if (FamilyName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(FamilyName);
      }
      if (Gender.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Gender);
      }
      if (Birthdate.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Birthdate);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Email);
      }
      if (Picture.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Picture);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Iss.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Iss);
      }
      if (Sub.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sub);
      }
      if (Aud.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Aud);
      }
      if (Exp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Exp);
      }
      if (Iat != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Iat);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (GivenName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GivenName);
      }
      if (FamilyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FamilyName);
      }
      if (Gender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gender);
      }
      if (Birthdate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Birthdate);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Picture.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Picture);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(IDToken other) {
      if (other == null) {
        return;
      }
      if (other.Iss.Length != 0) {
        Iss = other.Iss;
      }
      if (other.Sub.Length != 0) {
        Sub = other.Sub;
      }
      if (other.Aud.Length != 0) {
        Aud = other.Aud;
      }
      if (other.Exp != 0L) {
        Exp = other.Exp;
      }
      if (other.Iat != 0L) {
        Iat = other.Iat;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.GivenName.Length != 0) {
        GivenName = other.GivenName;
      }
      if (other.FamilyName.Length != 0) {
        FamilyName = other.FamilyName;
      }
      if (other.Gender.Length != 0) {
        Gender = other.Gender;
      }
      if (other.Birthdate.Length != 0) {
        Birthdate = other.Birthdate;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Picture.Length != 0) {
        Picture = other.Picture;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Iss = input.ReadString();
            break;
          }
          case 18: {
            Sub = input.ReadString();
            break;
          }
          case 26: {
            Aud = input.ReadString();
            break;
          }
          case 32: {
            Exp = input.ReadInt64();
            break;
          }
          case 40: {
            Iat = input.ReadInt64();
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
          case 58: {
            GivenName = input.ReadString();
            break;
          }
          case 66: {
            FamilyName = input.ReadString();
            break;
          }
          case 74: {
            Gender = input.ReadString();
            break;
          }
          case 82: {
            Birthdate = input.ReadString();
            break;
          }
          case 90: {
            Email = input.ReadString();
            break;
          }
          case 98: {
            Picture = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserMetadata : pb::IMessage<UserMetadata> {
    private static readonly pb::MessageParser<UserMetadata> _parser = new pb::MessageParser<UserMetadata>(() => new UserMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMetadata(UserMetadata other) : this() {
      phone_ = other.phone_;
      plan_ = other.plan_;
      payToken_ = other.payToken_;
      lastContact_ = other.lastContact_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMetadata Clone() {
      return new UserMetadata(this);
    }

    /// <summary>Field number for the "phone" field.</summary>
    public const int PhoneFieldNumber = 1;
    private string phone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phone {
      get { return phone_; }
      set {
        phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plan" field.</summary>
    public const int PlanFieldNumber = 2;
    private string plan_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Plan {
      get { return plan_; }
      set {
        plan_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pay_token" field.</summary>
    public const int PayTokenFieldNumber = 3;
    private string payToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PayToken {
      get { return payToken_; }
      set {
        payToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_contact" field.</summary>
    public const int LastContactFieldNumber = 4;
    private string lastContact_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastContact {
      get { return lastContact_; }
      set {
        lastContact_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Phone != other.Phone) return false;
      if (Plan != other.Plan) return false;
      if (PayToken != other.PayToken) return false;
      if (LastContact != other.LastContact) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Phone.Length != 0) hash ^= Phone.GetHashCode();
      if (Plan.Length != 0) hash ^= Plan.GetHashCode();
      if (PayToken.Length != 0) hash ^= PayToken.GetHashCode();
      if (LastContact.Length != 0) hash ^= LastContact.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Phone.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Phone);
      }
      if (Plan.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Plan);
      }
      if (PayToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PayToken);
      }
      if (LastContact.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LastContact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Phone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
      }
      if (Plan.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Plan);
      }
      if (PayToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PayToken);
      }
      if (LastContact.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastContact);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Phone.Length != 0) {
        Phone = other.Phone;
      }
      if (other.Plan.Length != 0) {
        Plan = other.Plan;
      }
      if (other.PayToken.Length != 0) {
        PayToken = other.PayToken;
      }
      if (other.LastContact.Length != 0) {
        LastContact = other.LastContact;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Phone = input.ReadString();
            break;
          }
          case 18: {
            Plan = input.ReadString();
            break;
          }
          case 26: {
            PayToken = input.ReadString();
            break;
          }
          case 34: {
            LastContact = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AccessToken : pb::IMessage<AccessToken> {
    private static readonly pb::MessageParser<AccessToken> _parser = new pb::MessageParser<AccessToken>(() => new AccessToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccessToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccessToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccessToken(AccessToken other) : this() {
      iss_ = other.iss_;
      sub_ = other.sub_;
      aud_ = other.aud_.Clone();
      azp_ = other.azp_;
      exp_ = other.exp_;
      iat_ = other.iat_;
      scope_ = other.scope_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccessToken Clone() {
      return new AccessToken(this);
    }

    /// <summary>Field number for the "iss" field.</summary>
    public const int IssFieldNumber = 1;
    private string iss_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Iss {
      get { return iss_; }
      set {
        iss_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sub" field.</summary>
    public const int SubFieldNumber = 2;
    private string sub_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sub {
      get { return sub_; }
      set {
        sub_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aud" field.</summary>
    public const int AudFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_aud_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> aud_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Aud {
      get { return aud_; }
    }

    /// <summary>Field number for the "azp" field.</summary>
    public const int AzpFieldNumber = 4;
    private string azp_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Azp {
      get { return azp_; }
      set {
        azp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exp" field.</summary>
    public const int ExpFieldNumber = 5;
    private long exp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Exp {
      get { return exp_; }
      set {
        exp_ = value;
      }
    }

    /// <summary>Field number for the "iat" field.</summary>
    public const int IatFieldNumber = 6;
    private long iat_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Iat {
      get { return iat_; }
      set {
        iat_ = value;
      }
    }

    /// <summary>Field number for the "scope" field.</summary>
    public const int ScopeFieldNumber = 7;
    private string scope_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Scope {
      get { return scope_; }
      set {
        scope_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccessToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccessToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Iss != other.Iss) return false;
      if (Sub != other.Sub) return false;
      if(!aud_.Equals(other.aud_)) return false;
      if (Azp != other.Azp) return false;
      if (Exp != other.Exp) return false;
      if (Iat != other.Iat) return false;
      if (Scope != other.Scope) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Iss.Length != 0) hash ^= Iss.GetHashCode();
      if (Sub.Length != 0) hash ^= Sub.GetHashCode();
      hash ^= aud_.GetHashCode();
      if (Azp.Length != 0) hash ^= Azp.GetHashCode();
      if (Exp != 0L) hash ^= Exp.GetHashCode();
      if (Iat != 0L) hash ^= Iat.GetHashCode();
      if (Scope.Length != 0) hash ^= Scope.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Iss.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Iss);
      }
      if (Sub.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Sub);
      }
      aud_.WriteTo(output, _repeated_aud_codec);
      if (Azp.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Azp);
      }
      if (Exp != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Exp);
      }
      if (Iat != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Iat);
      }
      if (Scope.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Scope);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Iss.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Iss);
      }
      if (Sub.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Sub);
      }
      size += aud_.CalculateSize(_repeated_aud_codec);
      if (Azp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Azp);
      }
      if (Exp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Exp);
      }
      if (Iat != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Iat);
      }
      if (Scope.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Scope);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccessToken other) {
      if (other == null) {
        return;
      }
      if (other.Iss.Length != 0) {
        Iss = other.Iss;
      }
      if (other.Sub.Length != 0) {
        Sub = other.Sub;
      }
      aud_.Add(other.aud_);
      if (other.Azp.Length != 0) {
        Azp = other.Azp;
      }
      if (other.Exp != 0L) {
        Exp = other.Exp;
      }
      if (other.Iat != 0L) {
        Iat = other.Iat;
      }
      if (other.Scope.Length != 0) {
        Scope = other.Scope;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Iss = input.ReadString();
            break;
          }
          case 18: {
            Sub = input.ReadString();
            break;
          }
          case 26: {
            aud_.AddEntriesFrom(input, _repeated_aud_codec);
            break;
          }
          case 34: {
            Azp = input.ReadString();
            break;
          }
          case 40: {
            Exp = input.ReadInt64();
            break;
          }
          case 48: {
            Iat = input.ReadInt64();
            break;
          }
          case 58: {
            Scope = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
