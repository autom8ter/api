// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Scope int32

const (
	Scope_OPENID                 Scope = 0
	Scope_PROFILE                Scope = 1
	Scope_EMAIL                  Scope = 2
	Scope_READ_USERS             Scope = 3
	Scope_READ_USER_IDP_TOKENS   Scope = 4
	Scope_CREATE_USERS           Scope = 5
	Scope_READ_STATS             Scope = 6
	Scope_READ_EMAIL_TEMPLATES   Scope = 7
	Scope_UPDATE_EMAIL_TEMPLATES Scope = 8
	Scope_CREATE_EMAIL_TEMPLATES Scope = 9
	Scope_READ_RULES             Scope = 10
	Scope_UPDATE_RULES           Scope = 11
	Scope_CREATE_RULES           Scope = 12
	Scope_DELETE_RULES           Scope = 13
	Scope_READ_ROLES             Scope = 14
	Scope_UPDATE_ROLES           Scope = 15
	Scope_CREATE_ROLES           Scope = 16
	Scope_DELETE_ROLES           Scope = 17
	Scope_READ_LOGS              Scope = 18
)

var Scope_name = map[int32]string{
	0:  "OPENID",
	1:  "PROFILE",
	2:  "EMAIL",
	3:  "READ_USERS",
	4:  "READ_USER_IDP_TOKENS",
	5:  "CREATE_USERS",
	6:  "READ_STATS",
	7:  "READ_EMAIL_TEMPLATES",
	8:  "UPDATE_EMAIL_TEMPLATES",
	9:  "CREATE_EMAIL_TEMPLATES",
	10: "READ_RULES",
	11: "UPDATE_RULES",
	12: "CREATE_RULES",
	13: "DELETE_RULES",
	14: "READ_ROLES",
	15: "UPDATE_ROLES",
	16: "CREATE_ROLES",
	17: "DELETE_ROLES",
	18: "READ_LOGS",
}

var Scope_value = map[string]int32{
	"OPENID":                 0,
	"PROFILE":                1,
	"EMAIL":                  2,
	"READ_USERS":             3,
	"READ_USER_IDP_TOKENS":   4,
	"CREATE_USERS":           5,
	"READ_STATS":             6,
	"READ_EMAIL_TEMPLATES":   7,
	"UPDATE_EMAIL_TEMPLATES": 8,
	"CREATE_EMAIL_TEMPLATES": 9,
	"READ_RULES":             10,
	"UPDATE_RULES":           11,
	"CREATE_RULES":           12,
	"DELETE_RULES":           13,
	"READ_ROLES":             14,
	"UPDATE_ROLES":           15,
	"CREATE_ROLES":           16,
	"DELETE_ROLES":           17,
	"READ_LOGS":              18,
}

func (x Scope) String() string {
	return proto.EnumName(Scope_name, int32(x))
}

func (Scope) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

type URL int32

const (
	URL_USER_INFOURL      URL = 0
	URL_TOKENURL          URL = 1
	URL_AUTHORIZEURL      URL = 2
	URL_USERSURL          URL = 3
	URL_CLIENTSURL        URL = 4
	URL_GRANTSURL         URL = 5
	URL_RULESURL          URL = 6
	URL_ROLESURL          URL = 7
	URL_LOGSURL           URL = 8
	URL_STATSURL          URL = 9
	URL_CONNECTIONSURL    URL = 10
	URL_TENANTSURL        URL = 11
	URL_EMAIL_TEMPLATEURL URL = 12
	URL_EMAILURL          URL = 13
	URL_SEARCH_USERSURL   URL = 14
	URL_DEVICEURL         URL = 18
	URL_JWKSURL           URL = 19
	URL_CLIENT_GRANTSURL  URL = 20
)

var URL_name = map[int32]string{
	0:  "USER_INFOURL",
	1:  "TOKENURL",
	2:  "AUTHORIZEURL",
	3:  "USERSURL",
	4:  "CLIENTSURL",
	5:  "GRANTSURL",
	6:  "RULESURL",
	7:  "ROLESURL",
	8:  "LOGSURL",
	9:  "STATSURL",
	10: "CONNECTIONSURL",
	11: "TENANTSURL",
	12: "EMAIL_TEMPLATEURL",
	13: "EMAILURL",
	14: "SEARCH_USERSURL",
	18: "DEVICEURL",
	19: "JWKSURL",
	20: "CLIENT_GRANTSURL",
}

var URL_value = map[string]int32{
	"USER_INFOURL":      0,
	"TOKENURL":          1,
	"AUTHORIZEURL":      2,
	"USERSURL":          3,
	"CLIENTSURL":        4,
	"GRANTSURL":         5,
	"RULESURL":          6,
	"ROLESURL":          7,
	"LOGSURL":           8,
	"STATSURL":          9,
	"CONNECTIONSURL":    10,
	"TENANTSURL":        11,
	"EMAIL_TEMPLATEURL": 12,
	"EMAILURL":          13,
	"SEARCH_USERSURL":   14,
	"DEVICEURL":         18,
	"JWKSURL":           19,
	"CLIENT_GRANTSURL":  20,
}

func (x URL) String() string {
	return proto.EnumName(URL_name, int32(x))
}

func (URL) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

type HTTPMethod int32

const (
	HTTPMethod_GET  HTTPMethod = 0
	HTTPMethod_POST HTTPMethod = 1
)

var HTTPMethod_name = map[int32]string{
	0: "GET",
	1: "POST",
}

var HTTPMethod_value = map[string]int32{
	"GET":  0,
	"POST": 1,
}

func (x HTTPMethod) String() string {
	return proto.EnumName(HTTPMethod_name, int32(x))
}

func (HTTPMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

type ResourceRequest struct {
	Token                *Token            `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Method               HTTPMethod        `protobuf:"varint,2,opt,name=method,proto3,enum=api.HTTPMethod" json:"method,omitempty"`
	Domain               string            `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	Url                  URL               `protobuf:"varint,4,opt,name=url,proto3,enum=api.URL" json:"url,omitempty"`
	Form                 map[string]string `protobuf:"bytes,5,rep,name=form,proto3" json:"form,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 *Bytes            `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ResourceRequest) Reset()         { *m = ResourceRequest{} }
func (m *ResourceRequest) String() string { return proto.CompactTextString(m) }
func (*ResourceRequest) ProtoMessage()    {}
func (*ResourceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *ResourceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResourceRequest.Unmarshal(m, b)
}
func (m *ResourceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResourceRequest.Marshal(b, m, deterministic)
}
func (m *ResourceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResourceRequest.Merge(m, src)
}
func (m *ResourceRequest) XXX_Size() int {
	return xxx_messageInfo_ResourceRequest.Size(m)
}
func (m *ResourceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResourceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResourceRequest proto.InternalMessageInfo

func (m *ResourceRequest) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *ResourceRequest) GetMethod() HTTPMethod {
	if m != nil {
		return m.Method
	}
	return HTTPMethod_GET
}

func (m *ResourceRequest) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *ResourceRequest) GetUrl() URL {
	if m != nil {
		return m.Url
	}
	return URL_USER_INFOURL
}

func (m *ResourceRequest) GetForm() map[string]string {
	if m != nil {
		return m.Form
	}
	return nil
}

func (m *ResourceRequest) GetBody() *Bytes {
	if m != nil {
		return m.Body
	}
	return nil
}

type SubscribeRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Plan                 string   `protobuf:"bytes,2,opt,name=plan,proto3" json:"plan,omitempty"`
	Card                 *Card    `protobuf:"bytes,3,opt,name=card,proto3" json:"card,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeRequest) Reset()         { *m = SubscribeRequest{} }
func (m *SubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeRequest) ProtoMessage()    {}
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *SubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeRequest.Unmarshal(m, b)
}
func (m *SubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeRequest.Merge(m, src)
}
func (m *SubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeRequest.Size(m)
}
func (m *SubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeRequest proto.InternalMessageInfo

func (m *SubscribeRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *SubscribeRequest) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

func (m *SubscribeRequest) GetCard() *Card {
	if m != nil {
		return m.Card
	}
	return nil
}

type UnSubscribeRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Plan                 string   `protobuf:"bytes,2,opt,name=plan,proto3" json:"plan,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnSubscribeRequest) Reset()         { *m = UnSubscribeRequest{} }
func (m *UnSubscribeRequest) String() string { return proto.CompactTextString(m) }
func (*UnSubscribeRequest) ProtoMessage()    {}
func (*UnSubscribeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *UnSubscribeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnSubscribeRequest.Unmarshal(m, b)
}
func (m *UnSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnSubscribeRequest.Marshal(b, m, deterministic)
}
func (m *UnSubscribeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnSubscribeRequest.Merge(m, src)
}
func (m *UnSubscribeRequest) XXX_Size() int {
	return xxx_messageInfo_UnSubscribeRequest.Size(m)
}
func (m *UnSubscribeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnSubscribeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnSubscribeRequest proto.InternalMessageInfo

func (m *UnSubscribeRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UnSubscribeRequest) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

type Card struct {
	Number               string   `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	ExpMonth             string   `protobuf:"bytes,2,opt,name=exp_month,json=expMonth,proto3" json:"exp_month,omitempty"`
	ExpYear              string   `protobuf:"bytes,3,opt,name=exp_year,json=expYear,proto3" json:"exp_year,omitempty"`
	Cvc                  string   `protobuf:"bytes,4,opt,name=cvc,proto3" json:"cvc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Card) Reset()         { *m = Card{} }
func (m *Card) String() string { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()    {}
func (*Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *Card) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Card.Unmarshal(m, b)
}
func (m *Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Card.Marshal(b, m, deterministic)
}
func (m *Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Card.Merge(m, src)
}
func (m *Card) XXX_Size() int {
	return xxx_messageInfo_Card.Size(m)
}
func (m *Card) XXX_DiscardUnknown() {
	xxx_messageInfo_Card.DiscardUnknown(m)
}

var xxx_messageInfo_Card proto.InternalMessageInfo

func (m *Card) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *Card) GetExpMonth() string {
	if m != nil {
		return m.ExpMonth
	}
	return ""
}

func (m *Card) GetExpYear() string {
	if m != nil {
		return m.ExpYear
	}
	return ""
}

func (m *Card) GetCvc() string {
	if m != nil {
		return m.Cvc
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type UserRequest struct {
	String_              *Token   `protobuf:"bytes,1,opt,name=string,proto3" json:"string,omitempty"`
	User                 *User    `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserRequest) Reset()         { *m = UserRequest{} }
func (m *UserRequest) String() string { return proto.CompactTextString(m) }
func (*UserRequest) ProtoMessage()    {}
func (*UserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *UserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserRequest.Unmarshal(m, b)
}
func (m *UserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserRequest.Marshal(b, m, deterministic)
}
func (m *UserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserRequest.Merge(m, src)
}
func (m *UserRequest) XXX_Size() int {
	return xxx_messageInfo_UserRequest.Size(m)
}
func (m *UserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserRequest proto.InternalMessageInfo

func (m *UserRequest) GetString_() *Token {
	if m != nil {
		return m.String_
	}
	return nil
}

func (m *UserRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type UserByEmailRequest struct {
	Token                *Token   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Email                string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserByEmailRequest) Reset()         { *m = UserByEmailRequest{} }
func (m *UserByEmailRequest) String() string { return proto.CompactTextString(m) }
func (*UserByEmailRequest) ProtoMessage()    {}
func (*UserByEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *UserByEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserByEmailRequest.Unmarshal(m, b)
}
func (m *UserByEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserByEmailRequest.Marshal(b, m, deterministic)
}
func (m *UserByEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserByEmailRequest.Merge(m, src)
}
func (m *UserByEmailRequest) XXX_Size() int {
	return xxx_messageInfo_UserByEmailRequest.Size(m)
}
func (m *UserByEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UserByEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UserByEmailRequest proto.InternalMessageInfo

func (m *UserByEmailRequest) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *UserByEmailRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type Identifier struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Identifier) Reset()         { *m = Identifier{} }
func (m *Identifier) String() string { return proto.CompactTextString(m) }
func (*Identifier) ProtoMessage()    {}
func (*Identifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *Identifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Identifier.Unmarshal(m, b)
}
func (m *Identifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Identifier.Marshal(b, m, deterministic)
}
func (m *Identifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Identifier.Merge(m, src)
}
func (m *Identifier) XXX_Size() int {
	return xxx_messageInfo_Identifier.Size(m)
}
func (m *Identifier) XXX_DiscardUnknown() {
	xxx_messageInfo_Identifier.DiscardUnknown(m)
}

var xxx_messageInfo_Identifier proto.InternalMessageInfo

func (m *Identifier) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SMS struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Message              *Message `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	MediaURL             string   `protobuf:"bytes,4,opt,name=mediaURL,proto3" json:"mediaURL,omitempty"`
	Callback             string   `protobuf:"bytes,5,opt,name=callback,proto3" json:"callback,omitempty"`
	App                  string   `protobuf:"bytes,6,opt,name=app,proto3" json:"app,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SMS) Reset()         { *m = SMS{} }
func (m *SMS) String() string { return proto.CompactTextString(m) }
func (*SMS) ProtoMessage()    {}
func (*SMS) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *SMS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMS.Unmarshal(m, b)
}
func (m *SMS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMS.Marshal(b, m, deterministic)
}
func (m *SMS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMS.Merge(m, src)
}
func (m *SMS) XXX_Size() int {
	return xxx_messageInfo_SMS.Size(m)
}
func (m *SMS) XXX_DiscardUnknown() {
	xxx_messageInfo_SMS.DiscardUnknown(m)
}

var xxx_messageInfo_SMS proto.InternalMessageInfo

func (m *SMS) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *SMS) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *SMS) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SMS) GetMediaURL() string {
	if m != nil {
		return m.MediaURL
	}
	return ""
}

func (m *SMS) GetCallback() string {
	if m != nil {
		return m.Callback
	}
	return ""
}

func (m *SMS) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

type SMSBlast struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	To                   []string `protobuf:"bytes,2,rep,name=to,proto3" json:"to,omitempty"`
	Message              *Message `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	MediaURL             string   `protobuf:"bytes,4,opt,name=mediaURL,proto3" json:"mediaURL,omitempty"`
	Callback             string   `protobuf:"bytes,5,opt,name=callback,proto3" json:"callback,omitempty"`
	App                  string   `protobuf:"bytes,6,opt,name=app,proto3" json:"app,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SMSBlast) Reset()         { *m = SMSBlast{} }
func (m *SMSBlast) String() string { return proto.CompactTextString(m) }
func (*SMSBlast) ProtoMessage()    {}
func (*SMSBlast) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

func (m *SMSBlast) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMSBlast.Unmarshal(m, b)
}
func (m *SMSBlast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMSBlast.Marshal(b, m, deterministic)
}
func (m *SMSBlast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMSBlast.Merge(m, src)
}
func (m *SMSBlast) XXX_Size() int {
	return xxx_messageInfo_SMSBlast.Size(m)
}
func (m *SMSBlast) XXX_DiscardUnknown() {
	xxx_messageInfo_SMSBlast.DiscardUnknown(m)
}

var xxx_messageInfo_SMSBlast proto.InternalMessageInfo

func (m *SMSBlast) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *SMSBlast) GetTo() []string {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *SMSBlast) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SMSBlast) GetMediaURL() string {
	if m != nil {
		return m.MediaURL
	}
	return ""
}

func (m *SMSBlast) GetCallback() string {
	if m != nil {
		return m.Callback
	}
	return ""
}

func (m *SMSBlast) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

type EmailRequest struct {
	FromName             string   `protobuf:"bytes,1,opt,name=from_name,json=fromName,proto3" json:"from_name,omitempty"`
	FromEmail            string   `protobuf:"bytes,2,opt,name=from_email,json=fromEmail,proto3" json:"from_email,omitempty"`
	Email                *Email   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmailRequest) Reset()         { *m = EmailRequest{} }
func (m *EmailRequest) String() string { return proto.CompactTextString(m) }
func (*EmailRequest) ProtoMessage()    {}
func (*EmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}

func (m *EmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailRequest.Unmarshal(m, b)
}
func (m *EmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailRequest.Marshal(b, m, deterministic)
}
func (m *EmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailRequest.Merge(m, src)
}
func (m *EmailRequest) XXX_Size() int {
	return xxx_messageInfo_EmailRequest.Size(m)
}
func (m *EmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmailRequest proto.InternalMessageInfo

func (m *EmailRequest) GetFromName() string {
	if m != nil {
		return m.FromName
	}
	return ""
}

func (m *EmailRequest) GetFromEmail() string {
	if m != nil {
		return m.FromEmail
	}
	return ""
}

func (m *EmailRequest) GetEmail() *Email {
	if m != nil {
		return m.Email
	}
	return nil
}

type EmailBlastRequest struct {
	FromName             string      `protobuf:"bytes,1,opt,name=from_name,json=fromName,proto3" json:"from_name,omitempty"`
	FromEmail            string      `protobuf:"bytes,2,opt,name=from_email,json=fromEmail,proto3" json:"from_email,omitempty"`
	Blast                *EmailBlast `protobuf:"bytes,3,opt,name=blast,proto3" json:"blast,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *EmailBlastRequest) Reset()         { *m = EmailBlastRequest{} }
func (m *EmailBlastRequest) String() string { return proto.CompactTextString(m) }
func (*EmailBlastRequest) ProtoMessage()    {}
func (*EmailBlastRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}

func (m *EmailBlastRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailBlastRequest.Unmarshal(m, b)
}
func (m *EmailBlastRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailBlastRequest.Marshal(b, m, deterministic)
}
func (m *EmailBlastRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailBlastRequest.Merge(m, src)
}
func (m *EmailBlastRequest) XXX_Size() int {
	return xxx_messageInfo_EmailBlastRequest.Size(m)
}
func (m *EmailBlastRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailBlastRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmailBlastRequest proto.InternalMessageInfo

func (m *EmailBlastRequest) GetFromName() string {
	if m != nil {
		return m.FromName
	}
	return ""
}

func (m *EmailBlastRequest) GetFromEmail() string {
	if m != nil {
		return m.FromEmail
	}
	return ""
}

func (m *EmailBlastRequest) GetBlast() *EmailBlast {
	if m != nil {
		return m.Blast
	}
	return nil
}

type EmailBlast struct {
	NameAddress          map[string]string `protobuf:"bytes,1,rep,name=name_address,json=nameAddress,proto3" json:"name_address,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Subject              string            `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	Plain                string            `protobuf:"bytes,3,opt,name=plain,proto3" json:"plain,omitempty"`
	Html                 string            `protobuf:"bytes,4,opt,name=html,proto3" json:"html,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *EmailBlast) Reset()         { *m = EmailBlast{} }
func (m *EmailBlast) String() string { return proto.CompactTextString(m) }
func (*EmailBlast) ProtoMessage()    {}
func (*EmailBlast) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}

func (m *EmailBlast) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailBlast.Unmarshal(m, b)
}
func (m *EmailBlast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailBlast.Marshal(b, m, deterministic)
}
func (m *EmailBlast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailBlast.Merge(m, src)
}
func (m *EmailBlast) XXX_Size() int {
	return xxx_messageInfo_EmailBlast.Size(m)
}
func (m *EmailBlast) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailBlast.DiscardUnknown(m)
}

var xxx_messageInfo_EmailBlast proto.InternalMessageInfo

func (m *EmailBlast) GetNameAddress() map[string]string {
	if m != nil {
		return m.NameAddress
	}
	return nil
}

func (m *EmailBlast) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *EmailBlast) GetPlain() string {
	if m != nil {
		return m.Plain
	}
	return ""
}

func (m *EmailBlast) GetHtml() string {
	if m != nil {
		return m.Html
	}
	return ""
}

type Email struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Subject              string   `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	Plain                string   `protobuf:"bytes,4,opt,name=plain,proto3" json:"plain,omitempty"`
	Html                 string   `protobuf:"bytes,5,opt,name=html,proto3" json:"html,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Email) Reset()         { *m = Email{} }
func (m *Email) String() string { return proto.CompactTextString(m) }
func (*Email) ProtoMessage()    {}
func (*Email) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}

func (m *Email) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Email.Unmarshal(m, b)
}
func (m *Email) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Email.Marshal(b, m, deterministic)
}
func (m *Email) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Email.Merge(m, src)
}
func (m *Email) XXX_Size() int {
	return xxx_messageInfo_Email.Size(m)
}
func (m *Email) XXX_DiscardUnknown() {
	xxx_messageInfo_Email.DiscardUnknown(m)
}

var xxx_messageInfo_Email proto.InternalMessageInfo

func (m *Email) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Email) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Email) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Email) GetPlain() string {
	if m != nil {
		return m.Plain
	}
	return ""
}

func (m *Email) GetHtml() string {
	if m != nil {
		return m.Html
	}
	return ""
}

type Call struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	App                  string   `protobuf:"bytes,3,opt,name=app,proto3" json:"app,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Call) Reset()         { *m = Call{} }
func (m *Call) String() string { return proto.CompactTextString(m) }
func (*Call) ProtoMessage()    {}
func (*Call) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}

func (m *Call) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Call.Unmarshal(m, b)
}
func (m *Call) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Call.Marshal(b, m, deterministic)
}
func (m *Call) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Call.Merge(m, src)
}
func (m *Call) XXX_Size() int {
	return xxx_messageInfo_Call.Size(m)
}
func (m *Call) XXX_DiscardUnknown() {
	xxx_messageInfo_Call.DiscardUnknown(m)
}

var xxx_messageInfo_Call proto.InternalMessageInfo

func (m *Call) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Call) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Call) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

type CallBlast struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   []string `protobuf:"bytes,2,rep,name=to,proto3" json:"to,omitempty"`
	App                  string   `protobuf:"bytes,3,opt,name=app,proto3" json:"app,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallBlast) Reset()         { *m = CallBlast{} }
func (m *CallBlast) String() string { return proto.CompactTextString(m) }
func (*CallBlast) ProtoMessage()    {}
func (*CallBlast) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}

func (m *CallBlast) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallBlast.Unmarshal(m, b)
}
func (m *CallBlast) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallBlast.Marshal(b, m, deterministic)
}
func (m *CallBlast) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallBlast.Merge(m, src)
}
func (m *CallBlast) XXX_Size() int {
	return xxx_messageInfo_CallBlast.Size(m)
}
func (m *CallBlast) XXX_DiscardUnknown() {
	xxx_messageInfo_CallBlast.DiscardUnknown(m)
}

var xxx_messageInfo_CallBlast proto.InternalMessageInfo

func (m *CallBlast) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *CallBlast) GetTo() []string {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *CallBlast) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

type Message struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{16}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type User struct {
	UserId               string        `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name                 string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GivenName            string        `protobuf:"bytes,3,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	FamilyName           string        `protobuf:"bytes,4,opt,name=family_name,json=familyName,proto3" json:"family_name,omitempty"`
	Gender               string        `protobuf:"bytes,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Birthdate            string        `protobuf:"bytes,6,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	Email                string        `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber          string        `protobuf:"bytes,8,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Picture              string        `protobuf:"bytes,9,opt,name=picture,proto3" json:"picture,omitempty"`
	UserMetadata         *UserMetadata `protobuf:"bytes,10,opt,name=user_metadata,json=userMetadata,proto3" json:"user_metadata,omitempty"`
	AppMetadata          *AppMetadata  `protobuf:"bytes,11,opt,name=app_metadata,json=appMetadata,proto3" json:"app_metadata,omitempty"`
	LastIp               string        `protobuf:"bytes,12,opt,name=last_ip,json=lastIp,proto3" json:"last_ip,omitempty"`
	Blocked              bool          `protobuf:"varint,13,opt,name=blocked,proto3" json:"blocked,omitempty"`
	Nickname             string        `protobuf:"bytes,14,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Multifactor          []string      `protobuf:"bytes,15,rep,name=multifactor,proto3" json:"multifactor,omitempty"`
	CreatedAt            string        `protobuf:"bytes,17,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            string        `protobuf:"bytes,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	PhoneVerified        bool          `protobuf:"varint,19,opt,name=phone_verified,json=phoneVerified,proto3" json:"phone_verified,omitempty"`
	Identities           []*Identity   `protobuf:"bytes,20,rep,name=identities,proto3" json:"identities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{17}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetGivenName() string {
	if m != nil {
		return m.GivenName
	}
	return ""
}

func (m *User) GetFamilyName() string {
	if m != nil {
		return m.FamilyName
	}
	return ""
}

func (m *User) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *User) GetBirthdate() string {
	if m != nil {
		return m.Birthdate
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *User) GetPicture() string {
	if m != nil {
		return m.Picture
	}
	return ""
}

func (m *User) GetUserMetadata() *UserMetadata {
	if m != nil {
		return m.UserMetadata
	}
	return nil
}

func (m *User) GetAppMetadata() *AppMetadata {
	if m != nil {
		return m.AppMetadata
	}
	return nil
}

func (m *User) GetLastIp() string {
	if m != nil {
		return m.LastIp
	}
	return ""
}

func (m *User) GetBlocked() bool {
	if m != nil {
		return m.Blocked
	}
	return false
}

func (m *User) GetNickname() string {
	if m != nil {
		return m.Nickname
	}
	return ""
}

func (m *User) GetMultifactor() []string {
	if m != nil {
		return m.Multifactor
	}
	return nil
}

func (m *User) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *User) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

func (m *User) GetPhoneVerified() bool {
	if m != nil {
		return m.PhoneVerified
	}
	return false
}

func (m *User) GetIdentities() []*Identity {
	if m != nil {
		return m.Identities
	}
	return nil
}

type Identity struct {
	Connection           string   `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	UserId               string   `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Provider             string   `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	IsSocial             string   `protobuf:"bytes,4,opt,name=isSocial,proto3" json:"isSocial,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Identity) Reset()         { *m = Identity{} }
func (m *Identity) String() string { return proto.CompactTextString(m) }
func (*Identity) ProtoMessage()    {}
func (*Identity) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{18}
}

func (m *Identity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Identity.Unmarshal(m, b)
}
func (m *Identity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Identity.Marshal(b, m, deterministic)
}
func (m *Identity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Identity.Merge(m, src)
}
func (m *Identity) XXX_Size() int {
	return xxx_messageInfo_Identity.Size(m)
}
func (m *Identity) XXX_DiscardUnknown() {
	xxx_messageInfo_Identity.DiscardUnknown(m)
}

var xxx_messageInfo_Identity proto.InternalMessageInfo

func (m *Identity) GetConnection() string {
	if m != nil {
		return m.Connection
	}
	return ""
}

func (m *Identity) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Identity) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *Identity) GetIsSocial() string {
	if m != nil {
		return m.IsSocial
	}
	return ""
}

type UserMetadata struct {
	Metadata             map[string]string `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UserMetadata) Reset()         { *m = UserMetadata{} }
func (m *UserMetadata) String() string { return proto.CompactTextString(m) }
func (*UserMetadata) ProtoMessage()    {}
func (*UserMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{19}
}

func (m *UserMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserMetadata.Unmarshal(m, b)
}
func (m *UserMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserMetadata.Marshal(b, m, deterministic)
}
func (m *UserMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserMetadata.Merge(m, src)
}
func (m *UserMetadata) XXX_Size() int {
	return xxx_messageInfo_UserMetadata.Size(m)
}
func (m *UserMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_UserMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_UserMetadata proto.InternalMessageInfo

func (m *UserMetadata) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type AppMetadata struct {
	Metadata             map[string]string `protobuf:"bytes,1,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AppMetadata) Reset()         { *m = AppMetadata{} }
func (m *AppMetadata) String() string { return proto.CompactTextString(m) }
func (*AppMetadata) ProtoMessage()    {}
func (*AppMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{20}
}

func (m *AppMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppMetadata.Unmarshal(m, b)
}
func (m *AppMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppMetadata.Marshal(b, m, deterministic)
}
func (m *AppMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppMetadata.Merge(m, src)
}
func (m *AppMetadata) XXX_Size() int {
	return xxx_messageInfo_AppMetadata.Size(m)
}
func (m *AppMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_AppMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_AppMetadata proto.InternalMessageInfo

func (m *AppMetadata) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Auth struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	ClientId             string   `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret         string   `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	Redirect             string   `protobuf:"bytes,4,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Scopes               []Scope  `protobuf:"varint,5,rep,packed,name=scopes,proto3,enum=api.Scope" json:"scopes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Auth) Reset()         { *m = Auth{} }
func (m *Auth) String() string { return proto.CompactTextString(m) }
func (*Auth) ProtoMessage()    {}
func (*Auth) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{21}
}

func (m *Auth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Auth.Unmarshal(m, b)
}
func (m *Auth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Auth.Marshal(b, m, deterministic)
}
func (m *Auth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Auth.Merge(m, src)
}
func (m *Auth) XXX_Size() int {
	return xxx_messageInfo_Auth.Size(m)
}
func (m *Auth) XXX_DiscardUnknown() {
	xxx_messageInfo_Auth.DiscardUnknown(m)
}

var xxx_messageInfo_Auth proto.InternalMessageInfo

func (m *Auth) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Auth) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *Auth) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

func (m *Auth) GetRedirect() string {
	if m != nil {
		return m.Redirect
	}
	return ""
}

func (m *Auth) GetScopes() []Scope {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type Bytes struct {
	Bits                 []byte   `protobuf:"bytes,1,opt,name=bits,proto3" json:"bits,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bytes) Reset()         { *m = Bytes{} }
func (m *Bytes) String() string { return proto.CompactTextString(m) }
func (*Bytes) ProtoMessage()    {}
func (*Bytes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{22}
}

func (m *Bytes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bytes.Unmarshal(m, b)
}
func (m *Bytes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bytes.Marshal(b, m, deterministic)
}
func (m *Bytes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bytes.Merge(m, src)
}
func (m *Bytes) XXX_Size() int {
	return xxx_messageInfo_Bytes.Size(m)
}
func (m *Bytes) XXX_DiscardUnknown() {
	xxx_messageInfo_Bytes.DiscardUnknown(m)
}

var xxx_messageInfo_Bytes proto.InternalMessageInfo

func (m *Bytes) GetBits() []byte {
	if m != nil {
		return m.Bits
	}
	return nil
}

type Template struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Template) Reset()         { *m = Template{} }
func (m *Template) String() string { return proto.CompactTextString(m) }
func (*Template) ProtoMessage()    {}
func (*Template) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{23}
}

func (m *Template) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Template.Unmarshal(m, b)
}
func (m *Template) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Template.Marshal(b, m, deterministic)
}
func (m *Template) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Template.Merge(m, src)
}
func (m *Template) XXX_Size() int {
	return xxx_messageInfo_Template.Size(m)
}
func (m *Template) XXX_DiscardUnknown() {
	xxx_messageInfo_Template.DiscardUnknown(m)
}

var xxx_messageInfo_Template proto.InternalMessageInfo

func (m *Template) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Template) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type JSONWebKeys struct {
	Kty                  string   `protobuf:"bytes,1,opt,name=kty,proto3" json:"kty,omitempty"`
	Kid                  string   `protobuf:"bytes,2,opt,name=kid,proto3" json:"kid,omitempty"`
	Use                  string   `protobuf:"bytes,3,opt,name=use,proto3" json:"use,omitempty"`
	N                    string   `protobuf:"bytes,4,opt,name=n,proto3" json:"n,omitempty"`
	E                    string   `protobuf:"bytes,5,opt,name=e,proto3" json:"e,omitempty"`
	X5C                  []string `protobuf:"bytes,6,rep,name=x5c,proto3" json:"x5c,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JSONWebKeys) Reset()         { *m = JSONWebKeys{} }
func (m *JSONWebKeys) String() string { return proto.CompactTextString(m) }
func (*JSONWebKeys) ProtoMessage()    {}
func (*JSONWebKeys) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{24}
}

func (m *JSONWebKeys) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JSONWebKeys.Unmarshal(m, b)
}
func (m *JSONWebKeys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JSONWebKeys.Marshal(b, m, deterministic)
}
func (m *JSONWebKeys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JSONWebKeys.Merge(m, src)
}
func (m *JSONWebKeys) XXX_Size() int {
	return xxx_messageInfo_JSONWebKeys.Size(m)
}
func (m *JSONWebKeys) XXX_DiscardUnknown() {
	xxx_messageInfo_JSONWebKeys.DiscardUnknown(m)
}

var xxx_messageInfo_JSONWebKeys proto.InternalMessageInfo

func (m *JSONWebKeys) GetKty() string {
	if m != nil {
		return m.Kty
	}
	return ""
}

func (m *JSONWebKeys) GetKid() string {
	if m != nil {
		return m.Kid
	}
	return ""
}

func (m *JSONWebKeys) GetUse() string {
	if m != nil {
		return m.Use
	}
	return ""
}

func (m *JSONWebKeys) GetN() string {
	if m != nil {
		return m.N
	}
	return ""
}

func (m *JSONWebKeys) GetE() string {
	if m != nil {
		return m.E
	}
	return ""
}

func (m *JSONWebKeys) GetX5C() []string {
	if m != nil {
		return m.X5C
	}
	return nil
}

type Jwks struct {
	Keys                 []*JSONWebKeys `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Jwks) Reset()         { *m = Jwks{} }
func (m *Jwks) String() string { return proto.CompactTextString(m) }
func (*Jwks) ProtoMessage()    {}
func (*Jwks) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{25}
}

func (m *Jwks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Jwks.Unmarshal(m, b)
}
func (m *Jwks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Jwks.Marshal(b, m, deterministic)
}
func (m *Jwks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Jwks.Merge(m, src)
}
func (m *Jwks) XXX_Size() int {
	return xxx_messageInfo_Jwks.Size(m)
}
func (m *Jwks) XXX_DiscardUnknown() {
	xxx_messageInfo_Jwks.DiscardUnknown(m)
}

var xxx_messageInfo_Jwks proto.InternalMessageInfo

func (m *Jwks) GetKeys() []*JSONWebKeys {
	if m != nil {
		return m.Keys
	}
	return nil
}

type HTTPRequest struct {
	Method               HTTPMethod        `protobuf:"varint,1,opt,name=method,proto3,enum=api.HTTPMethod" json:"method,omitempty"`
	Url                  string            `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Form                 map[string]string `protobuf:"bytes,3,rep,name=form,proto3" json:"form,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Body                 *Bytes            `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HTTPRequest) Reset()         { *m = HTTPRequest{} }
func (m *HTTPRequest) String() string { return proto.CompactTextString(m) }
func (*HTTPRequest) ProtoMessage()    {}
func (*HTTPRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{26}
}

func (m *HTTPRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HTTPRequest.Unmarshal(m, b)
}
func (m *HTTPRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HTTPRequest.Marshal(b, m, deterministic)
}
func (m *HTTPRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTTPRequest.Merge(m, src)
}
func (m *HTTPRequest) XXX_Size() int {
	return xxx_messageInfo_HTTPRequest.Size(m)
}
func (m *HTTPRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HTTPRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HTTPRequest proto.InternalMessageInfo

func (m *HTTPRequest) GetMethod() HTTPMethod {
	if m != nil {
		return m.Method
	}
	return HTTPMethod_GET
}

func (m *HTTPRequest) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *HTTPRequest) GetForm() map[string]string {
	if m != nil {
		return m.Form
	}
	return nil
}

func (m *HTTPRequest) GetBody() *Bytes {
	if m != nil {
		return m.Body
	}
	return nil
}

type RenderRequest struct {
	Template             *Template `protobuf:"bytes,1,opt,name=template,proto3" json:"template,omitempty"`
	Data                 *Bytes    `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RenderRequest) Reset()         { *m = RenderRequest{} }
func (m *RenderRequest) String() string { return proto.CompactTextString(m) }
func (*RenderRequest) ProtoMessage()    {}
func (*RenderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{27}
}

func (m *RenderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RenderRequest.Unmarshal(m, b)
}
func (m *RenderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RenderRequest.Marshal(b, m, deterministic)
}
func (m *RenderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RenderRequest.Merge(m, src)
}
func (m *RenderRequest) XXX_Size() int {
	return xxx_messageInfo_RenderRequest.Size(m)
}
func (m *RenderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RenderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RenderRequest proto.InternalMessageInfo

func (m *RenderRequest) GetTemplate() *Template {
	if m != nil {
		return m.Template
	}
	return nil
}

func (m *RenderRequest) GetData() *Bytes {
	if m != nil {
		return m.Data
	}
	return nil
}

type SearchPhoneNumberRequest struct {
	State                string              `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Capabilities         *NumberCapabilities `protobuf:"bytes,2,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	TotalResults         int64               `protobuf:"varint,3,opt,name=total_results,json=totalResults,proto3" json:"total_results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *SearchPhoneNumberRequest) Reset()         { *m = SearchPhoneNumberRequest{} }
func (m *SearchPhoneNumberRequest) String() string { return proto.CompactTextString(m) }
func (*SearchPhoneNumberRequest) ProtoMessage()    {}
func (*SearchPhoneNumberRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{28}
}

func (m *SearchPhoneNumberRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchPhoneNumberRequest.Unmarshal(m, b)
}
func (m *SearchPhoneNumberRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchPhoneNumberRequest.Marshal(b, m, deterministic)
}
func (m *SearchPhoneNumberRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchPhoneNumberRequest.Merge(m, src)
}
func (m *SearchPhoneNumberRequest) XXX_Size() int {
	return xxx_messageInfo_SearchPhoneNumberRequest.Size(m)
}
func (m *SearchPhoneNumberRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchPhoneNumberRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SearchPhoneNumberRequest proto.InternalMessageInfo

func (m *SearchPhoneNumberRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *SearchPhoneNumberRequest) GetCapabilities() *NumberCapabilities {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

func (m *SearchPhoneNumberRequest) GetTotalResults() int64 {
	if m != nil {
		return m.TotalResults
	}
	return 0
}

type PhoneNumber struct {
	FriendlyName         string              `protobuf:"bytes,1,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	PhoneNumber          string              `protobuf:"bytes,2,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Region               string              `protobuf:"bytes,3,opt,name=region,proto3" json:"region,omitempty"`
	Capabilities         *NumberCapabilities `protobuf:"bytes,4,opt,name=capabilities,proto3" json:"capabilities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PhoneNumber) Reset()         { *m = PhoneNumber{} }
func (m *PhoneNumber) String() string { return proto.CompactTextString(m) }
func (*PhoneNumber) ProtoMessage()    {}
func (*PhoneNumber) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{29}
}

func (m *PhoneNumber) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PhoneNumber.Unmarshal(m, b)
}
func (m *PhoneNumber) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PhoneNumber.Marshal(b, m, deterministic)
}
func (m *PhoneNumber) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneNumber.Merge(m, src)
}
func (m *PhoneNumber) XXX_Size() int {
	return xxx_messageInfo_PhoneNumber.Size(m)
}
func (m *PhoneNumber) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneNumber.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneNumber proto.InternalMessageInfo

func (m *PhoneNumber) GetFriendlyName() string {
	if m != nil {
		return m.FriendlyName
	}
	return ""
}

func (m *PhoneNumber) GetPhoneNumber() string {
	if m != nil {
		return m.PhoneNumber
	}
	return ""
}

func (m *PhoneNumber) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *PhoneNumber) GetCapabilities() *NumberCapabilities {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

type NumberCapabilities struct {
	Voice                bool     `protobuf:"varint,1,opt,name=voice,proto3" json:"voice,omitempty"`
	Sms                  bool     `protobuf:"varint,2,opt,name=sms,proto3" json:"sms,omitempty"`
	Mms                  bool     `protobuf:"varint,3,opt,name=mms,proto3" json:"mms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NumberCapabilities) Reset()         { *m = NumberCapabilities{} }
func (m *NumberCapabilities) String() string { return proto.CompactTextString(m) }
func (*NumberCapabilities) ProtoMessage()    {}
func (*NumberCapabilities) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{30}
}

func (m *NumberCapabilities) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NumberCapabilities.Unmarshal(m, b)
}
func (m *NumberCapabilities) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NumberCapabilities.Marshal(b, m, deterministic)
}
func (m *NumberCapabilities) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NumberCapabilities.Merge(m, src)
}
func (m *NumberCapabilities) XXX_Size() int {
	return xxx_messageInfo_NumberCapabilities.Size(m)
}
func (m *NumberCapabilities) XXX_DiscardUnknown() {
	xxx_messageInfo_NumberCapabilities.DiscardUnknown(m)
}

var xxx_messageInfo_NumberCapabilities proto.InternalMessageInfo

func (m *NumberCapabilities) GetVoice() bool {
	if m != nil {
		return m.Voice
	}
	return false
}

func (m *NumberCapabilities) GetSms() bool {
	if m != nil {
		return m.Sms
	}
	return false
}

func (m *NumberCapabilities) GetMms() bool {
	if m != nil {
		return m.Mms
	}
	return false
}

type PhoneNumberResource struct {
	Number               *PhoneNumber `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	Id                   string       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Uri                  string       `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *PhoneNumberResource) Reset()         { *m = PhoneNumberResource{} }
func (m *PhoneNumberResource) String() string { return proto.CompactTextString(m) }
func (*PhoneNumberResource) ProtoMessage()    {}
func (*PhoneNumberResource) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{31}
}

func (m *PhoneNumberResource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PhoneNumberResource.Unmarshal(m, b)
}
func (m *PhoneNumberResource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PhoneNumberResource.Marshal(b, m, deterministic)
}
func (m *PhoneNumberResource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PhoneNumberResource.Merge(m, src)
}
func (m *PhoneNumberResource) XXX_Size() int {
	return xxx_messageInfo_PhoneNumberResource.Size(m)
}
func (m *PhoneNumberResource) XXX_DiscardUnknown() {
	xxx_messageInfo_PhoneNumberResource.DiscardUnknown(m)
}

var xxx_messageInfo_PhoneNumberResource proto.InternalMessageInfo

func (m *PhoneNumberResource) GetNumber() *PhoneNumber {
	if m != nil {
		return m.Number
	}
	return nil
}

func (m *PhoneNumberResource) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *PhoneNumberResource) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

type Secret struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Secret) Reset()         { *m = Secret{} }
func (m *Secret) String() string { return proto.CompactTextString(m) }
func (*Secret) ProtoMessage()    {}
func (*Secret) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{32}
}

func (m *Secret) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Secret.Unmarshal(m, b)
}
func (m *Secret) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Secret.Marshal(b, m, deterministic)
}
func (m *Secret) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Secret.Merge(m, src)
}
func (m *Secret) XXX_Size() int {
	return xxx_messageInfo_Secret.Size(m)
}
func (m *Secret) XXX_DiscardUnknown() {
	xxx_messageInfo_Secret.DiscardUnknown(m)
}

var xxx_messageInfo_Secret proto.InternalMessageInfo

func (m *Secret) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

type Token struct {
	AccessToken          string   `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	TokenType            string   `protobuf:"bytes,2,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	RefreshToken         string   `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	Expiry               string   `protobuf:"bytes,4,opt,name=expiry,proto3" json:"expiry,omitempty"`
	IdToken              string   `protobuf:"bytes,5,opt,name=id_token,json=idToken,proto3" json:"id_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{33}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *Token) GetTokenType() string {
	if m != nil {
		return m.TokenType
	}
	return ""
}

func (m *Token) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *Token) GetExpiry() string {
	if m != nil {
		return m.Expiry
	}
	return ""
}

func (m *Token) GetIdToken() string {
	if m != nil {
		return m.IdToken
	}
	return ""
}

func init() {
	proto.RegisterEnum("api.Scope", Scope_name, Scope_value)
	proto.RegisterEnum("api.URL", URL_name, URL_value)
	proto.RegisterEnum("api.HTTPMethod", HTTPMethod_name, HTTPMethod_value)
	proto.RegisterType((*ResourceRequest)(nil), "api.ResourceRequest")
	proto.RegisterMapType((map[string]string)(nil), "api.ResourceRequest.FormEntry")
	proto.RegisterType((*SubscribeRequest)(nil), "api.SubscribeRequest")
	proto.RegisterType((*UnSubscribeRequest)(nil), "api.UnSubscribeRequest")
	proto.RegisterType((*Card)(nil), "api.Card")
	proto.RegisterType((*Empty)(nil), "api.Empty")
	proto.RegisterType((*UserRequest)(nil), "api.UserRequest")
	proto.RegisterType((*UserByEmailRequest)(nil), "api.UserByEmailRequest")
	proto.RegisterType((*Identifier)(nil), "api.Identifier")
	proto.RegisterType((*SMS)(nil), "api.SMS")
	proto.RegisterType((*SMSBlast)(nil), "api.SMSBlast")
	proto.RegisterType((*EmailRequest)(nil), "api.EmailRequest")
	proto.RegisterType((*EmailBlastRequest)(nil), "api.EmailBlastRequest")
	proto.RegisterType((*EmailBlast)(nil), "api.EmailBlast")
	proto.RegisterMapType((map[string]string)(nil), "api.EmailBlast.NameAddressEntry")
	proto.RegisterType((*Email)(nil), "api.Email")
	proto.RegisterType((*Call)(nil), "api.Call")
	proto.RegisterType((*CallBlast)(nil), "api.CallBlast")
	proto.RegisterType((*Message)(nil), "api.Message")
	proto.RegisterType((*User)(nil), "api.User")
	proto.RegisterType((*Identity)(nil), "api.Identity")
	proto.RegisterType((*UserMetadata)(nil), "api.UserMetadata")
	proto.RegisterMapType((map[string]string)(nil), "api.UserMetadata.MetadataEntry")
	proto.RegisterType((*AppMetadata)(nil), "api.AppMetadata")
	proto.RegisterMapType((map[string]string)(nil), "api.AppMetadata.MetadataEntry")
	proto.RegisterType((*Auth)(nil), "api.Auth")
	proto.RegisterType((*Bytes)(nil), "api.Bytes")
	proto.RegisterType((*Template)(nil), "api.Template")
	proto.RegisterType((*JSONWebKeys)(nil), "api.JSONWebKeys")
	proto.RegisterType((*Jwks)(nil), "api.Jwks")
	proto.RegisterType((*HTTPRequest)(nil), "api.HTTPRequest")
	proto.RegisterMapType((map[string]string)(nil), "api.HTTPRequest.FormEntry")
	proto.RegisterType((*RenderRequest)(nil), "api.RenderRequest")
	proto.RegisterType((*SearchPhoneNumberRequest)(nil), "api.SearchPhoneNumberRequest")
	proto.RegisterType((*PhoneNumber)(nil), "api.PhoneNumber")
	proto.RegisterType((*NumberCapabilities)(nil), "api.NumberCapabilities")
	proto.RegisterType((*PhoneNumberResource)(nil), "api.PhoneNumberResource")
	proto.RegisterType((*Secret)(nil), "api.Secret")
	proto.RegisterType((*Token)(nil), "api.Token")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 2756 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x59, 0x4b, 0x73, 0x1b, 0xc7,
	0x11, 0xf6, 0xe2, 0x8d, 0x06, 0x08, 0x82, 0x23, 0x8a, 0x82, 0x21, 0x89, 0xa2, 0xd7, 0x76, 0x2c,
	0xab, 0x12, 0xc2, 0x45, 0x57, 0x1e, 0x25, 0x39, 0xae, 0xc0, 0x20, 0x4c, 0x51, 0xe2, 0xab, 0x76,
	0x41, 0x3f, 0x0f, 0xa8, 0xc5, 0xee, 0x90, 0x58, 0x73, 0xb1, 0xbb, 0xde, 0x5d, 0x30, 0x44, 0xb1,
	0x7c, 0xf1, 0x21, 0x95, 0xb3, 0x73, 0x4e, 0x55, 0x7c, 0xc9, 0x21, 0xb9, 0xe5, 0x94, 0xbf, 0x91,
	0x4a, 0xe5, 0x1f, 0xf8, 0x90, 0x53, 0x7e, 0x43, 0xaa, 0x7b, 0x66, 0x1f, 0x20, 0x28, 0x59, 0x72,
	0x39, 0x95, 0x13, 0xa6, 0xbb, 0xa7, 0xbf, 0xe9, 0xe9, 0xee, 0xed, 0x99, 0x1e, 0x40, 0xd5, 0xf0,
	0xed, 0x4d, 0x3f, 0xf0, 0x22, 0x8f, 0xe5, 0x0d, 0xdf, 0x6e, 0xdf, 0x39, 0xf5, 0xbc, 0x53, 0x87,
	0x77, 0x0c, 0xdf, 0xee, 0x18, 0xae, 0xeb, 0x45, 0x46, 0x64, 0x7b, 0x6e, 0x28, 0xa6, 0xa8, 0x7f,
	0xcc, 0xc1, 0xb2, 0xc6, 0x43, 0x6f, 0x1a, 0x98, 0x5c, 0xe3, 0x5f, 0x4e, 0x79, 0x18, 0xb1, 0x0d,
	0x28, 0x46, 0xde, 0x19, 0x77, 0x5b, 0xca, 0x86, 0x72, 0xbf, 0xb6, 0x05, 0x9b, 0x88, 0x38, 0x40,
	0x8e, 0x26, 0x04, 0xec, 0x2d, 0x28, 0x4d, 0x78, 0x34, 0xf6, 0xac, 0x56, 0x6e, 0x43, 0xb9, 0xdf,
	0xd8, 0x5a, 0xa6, 0x29, 0x8f, 0x07, 0x83, 0xa3, 0x7d, 0x62, 0x6b, 0x52, 0xcc, 0xd6, 0xa0, 0x64,
	0x79, 0x13, 0xc3, 0x76, 0x5b, 0xf9, 0x0d, 0xe5, 0x7e, 0x55, 0x93, 0x14, 0x6b, 0x43, 0x7e, 0x1a,
	0x38, 0xad, 0x02, 0x69, 0x57, 0x48, 0xfb, 0x58, 0xdb, 0xd3, 0x90, 0xc9, 0xb6, 0xa0, 0x70, 0xe2,
	0x05, 0x93, 0x56, 0x71, 0x23, 0x7f, 0xbf, 0xb6, 0xb5, 0x4e, 0xc2, 0x2b, 0x26, 0x6e, 0x7e, 0xe8,
	0x05, 0x93, 0xbe, 0x1b, 0x05, 0x33, 0x8d, 0xe6, 0xb2, 0x75, 0x28, 0x8c, 0x3c, 0x6b, 0xd6, 0x2a,
	0x65, 0x2c, 0xfe, 0x60, 0x16, 0xf1, 0x50, 0x23, 0x7e, 0xfb, 0x97, 0x50, 0x4d, 0x54, 0x58, 0x13,
	0xf2, 0x67, 0x7c, 0x46, 0xbb, 0xab, 0x6a, 0x38, 0x64, 0xab, 0x50, 0x3c, 0x37, 0x9c, 0x29, 0xa7,
	0xed, 0x54, 0x35, 0x41, 0x3c, 0xcc, 0xfd, 0x4a, 0x51, 0x3f, 0x87, 0xa6, 0x3e, 0x1d, 0x85, 0x66,
	0x60, 0x8f, 0x12, 0xff, 0xac, 0x42, 0x91, 0x4f, 0x0c, 0xdb, 0x91, 0x08, 0x82, 0x60, 0x0c, 0x0a,
	0xbe, 0x63, 0xb8, 0x12, 0x82, 0xc6, 0xec, 0x2e, 0x14, 0x4c, 0x23, 0xb0, 0x68, 0xf3, 0xb5, 0xad,
	0x2a, 0x99, 0xd5, 0x33, 0x02, 0x4b, 0x23, 0xb6, 0xfa, 0x3e, 0xb0, 0x63, 0xf7, 0x87, 0xc3, 0xab,
	0x63, 0x28, 0x20, 0x1a, 0x7a, 0xd9, 0x9d, 0x4e, 0x46, 0x3c, 0x90, 0x2a, 0x92, 0x62, 0xb7, 0xa1,
	0xca, 0x2f, 0xfc, 0xe1, 0xc4, 0x73, 0xa3, 0xb1, 0x54, 0xac, 0xf0, 0x0b, 0x7f, 0x1f, 0x69, 0xf6,
	0x2a, 0xe0, 0x78, 0x38, 0xe3, 0x46, 0x20, 0x83, 0x53, 0xe6, 0x17, 0xfe, 0xa7, 0xdc, 0x08, 0xd0,
	0x41, 0xe6, 0xb9, 0x49, 0xd1, 0xa9, 0x6a, 0x38, 0x54, 0xcb, 0x50, 0xec, 0x4f, 0xfc, 0x68, 0xa6,
	0x1e, 0x41, 0xed, 0x38, 0xe4, 0x41, 0x6c, 0xab, 0x0a, 0xa5, 0x30, 0x0a, 0x6c, 0xf7, 0xf4, 0x9a,
	0x5c, 0x91, 0x12, 0x74, 0xc2, 0x34, 0xe4, 0x01, 0x19, 0x10, 0x3b, 0x81, 0x30, 0x88, 0xad, 0xee,
	0x01, 0x43, 0xea, 0x83, 0x59, 0x1f, 0xf7, 0xf9, 0xe2, 0x39, 0x98, 0xb8, 0x29, 0x97, 0x71, 0x93,
	0x7a, 0x07, 0x60, 0xd7, 0xe2, 0x6e, 0x64, 0x9f, 0xd8, 0x3c, 0x60, 0x0d, 0xc8, 0xd9, 0x96, 0x74,
	0x4a, 0xce, 0xb6, 0xd4, 0x6f, 0x15, 0xc8, 0xeb, 0xfb, 0x3a, 0x6b, 0x41, 0x39, 0xe4, 0xc1, 0xb9,
	0x6d, 0x72, 0x29, 0x8c, 0x49, 0xd4, 0x88, 0x3c, 0x09, 0x99, 0x8b, 0x3c, 0xf6, 0x13, 0x28, 0x4f,
	0x78, 0x18, 0x1a, 0xa7, 0x5c, 0x06, 0xb1, 0x4e, 0x96, 0xec, 0x0b, 0x9e, 0x16, 0x0b, 0x59, 0x1b,
	0x2a, 0x13, 0x6e, 0xd9, 0xc6, 0xb1, 0xb6, 0x27, 0xfd, 0x96, 0xd0, 0x28, 0x33, 0x0d, 0xc7, 0x19,
	0x19, 0xe6, 0x59, 0xab, 0x28, 0x64, 0x31, 0x8d, 0xae, 0x36, 0x7c, 0x9f, 0xf2, 0xb6, 0xaa, 0xe1,
	0x50, 0xfd, 0xb3, 0x02, 0x15, 0x7d, 0x5f, 0xff, 0xc0, 0x31, 0xc2, 0xe8, 0x05, 0x0c, 0xcd, 0xff,
	0xdf, 0x0c, 0x75, 0xa0, 0x3e, 0x17, 0xb2, 0xdb, 0x50, 0x3d, 0x09, 0xbc, 0xc9, 0xd0, 0x35, 0x26,
	0xb1, 0xb5, 0x15, 0x64, 0x1c, 0x18, 0x13, 0xce, 0xee, 0x02, 0x90, 0x30, 0x1b, 0x32, 0x9a, 0x4e,
	0x10, 0x18, 0x6e, 0x21, 0xc9, 0x67, 0xc2, 0x2d, 0xd0, 0x65, 0x60, 0xcf, 0x61, 0x85, 0x68, 0xf2,
	0xcb, 0x8f, 0xb1, 0xe4, 0x9b, 0x50, 0x1c, 0x21, 0x96, 0x5c, 0x72, 0x39, 0x5d, 0x52, 0x2c, 0x21,
	0xa4, 0xea, 0xbf, 0x14, 0x80, 0x94, 0xcb, 0x7a, 0x50, 0xc7, 0xc5, 0x86, 0x86, 0x65, 0x05, 0x3c,
	0x0c, 0x5b, 0x0a, 0x15, 0xa9, 0x8d, 0x2b, 0xca, 0x9b, 0x68, 0x40, 0x57, 0x4c, 0x11, 0x65, 0xaa,
	0xe6, 0xa6, 0x1c, 0x8a, 0xea, 0x74, 0xf4, 0x05, 0x37, 0x23, 0x69, 0x56, 0x4c, 0x62, 0x52, 0xfb,
	0x4e, 0x5a, 0x2e, 0x05, 0x81, 0xdf, 0xfe, 0x38, 0x9a, 0x38, 0x32, 0x5e, 0x34, 0x6e, 0xbf, 0x0f,
	0xcd, 0xab, 0x8b, 0xbc, 0x54, 0x61, 0x9b, 0xe1, 0x17, 0x2d, 0x0b, 0x4b, 0xc6, 0x7d, 0x34, 0x46,
	0x03, 0xe3, 0x0d, 0x4a, 0x03, 0x8d, 0x45, 0xd3, 0xf3, 0xcf, 0x30, 0xbd, 0x70, 0x9d, 0xe9, 0xc5,
	0xd4, 0x74, 0xf5, 0x3d, 0x2c, 0x5b, 0x0e, 0xad, 0x8c, 0xe1, 0x88, 0x57, 0xc6, 0xf1, 0xc2, 0xf7,
	0x27, 0xd3, 0x2e, 0x9f, 0xa6, 0x5d, 0x17, 0xaa, 0xa8, 0x2d, 0xc2, 0xf1, 0x3c, 0x88, 0xfc, 0x33,
	0x21, 0xee, 0x41, 0x59, 0x7e, 0x17, 0xa9, 0x83, 0x94, 0x8c, 0x83, 0xd4, 0xff, 0x14, 0xa0, 0x80,
	0x45, 0x89, 0xdd, 0x82, 0x32, 0x16, 0xa9, 0x61, 0x52, 0x45, 0x4a, 0x48, 0xee, 0x5a, 0x89, 0xd7,
	0x72, 0x19, 0xaf, 0xdd, 0x05, 0x38, 0xb5, 0xcf, 0xb9, 0x2b, 0xd2, 0x51, 0xac, 0x57, 0x25, 0x0e,
	0xe5, 0xe3, 0x3d, 0xa8, 0x9d, 0x18, 0x13, 0xdb, 0x99, 0x09, 0xb9, 0x70, 0x13, 0x08, 0x16, 0x4d,
	0x58, 0x83, 0xd2, 0x29, 0x77, 0x2d, 0x1e, 0x48, 0x6f, 0x49, 0x8a, 0xdd, 0x81, 0xea, 0xc8, 0x0e,
	0xa2, 0xb1, 0x65, 0x44, 0x5c, 0x7e, 0x80, 0x29, 0x23, 0xad, 0x83, 0xe5, 0xec, 0x71, 0xf1, 0x1a,
	0xd4, 0xfd, 0xb1, 0xe7, 0xf2, 0xa1, 0x3c, 0x18, 0x2a, 0x24, 0xac, 0x11, 0xef, 0x40, 0x9c, 0x0e,
	0x2d, 0x28, 0xfb, 0xb6, 0x19, 0x4d, 0x03, 0xde, 0xaa, 0x8a, 0x50, 0x4a, 0x92, 0xfd, 0x02, 0x96,
	0x68, 0xd7, 0x13, 0x1e, 0x19, 0x96, 0x11, 0x19, 0x2d, 0xa0, 0x4f, 0x64, 0x25, 0x29, 0xdd, 0xfb,
	0x52, 0xa0, 0xd5, 0xa7, 0x19, 0x8a, 0xbd, 0x0b, 0x75, 0xc3, 0xf7, 0x53, 0xb5, 0x1a, 0xa9, 0x35,
	0x49, 0xad, 0xeb, 0xfb, 0x89, 0x56, 0xcd, 0x48, 0x09, 0x74, 0x31, 0x86, 0x72, 0x68, 0xfb, 0xad,
	0xba, 0xd8, 0x36, 0x92, 0xbb, 0x3e, 0xda, 0x37, 0x72, 0x3c, 0xf3, 0x8c, 0x5b, 0xad, 0xa5, 0x0d,
	0xe5, 0x7e, 0x45, 0x8b, 0x49, 0xac, 0x53, 0xae, 0x6d, 0x9e, 0x91, 0x1b, 0x1b, 0xe2, 0xab, 0x8f,
	0x69, 0xb6, 0x01, 0xb5, 0xc9, 0xd4, 0x89, 0xec, 0x13, 0xc3, 0x8c, 0xbc, 0xa0, 0xb5, 0x4c, 0x69,
	0x90, 0x65, 0x61, 0x98, 0xcc, 0x80, 0x1b, 0x11, 0xb7, 0x86, 0x46, 0xd4, 0x5a, 0x11, 0xfe, 0x94,
	0x9c, 0x6e, 0x84, 0xe2, 0xa9, 0x6f, 0xc5, 0x62, 0x26, 0xc4, 0x92, 0xd3, 0x8d, 0xd8, 0x9b, 0xd0,
	0x10, 0x8e, 0x3d, 0xe7, 0x01, 0x1e, 0x32, 0x56, 0xeb, 0x06, 0x19, 0xb7, 0x44, 0xdc, 0x8f, 0x24,
	0x93, 0xfd, 0x0c, 0xc0, 0xa6, 0x73, 0x28, 0xb2, 0x79, 0xd8, 0x5a, 0xa5, 0x2a, 0xb1, 0x44, 0x8e,
	0x10, 0xc7, 0x53, 0x34, 0xd3, 0x32, 0x13, 0xd4, 0x4b, 0xa8, 0xc4, 0x7c, 0xb6, 0x0e, 0x60, 0x7a,
	0xae, 0xcb, 0x4d, 0xbc, 0xa7, 0xc9, 0xb4, 0xcb, 0x70, 0xb2, 0x39, 0x99, 0x9b, 0xcb, 0xc9, 0x36,
	0x54, 0xfc, 0xc0, 0x3b, 0xb7, 0x31, 0x83, 0x44, 0xf6, 0x25, 0x34, 0xca, 0xec, 0x50, 0xf7, 0x4c,
	0xdb, 0x88, 0xcb, 0x48, 0x42, 0xab, 0xbf, 0x57, 0xa0, 0x9e, 0x8d, 0x2a, 0x7b, 0x84, 0x67, 0x84,
	0x8c, 0xa1, 0x28, 0x70, 0xf7, 0x16, 0x42, 0xbf, 0x19, 0x0f, 0x44, 0x7d, 0x4b, 0x14, 0xda, 0x8f,
	0x60, 0x69, 0x4e, 0xf4, 0x52, 0x55, 0xe9, 0x77, 0x0a, 0xd4, 0x32, 0x99, 0xc2, 0x1e, 0x2e, 0x58,
	0xb2, 0x7e, 0x35, 0x9b, 0xfe, 0x37, 0x86, 0xfc, 0x49, 0x81, 0x42, 0x77, 0x1a, 0x8d, 0x33, 0x37,
	0x58, 0x65, 0xee, 0x06, 0x7b, 0x1b, 0xaa, 0xa6, 0x63, 0x73, 0x37, 0x4a, 0xe3, 0x50, 0x11, 0x8c,
	0x5d, 0x8b, 0xbd, 0x0e, 0x4b, 0x52, 0x18, 0x72, 0x33, 0xe0, 0x71, 0xad, 0xac, 0x0b, 0xa6, 0x4e,
	0x3c, 0x0c, 0x49, 0xc0, 0x2d, 0x3b, 0xc0, 0x5a, 0x2a, 0x43, 0x12, 0xd3, 0x74, 0xaf, 0x32, 0x3d,
	0x9f, 0x87, 0x74, 0x0b, 0x6e, 0xc8, 0x03, 0x51, 0x47, 0x96, 0x26, 0x25, 0xea, 0x6d, 0x28, 0xd2,
	0x15, 0x17, 0x6b, 0xd1, 0xc8, 0x8e, 0x42, 0x32, 0xb0, 0xae, 0xd1, 0x58, 0xdd, 0x82, 0xca, 0x80,
	0x4f, 0x7c, 0x07, 0x2b, 0xc4, 0x75, 0x15, 0x9e, 0x41, 0x21, 0xe2, 0x17, 0xf1, 0xf9, 0x43, 0x63,
	0xf5, 0x4b, 0xa8, 0x3d, 0xd1, 0x0f, 0x0f, 0x3e, 0xe6, 0xa3, 0xa7, 0x7c, 0x16, 0x92, 0xbb, 0xa2,
	0xd4, 0x5d, 0x91, 0x70, 0x60, 0xb2, 0x5b, 0x1c, 0x22, 0x67, 0x1a, 0xc6, 0xb5, 0x0e, 0x87, 0xac,
	0x0e, 0x4a, 0x7c, 0x04, 0x28, 0x2e, 0x52, 0x5c, 0x56, 0x33, 0x85, 0xe3, 0xec, 0x8b, 0x9f, 0x9b,
	0xad, 0x12, 0x7d, 0x93, 0x38, 0x54, 0x7f, 0x0a, 0x85, 0x27, 0xbf, 0x3d, 0x0b, 0xd9, 0x1b, 0x50,
	0x38, 0xe3, 0xb3, 0xf8, 0x38, 0x15, 0x15, 0x23, 0x63, 0x8b, 0x46, 0x52, 0xf5, 0x1f, 0x0a, 0xd4,
	0xb0, 0xc9, 0x88, 0x8f, 0xff, 0xb4, 0x0d, 0x51, 0x9e, 0xdf, 0x86, 0x34, 0x45, 0xbb, 0x21, 0x0d,
	0xc7, 0x26, 0x63, 0x53, 0x36, 0x19, 0x79, 0x5a, 0xb0, 0x9d, 0x28, 0x7e, 0x5f, 0x83, 0x51, 0xf8,
	0xb1, 0x1b, 0x8c, 0xcf, 0x60, 0x49, 0xa3, 0x32, 0x1f, 0x6f, 0xea, 0x6d, 0xa8, 0x44, 0x32, 0x72,
	0xf2, 0xf2, 0x2b, 0xea, 0x46, 0x1c, 0x4e, 0x2d, 0x11, 0xa3, 0x51, 0xf4, 0x65, 0xe4, 0x16, 0x8d,
	0x42, 0xbe, 0xfa, 0x8d, 0x02, 0x2d, 0x9d, 0x1b, 0x81, 0x39, 0x3e, 0x4a, 0xeb, 0x7e, 0xa6, 0xcd,
	0x08, 0xa3, 0x78, 0x91, 0xaa, 0x26, 0x08, 0xf6, 0x08, 0xea, 0xa6, 0xe1, 0x1b, 0x23, 0xdb, 0x11,
	0x95, 0x4b, 0x40, 0xdf, 0x22, 0x68, 0xa1, 0xdf, 0xcb, 0x88, 0xb5, 0xb9, 0xc9, 0x98, 0xf6, 0x91,
	0x17, 0x19, 0xce, 0x30, 0xe0, 0xe1, 0xd4, 0x89, 0x42, 0xca, 0x8b, 0xbc, 0x56, 0x27, 0xa6, 0x26,
	0x78, 0xea, 0x5f, 0x14, 0xa8, 0x65, 0xcc, 0x41, 0xa5, 0x93, 0xc0, 0xe6, 0xae, 0x15, 0x1f, 0x8c,
	0xc2, 0x9e, 0x7a, 0xcc, 0xa4, 0xa3, 0xf1, 0xea, 0x71, 0x96, 0x5b, 0x3c, 0xce, 0xd6, 0xa0, 0x14,
	0xf0, 0x53, 0x2c, 0x99, 0xb2, 0xd5, 0x14, 0xd4, 0xc2, 0x8e, 0x0a, 0x2f, 0xb1, 0x23, 0xf5, 0x00,
	0xd8, 0xe2, 0x1c, 0x8a, 0xa6, 0x17, 0xdf, 0xc9, 0x2b, 0x9a, 0x20, 0x30, 0xea, 0xe1, 0x44, 0x78,
	0xac, 0xa2, 0xe1, 0x10, 0x39, 0x93, 0x89, 0xf0, 0x42, 0x45, 0xc3, 0xa1, 0x6a, 0xc0, 0x8d, 0xb9,
	0x50, 0x88, 0xae, 0x96, 0xdd, 0x9f, 0x6b, 0xe0, 0xe2, 0x0f, 0x20, 0x3b, 0x33, 0x6e, 0xe9, 0x44,
	0x47, 0x93, 0x8b, 0x3b, 0x1a, 0x91, 0xd9, 0x76, 0xf2, 0x01, 0x06, 0xb6, 0x7a, 0x07, 0x4a, 0xb2,
	0xc0, 0xc4, 0xdf, 0xb8, 0x92, 0xf9, 0xc6, 0xbf, 0x55, 0xa0, 0x48, 0x6d, 0x14, 0xba, 0xd4, 0x30,
	0x4d, 0x1e, 0x86, 0xc3, 0xb4, 0xd1, 0xaa, 0x6a, 0x35, 0xc1, 0x13, 0x53, 0xee, 0x02, 0x90, 0x6c,
	0x18, 0xcd, 0xfc, 0x38, 0x75, 0xab, 0xc4, 0x19, 0xcc, 0x7c, 0x8e, 0x91, 0x0b, 0xf8, 0x49, 0xc0,
	0xc3, 0xb1, 0x84, 0x90, 0x55, 0x4e, 0x32, 0x05, 0xc6, 0x1a, 0x94, 0xf8, 0x85, 0x6f, 0x07, 0x33,
	0x59, 0x14, 0x24, 0x85, 0xed, 0xa7, 0x6d, 0x49, 0x3d, 0x51, 0x20, 0xca, 0xb6, 0x45, 0x2a, 0x0f,
	0xbe, 0xcb, 0x41, 0x91, 0x4a, 0x1d, 0x03, 0x28, 0x1d, 0x1e, 0xf5, 0x0f, 0x76, 0xb7, 0x9b, 0xaf,
	0xb0, 0x1a, 0x94, 0x8f, 0xb4, 0xc3, 0x0f, 0x77, 0xf7, 0xfa, 0x4d, 0x85, 0x55, 0xa1, 0xd8, 0xdf,
	0xef, 0xee, 0xee, 0x35, 0x73, 0xac, 0x01, 0xa0, 0xf5, 0xbb, 0xdb, 0xc3, 0x63, 0xbd, 0xaf, 0xe9,
	0xcd, 0x3c, 0x6b, 0xc1, 0x6a, 0x42, 0x0f, 0x77, 0xb7, 0x8f, 0x86, 0x83, 0xc3, 0xa7, 0xfd, 0x03,
	0xbd, 0x59, 0x60, 0x4d, 0xa8, 0xf7, 0xb4, 0x7e, 0x77, 0xd0, 0x97, 0x73, 0x8b, 0x89, 0xae, 0x3e,
	0xe8, 0x0e, 0xf4, 0x66, 0x29, 0xd1, 0x25, 0xec, 0xe1, 0xa0, 0xbf, 0x7f, 0xb4, 0xd7, 0x1d, 0xf4,
	0xf5, 0x66, 0x99, 0xb5, 0x61, 0xed, 0xf8, 0x68, 0x1b, 0x75, 0xaf, 0xca, 0x2a, 0x28, 0x93, 0xb8,
	0x57, 0x65, 0xd5, 0x64, 0x05, 0xed, 0x78, 0xaf, 0xaf, 0x37, 0x01, 0x6d, 0x90, 0x38, 0x82, 0x53,
	0xcb, 0x58, 0x25, 0x38, 0x75, 0xe4, 0x6c, 0xf7, 0xf7, 0xfa, 0x09, 0x67, 0x29, 0x45, 0x39, 0x44,
	0xba, 0x91, 0x45, 0x21, 0xce, 0x72, 0x16, 0x85, 0x38, 0xcd, 0x2c, 0x0a, 0x71, 0x56, 0xd8, 0x12,
	0x54, 0x09, 0x65, 0xef, 0x70, 0x47, 0x6f, 0xb2, 0x07, 0x7f, 0xcd, 0x41, 0x1e, 0xbb, 0x3e, 0x04,
	0x23, 0x5f, 0x1d, 0x7c, 0x78, 0x78, 0xac, 0xed, 0x35, 0x5f, 0x61, 0x75, 0xa8, 0x90, 0xd3, 0x90,
	0x52, 0x50, 0xde, 0x3d, 0x1e, 0x3c, 0x3e, 0xd4, 0x76, 0x3f, 0xeb, 0x23, 0x27, 0x87, 0x72, 0xf2,
	0x20, 0x52, 0x79, 0x34, 0xae, 0xb7, 0xb7, 0xdb, 0x3f, 0x18, 0x10, 0x5d, 0xc0, 0x65, 0x76, 0xb4,
	0xae, 0x24, 0x8b, 0x38, 0x99, 0xb6, 0x81, 0x54, 0x89, 0xa8, 0x43, 0x49, 0x95, 0x31, 0xa6, 0x68,
	0x0c, 0x12, 0x15, 0x14, 0x51, 0x1c, 0x90, 0xaa, 0x32, 0x06, 0x8d, 0xde, 0xe1, 0xc1, 0x41, 0xbf,
	0x37, 0xd8, 0x3d, 0x3c, 0x20, 0x1e, 0xe0, 0x4a, 0x83, 0xfe, 0x41, 0x0c, 0x5d, 0x63, 0x37, 0x61,
	0x65, 0xde, 0xe3, 0xc8, 0xae, 0x23, 0x10, 0xb1, 0x91, 0x5a, 0x62, 0x37, 0x60, 0x59, 0xef, 0x77,
	0xb5, 0xde, 0xe3, 0x61, 0x62, 0x73, 0x03, 0x6d, 0xdc, 0xee, 0x7f, 0xb4, 0xdb, 0x23, 0x0d, 0x86,
	0x76, 0x3c, 0xf9, 0xf8, 0x29, 0xc9, 0x6e, 0xb0, 0x55, 0x68, 0x8a, 0xfd, 0x0c, 0xd3, 0x6d, 0xac,
	0x3e, 0xb8, 0x07, 0x90, 0x1e, 0x2c, 0xac, 0x0c, 0xf9, 0x9d, 0xfe, 0xa0, 0xf9, 0x0a, 0xab, 0x40,
	0xe1, 0xe8, 0x50, 0x1f, 0x34, 0x95, 0xad, 0x7f, 0x17, 0xa1, 0x71, 0x1c, 0x61, 0x89, 0x98, 0xe9,
	0xb2, 0x47, 0x7f, 0x0f, 0x0a, 0x7d, 0x73, 0xec, 0xb1, 0xb9, 0x56, 0xbc, 0x3d, 0x47, 0xa9, 0xad,
	0xaf, 0xff, 0xf9, 0xdd, 0x1f, 0x72, 0x4c, 0x5d, 0xea, 0x4c, 0x85, 0x72, 0x87, 0x9b, 0x63, 0xef,
	0xa1, 0xf2, 0x80, 0x3d, 0x85, 0x1a, 0x6a, 0xeb, 0xbe, 0xe1, 0xda, 0xe1, 0xf8, 0xb9, 0x20, 0x1b,
	0x04, 0xd2, 0x56, 0x6f, 0xce, 0x81, 0x74, 0x42, 0xa1, 0x9a, 0x01, 0xeb, 0x8d, 0x6d, 0x97, 0xe3,
	0x29, 0xfd, 0xf2, 0x60, 0xa6, 0x50, 0xcd, 0x80, 0xf5, 0xdd, 0x53, 0xe7, 0x07, 0x5a, 0xc6, 0x85,
	0x2a, 0x82, 0xed, 0x40, 0x15, 0xc1, 0x1e, 0xdb, 0xae, 0x65, 0x3f, 0x17, 0x6a, 0x9d, 0xa0, 0x5a,
	0xea, 0x8d, 0x79, 0xa8, 0x31, 0x2a, 0x22, 0xd0, 0x2e, 0x00, 0x02, 0x75, 0x03, 0x63, 0x64, 0x9b,
	0xcf, 0x45, 0xba, 0x47, 0x48, 0xaf, 0xaa, 0xab, 0xf3, 0x48, 0x06, 0x69, 0x0a, 0x9b, 0x6a, 0xfb,
	0x46, 0x10, 0x8e, 0x0d, 0x07, 0x2f, 0x21, 0x2c, 0x73, 0xb2, 0xb6, 0x33, 0xe3, 0x6b, 0x36, 0x37,
	0x11, 0x5a, 0x9d, 0x2f, 0x42, 0xcf, 0x9d, 0x07, 0xfa, 0xb4, 0xbb, 0xbf, 0xf7, 0x03, 0x80, 0x66,
	0xc6, 0xc4, 0x41, 0xa0, 0x3e, 0x80, 0x04, 0xfa, 0xe4, 0x39, 0x38, 0x8b, 0x1b, 0x8b, 0x71, 0x2e,
	0x04, 0xcc, 0x36, 0x94, 0xc4, 0x6d, 0x83, 0x31, 0xf9, 0xae, 0x9a, 0xb9, 0x7a, 0xcc, 0x41, 0xb5,
	0x09, 0x6a, 0x55, 0x5d, 0x4e, 0xa0, 0x02, 0x9a, 0xfb, 0x50, 0x79, 0xb0, 0xf5, 0x4d, 0x11, 0x1a,
	0x3d, 0xcf, 0x8d, 0x0c, 0x33, 0x8a, 0x53, 0xfd, 0xd7, 0x50, 0xd6, 0xb9, 0x6b, 0xe9, 0xfb, 0x3a,
	0x13, 0xcf, 0xb9, 0xfa, 0xbe, 0x3e, 0x87, 0x77, 0x87, 0xf0, 0xd6, 0xd4, 0x95, 0x8e, 0x29, 0x34,
	0x3b, 0xe1, 0x24, 0xec, 0x5c, 0x46, 0xde, 0x57, 0x68, 0xd7, 0x13, 0xa8, 0x4b, 0x75, 0xd1, 0xd7,
	0x2f, 0xc5, 0x18, 0x44, 0xce, 0x01, 0xdd, 0x25, 0xa0, 0x5b, 0x2a, 0x9b, 0x03, 0xa2, 0xc7, 0x9a,
	0x87, 0xca, 0x83, 0x77, 0x14, 0xd6, 0x83, 0xd2, 0x0e, 0x8f, 0xd0, 0x92, 0xe5, 0x4c, 0xc3, 0x75,
	0x62, 0xf3, 0xe0, 0x45, 0x0c, 0xb2, 0x2d, 0x32, 0xe8, 0x63, 0xa8, 0xa2, 0x41, 0xe2, 0x89, 0x64,
	0x25, 0xf3, 0x1c, 0x25, 0x5d, 0x35, 0x9f, 0x50, 0x6f, 0x13, 0xd6, 0xeb, 0xea, 0x7a, 0x82, 0x45,
	0x5d, 0x78, 0xe7, 0x92, 0x7e, 0x36, 0xe5, 0xe3, 0x09, 0x01, 0x7f, 0x0a, 0x8d, 0x04, 0x58, 0xec,
	0x75, 0xed, 0xea, 0xcb, 0xd3, 0xb5, 0x4b, 0xa4, 0xa1, 0x9d, 0x5f, 0x22, 0xb3, 0xf1, 0xdf, 0x40,
	0x05, 0xa1, 0xe9, 0x6d, 0x25, 0x7e, 0x6b, 0x76, 0x9c, 0xef, 0x71, 0x9e, 0x69, 0x38, 0x4e, 0x12,
	0x86, 0x7d, 0x58, 0x8a, 0x11, 0x84, 0x6d, 0x8d, 0x04, 0x66, 0x31, 0x10, 0xe9, 0xf7, 0x38, 0x87,
	0x95, 0x31, 0xe8, 0x0c, 0x56, 0x16, 0xae, 0x9f, 0xec, 0xae, 0x08, 0xed, 0x33, 0xae, 0xa5, 0xed,
	0x85, 0xab, 0x8f, 0xfa, 0x3a, 0xad, 0x73, 0x57, 0x6d, 0x25, 0xeb, 0x88, 0xbb, 0x50, 0xd8, 0xb9,
	0xa4, 0x3b, 0xeb, 0x57, 0xb4, 0xd8, 0xd6, 0xdf, 0x72, 0xd0, 0x38, 0x32, 0x66, 0x13, 0x6a, 0xb0,
	0x44, 0x52, 0x1e, 0x43, 0x35, 0x79, 0x5d, 0x67, 0x37, 0xc5, 0xba, 0x57, 0x5e, 0xdb, 0xe7, 0x76,
	0xf4, 0x26, 0xad, 0x74, 0x4f, 0x6d, 0x77, 0x7c, 0x01, 0xd4, 0x09, 0xe3, 0xe9, 0x32, 0x94, 0xe4,
	0xa5, 0xcf, 0xa1, 0x76, 0xec, 0x26, 0x12, 0x26, 0xae, 0x92, 0x8b, 0x0f, 0xf9, 0x73, 0xd0, 0x6f,
	0x11, 0xf4, 0x6b, 0xea, 0x9d, 0x04, 0x7a, 0xea, 0x5e, 0x0b, 0xee, 0xc0, 0x8d, 0xa3, 0x69, 0x60,
	0x8e, 0x8d, 0x90, 0x67, 0xbd, 0xb6, 0xe0, 0x96, 0x76, 0x6b, 0xe1, 0x8e, 0x28, 0x6f, 0x93, 0x99,
	0x6c, 0x8c, 0xd7, 0x12, 0x0e, 0xeb, 0x5c, 0x66, 0xef, 0xd0, 0xb8, 0xda, 0xd6, 0xd7, 0x79, 0xf1,
	0x9e, 0x1f, 0x7b, 0xec, 0x29, 0x94, 0x77, 0x78, 0x24, 0x9e, 0xbe, 0x92, 0x96, 0x7f, 0xfe, 0x69,
	0xbe, 0x9d, 0xbe, 0xe0, 0x67, 0xbe, 0xa1, 0x69, 0xc8, 0x83, 0xce, 0x29, 0x8f, 0xb2, 0x5b, 0x39,
	0x02, 0x38, 0xa6, 0x77, 0x13, 0xc2, 0x6b, 0xa6, 0x0f, 0xff, 0xd7, 0xf8, 0xe7, 0x0d, 0x42, 0x5a,
	0x57, 0x5f, 0x15, 0x48, 0xe2, 0xbd, 0xa5, 0x73, 0x89, 0xc4, 0x66, 0x8a, 0xd8, 0x03, 0xe8, 0xd1,
	0x43, 0xcd, 0x0b, 0x20, 0xde, 0x22, 0xc4, 0x15, 0xb5, 0x2e, 0x10, 0xc5, 0x03, 0x0f, 0x82, 0x68,
	0x00, 0xdb, 0xdc, 0xe1, 0x12, 0xe4, 0x99, 0xdb, 0x7c, 0x46, 0x5d, 0x45, 0x2c, 0x8b, 0xd4, 0xb3,
	0x5b, 0x7d, 0x04, 0xd5, 0x3d, 0x3b, 0x24, 0xc7, 0x85, 0x2c, 0xf3, 0x67, 0x45, 0xd6, 0x59, 0x37,
	0x09, 0x64, 0x59, 0x05, 0x01, 0xe2, 0xd8, 0xf2, 0x33, 0xd9, 0xfa, 0xbb, 0x92, 0xfe, 0x07, 0x97,
	0x06, 0xa2, 0xb6, 0xc3, 0xa3, 0xa4, 0x41, 0x58, 0xbd, 0xee, 0x5f, 0xb0, 0x67, 0xd4, 0xeb, 0x40,
	0xce, 0xea, 0x5c, 0x4e, 0x03, 0x61, 0xdd, 0x27, 0xb0, 0xac, 0x47, 0x01, 0x37, 0x26, 0x31, 0x40,
	0xf8, 0x02, 0x80, 0xaf, 0x11, 0xe0, 0x6d, 0x75, 0x2d, 0x05, 0x0c, 0x09, 0x24, 0xc1, 0x7d, 0x47,
	0x19, 0x95, 0xe8, 0x5f, 0xc4, 0x77, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x9e, 0xaa, 0x88, 0x26,
	0x75, 0x1c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UtilityServiceClient is the client API for UtilityService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UtilityServiceClient interface {
	Echo(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	EchoSpanish(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	EchoChinese(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	EchoEnglish(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	EchoHindi(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	EchoArabic(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	MarshalJSON(ctx context.Context, in *Bytes, opts ...grpc.CallOption) (*Bytes, error)
	MarshalYAML(ctx context.Context, in *Bytes, opts ...grpc.CallOption) (*Bytes, error)
	MarshalXML(ctx context.Context, in *Bytes, opts ...grpc.CallOption) (*Bytes, error)
	Render(ctx context.Context, in *RenderRequest, opts ...grpc.CallOption) (*Bytes, error)
}

type utilityServiceClient struct {
	cc *grpc.ClientConn
}

func NewUtilityServiceClient(cc *grpc.ClientConn) UtilityServiceClient {
	return &utilityServiceClient{cc}
}

func (c *utilityServiceClient) Echo(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/api.UtilityService/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) EchoSpanish(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/api.UtilityService/EchoSpanish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) EchoChinese(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/api.UtilityService/EchoChinese", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) EchoEnglish(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/api.UtilityService/EchoEnglish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) EchoHindi(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/api.UtilityService/EchoHindi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) EchoArabic(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/api.UtilityService/EchoArabic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) MarshalJSON(ctx context.Context, in *Bytes, opts ...grpc.CallOption) (*Bytes, error) {
	out := new(Bytes)
	err := c.cc.Invoke(ctx, "/api.UtilityService/MarshalJSON", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) MarshalYAML(ctx context.Context, in *Bytes, opts ...grpc.CallOption) (*Bytes, error) {
	out := new(Bytes)
	err := c.cc.Invoke(ctx, "/api.UtilityService/MarshalYAML", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) MarshalXML(ctx context.Context, in *Bytes, opts ...grpc.CallOption) (*Bytes, error) {
	out := new(Bytes)
	err := c.cc.Invoke(ctx, "/api.UtilityService/MarshalXML", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) Render(ctx context.Context, in *RenderRequest, opts ...grpc.CallOption) (*Bytes, error) {
	out := new(Bytes)
	err := c.cc.Invoke(ctx, "/api.UtilityService/Render", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UtilityServiceServer is the server API for UtilityService service.
type UtilityServiceServer interface {
	Echo(context.Context, *Message) (*Message, error)
	EchoSpanish(context.Context, *Message) (*Message, error)
	EchoChinese(context.Context, *Message) (*Message, error)
	EchoEnglish(context.Context, *Message) (*Message, error)
	EchoHindi(context.Context, *Message) (*Message, error)
	EchoArabic(context.Context, *Message) (*Message, error)
	MarshalJSON(context.Context, *Bytes) (*Bytes, error)
	MarshalYAML(context.Context, *Bytes) (*Bytes, error)
	MarshalXML(context.Context, *Bytes) (*Bytes, error)
	Render(context.Context, *RenderRequest) (*Bytes, error)
}

func RegisterUtilityServiceServer(s *grpc.Server, srv UtilityServiceServer) {
	s.RegisterService(&_UtilityService_serviceDesc, srv)
}

func _UtilityService_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).Echo(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_EchoSpanish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).EchoSpanish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/EchoSpanish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).EchoSpanish(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_EchoChinese_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).EchoChinese(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/EchoChinese",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).EchoChinese(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_EchoEnglish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).EchoEnglish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/EchoEnglish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).EchoEnglish(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_EchoHindi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).EchoHindi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/EchoHindi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).EchoHindi(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_EchoArabic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).EchoArabic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/EchoArabic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).EchoArabic(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_MarshalJSON_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Bytes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).MarshalJSON(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/MarshalJSON",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).MarshalJSON(ctx, req.(*Bytes))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_MarshalYAML_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Bytes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).MarshalYAML(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/MarshalYAML",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).MarshalYAML(ctx, req.(*Bytes))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_MarshalXML_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Bytes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).MarshalXML(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/MarshalXML",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).MarshalXML(ctx, req.(*Bytes))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_Render_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RenderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).Render(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/Render",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).Render(ctx, req.(*RenderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UtilityService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.UtilityService",
	HandlerType: (*UtilityServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _UtilityService_Echo_Handler,
		},
		{
			MethodName: "EchoSpanish",
			Handler:    _UtilityService_EchoSpanish_Handler,
		},
		{
			MethodName: "EchoChinese",
			Handler:    _UtilityService_EchoChinese_Handler,
		},
		{
			MethodName: "EchoEnglish",
			Handler:    _UtilityService_EchoEnglish_Handler,
		},
		{
			MethodName: "EchoHindi",
			Handler:    _UtilityService_EchoHindi_Handler,
		},
		{
			MethodName: "EchoArabic",
			Handler:    _UtilityService_EchoArabic_Handler,
		},
		{
			MethodName: "MarshalJSON",
			Handler:    _UtilityService_MarshalJSON_Handler,
		},
		{
			MethodName: "MarshalYAML",
			Handler:    _UtilityService_MarshalYAML_Handler,
		},
		{
			MethodName: "MarshalXML",
			Handler:    _UtilityService_MarshalXML_Handler,
		},
		{
			MethodName: "Render",
			Handler:    _UtilityService_Render_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// ContactServiceClient is the client API for ContactService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContactServiceClient interface {
	SendSMS(ctx context.Context, in *SMS, opts ...grpc.CallOption) (*Bytes, error)
	SendSMSBlast(ctx context.Context, in *SMSBlast, opts ...grpc.CallOption) (ContactService_SendSMSBlastClient, error)
	GetSMS(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*Bytes, error)
	SendEmail(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Message, error)
	SendEmailBlast(ctx context.Context, in *EmailBlastRequest, opts ...grpc.CallOption) (ContactService_SendEmailBlastClient, error)
	SendCall(ctx context.Context, in *Call, opts ...grpc.CallOption) (*Bytes, error)
	SendCallBlast(ctx context.Context, in *CallBlast, opts ...grpc.CallOption) (ContactService_SendCallBlastClient, error)
	SearchPhoneNumber(ctx context.Context, in *SearchPhoneNumberRequest, opts ...grpc.CallOption) (ContactService_SearchPhoneNumberClient, error)
}

type contactServiceClient struct {
	cc *grpc.ClientConn
}

func NewContactServiceClient(cc *grpc.ClientConn) ContactServiceClient {
	return &contactServiceClient{cc}
}

func (c *contactServiceClient) SendSMS(ctx context.Context, in *SMS, opts ...grpc.CallOption) (*Bytes, error) {
	out := new(Bytes)
	err := c.cc.Invoke(ctx, "/api.ContactService/SendSMS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactServiceClient) SendSMSBlast(ctx context.Context, in *SMSBlast, opts ...grpc.CallOption) (ContactService_SendSMSBlastClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ContactService_serviceDesc.Streams[0], "/api.ContactService/SendSMSBlast", opts...)
	if err != nil {
		return nil, err
	}
	x := &contactServiceSendSMSBlastClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ContactService_SendSMSBlastClient interface {
	Recv() (*Bytes, error)
	grpc.ClientStream
}

type contactServiceSendSMSBlastClient struct {
	grpc.ClientStream
}

func (x *contactServiceSendSMSBlastClient) Recv() (*Bytes, error) {
	m := new(Bytes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *contactServiceClient) GetSMS(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*Bytes, error) {
	out := new(Bytes)
	err := c.cc.Invoke(ctx, "/api.ContactService/GetSMS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactServiceClient) SendEmail(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/api.ContactService/SendEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactServiceClient) SendEmailBlast(ctx context.Context, in *EmailBlastRequest, opts ...grpc.CallOption) (ContactService_SendEmailBlastClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ContactService_serviceDesc.Streams[1], "/api.ContactService/SendEmailBlast", opts...)
	if err != nil {
		return nil, err
	}
	x := &contactServiceSendEmailBlastClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ContactService_SendEmailBlastClient interface {
	Recv() (*Message, error)
	grpc.ClientStream
}

type contactServiceSendEmailBlastClient struct {
	grpc.ClientStream
}

func (x *contactServiceSendEmailBlastClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *contactServiceClient) SendCall(ctx context.Context, in *Call, opts ...grpc.CallOption) (*Bytes, error) {
	out := new(Bytes)
	err := c.cc.Invoke(ctx, "/api.ContactService/SendCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactServiceClient) SendCallBlast(ctx context.Context, in *CallBlast, opts ...grpc.CallOption) (ContactService_SendCallBlastClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ContactService_serviceDesc.Streams[2], "/api.ContactService/SendCallBlast", opts...)
	if err != nil {
		return nil, err
	}
	x := &contactServiceSendCallBlastClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ContactService_SendCallBlastClient interface {
	Recv() (*Bytes, error)
	grpc.ClientStream
}

type contactServiceSendCallBlastClient struct {
	grpc.ClientStream
}

func (x *contactServiceSendCallBlastClient) Recv() (*Bytes, error) {
	m := new(Bytes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *contactServiceClient) SearchPhoneNumber(ctx context.Context, in *SearchPhoneNumberRequest, opts ...grpc.CallOption) (ContactService_SearchPhoneNumberClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ContactService_serviceDesc.Streams[3], "/api.ContactService/SearchPhoneNumber", opts...)
	if err != nil {
		return nil, err
	}
	x := &contactServiceSearchPhoneNumberClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ContactService_SearchPhoneNumberClient interface {
	Recv() (*PhoneNumber, error)
	grpc.ClientStream
}

type contactServiceSearchPhoneNumberClient struct {
	grpc.ClientStream
}

func (x *contactServiceSearchPhoneNumberClient) Recv() (*PhoneNumber, error) {
	m := new(PhoneNumber)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ContactServiceServer is the server API for ContactService service.
type ContactServiceServer interface {
	SendSMS(context.Context, *SMS) (*Bytes, error)
	SendSMSBlast(*SMSBlast, ContactService_SendSMSBlastServer) error
	GetSMS(context.Context, *Identifier) (*Bytes, error)
	SendEmail(context.Context, *EmailRequest) (*Message, error)
	SendEmailBlast(*EmailBlastRequest, ContactService_SendEmailBlastServer) error
	SendCall(context.Context, *Call) (*Bytes, error)
	SendCallBlast(*CallBlast, ContactService_SendCallBlastServer) error
	SearchPhoneNumber(*SearchPhoneNumberRequest, ContactService_SearchPhoneNumberServer) error
}

func RegisterContactServiceServer(s *grpc.Server, srv ContactServiceServer) {
	s.RegisterService(&_ContactService_serviceDesc, srv)
}

func _ContactService_SendSMS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SMS)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactServiceServer).SendSMS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ContactService/SendSMS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactServiceServer).SendSMS(ctx, req.(*SMS))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactService_SendSMSBlast_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SMSBlast)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ContactServiceServer).SendSMSBlast(m, &contactServiceSendSMSBlastServer{stream})
}

type ContactService_SendSMSBlastServer interface {
	Send(*Bytes) error
	grpc.ServerStream
}

type contactServiceSendSMSBlastServer struct {
	grpc.ServerStream
}

func (x *contactServiceSendSMSBlastServer) Send(m *Bytes) error {
	return x.ServerStream.SendMsg(m)
}

func _ContactService_GetSMS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identifier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactServiceServer).GetSMS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ContactService/GetSMS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactServiceServer).GetSMS(ctx, req.(*Identifier))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactService_SendEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactServiceServer).SendEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ContactService/SendEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactServiceServer).SendEmail(ctx, req.(*EmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactService_SendEmailBlast_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EmailBlastRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ContactServiceServer).SendEmailBlast(m, &contactServiceSendEmailBlastServer{stream})
}

type ContactService_SendEmailBlastServer interface {
	Send(*Message) error
	grpc.ServerStream
}

type contactServiceSendEmailBlastServer struct {
	grpc.ServerStream
}

func (x *contactServiceSendEmailBlastServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func _ContactService_SendCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Call)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactServiceServer).SendCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ContactService/SendCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactServiceServer).SendCall(ctx, req.(*Call))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactService_SendCallBlast_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(CallBlast)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ContactServiceServer).SendCallBlast(m, &contactServiceSendCallBlastServer{stream})
}

type ContactService_SendCallBlastServer interface {
	Send(*Bytes) error
	grpc.ServerStream
}

type contactServiceSendCallBlastServer struct {
	grpc.ServerStream
}

func (x *contactServiceSendCallBlastServer) Send(m *Bytes) error {
	return x.ServerStream.SendMsg(m)
}

func _ContactService_SearchPhoneNumber_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchPhoneNumberRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ContactServiceServer).SearchPhoneNumber(m, &contactServiceSearchPhoneNumberServer{stream})
}

type ContactService_SearchPhoneNumberServer interface {
	Send(*PhoneNumber) error
	grpc.ServerStream
}

type contactServiceSearchPhoneNumberServer struct {
	grpc.ServerStream
}

func (x *contactServiceSearchPhoneNumberServer) Send(m *PhoneNumber) error {
	return x.ServerStream.SendMsg(m)
}

var _ContactService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ContactService",
	HandlerType: (*ContactServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendSMS",
			Handler:    _ContactService_SendSMS_Handler,
		},
		{
			MethodName: "GetSMS",
			Handler:    _ContactService_GetSMS_Handler,
		},
		{
			MethodName: "SendEmail",
			Handler:    _ContactService_SendEmail_Handler,
		},
		{
			MethodName: "SendCall",
			Handler:    _ContactService_SendCall_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SendSMSBlast",
			Handler:       _ContactService_SendSMSBlast_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SendEmailBlast",
			Handler:       _ContactService_SendEmailBlast_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SendCallBlast",
			Handler:       _ContactService_SendCallBlast_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "SearchPhoneNumber",
			Handler:       _ContactService_SearchPhoneNumber_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}

// PaymentServiceClient is the client API for PaymentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaymentServiceClient interface {
	Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*Bytes, error)
	Unsubscribe(ctx context.Context, in *UnSubscribeRequest, opts ...grpc.CallOption) (*Bytes, error)
	PurchasePhoneNumber(ctx context.Context, in *PhoneNumber, opts ...grpc.CallOption) (*PhoneNumberResource, error)
}

type paymentServiceClient struct {
	cc *grpc.ClientConn
}

func NewPaymentServiceClient(cc *grpc.ClientConn) PaymentServiceClient {
	return &paymentServiceClient{cc}
}

func (c *paymentServiceClient) Subscribe(ctx context.Context, in *SubscribeRequest, opts ...grpc.CallOption) (*Bytes, error) {
	out := new(Bytes)
	err := c.cc.Invoke(ctx, "/api.PaymentService/Subscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServiceClient) Unsubscribe(ctx context.Context, in *UnSubscribeRequest, opts ...grpc.CallOption) (*Bytes, error) {
	out := new(Bytes)
	err := c.cc.Invoke(ctx, "/api.PaymentService/Unsubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServiceClient) PurchasePhoneNumber(ctx context.Context, in *PhoneNumber, opts ...grpc.CallOption) (*PhoneNumberResource, error) {
	out := new(PhoneNumberResource)
	err := c.cc.Invoke(ctx, "/api.PaymentService/PurchasePhoneNumber", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PaymentServiceServer is the server API for PaymentService service.
type PaymentServiceServer interface {
	Subscribe(context.Context, *SubscribeRequest) (*Bytes, error)
	Unsubscribe(context.Context, *UnSubscribeRequest) (*Bytes, error)
	PurchasePhoneNumber(context.Context, *PhoneNumber) (*PhoneNumberResource, error)
}

func RegisterPaymentServiceServer(s *grpc.Server, srv PaymentServiceServer) {
	s.RegisterService(&_PaymentService_serviceDesc, srv)
}

func _PaymentService_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServiceServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PaymentService/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServiceServer).Subscribe(ctx, req.(*SubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentService_Unsubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnSubscribeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServiceServer).Unsubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PaymentService/Unsubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServiceServer).Unsubscribe(ctx, req.(*UnSubscribeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentService_PurchasePhoneNumber_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PhoneNumber)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServiceServer).PurchasePhoneNumber(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PaymentService/PurchasePhoneNumber",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServiceServer).PurchasePhoneNumber(ctx, req.(*PhoneNumber))
	}
	return interceptor(ctx, in, info, handler)
}

var _PaymentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.PaymentService",
	HandlerType: (*PaymentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Subscribe",
			Handler:    _PaymentService_Subscribe_Handler,
		},
		{
			MethodName: "Unsubscribe",
			Handler:    _PaymentService_Unsubscribe_Handler,
		},
		{
			MethodName: "PurchasePhoneNumber",
			Handler:    _PaymentService_PurchasePhoneNumber_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	GetUser(ctx context.Context, in *UserByEmailRequest, opts ...grpc.CallOption) (*User, error)
	UpdateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*Bytes, error)
	CreateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*Bytes, error)
	DeleteUser(ctx context.Context, in *UserByEmailRequest, opts ...grpc.CallOption) (*Bytes, error)
	ListUsers(ctx context.Context, in *Token, opts ...grpc.CallOption) (UserService_ListUsersClient, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetUser(ctx context.Context, in *UserByEmailRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/api.UserService/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*Bytes, error) {
	out := new(Bytes)
	err := c.cc.Invoke(ctx, "/api.UserService/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) CreateUser(ctx context.Context, in *UserRequest, opts ...grpc.CallOption) (*Bytes, error) {
	out := new(Bytes)
	err := c.cc.Invoke(ctx, "/api.UserService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteUser(ctx context.Context, in *UserByEmailRequest, opts ...grpc.CallOption) (*Bytes, error) {
	out := new(Bytes)
	err := c.cc.Invoke(ctx, "/api.UserService/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ListUsers(ctx context.Context, in *Token, opts ...grpc.CallOption) (UserService_ListUsersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_UserService_serviceDesc.Streams[0], "/api.UserService/ListUsers", opts...)
	if err != nil {
		return nil, err
	}
	x := &userServiceListUsersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type UserService_ListUsersClient interface {
	Recv() (*User, error)
	grpc.ClientStream
}

type userServiceListUsersClient struct {
	grpc.ClientStream
}

func (x *userServiceListUsersClient) Recv() (*User, error) {
	m := new(User)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	GetUser(context.Context, *UserByEmailRequest) (*User, error)
	UpdateUser(context.Context, *UserRequest) (*Bytes, error)
	CreateUser(context.Context, *UserRequest) (*Bytes, error)
	DeleteUser(context.Context, *UserByEmailRequest) (*Bytes, error)
	ListUsers(*Token, UserService_ListUsersServer) error
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserByEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUser(ctx, req.(*UserByEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateUser(ctx, req.(*UserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserByEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteUser(ctx, req.(*UserByEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ListUsers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Token)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(UserServiceServer).ListUsers(m, &userServiceListUsersServer{stream})
}

type UserService_ListUsersServer interface {
	Send(*User) error
	grpc.ServerStream
}

type userServiceListUsersServer struct {
	grpc.ServerStream
}

func (x *userServiceListUsersServer) Send(m *User) error {
	return x.ServerStream.SendMsg(m)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _UserService_GetUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _UserService_UpdateUser_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _UserService_CreateUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _UserService_DeleteUser_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListUsers",
			Handler:       _UserService_ListUsers_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}

// ResourceServiceClient is the client API for ResourceService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ResourceServiceClient interface {
	GetResource(ctx context.Context, in *ResourceRequest, opts ...grpc.CallOption) (*Bytes, error)
	StreamResources(ctx context.Context, in *ResourceRequest, opts ...grpc.CallOption) (ResourceService_StreamResourcesClient, error)
}

type resourceServiceClient struct {
	cc *grpc.ClientConn
}

func NewResourceServiceClient(cc *grpc.ClientConn) ResourceServiceClient {
	return &resourceServiceClient{cc}
}

func (c *resourceServiceClient) GetResource(ctx context.Context, in *ResourceRequest, opts ...grpc.CallOption) (*Bytes, error) {
	out := new(Bytes)
	err := c.cc.Invoke(ctx, "/api.ResourceService/GetResource", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *resourceServiceClient) StreamResources(ctx context.Context, in *ResourceRequest, opts ...grpc.CallOption) (ResourceService_StreamResourcesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_ResourceService_serviceDesc.Streams[0], "/api.ResourceService/StreamResources", opts...)
	if err != nil {
		return nil, err
	}
	x := &resourceServiceStreamResourcesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ResourceService_StreamResourcesClient interface {
	Recv() (*Bytes, error)
	grpc.ClientStream
}

type resourceServiceStreamResourcesClient struct {
	grpc.ClientStream
}

func (x *resourceServiceStreamResourcesClient) Recv() (*Bytes, error) {
	m := new(Bytes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// ResourceServiceServer is the server API for ResourceService service.
type ResourceServiceServer interface {
	GetResource(context.Context, *ResourceRequest) (*Bytes, error)
	StreamResources(*ResourceRequest, ResourceService_StreamResourcesServer) error
}

func RegisterResourceServiceServer(s *grpc.Server, srv ResourceServiceServer) {
	s.RegisterService(&_ResourceService_serviceDesc, srv)
}

func _ResourceService_GetResource_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResourceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ResourceServiceServer).GetResource(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ResourceService/GetResource",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ResourceServiceServer).GetResource(ctx, req.(*ResourceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ResourceService_StreamResources_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ResourceRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ResourceServiceServer).StreamResources(m, &resourceServiceStreamResourcesServer{stream})
}

type ResourceService_StreamResourcesServer interface {
	Send(*Bytes) error
	grpc.ServerStream
}

type resourceServiceStreamResourcesServer struct {
	grpc.ServerStream
}

func (x *resourceServiceStreamResourcesServer) Send(m *Bytes) error {
	return x.ServerStream.SendMsg(m)
}

var _ResourceService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ResourceService",
	HandlerType: (*ResourceServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetResource",
			Handler:    _ResourceService_GetResource_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamResources",
			Handler:       _ResourceService_StreamResources_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}
