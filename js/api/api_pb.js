/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('./google/api/annotations_pb.js');
goog.exportSymbol('proto.api.GetProfileByEmail', null, global);
goog.exportSymbol('proto.api.Identity', null, global);
goog.exportSymbol('proto.api.Profile', null, global);
goog.exportSymbol('proto.api.UserMetadata', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.GetProfileByEmail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.GetProfileByEmail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.GetProfileByEmail.displayName = 'proto.api.GetProfileByEmail';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.GetProfileByEmail.prototype.toObject = function(opt_includeInstance) {
  return proto.api.GetProfileByEmail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.GetProfileByEmail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetProfileByEmail.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.GetProfileByEmail}
 */
proto.api.GetProfileByEmail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.GetProfileByEmail;
  return proto.api.GetProfileByEmail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.GetProfileByEmail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.GetProfileByEmail}
 */
proto.api.GetProfileByEmail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.GetProfileByEmail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.GetProfileByEmail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.GetProfileByEmail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.GetProfileByEmail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.api.GetProfileByEmail.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api.GetProfileByEmail.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Profile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.Profile.repeatedFields_, null);
};
goog.inherits(proto.api.Profile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Profile.displayName = 'proto.api.Profile';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.Profile.repeatedFields_ = [11];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Profile.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Profile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Profile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Profile.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, ""),
    emailVerified: jspb.Message.getFieldWithDefault(msg, 2, false),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    givenName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    familyName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    picture: jspb.Message.getFieldWithDefault(msg, 6, ""),
    locale: jspb.Message.getFieldWithDefault(msg, 7, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 8, ""),
    nickname: jspb.Message.getFieldWithDefault(msg, 9, ""),
    connection: jspb.Message.getFieldWithDefault(msg, 10, ""),
    identitiesList: jspb.Message.toObjectList(msg.getIdentitiesList(),
    proto.api.Identity.toObject, includeInstance),
    lastIp: jspb.Message.getFieldWithDefault(msg, 12, ""),
    loginCount: jspb.Message.getFieldWithDefault(msg, 13, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 14, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 15, ""),
    sub: jspb.Message.getFieldWithDefault(msg, 16, ""),
    iss: jspb.Message.getFieldWithDefault(msg, 17, ""),
    aud: jspb.Message.getFieldWithDefault(msg, 18, ""),
    iat: jspb.Message.getFieldWithDefault(msg, 19, ""),
    userMetadata: (f = msg.getUserMetadata()) && proto.api.UserMetadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Profile}
 */
proto.api.Profile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Profile;
  return proto.api.Profile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Profile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Profile}
 */
proto.api.Profile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmailVerified(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setGivenName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFamilyName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPicture(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocale(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setNickname(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnection(value);
      break;
    case 11:
      var value = new proto.api.Identity;
      reader.readMessage(value,proto.api.Identity.deserializeBinaryFromReader);
      msg.addIdentities(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastIp(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setLoginCount(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setSub(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setIss(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setAud(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setIat(value);
      break;
    case 20:
      var value = new proto.api.UserMetadata;
      reader.readMessage(value,proto.api.UserMetadata.deserializeBinaryFromReader);
      msg.setUserMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Profile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Profile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Profile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Profile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmailVerified();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getGivenName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFamilyName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPicture();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLocale();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getNickname();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getConnection();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getIdentitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      proto.api.Identity.serializeBinaryToWriter
    );
  }
  f = message.getLastIp();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getLoginCount();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getSub();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getIss();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getAud();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getIat();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getUserMetadata();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.api.UserMetadata.serializeBinaryToWriter
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.api.Profile.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api.Profile.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool email_verified = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.Profile.prototype.getEmailVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.api.Profile.prototype.setEmailVerified = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.api.Profile.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api.Profile.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string given_name = 4;
 * @return {string}
 */
proto.api.Profile.prototype.getGivenName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.api.Profile.prototype.setGivenName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string family_name = 5;
 * @return {string}
 */
proto.api.Profile.prototype.getFamilyName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.api.Profile.prototype.setFamilyName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string picture = 6;
 * @return {string}
 */
proto.api.Profile.prototype.getPicture = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.api.Profile.prototype.setPicture = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string locale = 7;
 * @return {string}
 */
proto.api.Profile.prototype.getLocale = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.api.Profile.prototype.setLocale = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string user_id = 8;
 * @return {string}
 */
proto.api.Profile.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.api.Profile.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string nickname = 9;
 * @return {string}
 */
proto.api.Profile.prototype.getNickname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.api.Profile.prototype.setNickname = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string connection = 10;
 * @return {string}
 */
proto.api.Profile.prototype.getConnection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.api.Profile.prototype.setConnection = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated Identity identities = 11;
 * @return {!Array<!proto.api.Identity>}
 */
proto.api.Profile.prototype.getIdentitiesList = function() {
  return /** @type{!Array<!proto.api.Identity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.Identity, 11));
};


/** @param {!Array<!proto.api.Identity>} value */
proto.api.Profile.prototype.setIdentitiesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.api.Identity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.Identity}
 */
proto.api.Profile.prototype.addIdentities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.api.Identity, opt_index);
};


proto.api.Profile.prototype.clearIdentitiesList = function() {
  this.setIdentitiesList([]);
};


/**
 * optional string last_ip = 12;
 * @return {string}
 */
proto.api.Profile.prototype.getLastIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.api.Profile.prototype.setLastIp = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional int64 login_count = 13;
 * @return {number}
 */
proto.api.Profile.prototype.getLoginCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.api.Profile.prototype.setLoginCount = function(value) {
  jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional string updated_at = 14;
 * @return {string}
 */
proto.api.Profile.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.api.Profile.prototype.setUpdatedAt = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string created_at = 15;
 * @return {string}
 */
proto.api.Profile.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.api.Profile.prototype.setCreatedAt = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string sub = 16;
 * @return {string}
 */
proto.api.Profile.prototype.getSub = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.api.Profile.prototype.setSub = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string iss = 17;
 * @return {string}
 */
proto.api.Profile.prototype.getIss = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.api.Profile.prototype.setIss = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string aud = 18;
 * @return {string}
 */
proto.api.Profile.prototype.getAud = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.api.Profile.prototype.setAud = function(value) {
  jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string iat = 19;
 * @return {string}
 */
proto.api.Profile.prototype.getIat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.api.Profile.prototype.setIat = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional UserMetadata user_metadata = 20;
 * @return {?proto.api.UserMetadata}
 */
proto.api.Profile.prototype.getUserMetadata = function() {
  return /** @type{?proto.api.UserMetadata} */ (
    jspb.Message.getWrapperField(this, proto.api.UserMetadata, 20));
};


/** @param {?proto.api.UserMetadata|undefined} value */
proto.api.Profile.prototype.setUserMetadata = function(value) {
  jspb.Message.setWrapperField(this, 20, value);
};


proto.api.Profile.prototype.clearUserMetadata = function() {
  this.setUserMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Profile.prototype.hasUserMetadata = function() {
  return jspb.Message.getField(this, 20) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.UserMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.UserMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.UserMetadata.displayName = 'proto.api.UserMetadata';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.UserMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.api.UserMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.UserMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.UserMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    phone: jspb.Message.getFieldWithDefault(msg, 1, ""),
    plan: jspb.Message.getFieldWithDefault(msg, 2, ""),
    payToken: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lastContact: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.UserMetadata}
 */
proto.api.UserMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.UserMetadata;
  return proto.api.UserMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.UserMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.UserMetadata}
 */
proto.api.UserMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlan(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPayToken(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastContact(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.UserMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.UserMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.UserMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.UserMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPlan();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPayToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLastContact();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string phone = 1;
 * @return {string}
 */
proto.api.UserMetadata.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api.UserMetadata.prototype.setPhone = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string plan = 2;
 * @return {string}
 */
proto.api.UserMetadata.prototype.getPlan = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api.UserMetadata.prototype.setPlan = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string pay_token = 3;
 * @return {string}
 */
proto.api.UserMetadata.prototype.getPayToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api.UserMetadata.prototype.setPayToken = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string last_contact = 4;
 * @return {string}
 */
proto.api.UserMetadata.prototype.getLastContact = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.api.UserMetadata.prototype.setLastContact = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Identity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Identity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Identity.displayName = 'proto.api.Identity';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Identity.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Identity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Identity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Identity.toObject = function(includeInstance, msg) {
  var f, obj = {
    provider: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    connection: jspb.Message.getFieldWithDefault(msg, 3, ""),
    issocial: jspb.Message.getFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Identity}
 */
proto.api.Identity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Identity;
  return proto.api.Identity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Identity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Identity}
 */
proto.api.Identity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setProvider(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnection(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssocial(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Identity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Identity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Identity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Identity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProvider();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getConnection();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIssocial();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional string provider = 1;
 * @return {string}
 */
proto.api.Identity.prototype.getProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.api.Identity.prototype.setProvider = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_id = 2;
 * @return {string}
 */
proto.api.Identity.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.api.Identity.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string connection = 3;
 * @return {string}
 */
proto.api.Identity.prototype.getConnection = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.api.Identity.prototype.setConnection = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool isSocial = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.Identity.prototype.getIssocial = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.api.Identity.prototype.setIssocial = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


goog.object.extend(exports, proto.api);
