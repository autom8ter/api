// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/common.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Bytes;
@class Int64;
@class String;
@class StringMap;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum HTTPMethod

typedef GPB_ENUM(HTTPMethod) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  HTTPMethod_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  HTTPMethod_Get = 0,
  HTTPMethod_Post = 1,
  HTTPMethod_Patch = 2,
};

GPBEnumDescriptor *HTTPMethod_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL HTTPMethod_IsValidValue(int32_t value);

#pragma mark - CommonRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface CommonRoot : GPBRootObject
@end

#pragma mark - String

typedef GPB_ENUM(String_FieldNumber) {
  String_FieldNumber_Text = 1,
};

@interface String : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *text;

@end

#pragma mark - Bytes

typedef GPB_ENUM(Bytes_FieldNumber) {
  Bytes_FieldNumber_Bits = 1,
};

@interface Bytes : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSData *bits;

@end

#pragma mark - StringArray

typedef GPB_ENUM(StringArray_FieldNumber) {
  StringArray_FieldNumber_StringsArray = 1,
};

@interface StringArray : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<String*> *stringsArray;
/** The number of items in @c stringsArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger stringsArray_Count;

@end

#pragma mark - StringMap

typedef GPB_ENUM(StringMap_FieldNumber) {
  StringMap_FieldNumber_StringMap = 1,
};

@interface StringMap : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, String*> *stringMap;
/** The number of items in @c stringMap without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger stringMap_Count;

@end

#pragma mark - Empty

@interface Empty : GPBMessage

@end

#pragma mark - Identifier

typedef GPB_ENUM(Identifier_FieldNumber) {
  Identifier_FieldNumber_Id_p = 1,
};

@interface Identifier : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) String *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

@end

#pragma mark - Int64

typedef GPB_ENUM(Int64_FieldNumber) {
  Int64_FieldNumber_Num = 1,
};

@interface Int64 : GPBMessage

@property(nonatomic, readwrite) int64_t num;

@end

#pragma mark - Float64

typedef GPB_ENUM(Float64_FieldNumber) {
  Float64_FieldNumber_Num = 1,
};

@interface Float64 : GPBMessage

@property(nonatomic, readwrite) double num;

@end

#pragma mark - RGBA

typedef GPB_ENUM(RGBA_FieldNumber) {
  RGBA_FieldNumber_R = 1,
  RGBA_FieldNumber_G = 2,
  RGBA_FieldNumber_B = 3,
  RGBA_FieldNumber_A = 4,
};

@interface RGBA : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Int64 *r;
/** Test to see if @c r has been set. */
@property(nonatomic, readwrite) BOOL hasR;

@property(nonatomic, readwrite, strong, null_resettable) Int64 *g;
/** Test to see if @c g has been set. */
@property(nonatomic, readwrite) BOOL hasG;

@property(nonatomic, readwrite, strong, null_resettable) Int64 *b;
/** Test to see if @c b has been set. */
@property(nonatomic, readwrite) BOOL hasB;

@property(nonatomic, readwrite, strong, null_resettable) Int64 *a;
/** Test to see if @c a has been set. */
@property(nonatomic, readwrite) BOOL hasA;

@end

#pragma mark - HTTPRequest

typedef GPB_ENUM(HTTPRequest_FieldNumber) {
  HTTPRequest_FieldNumber_Method = 1,
  HTTPRequest_FieldNumber_URL = 2,
  HTTPRequest_FieldNumber_Form = 3,
  HTTPRequest_FieldNumber_Body = 4,
};

@interface HTTPRequest : GPBMessage

@property(nonatomic, readwrite) HTTPMethod method;

@property(nonatomic, readwrite, strong, null_resettable) String *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

@property(nonatomic, readwrite, strong, null_resettable) StringMap *form;
/** Test to see if @c form has been set. */
@property(nonatomic, readwrite) BOOL hasForm;

@property(nonatomic, readwrite, strong, null_resettable) Bytes *body;
/** Test to see if @c body has been set. */
@property(nonatomic, readwrite) BOOL hasBody;

@end

/**
 * Fetches the raw value of a @c HTTPRequest's @c method property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t HTTPRequest_Method_RawValue(HTTPRequest *message);
/**
 * Sets the raw value of an @c HTTPRequest's @c method property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetHTTPRequest_Method_RawValue(HTTPRequest *message, int32_t value);

#pragma mark - Token

typedef GPB_ENUM(Token_FieldNumber) {
  Token_FieldNumber_AccessToken = 1,
  Token_FieldNumber_TokenType = 2,
  Token_FieldNumber_RefreshToken = 3,
  Token_FieldNumber_Expiry = 4,
  Token_FieldNumber_IdToken = 5,
};

@interface Token : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) String *accessToken;
/** Test to see if @c accessToken has been set. */
@property(nonatomic, readwrite) BOOL hasAccessToken;

@property(nonatomic, readwrite, strong, null_resettable) String *tokenType;
/** Test to see if @c tokenType has been set. */
@property(nonatomic, readwrite) BOOL hasTokenType;

@property(nonatomic, readwrite, strong, null_resettable) String *refreshToken;
/** Test to see if @c refreshToken has been set. */
@property(nonatomic, readwrite) BOOL hasRefreshToken;

@property(nonatomic, readwrite, strong, null_resettable) String *expiry;
/** Test to see if @c expiry has been set. */
@property(nonatomic, readwrite) BOOL hasExpiry;

@property(nonatomic, readwrite, strong, null_resettable) String *idToken;
/** Test to see if @c idToken has been set. */
@property(nonatomic, readwrite) BOOL hasIdToken;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
