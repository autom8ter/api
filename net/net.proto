syntax="proto3";

package net;

message Network {
    string network =1 ;
    string address =2  ;
}

message ConnInfo {
    uint32 service_id = 1;
    Network network = 2;
}

message Dataset {
    string name =1;
    string scope=2;
    string definition=3;
}

message HostLocation {
    string city=1;
    string region_code=2;
    int64 area_code=3;
    double latitude=4;
    double longitude=5;
    string country_name=6;
    string country_code3=7;
    string postal_code =8;
    int64 dma_code =9;
}

message HostCertificateAttributes {
    string C =1;
    string CN=2;
    string L=3;
    string O=4;
    string ST=5;
    string ON=6;
}

message HostCertificate {
    string sig_alg=1;
    bool expired=2;
    int64 version =3;
    int64 serial =4;
    string issued=5;
    string expires=6;
    map<string,string> fingerprint=7;
    HostCertificateAttributes issuer=8;
    HostCertificateAttributes subject=9;
    HostCertificateAttributes pubkey=10;
    HostCertificateAttributes extensions=11;
}

message HostTLSExtEntry{
    int64   id    =1;
    string name =2;
}

message HostCipher {
    string version=1;
    int64 bits=2;
    string name=3;
}

message HostSSL {
    repeated string versions =1;
    repeated string chain =2;
    HostDHParams dhparams=3;
    repeated HostTLSExtEntry tlsext=4;
    HostCipher cipher=5;
    HostCertificate cert =6;

}

message HostDHParams {
    string prime=1;
    string public_key=2;
    int64 bits=3;
    string generator=4;
    string fingerprint=5;
}

message HostData {
    string product =1;
    repeated string hostnames=2;
    string version =3;
    string title =4;
    HostSSL ssl=5;
    bytes ip_str =6;
    string os=7;
    string org=8;
    string isp=9;
    repeated string cpe =10;
    string data =11;
    string asn=12;
    int64 port =13;
    string html=14;
    string banner=15;
    string link=16;
    string transport=17;
    repeated string domains=18;
    string timestamp=19;
    string device_type=20;
    HostLocation location =21;
    map<string, bytes> extra_data=22;
    map<string, bytes> opts =23;
}

message Exploit {
    bytes id=1;
    repeated int64 bid=2;
    repeated string cve=3;
    repeated string msb=4;
    repeated bytes osvdb=5;
    string description=6;
    string source=7;
    bytes author=8;
    string code =9;
    bytes platform=10;
    int64 port =11;
    string type =12;
    bool priviliged=13;
    string rank=14;
    string version=15;
}

//Filtered by ASN
//This stream provides a filtered, bandwidth-saving view of the Banners stream in case you are only interested in devices located in certain ASNs.
//
//Parameters
//asn: [String] Comma-separated list of ASNs; example "3303,32475"
message ASNRequest {
    repeated string asn=1;
}

message AlertRequest {
    string id =1;
}

message CountriesRequest {
    repeated string countries =1;
}

message PortsRequest {
    repeated string ports =1;
}

message DNSRequest {
    repeated string hosts =1;
}

message DNSResponse {
    map<string,string> ips =1;
}

message DNSReverseRequest {
    repeated string ips =1;
}
message DNSReverseResponse {
     map<string,string> hosts =1;
}

message DataSetsRequest {
   string name =1;
}

message DataSetsResponse {
    repeated Dataset datasets =1;
}