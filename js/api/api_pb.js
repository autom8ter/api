/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('./google/api/annotations_pb.js');
var common_common_pb = require('./common/common_pb.js');
goog.exportSymbol('proto.api.Auth', null, global);
goog.exportSymbol('proto.api.Call', null, global);
goog.exportSymbol('proto.api.CallBlast', null, global);
goog.exportSymbol('proto.api.Card', null, global);
goog.exportSymbol('proto.api.Email', null, global);
goog.exportSymbol('proto.api.EmailBlast', null, global);
goog.exportSymbol('proto.api.EmailBlastRequest', null, global);
goog.exportSymbol('proto.api.EmailRequest', null, global);
goog.exportSymbol('proto.api.FaxRequest', null, global);
goog.exportSymbol('proto.api.IDBody', null, global);
goog.exportSymbol('proto.api.IDStrings', null, global);
goog.exportSymbol('proto.api.Identity', null, global);
goog.exportSymbol('proto.api.JSONWebKeys', null, global);
goog.exportSymbol('proto.api.Jwks', null, global);
goog.exportSymbol('proto.api.NumberCapabilities', null, global);
goog.exportSymbol('proto.api.PhoneNumber', null, global);
goog.exportSymbol('proto.api.PhoneNumberResource', null, global);
goog.exportSymbol('proto.api.Plan', null, global);
goog.exportSymbol('proto.api.RenderRequest', null, global);
goog.exportSymbol('proto.api.ResourceRequest', null, global);
goog.exportSymbol('proto.api.Role', null, global);
goog.exportSymbol('proto.api.SMS', null, global);
goog.exportSymbol('proto.api.SMSBlast', null, global);
goog.exportSymbol('proto.api.Scope', null, global);
goog.exportSymbol('proto.api.SearchPhoneNumberRequest', null, global);
goog.exportSymbol('proto.api.SubscribeRequest', null, global);
goog.exportSymbol('proto.api.TokenQuery', null, global);
goog.exportSymbol('proto.api.URL', null, global);
goog.exportSymbol('proto.api.UnSubscribeRequest', null, global);
goog.exportSymbol('proto.api.User', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.FaxRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.FaxRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.FaxRequest.displayName = 'proto.api.FaxRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.FaxRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.FaxRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.FaxRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FaxRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    to: (f = msg.getTo()) && common_common_pb.String.toObject(includeInstance, f),
    from: (f = msg.getFrom()) && common_common_pb.String.toObject(includeInstance, f),
    mediaUrl: (f = msg.getMediaUrl()) && common_common_pb.String.toObject(includeInstance, f),
    quality: (f = msg.getQuality()) && common_common_pb.String.toObject(includeInstance, f),
    callback: (f = msg.getCallback()) && common_common_pb.String.toObject(includeInstance, f),
    storeMedia: jspb.Message.getFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.FaxRequest}
 */
proto.api.FaxRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.FaxRequest;
  return proto.api.FaxRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.FaxRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.FaxRequest}
 */
proto.api.FaxRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setMediaUrl(value);
      break;
    case 4:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setQuality(value);
      break;
    case 5:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setCallback(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStoreMedia(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.FaxRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.FaxRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.FaxRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.FaxRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getMediaUrl();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getQuality();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getCallback();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getStoreMedia();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional common.String to = 1;
 * @return {?proto.common.String}
 */
proto.api.FaxRequest.prototype.getTo = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.FaxRequest.prototype.setTo = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.FaxRequest.prototype.clearTo = function() {
  this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.FaxRequest.prototype.hasTo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String from = 2;
 * @return {?proto.common.String}
 */
proto.api.FaxRequest.prototype.getFrom = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.FaxRequest.prototype.setFrom = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.FaxRequest.prototype.clearFrom = function() {
  this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.FaxRequest.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String media_url = 3;
 * @return {?proto.common.String}
 */
proto.api.FaxRequest.prototype.getMediaUrl = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.FaxRequest.prototype.setMediaUrl = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.FaxRequest.prototype.clearMediaUrl = function() {
  this.setMediaUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.FaxRequest.prototype.hasMediaUrl = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.String quality = 4;
 * @return {?proto.common.String}
 */
proto.api.FaxRequest.prototype.getQuality = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 4));
};


/** @param {?proto.common.String|undefined} value */
proto.api.FaxRequest.prototype.setQuality = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.FaxRequest.prototype.clearQuality = function() {
  this.setQuality(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.FaxRequest.prototype.hasQuality = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional common.String callback = 5;
 * @return {?proto.common.String}
 */
proto.api.FaxRequest.prototype.getCallback = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 5));
};


/** @param {?proto.common.String|undefined} value */
proto.api.FaxRequest.prototype.setCallback = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.FaxRequest.prototype.clearCallback = function() {
  this.setCallback(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.FaxRequest.prototype.hasCallback = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool store_media = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.FaxRequest.prototype.getStoreMedia = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.api.FaxRequest.prototype.setStoreMedia = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ResourceRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ResourceRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ResourceRequest.displayName = 'proto.api.ResourceRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ResourceRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ResourceRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ResourceRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ResourceRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: (f = msg.getToken()) && common_common_pb.Token.toObject(includeInstance, f),
    method: jspb.Message.getFieldWithDefault(msg, 2, 0),
    domain: (f = msg.getDomain()) && common_common_pb.String.toObject(includeInstance, f),
    url: jspb.Message.getFieldWithDefault(msg, 4, 0),
    form: (f = msg.getForm()) && common_common_pb.StringMap.toObject(includeInstance, f),
    body: (f = msg.getBody()) && common_common_pb.Bytes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ResourceRequest}
 */
proto.api.ResourceRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ResourceRequest;
  return proto.api.ResourceRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ResourceRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ResourceRequest}
 */
proto.api.ResourceRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.Token;
      reader.readMessage(value,common_common_pb.Token.deserializeBinaryFromReader);
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {!proto.common.HTTPMethod} */ (reader.readEnum());
      msg.setMethod(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setDomain(value);
      break;
    case 4:
      var value = /** @type {!proto.api.URL} */ (reader.readEnum());
      msg.setUrl(value);
      break;
    case 5:
      var value = new common_common_pb.StringMap;
      reader.readMessage(value,common_common_pb.StringMap.deserializeBinaryFromReader);
      msg.setForm(value);
      break;
    case 6:
      var value = new common_common_pb.Bytes;
      reader.readMessage(value,common_common_pb.Bytes.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ResourceRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ResourceRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ResourceRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ResourceRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.Token.serializeBinaryToWriter
    );
  }
  f = message.getMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getDomain();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getUrl();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getForm();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_common_pb.StringMap.serializeBinaryToWriter
    );
  }
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_common_pb.Bytes.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.Token token = 1;
 * @return {?proto.common.Token}
 */
proto.api.ResourceRequest.prototype.getToken = function() {
  return /** @type{?proto.common.Token} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Token, 1));
};


/** @param {?proto.common.Token|undefined} value */
proto.api.ResourceRequest.prototype.setToken = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.ResourceRequest.prototype.clearToken = function() {
  this.setToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ResourceRequest.prototype.hasToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.HTTPMethod method = 2;
 * @return {!proto.common.HTTPMethod}
 */
proto.api.ResourceRequest.prototype.getMethod = function() {
  return /** @type {!proto.common.HTTPMethod} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.common.HTTPMethod} value */
proto.api.ResourceRequest.prototype.setMethod = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional common.String domain = 3;
 * @return {?proto.common.String}
 */
proto.api.ResourceRequest.prototype.getDomain = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.ResourceRequest.prototype.setDomain = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.ResourceRequest.prototype.clearDomain = function() {
  this.setDomain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ResourceRequest.prototype.hasDomain = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional URL url = 4;
 * @return {!proto.api.URL}
 */
proto.api.ResourceRequest.prototype.getUrl = function() {
  return /** @type {!proto.api.URL} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.api.URL} value */
proto.api.ResourceRequest.prototype.setUrl = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional common.StringMap form = 5;
 * @return {?proto.common.StringMap}
 */
proto.api.ResourceRequest.prototype.getForm = function() {
  return /** @type{?proto.common.StringMap} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringMap, 5));
};


/** @param {?proto.common.StringMap|undefined} value */
proto.api.ResourceRequest.prototype.setForm = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.ResourceRequest.prototype.clearForm = function() {
  this.setForm(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ResourceRequest.prototype.hasForm = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional common.Bytes body = 6;
 * @return {?proto.common.Bytes}
 */
proto.api.ResourceRequest.prototype.getBody = function() {
  return /** @type{?proto.common.Bytes} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Bytes, 6));
};


/** @param {?proto.common.Bytes|undefined} value */
proto.api.ResourceRequest.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.api.ResourceRequest.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ResourceRequest.prototype.hasBody = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.SubscribeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.SubscribeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.SubscribeRequest.displayName = 'proto.api.SubscribeRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.SubscribeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.SubscribeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.SubscribeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SubscribeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: (f = msg.getEmail()) && common_common_pb.String.toObject(includeInstance, f),
    plan: jspb.Message.getFieldWithDefault(msg, 2, 0),
    card: (f = msg.getCard()) && proto.api.Card.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.SubscribeRequest}
 */
proto.api.SubscribeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.SubscribeRequest;
  return proto.api.SubscribeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.SubscribeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.SubscribeRequest}
 */
proto.api.SubscribeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {!proto.api.Plan} */ (reader.readEnum());
      msg.setPlan(value);
      break;
    case 3:
      var value = new proto.api.Card;
      reader.readMessage(value,proto.api.Card.deserializeBinaryFromReader);
      msg.setCard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.SubscribeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.SubscribeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.SubscribeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SubscribeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getPlan();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getCard();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.Card.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String email = 1;
 * @return {?proto.common.String}
 */
proto.api.SubscribeRequest.prototype.getEmail = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.SubscribeRequest.prototype.setEmail = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.SubscribeRequest.prototype.clearEmail = function() {
  this.setEmail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SubscribeRequest.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Plan plan = 2;
 * @return {!proto.api.Plan}
 */
proto.api.SubscribeRequest.prototype.getPlan = function() {
  return /** @type {!proto.api.Plan} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.api.Plan} value */
proto.api.SubscribeRequest.prototype.setPlan = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Card card = 3;
 * @return {?proto.api.Card}
 */
proto.api.SubscribeRequest.prototype.getCard = function() {
  return /** @type{?proto.api.Card} */ (
    jspb.Message.getWrapperField(this, proto.api.Card, 3));
};


/** @param {?proto.api.Card|undefined} value */
proto.api.SubscribeRequest.prototype.setCard = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.SubscribeRequest.prototype.clearCard = function() {
  this.setCard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SubscribeRequest.prototype.hasCard = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.UnSubscribeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.UnSubscribeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.UnSubscribeRequest.displayName = 'proto.api.UnSubscribeRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.UnSubscribeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.UnSubscribeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.UnSubscribeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.UnSubscribeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: (f = msg.getEmail()) && common_common_pb.String.toObject(includeInstance, f),
    plan: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.UnSubscribeRequest}
 */
proto.api.UnSubscribeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.UnSubscribeRequest;
  return proto.api.UnSubscribeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.UnSubscribeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.UnSubscribeRequest}
 */
proto.api.UnSubscribeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {!proto.api.Plan} */ (reader.readEnum());
      msg.setPlan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.UnSubscribeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.UnSubscribeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.UnSubscribeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.UnSubscribeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getPlan();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional common.String email = 1;
 * @return {?proto.common.String}
 */
proto.api.UnSubscribeRequest.prototype.getEmail = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.UnSubscribeRequest.prototype.setEmail = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.UnSubscribeRequest.prototype.clearEmail = function() {
  this.setEmail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.UnSubscribeRequest.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Plan plan = 2;
 * @return {!proto.api.Plan}
 */
proto.api.UnSubscribeRequest.prototype.getPlan = function() {
  return /** @type {!proto.api.Plan} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.api.Plan} value */
proto.api.UnSubscribeRequest.prototype.setPlan = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Card = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Card, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Card.displayName = 'proto.api.Card';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Card.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Card.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Card} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Card.toObject = function(includeInstance, msg) {
  var f, obj = {
    number: (f = msg.getNumber()) && common_common_pb.String.toObject(includeInstance, f),
    expMonth: (f = msg.getExpMonth()) && common_common_pb.String.toObject(includeInstance, f),
    expYear: (f = msg.getExpYear()) && common_common_pb.String.toObject(includeInstance, f),
    cvc: (f = msg.getCvc()) && common_common_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Card}
 */
proto.api.Card.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Card;
  return proto.api.Card.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Card} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Card}
 */
proto.api.Card.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setNumber(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setExpMonth(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setExpYear(value);
      break;
    case 4:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setCvc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Card.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Card.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Card} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Card.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumber();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExpMonth();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExpYear();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getCvc();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String number = 1;
 * @return {?proto.common.String}
 */
proto.api.Card.prototype.getNumber = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Card.prototype.setNumber = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.Card.prototype.clearNumber = function() {
  this.setNumber(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Card.prototype.hasNumber = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String exp_month = 2;
 * @return {?proto.common.String}
 */
proto.api.Card.prototype.getExpMonth = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Card.prototype.setExpMonth = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Card.prototype.clearExpMonth = function() {
  this.setExpMonth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Card.prototype.hasExpMonth = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String exp_year = 3;
 * @return {?proto.common.String}
 */
proto.api.Card.prototype.getExpYear = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Card.prototype.setExpYear = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.Card.prototype.clearExpYear = function() {
  this.setExpYear(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Card.prototype.hasExpYear = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.String cvc = 4;
 * @return {?proto.common.String}
 */
proto.api.Card.prototype.getCvc = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 4));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Card.prototype.setCvc = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.Card.prototype.clearCvc = function() {
  this.setCvc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Card.prototype.hasCvc = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.SMS = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.SMS, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.SMS.displayName = 'proto.api.SMS';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.SMS.prototype.toObject = function(opt_includeInstance) {
  return proto.api.SMS.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.SMS} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SMS.toObject = function(includeInstance, msg) {
  var f, obj = {
    service: (f = msg.getService()) && common_common_pb.String.toObject(includeInstance, f),
    to: (f = msg.getTo()) && common_common_pb.String.toObject(includeInstance, f),
    message: (f = msg.getMessage()) && common_common_pb.String.toObject(includeInstance, f),
    mediaurl: (f = msg.getMediaurl()) && common_common_pb.String.toObject(includeInstance, f),
    callback: (f = msg.getCallback()) && common_common_pb.String.toObject(includeInstance, f),
    app: (f = msg.getApp()) && common_common_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.SMS}
 */
proto.api.SMS.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.SMS;
  return proto.api.SMS.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.SMS} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.SMS}
 */
proto.api.SMS.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setService(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 4:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setMediaurl(value);
      break;
    case 5:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setCallback(value);
      break;
    case 6:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setApp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.SMS.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.SMS.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.SMS} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SMS.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getService();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getMediaurl();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getCallback();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getApp();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String service = 1;
 * @return {?proto.common.String}
 */
proto.api.SMS.prototype.getService = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.SMS.prototype.setService = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.SMS.prototype.clearService = function() {
  this.setService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SMS.prototype.hasService = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String to = 2;
 * @return {?proto.common.String}
 */
proto.api.SMS.prototype.getTo = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.SMS.prototype.setTo = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.SMS.prototype.clearTo = function() {
  this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SMS.prototype.hasTo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String message = 3;
 * @return {?proto.common.String}
 */
proto.api.SMS.prototype.getMessage = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.SMS.prototype.setMessage = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.SMS.prototype.clearMessage = function() {
  this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SMS.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.String mediaURL = 4;
 * @return {?proto.common.String}
 */
proto.api.SMS.prototype.getMediaurl = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 4));
};


/** @param {?proto.common.String|undefined} value */
proto.api.SMS.prototype.setMediaurl = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.SMS.prototype.clearMediaurl = function() {
  this.setMediaurl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SMS.prototype.hasMediaurl = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional common.String callback = 5;
 * @return {?proto.common.String}
 */
proto.api.SMS.prototype.getCallback = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 5));
};


/** @param {?proto.common.String|undefined} value */
proto.api.SMS.prototype.setCallback = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.SMS.prototype.clearCallback = function() {
  this.setCallback(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SMS.prototype.hasCallback = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional common.String app = 6;
 * @return {?proto.common.String}
 */
proto.api.SMS.prototype.getApp = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 6));
};


/** @param {?proto.common.String|undefined} value */
proto.api.SMS.prototype.setApp = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.api.SMS.prototype.clearApp = function() {
  this.setApp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SMS.prototype.hasApp = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.SMSBlast = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.SMSBlast, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.SMSBlast.displayName = 'proto.api.SMSBlast';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.SMSBlast.prototype.toObject = function(opt_includeInstance) {
  return proto.api.SMSBlast.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.SMSBlast} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SMSBlast.toObject = function(includeInstance, msg) {
  var f, obj = {
    service: (f = msg.getService()) && common_common_pb.String.toObject(includeInstance, f),
    to: (f = msg.getTo()) && common_common_pb.StringArray.toObject(includeInstance, f),
    message: (f = msg.getMessage()) && common_common_pb.String.toObject(includeInstance, f),
    mediaurl: (f = msg.getMediaurl()) && common_common_pb.String.toObject(includeInstance, f),
    callback: (f = msg.getCallback()) && common_common_pb.String.toObject(includeInstance, f),
    app: (f = msg.getApp()) && common_common_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.SMSBlast}
 */
proto.api.SMSBlast.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.SMSBlast;
  return proto.api.SMSBlast.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.SMSBlast} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.SMSBlast}
 */
proto.api.SMSBlast.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setService(value);
      break;
    case 2:
      var value = new common_common_pb.StringArray;
      reader.readMessage(value,common_common_pb.StringArray.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setMessage(value);
      break;
    case 4:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setMediaurl(value);
      break;
    case 5:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setCallback(value);
      break;
    case 6:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setApp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.SMSBlast.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.SMSBlast.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.SMSBlast} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SMSBlast.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getService();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.StringArray.serializeBinaryToWriter
    );
  }
  f = message.getMessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getMediaurl();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getCallback();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getApp();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String service = 1;
 * @return {?proto.common.String}
 */
proto.api.SMSBlast.prototype.getService = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.SMSBlast.prototype.setService = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.SMSBlast.prototype.clearService = function() {
  this.setService(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SMSBlast.prototype.hasService = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.StringArray to = 2;
 * @return {?proto.common.StringArray}
 */
proto.api.SMSBlast.prototype.getTo = function() {
  return /** @type{?proto.common.StringArray} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringArray, 2));
};


/** @param {?proto.common.StringArray|undefined} value */
proto.api.SMSBlast.prototype.setTo = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.SMSBlast.prototype.clearTo = function() {
  this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SMSBlast.prototype.hasTo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String message = 3;
 * @return {?proto.common.String}
 */
proto.api.SMSBlast.prototype.getMessage = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.SMSBlast.prototype.setMessage = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.SMSBlast.prototype.clearMessage = function() {
  this.setMessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SMSBlast.prototype.hasMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.String mediaURL = 4;
 * @return {?proto.common.String}
 */
proto.api.SMSBlast.prototype.getMediaurl = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 4));
};


/** @param {?proto.common.String|undefined} value */
proto.api.SMSBlast.prototype.setMediaurl = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.SMSBlast.prototype.clearMediaurl = function() {
  this.setMediaurl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SMSBlast.prototype.hasMediaurl = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional common.String callback = 5;
 * @return {?proto.common.String}
 */
proto.api.SMSBlast.prototype.getCallback = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 5));
};


/** @param {?proto.common.String|undefined} value */
proto.api.SMSBlast.prototype.setCallback = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.SMSBlast.prototype.clearCallback = function() {
  this.setCallback(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SMSBlast.prototype.hasCallback = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional common.String app = 6;
 * @return {?proto.common.String}
 */
proto.api.SMSBlast.prototype.getApp = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 6));
};


/** @param {?proto.common.String|undefined} value */
proto.api.SMSBlast.prototype.setApp = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.api.SMSBlast.prototype.clearApp = function() {
  this.setApp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SMSBlast.prototype.hasApp = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.EmailRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.EmailRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.EmailRequest.displayName = 'proto.api.EmailRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.EmailRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.EmailRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.EmailRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.EmailRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromName: (f = msg.getFromName()) && common_common_pb.String.toObject(includeInstance, f),
    fromEmail: (f = msg.getFromEmail()) && common_common_pb.String.toObject(includeInstance, f),
    email: (f = msg.getEmail()) && proto.api.Email.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.EmailRequest}
 */
proto.api.EmailRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.EmailRequest;
  return proto.api.EmailRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.EmailRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.EmailRequest}
 */
proto.api.EmailRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setFromName(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setFromEmail(value);
      break;
    case 3:
      var value = new proto.api.Email;
      reader.readMessage(value,proto.api.Email.deserializeBinaryFromReader);
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.EmailRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.EmailRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.EmailRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.EmailRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getFromEmail();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getEmail();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.Email.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String from_name = 1;
 * @return {?proto.common.String}
 */
proto.api.EmailRequest.prototype.getFromName = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.EmailRequest.prototype.setFromName = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.EmailRequest.prototype.clearFromName = function() {
  this.setFromName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.EmailRequest.prototype.hasFromName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String from_email = 2;
 * @return {?proto.common.String}
 */
proto.api.EmailRequest.prototype.getFromEmail = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.EmailRequest.prototype.setFromEmail = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.EmailRequest.prototype.clearFromEmail = function() {
  this.setFromEmail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.EmailRequest.prototype.hasFromEmail = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Email email = 3;
 * @return {?proto.api.Email}
 */
proto.api.EmailRequest.prototype.getEmail = function() {
  return /** @type{?proto.api.Email} */ (
    jspb.Message.getWrapperField(this, proto.api.Email, 3));
};


/** @param {?proto.api.Email|undefined} value */
proto.api.EmailRequest.prototype.setEmail = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.EmailRequest.prototype.clearEmail = function() {
  this.setEmail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.EmailRequest.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.EmailBlastRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.EmailBlastRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.EmailBlastRequest.displayName = 'proto.api.EmailBlastRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.EmailBlastRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.EmailBlastRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.EmailBlastRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.EmailBlastRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromName: (f = msg.getFromName()) && common_common_pb.String.toObject(includeInstance, f),
    fromEmail: (f = msg.getFromEmail()) && common_common_pb.String.toObject(includeInstance, f),
    blast: (f = msg.getBlast()) && proto.api.EmailBlast.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.EmailBlastRequest}
 */
proto.api.EmailBlastRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.EmailBlastRequest;
  return proto.api.EmailBlastRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.EmailBlastRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.EmailBlastRequest}
 */
proto.api.EmailBlastRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setFromName(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setFromEmail(value);
      break;
    case 3:
      var value = new proto.api.EmailBlast;
      reader.readMessage(value,proto.api.EmailBlast.deserializeBinaryFromReader);
      msg.setBlast(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.EmailBlastRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.EmailBlastRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.EmailBlastRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.EmailBlastRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getFromEmail();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getBlast();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.EmailBlast.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String from_name = 1;
 * @return {?proto.common.String}
 */
proto.api.EmailBlastRequest.prototype.getFromName = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.EmailBlastRequest.prototype.setFromName = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.EmailBlastRequest.prototype.clearFromName = function() {
  this.setFromName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.EmailBlastRequest.prototype.hasFromName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String from_email = 2;
 * @return {?proto.common.String}
 */
proto.api.EmailBlastRequest.prototype.getFromEmail = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.EmailBlastRequest.prototype.setFromEmail = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.EmailBlastRequest.prototype.clearFromEmail = function() {
  this.setFromEmail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.EmailBlastRequest.prototype.hasFromEmail = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional EmailBlast blast = 3;
 * @return {?proto.api.EmailBlast}
 */
proto.api.EmailBlastRequest.prototype.getBlast = function() {
  return /** @type{?proto.api.EmailBlast} */ (
    jspb.Message.getWrapperField(this, proto.api.EmailBlast, 3));
};


/** @param {?proto.api.EmailBlast|undefined} value */
proto.api.EmailBlastRequest.prototype.setBlast = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.EmailBlastRequest.prototype.clearBlast = function() {
  this.setBlast(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.EmailBlastRequest.prototype.hasBlast = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.EmailBlast = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.EmailBlast, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.EmailBlast.displayName = 'proto.api.EmailBlast';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.EmailBlast.prototype.toObject = function(opt_includeInstance) {
  return proto.api.EmailBlast.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.EmailBlast} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.EmailBlast.toObject = function(includeInstance, msg) {
  var f, obj = {
    nameAddress: (f = msg.getNameAddress()) && common_common_pb.StringMap.toObject(includeInstance, f),
    subject: (f = msg.getSubject()) && common_common_pb.String.toObject(includeInstance, f),
    plain: (f = msg.getPlain()) && common_common_pb.String.toObject(includeInstance, f),
    html: (f = msg.getHtml()) && common_common_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.EmailBlast}
 */
proto.api.EmailBlast.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.EmailBlast;
  return proto.api.EmailBlast.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.EmailBlast} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.EmailBlast}
 */
proto.api.EmailBlast.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.StringMap;
      reader.readMessage(value,common_common_pb.StringMap.deserializeBinaryFromReader);
      msg.setNameAddress(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setSubject(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setPlain(value);
      break;
    case 4:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setHtml(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.EmailBlast.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.EmailBlast.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.EmailBlast} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.EmailBlast.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNameAddress();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.StringMap.serializeBinaryToWriter
    );
  }
  f = message.getSubject();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getPlain();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getHtml();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.StringMap name_address = 1;
 * @return {?proto.common.StringMap}
 */
proto.api.EmailBlast.prototype.getNameAddress = function() {
  return /** @type{?proto.common.StringMap} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringMap, 1));
};


/** @param {?proto.common.StringMap|undefined} value */
proto.api.EmailBlast.prototype.setNameAddress = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.EmailBlast.prototype.clearNameAddress = function() {
  this.setNameAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.EmailBlast.prototype.hasNameAddress = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String subject = 2;
 * @return {?proto.common.String}
 */
proto.api.EmailBlast.prototype.getSubject = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.EmailBlast.prototype.setSubject = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.EmailBlast.prototype.clearSubject = function() {
  this.setSubject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.EmailBlast.prototype.hasSubject = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String plain = 3;
 * @return {?proto.common.String}
 */
proto.api.EmailBlast.prototype.getPlain = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.EmailBlast.prototype.setPlain = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.EmailBlast.prototype.clearPlain = function() {
  this.setPlain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.EmailBlast.prototype.hasPlain = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.String html = 4;
 * @return {?proto.common.String}
 */
proto.api.EmailBlast.prototype.getHtml = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 4));
};


/** @param {?proto.common.String|undefined} value */
proto.api.EmailBlast.prototype.setHtml = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.EmailBlast.prototype.clearHtml = function() {
  this.setHtml(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.EmailBlast.prototype.hasHtml = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Email = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Email, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Email.displayName = 'proto.api.Email';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Email.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Email.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Email} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Email.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = msg.getName()) && common_common_pb.String.toObject(includeInstance, f),
    address: (f = msg.getAddress()) && common_common_pb.String.toObject(includeInstance, f),
    subject: (f = msg.getSubject()) && common_common_pb.String.toObject(includeInstance, f),
    plain: (f = msg.getPlain()) && common_common_pb.String.toObject(includeInstance, f),
    html: (f = msg.getHtml()) && common_common_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Email}
 */
proto.api.Email.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Email;
  return proto.api.Email.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Email} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Email}
 */
proto.api.Email.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setSubject(value);
      break;
    case 4:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setPlain(value);
      break;
    case 5:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setHtml(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Email.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Email.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Email} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Email.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getSubject();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getPlain();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getHtml();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String name = 1;
 * @return {?proto.common.String}
 */
proto.api.Email.prototype.getName = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Email.prototype.setName = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.Email.prototype.clearName = function() {
  this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Email.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String address = 2;
 * @return {?proto.common.String}
 */
proto.api.Email.prototype.getAddress = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Email.prototype.setAddress = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Email.prototype.clearAddress = function() {
  this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Email.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String subject = 3;
 * @return {?proto.common.String}
 */
proto.api.Email.prototype.getSubject = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Email.prototype.setSubject = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.Email.prototype.clearSubject = function() {
  this.setSubject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Email.prototype.hasSubject = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.String plain = 4;
 * @return {?proto.common.String}
 */
proto.api.Email.prototype.getPlain = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 4));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Email.prototype.setPlain = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.Email.prototype.clearPlain = function() {
  this.setPlain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Email.prototype.hasPlain = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional common.String html = 5;
 * @return {?proto.common.String}
 */
proto.api.Email.prototype.getHtml = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 5));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Email.prototype.setHtml = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.Email.prototype.clearHtml = function() {
  this.setHtml(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Email.prototype.hasHtml = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Call = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Call, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Call.displayName = 'proto.api.Call';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Call.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Call.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Call} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Call.toObject = function(includeInstance, msg) {
  var f, obj = {
    from: (f = msg.getFrom()) && common_common_pb.String.toObject(includeInstance, f),
    to: (f = msg.getTo()) && common_common_pb.String.toObject(includeInstance, f),
    app: (f = msg.getApp()) && common_common_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Call}
 */
proto.api.Call.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Call;
  return proto.api.Call.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Call} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Call}
 */
proto.api.Call.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setApp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Call.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Call.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Call} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Call.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getApp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String from = 1;
 * @return {?proto.common.String}
 */
proto.api.Call.prototype.getFrom = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Call.prototype.setFrom = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.Call.prototype.clearFrom = function() {
  this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Call.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String to = 2;
 * @return {?proto.common.String}
 */
proto.api.Call.prototype.getTo = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Call.prototype.setTo = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Call.prototype.clearTo = function() {
  this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Call.prototype.hasTo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String app = 3;
 * @return {?proto.common.String}
 */
proto.api.Call.prototype.getApp = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Call.prototype.setApp = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.Call.prototype.clearApp = function() {
  this.setApp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Call.prototype.hasApp = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.CallBlast = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.CallBlast, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.CallBlast.displayName = 'proto.api.CallBlast';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.CallBlast.prototype.toObject = function(opt_includeInstance) {
  return proto.api.CallBlast.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.CallBlast} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.CallBlast.toObject = function(includeInstance, msg) {
  var f, obj = {
    from: (f = msg.getFrom()) && common_common_pb.String.toObject(includeInstance, f),
    to: (f = msg.getTo()) && common_common_pb.StringArray.toObject(includeInstance, f),
    app: (f = msg.getApp()) && common_common_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.CallBlast}
 */
proto.api.CallBlast.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.CallBlast;
  return proto.api.CallBlast.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.CallBlast} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.CallBlast}
 */
proto.api.CallBlast.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setFrom(value);
      break;
    case 2:
      var value = new common_common_pb.StringArray;
      reader.readMessage(value,common_common_pb.StringArray.deserializeBinaryFromReader);
      msg.setTo(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setApp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.CallBlast.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.CallBlast.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.CallBlast} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.CallBlast.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrom();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getTo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.StringArray.serializeBinaryToWriter
    );
  }
  f = message.getApp();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String from = 1;
 * @return {?proto.common.String}
 */
proto.api.CallBlast.prototype.getFrom = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.CallBlast.prototype.setFrom = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.CallBlast.prototype.clearFrom = function() {
  this.setFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.CallBlast.prototype.hasFrom = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.StringArray to = 2;
 * @return {?proto.common.StringArray}
 */
proto.api.CallBlast.prototype.getTo = function() {
  return /** @type{?proto.common.StringArray} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringArray, 2));
};


/** @param {?proto.common.StringArray|undefined} value */
proto.api.CallBlast.prototype.setTo = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.CallBlast.prototype.clearTo = function() {
  this.setTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.CallBlast.prototype.hasTo = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String app = 3;
 * @return {?proto.common.String}
 */
proto.api.CallBlast.prototype.getApp = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.CallBlast.prototype.setApp = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.CallBlast.prototype.clearApp = function() {
  this.setApp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.CallBlast.prototype.hasApp = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.User.repeatedFields_, null);
};
goog.inherits(proto.api.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.User.displayName = 'proto.api.User';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.User.repeatedFields_ = [22];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.User.prototype.toObject = function(opt_includeInstance) {
  return proto.api.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = msg.getUserId()) && common_common_pb.String.toObject(includeInstance, f),
    name: (f = msg.getName()) && common_common_pb.String.toObject(includeInstance, f),
    givenName: (f = msg.getGivenName()) && common_common_pb.String.toObject(includeInstance, f),
    familyName: (f = msg.getFamilyName()) && common_common_pb.String.toObject(includeInstance, f),
    gender: (f = msg.getGender()) && common_common_pb.String.toObject(includeInstance, f),
    birthdate: (f = msg.getBirthdate()) && common_common_pb.String.toObject(includeInstance, f),
    email: (f = msg.getEmail()) && common_common_pb.String.toObject(includeInstance, f),
    phoneNumber: (f = msg.getPhoneNumber()) && common_common_pb.String.toObject(includeInstance, f),
    picture: (f = msg.getPicture()) && common_common_pb.String.toObject(includeInstance, f),
    userMetadata: (f = msg.getUserMetadata()) && common_common_pb.StringMap.toObject(includeInstance, f),
    appMetadata: (f = msg.getAppMetadata()) && common_common_pb.StringMap.toObject(includeInstance, f),
    lastIp: (f = msg.getLastIp()) && common_common_pb.String.toObject(includeInstance, f),
    blocked: jspb.Message.getFieldWithDefault(msg, 13, false),
    nickname: (f = msg.getNickname()) && common_common_pb.String.toObject(includeInstance, f),
    multifactor: (f = msg.getMultifactor()) && common_common_pb.StringArray.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && common_common_pb.String.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && common_common_pb.String.toObject(includeInstance, f),
    phoneVerified: jspb.Message.getFieldWithDefault(msg, 19, false),
    emailVerified: jspb.Message.getFieldWithDefault(msg, 20, false),
    password: (f = msg.getPassword()) && common_common_pb.String.toObject(includeInstance, f),
    identitiesList: jspb.Message.toObjectList(msg.getIdentitiesList(),
    proto.api.Identity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.User}
 */
proto.api.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.User;
  return proto.api.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.User}
 */
proto.api.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setUserId(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setGivenName(value);
      break;
    case 4:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setFamilyName(value);
      break;
    case 5:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setGender(value);
      break;
    case 6:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setBirthdate(value);
      break;
    case 7:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setEmail(value);
      break;
    case 8:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setPhoneNumber(value);
      break;
    case 9:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setPicture(value);
      break;
    case 10:
      var value = new common_common_pb.StringMap;
      reader.readMessage(value,common_common_pb.StringMap.deserializeBinaryFromReader);
      msg.setUserMetadata(value);
      break;
    case 11:
      var value = new common_common_pb.StringMap;
      reader.readMessage(value,common_common_pb.StringMap.deserializeBinaryFromReader);
      msg.setAppMetadata(value);
      break;
    case 12:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setLastIp(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlocked(value);
      break;
    case 14:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setNickname(value);
      break;
    case 15:
      var value = new common_common_pb.StringArray;
      reader.readMessage(value,common_common_pb.StringArray.deserializeBinaryFromReader);
      msg.setMultifactor(value);
      break;
    case 17:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 18:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 19:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPhoneVerified(value);
      break;
    case 20:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setEmailVerified(value);
      break;
    case 21:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setPassword(value);
      break;
    case 22:
      var value = new proto.api.Identity;
      reader.readMessage(value,proto.api.Identity.deserializeBinaryFromReader);
      msg.addIdentities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getGivenName();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getFamilyName();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getGender();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getBirthdate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getEmail();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getPhoneNumber();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getPicture();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getUserMetadata();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      common_common_pb.StringMap.serializeBinaryToWriter
    );
  }
  f = message.getAppMetadata();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      common_common_pb.StringMap.serializeBinaryToWriter
    );
  }
  f = message.getLastIp();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getBlocked();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getNickname();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getMultifactor();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      common_common_pb.StringArray.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getPhoneVerified();
  if (f) {
    writer.writeBool(
      19,
      f
    );
  }
  f = message.getEmailVerified();
  if (f) {
    writer.writeBool(
      20,
      f
    );
  }
  f = message.getPassword();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getIdentitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      proto.api.Identity.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String user_id = 1;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getUserId = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setUserId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.User.prototype.clearUserId = function() {
  this.setUserId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String name = 2;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getName = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setName = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.User.prototype.clearName = function() {
  this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String given_name = 3;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getGivenName = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setGivenName = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.User.prototype.clearGivenName = function() {
  this.setGivenName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasGivenName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.String family_name = 4;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getFamilyName = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 4));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setFamilyName = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.User.prototype.clearFamilyName = function() {
  this.setFamilyName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasFamilyName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional common.String gender = 5;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getGender = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 5));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setGender = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.User.prototype.clearGender = function() {
  this.setGender(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasGender = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional common.String birthdate = 6;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getBirthdate = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 6));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setBirthdate = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.api.User.prototype.clearBirthdate = function() {
  this.setBirthdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasBirthdate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional common.String email = 7;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getEmail = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 7));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setEmail = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.api.User.prototype.clearEmail = function() {
  this.setEmail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional common.String phone_number = 8;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getPhoneNumber = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 8));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setPhoneNumber = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.api.User.prototype.clearPhoneNumber = function() {
  this.setPhoneNumber(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasPhoneNumber = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional common.String picture = 9;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getPicture = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 9));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setPicture = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.api.User.prototype.clearPicture = function() {
  this.setPicture(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasPicture = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional common.StringMap user_metadata = 10;
 * @return {?proto.common.StringMap}
 */
proto.api.User.prototype.getUserMetadata = function() {
  return /** @type{?proto.common.StringMap} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringMap, 10));
};


/** @param {?proto.common.StringMap|undefined} value */
proto.api.User.prototype.setUserMetadata = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.api.User.prototype.clearUserMetadata = function() {
  this.setUserMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasUserMetadata = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional common.StringMap app_metadata = 11;
 * @return {?proto.common.StringMap}
 */
proto.api.User.prototype.getAppMetadata = function() {
  return /** @type{?proto.common.StringMap} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringMap, 11));
};


/** @param {?proto.common.StringMap|undefined} value */
proto.api.User.prototype.setAppMetadata = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.api.User.prototype.clearAppMetadata = function() {
  this.setAppMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasAppMetadata = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional common.String last_ip = 12;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getLastIp = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 12));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setLastIp = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.api.User.prototype.clearLastIp = function() {
  this.setLastIp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasLastIp = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional bool blocked = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.User.prototype.getBlocked = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.api.User.prototype.setBlocked = function(value) {
  jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional common.String nickname = 14;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getNickname = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 14));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setNickname = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.api.User.prototype.clearNickname = function() {
  this.setNickname(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasNickname = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional common.StringArray multifactor = 15;
 * @return {?proto.common.StringArray}
 */
proto.api.User.prototype.getMultifactor = function() {
  return /** @type{?proto.common.StringArray} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringArray, 15));
};


/** @param {?proto.common.StringArray|undefined} value */
proto.api.User.prototype.setMultifactor = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


proto.api.User.prototype.clearMultifactor = function() {
  this.setMultifactor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasMultifactor = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional common.String created_at = 17;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getCreatedAt = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 17));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setCreatedAt = function(value) {
  jspb.Message.setWrapperField(this, 17, value);
};


proto.api.User.prototype.clearCreatedAt = function() {
  this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional common.String updated_at = 18;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getUpdatedAt = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 18));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setUpdatedAt = function(value) {
  jspb.Message.setWrapperField(this, 18, value);
};


proto.api.User.prototype.clearUpdatedAt = function() {
  this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional bool phone_verified = 19;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.User.prototype.getPhoneVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 19, false));
};


/** @param {boolean} value */
proto.api.User.prototype.setPhoneVerified = function(value) {
  jspb.Message.setProto3BooleanField(this, 19, value);
};


/**
 * optional bool email_verified = 20;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.User.prototype.getEmailVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 20, false));
};


/** @param {boolean} value */
proto.api.User.prototype.setEmailVerified = function(value) {
  jspb.Message.setProto3BooleanField(this, 20, value);
};


/**
 * optional common.String password = 21;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getPassword = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 21));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setPassword = function(value) {
  jspb.Message.setWrapperField(this, 21, value);
};


proto.api.User.prototype.clearPassword = function() {
  this.setPassword(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * repeated Identity identities = 22;
 * @return {!Array<!proto.api.Identity>}
 */
proto.api.User.prototype.getIdentitiesList = function() {
  return /** @type{!Array<!proto.api.Identity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.Identity, 22));
};


/** @param {!Array<!proto.api.Identity>} value */
proto.api.User.prototype.setIdentitiesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.api.Identity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.Identity}
 */
proto.api.User.prototype.addIdentities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.api.Identity, opt_index);
};


proto.api.User.prototype.clearIdentitiesList = function() {
  this.setIdentitiesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Identity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Identity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Identity.displayName = 'proto.api.Identity';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Identity.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Identity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Identity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Identity.toObject = function(includeInstance, msg) {
  var f, obj = {
    connection: (f = msg.getConnection()) && common_common_pb.String.toObject(includeInstance, f),
    userId: (f = msg.getUserId()) && common_common_pb.String.toObject(includeInstance, f),
    provider: (f = msg.getProvider()) && common_common_pb.String.toObject(includeInstance, f),
    issocial: jspb.Message.getFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Identity}
 */
proto.api.Identity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Identity;
  return proto.api.Identity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Identity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Identity}
 */
proto.api.Identity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setConnection(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setUserId(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setProvider(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssocial(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Identity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Identity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Identity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Identity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnection();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getUserId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getProvider();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getIssocial();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional common.String connection = 1;
 * @return {?proto.common.String}
 */
proto.api.Identity.prototype.getConnection = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Identity.prototype.setConnection = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.Identity.prototype.clearConnection = function() {
  this.setConnection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Identity.prototype.hasConnection = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String user_id = 2;
 * @return {?proto.common.String}
 */
proto.api.Identity.prototype.getUserId = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Identity.prototype.setUserId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Identity.prototype.clearUserId = function() {
  this.setUserId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Identity.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String provider = 3;
 * @return {?proto.common.String}
 */
proto.api.Identity.prototype.getProvider = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Identity.prototype.setProvider = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.Identity.prototype.clearProvider = function() {
  this.setProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Identity.prototype.hasProvider = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool isSocial = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.Identity.prototype.getIssocial = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.api.Identity.prototype.setIssocial = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Auth = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.Auth.repeatedFields_, null);
};
goog.inherits(proto.api.Auth, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Auth.displayName = 'proto.api.Auth';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.Auth.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Auth.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Auth.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Auth} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Auth.toObject = function(includeInstance, msg) {
  var f, obj = {
    domain: (f = msg.getDomain()) && common_common_pb.String.toObject(includeInstance, f),
    clientId: (f = msg.getClientId()) && common_common_pb.String.toObject(includeInstance, f),
    clientSecret: (f = msg.getClientSecret()) && common_common_pb.String.toObject(includeInstance, f),
    redirect: (f = msg.getRedirect()) && common_common_pb.String.toObject(includeInstance, f),
    scopesList: jspb.Message.getRepeatedField(msg, 5)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Auth}
 */
proto.api.Auth.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Auth;
  return proto.api.Auth.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Auth} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Auth}
 */
proto.api.Auth.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setDomain(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setClientId(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setClientSecret(value);
      break;
    case 4:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setRedirect(value);
      break;
    case 5:
      var value = /** @type {!Array<!proto.api.Scope>} */ (reader.readPackedEnum());
      msg.setScopesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Auth.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Auth.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Auth} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Auth.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDomain();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getClientId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getClientSecret();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getRedirect();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getScopesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      5,
      f
    );
  }
};


/**
 * optional common.String domain = 1;
 * @return {?proto.common.String}
 */
proto.api.Auth.prototype.getDomain = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Auth.prototype.setDomain = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.Auth.prototype.clearDomain = function() {
  this.setDomain(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Auth.prototype.hasDomain = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String client_id = 2;
 * @return {?proto.common.String}
 */
proto.api.Auth.prototype.getClientId = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Auth.prototype.setClientId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Auth.prototype.clearClientId = function() {
  this.setClientId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Auth.prototype.hasClientId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String client_secret = 3;
 * @return {?proto.common.String}
 */
proto.api.Auth.prototype.getClientSecret = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Auth.prototype.setClientSecret = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.Auth.prototype.clearClientSecret = function() {
  this.setClientSecret(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Auth.prototype.hasClientSecret = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.String redirect = 4;
 * @return {?proto.common.String}
 */
proto.api.Auth.prototype.getRedirect = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 4));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Auth.prototype.setRedirect = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.Auth.prototype.clearRedirect = function() {
  this.setRedirect(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Auth.prototype.hasRedirect = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated Scope scopes = 5;
 * @return {!Array<!proto.api.Scope>}
 */
proto.api.Auth.prototype.getScopesList = function() {
  return /** @type {!Array<!proto.api.Scope>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<!proto.api.Scope>} value */
proto.api.Auth.prototype.setScopesList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.api.Scope} value
 * @param {number=} opt_index
 */
proto.api.Auth.prototype.addScopes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


proto.api.Auth.prototype.clearScopesList = function() {
  this.setScopesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.JSONWebKeys = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.JSONWebKeys, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.JSONWebKeys.displayName = 'proto.api.JSONWebKeys';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.JSONWebKeys.prototype.toObject = function(opt_includeInstance) {
  return proto.api.JSONWebKeys.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.JSONWebKeys} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.JSONWebKeys.toObject = function(includeInstance, msg) {
  var f, obj = {
    kty: (f = msg.getKty()) && common_common_pb.String.toObject(includeInstance, f),
    kid: (f = msg.getKid()) && common_common_pb.String.toObject(includeInstance, f),
    use: (f = msg.getUse()) && common_common_pb.String.toObject(includeInstance, f),
    n: (f = msg.getN()) && common_common_pb.String.toObject(includeInstance, f),
    e: (f = msg.getE()) && common_common_pb.String.toObject(includeInstance, f),
    x5c: (f = msg.getX5c()) && common_common_pb.StringArray.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.JSONWebKeys}
 */
proto.api.JSONWebKeys.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.JSONWebKeys;
  return proto.api.JSONWebKeys.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.JSONWebKeys} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.JSONWebKeys}
 */
proto.api.JSONWebKeys.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setKty(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setKid(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setUse(value);
      break;
    case 4:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setN(value);
      break;
    case 5:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setE(value);
      break;
    case 6:
      var value = new common_common_pb.StringArray;
      reader.readMessage(value,common_common_pb.StringArray.deserializeBinaryFromReader);
      msg.setX5c(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.JSONWebKeys.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.JSONWebKeys.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.JSONWebKeys} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.JSONWebKeys.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKty();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getKid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getUse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getN();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getE();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getX5c();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_common_pb.StringArray.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String kty = 1;
 * @return {?proto.common.String}
 */
proto.api.JSONWebKeys.prototype.getKty = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.JSONWebKeys.prototype.setKty = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.JSONWebKeys.prototype.clearKty = function() {
  this.setKty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.JSONWebKeys.prototype.hasKty = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String kid = 2;
 * @return {?proto.common.String}
 */
proto.api.JSONWebKeys.prototype.getKid = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.JSONWebKeys.prototype.setKid = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.JSONWebKeys.prototype.clearKid = function() {
  this.setKid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.JSONWebKeys.prototype.hasKid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String use = 3;
 * @return {?proto.common.String}
 */
proto.api.JSONWebKeys.prototype.getUse = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.JSONWebKeys.prototype.setUse = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.JSONWebKeys.prototype.clearUse = function() {
  this.setUse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.JSONWebKeys.prototype.hasUse = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.String n = 4;
 * @return {?proto.common.String}
 */
proto.api.JSONWebKeys.prototype.getN = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 4));
};


/** @param {?proto.common.String|undefined} value */
proto.api.JSONWebKeys.prototype.setN = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.JSONWebKeys.prototype.clearN = function() {
  this.setN(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.JSONWebKeys.prototype.hasN = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional common.String e = 5;
 * @return {?proto.common.String}
 */
proto.api.JSONWebKeys.prototype.getE = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 5));
};


/** @param {?proto.common.String|undefined} value */
proto.api.JSONWebKeys.prototype.setE = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.JSONWebKeys.prototype.clearE = function() {
  this.setE(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.JSONWebKeys.prototype.hasE = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional common.StringArray x5c = 6;
 * @return {?proto.common.StringArray}
 */
proto.api.JSONWebKeys.prototype.getX5c = function() {
  return /** @type{?proto.common.StringArray} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringArray, 6));
};


/** @param {?proto.common.StringArray|undefined} value */
proto.api.JSONWebKeys.prototype.setX5c = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.api.JSONWebKeys.prototype.clearX5c = function() {
  this.setX5c(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.JSONWebKeys.prototype.hasX5c = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Jwks = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.Jwks.repeatedFields_, null);
};
goog.inherits(proto.api.Jwks, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Jwks.displayName = 'proto.api.Jwks';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.Jwks.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Jwks.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Jwks.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Jwks} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Jwks.toObject = function(includeInstance, msg) {
  var f, obj = {
    keysList: jspb.Message.toObjectList(msg.getKeysList(),
    proto.api.JSONWebKeys.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Jwks}
 */
proto.api.Jwks.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Jwks;
  return proto.api.Jwks.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Jwks} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Jwks}
 */
proto.api.Jwks.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.JSONWebKeys;
      reader.readMessage(value,proto.api.JSONWebKeys.deserializeBinaryFromReader);
      msg.addKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Jwks.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Jwks.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Jwks} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Jwks.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.JSONWebKeys.serializeBinaryToWriter
    );
  }
};


/**
 * repeated JSONWebKeys keys = 1;
 * @return {!Array<!proto.api.JSONWebKeys>}
 */
proto.api.Jwks.prototype.getKeysList = function() {
  return /** @type{!Array<!proto.api.JSONWebKeys>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.JSONWebKeys, 1));
};


/** @param {!Array<!proto.api.JSONWebKeys>} value */
proto.api.Jwks.prototype.setKeysList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.JSONWebKeys=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.JSONWebKeys}
 */
proto.api.Jwks.prototype.addKeys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.JSONWebKeys, opt_index);
};


proto.api.Jwks.prototype.clearKeysList = function() {
  this.setKeysList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.RenderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.RenderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.RenderRequest.displayName = 'proto.api.RenderRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.RenderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.RenderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.RenderRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.RenderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: (f = msg.getName()) && common_common_pb.String.toObject(includeInstance, f),
    text: (f = msg.getText()) && common_common_pb.String.toObject(includeInstance, f),
    data: (f = msg.getData()) && common_common_pb.Bytes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.RenderRequest}
 */
proto.api.RenderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.RenderRequest;
  return proto.api.RenderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.RenderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.RenderRequest}
 */
proto.api.RenderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setText(value);
      break;
    case 3:
      var value = new common_common_pb.Bytes;
      reader.readMessage(value,common_common_pb.Bytes.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.RenderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.RenderRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.RenderRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.RenderRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getText();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.Bytes.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String name = 1;
 * @return {?proto.common.String}
 */
proto.api.RenderRequest.prototype.getName = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.RenderRequest.prototype.setName = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.RenderRequest.prototype.clearName = function() {
  this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.RenderRequest.prototype.hasName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String text = 2;
 * @return {?proto.common.String}
 */
proto.api.RenderRequest.prototype.getText = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.RenderRequest.prototype.setText = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.RenderRequest.prototype.clearText = function() {
  this.setText(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.RenderRequest.prototype.hasText = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.Bytes data = 3;
 * @return {?proto.common.Bytes}
 */
proto.api.RenderRequest.prototype.getData = function() {
  return /** @type{?proto.common.Bytes} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Bytes, 3));
};


/** @param {?proto.common.Bytes|undefined} value */
proto.api.RenderRequest.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.RenderRequest.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.RenderRequest.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.SearchPhoneNumberRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.SearchPhoneNumberRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.SearchPhoneNumberRequest.displayName = 'proto.api.SearchPhoneNumberRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.SearchPhoneNumberRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.SearchPhoneNumberRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.SearchPhoneNumberRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SearchPhoneNumberRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: (f = msg.getState()) && common_common_pb.String.toObject(includeInstance, f),
    capabilities: (f = msg.getCapabilities()) && proto.api.NumberCapabilities.toObject(includeInstance, f),
    totalResults: (f = msg.getTotalResults()) && common_common_pb.Int64.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.SearchPhoneNumberRequest}
 */
proto.api.SearchPhoneNumberRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.SearchPhoneNumberRequest;
  return proto.api.SearchPhoneNumberRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.SearchPhoneNumberRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.SearchPhoneNumberRequest}
 */
proto.api.SearchPhoneNumberRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    case 2:
      var value = new proto.api.NumberCapabilities;
      reader.readMessage(value,proto.api.NumberCapabilities.deserializeBinaryFromReader);
      msg.setCapabilities(value);
      break;
    case 3:
      var value = new common_common_pb.Int64;
      reader.readMessage(value,common_common_pb.Int64.deserializeBinaryFromReader);
      msg.setTotalResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.SearchPhoneNumberRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.SearchPhoneNumberRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.SearchPhoneNumberRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SearchPhoneNumberRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getCapabilities();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.api.NumberCapabilities.serializeBinaryToWriter
    );
  }
  f = message.getTotalResults();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.Int64.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String state = 1;
 * @return {?proto.common.String}
 */
proto.api.SearchPhoneNumberRequest.prototype.getState = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.SearchPhoneNumberRequest.prototype.setState = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.SearchPhoneNumberRequest.prototype.clearState = function() {
  this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SearchPhoneNumberRequest.prototype.hasState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional NumberCapabilities capabilities = 2;
 * @return {?proto.api.NumberCapabilities}
 */
proto.api.SearchPhoneNumberRequest.prototype.getCapabilities = function() {
  return /** @type{?proto.api.NumberCapabilities} */ (
    jspb.Message.getWrapperField(this, proto.api.NumberCapabilities, 2));
};


/** @param {?proto.api.NumberCapabilities|undefined} value */
proto.api.SearchPhoneNumberRequest.prototype.setCapabilities = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.SearchPhoneNumberRequest.prototype.clearCapabilities = function() {
  this.setCapabilities(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SearchPhoneNumberRequest.prototype.hasCapabilities = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.Int64 total_results = 3;
 * @return {?proto.common.Int64}
 */
proto.api.SearchPhoneNumberRequest.prototype.getTotalResults = function() {
  return /** @type{?proto.common.Int64} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Int64, 3));
};


/** @param {?proto.common.Int64|undefined} value */
proto.api.SearchPhoneNumberRequest.prototype.setTotalResults = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.SearchPhoneNumberRequest.prototype.clearTotalResults = function() {
  this.setTotalResults(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SearchPhoneNumberRequest.prototype.hasTotalResults = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.PhoneNumber = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.PhoneNumber, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.PhoneNumber.displayName = 'proto.api.PhoneNumber';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.PhoneNumber.prototype.toObject = function(opt_includeInstance) {
  return proto.api.PhoneNumber.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.PhoneNumber} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PhoneNumber.toObject = function(includeInstance, msg) {
  var f, obj = {
    friendlyName: (f = msg.getFriendlyName()) && common_common_pb.String.toObject(includeInstance, f),
    phoneNumber: (f = msg.getPhoneNumber()) && common_common_pb.String.toObject(includeInstance, f),
    region: (f = msg.getRegion()) && common_common_pb.String.toObject(includeInstance, f),
    capabilities: (f = msg.getCapabilities()) && proto.api.NumberCapabilities.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.PhoneNumber}
 */
proto.api.PhoneNumber.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.PhoneNumber;
  return proto.api.PhoneNumber.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.PhoneNumber} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.PhoneNumber}
 */
proto.api.PhoneNumber.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setFriendlyName(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setPhoneNumber(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setRegion(value);
      break;
    case 4:
      var value = new proto.api.NumberCapabilities;
      reader.readMessage(value,proto.api.NumberCapabilities.deserializeBinaryFromReader);
      msg.setCapabilities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.PhoneNumber.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.PhoneNumber.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.PhoneNumber} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PhoneNumber.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFriendlyName();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getPhoneNumber();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getRegion();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getCapabilities();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.api.NumberCapabilities.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String friendly_name = 1;
 * @return {?proto.common.String}
 */
proto.api.PhoneNumber.prototype.getFriendlyName = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.PhoneNumber.prototype.setFriendlyName = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.PhoneNumber.prototype.clearFriendlyName = function() {
  this.setFriendlyName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.PhoneNumber.prototype.hasFriendlyName = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String phone_number = 2;
 * @return {?proto.common.String}
 */
proto.api.PhoneNumber.prototype.getPhoneNumber = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.PhoneNumber.prototype.setPhoneNumber = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.PhoneNumber.prototype.clearPhoneNumber = function() {
  this.setPhoneNumber(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.PhoneNumber.prototype.hasPhoneNumber = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String region = 3;
 * @return {?proto.common.String}
 */
proto.api.PhoneNumber.prototype.getRegion = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.PhoneNumber.prototype.setRegion = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.PhoneNumber.prototype.clearRegion = function() {
  this.setRegion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.PhoneNumber.prototype.hasRegion = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional NumberCapabilities capabilities = 4;
 * @return {?proto.api.NumberCapabilities}
 */
proto.api.PhoneNumber.prototype.getCapabilities = function() {
  return /** @type{?proto.api.NumberCapabilities} */ (
    jspb.Message.getWrapperField(this, proto.api.NumberCapabilities, 4));
};


/** @param {?proto.api.NumberCapabilities|undefined} value */
proto.api.PhoneNumber.prototype.setCapabilities = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.PhoneNumber.prototype.clearCapabilities = function() {
  this.setCapabilities(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.PhoneNumber.prototype.hasCapabilities = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.NumberCapabilities = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.NumberCapabilities, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.NumberCapabilities.displayName = 'proto.api.NumberCapabilities';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.NumberCapabilities.prototype.toObject = function(opt_includeInstance) {
  return proto.api.NumberCapabilities.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.NumberCapabilities} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.NumberCapabilities.toObject = function(includeInstance, msg) {
  var f, obj = {
    voice: jspb.Message.getFieldWithDefault(msg, 1, false),
    sms: jspb.Message.getFieldWithDefault(msg, 2, false),
    mms: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.NumberCapabilities}
 */
proto.api.NumberCapabilities.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.NumberCapabilities;
  return proto.api.NumberCapabilities.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.NumberCapabilities} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.NumberCapabilities}
 */
proto.api.NumberCapabilities.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVoice(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSms(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setMms(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.NumberCapabilities.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.NumberCapabilities.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.NumberCapabilities} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.NumberCapabilities.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVoice();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getSms();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getMms();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional bool voice = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.NumberCapabilities.prototype.getVoice = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.api.NumberCapabilities.prototype.setVoice = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional bool sms = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.NumberCapabilities.prototype.getSms = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.api.NumberCapabilities.prototype.setSms = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool mms = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.api.NumberCapabilities.prototype.getMms = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.api.NumberCapabilities.prototype.setMms = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.PhoneNumberResource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.PhoneNumberResource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.PhoneNumberResource.displayName = 'proto.api.PhoneNumberResource';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.PhoneNumberResource.prototype.toObject = function(opt_includeInstance) {
  return proto.api.PhoneNumberResource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.PhoneNumberResource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PhoneNumberResource.toObject = function(includeInstance, msg) {
  var f, obj = {
    number: (f = msg.getNumber()) && proto.api.PhoneNumber.toObject(includeInstance, f),
    id: (f = msg.getId()) && common_common_pb.String.toObject(includeInstance, f),
    uri: (f = msg.getUri()) && common_common_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.PhoneNumberResource}
 */
proto.api.PhoneNumberResource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.PhoneNumberResource;
  return proto.api.PhoneNumberResource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.PhoneNumberResource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.PhoneNumberResource}
 */
proto.api.PhoneNumberResource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.PhoneNumber;
      reader.readMessage(value,proto.api.PhoneNumber.deserializeBinaryFromReader);
      msg.setNumber(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setUri(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.PhoneNumberResource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.PhoneNumberResource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.PhoneNumberResource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.PhoneNumberResource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumber();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.api.PhoneNumber.serializeBinaryToWriter
    );
  }
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getUri();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional PhoneNumber number = 1;
 * @return {?proto.api.PhoneNumber}
 */
proto.api.PhoneNumberResource.prototype.getNumber = function() {
  return /** @type{?proto.api.PhoneNumber} */ (
    jspb.Message.getWrapperField(this, proto.api.PhoneNumber, 1));
};


/** @param {?proto.api.PhoneNumber|undefined} value */
proto.api.PhoneNumberResource.prototype.setNumber = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.PhoneNumberResource.prototype.clearNumber = function() {
  this.setNumber(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.PhoneNumberResource.prototype.hasNumber = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String id = 2;
 * @return {?proto.common.String}
 */
proto.api.PhoneNumberResource.prototype.getId = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.PhoneNumberResource.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.PhoneNumberResource.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.PhoneNumberResource.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String uri = 3;
 * @return {?proto.common.String}
 */
proto.api.PhoneNumberResource.prototype.getUri = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.PhoneNumberResource.prototype.setUri = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.PhoneNumberResource.prototype.clearUri = function() {
  this.setUri(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.PhoneNumberResource.prototype.hasUri = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.TokenQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.TokenQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.TokenQuery.displayName = 'proto.api.TokenQuery';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.TokenQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.api.TokenQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.TokenQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.TokenQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: (f = msg.getToken()) && common_common_pb.Token.toObject(includeInstance, f),
    query: (f = msg.getQuery()) && common_common_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.TokenQuery}
 */
proto.api.TokenQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.TokenQuery;
  return proto.api.TokenQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.TokenQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.TokenQuery}
 */
proto.api.TokenQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.Token;
      reader.readMessage(value,common_common_pb.Token.deserializeBinaryFromReader);
      msg.setToken(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.TokenQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.TokenQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.TokenQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.TokenQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.Token.serializeBinaryToWriter
    );
  }
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.Token token = 1;
 * @return {?proto.common.Token}
 */
proto.api.TokenQuery.prototype.getToken = function() {
  return /** @type{?proto.common.Token} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Token, 1));
};


/** @param {?proto.common.Token|undefined} value */
proto.api.TokenQuery.prototype.setToken = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.TokenQuery.prototype.clearToken = function() {
  this.setToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.TokenQuery.prototype.hasToken = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String query = 2;
 * @return {?proto.common.String}
 */
proto.api.TokenQuery.prototype.getQuery = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.TokenQuery.prototype.setQuery = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.TokenQuery.prototype.clearQuery = function() {
  this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.TokenQuery.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.IDBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.IDBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.IDBody.displayName = 'proto.api.IDBody';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.IDBody.prototype.toObject = function(opt_includeInstance) {
  return proto.api.IDBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.IDBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.IDBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && common_common_pb.Identifier.toObject(includeInstance, f),
    body: (f = msg.getBody()) && common_common_pb.Bytes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.IDBody}
 */
proto.api.IDBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.IDBody;
  return proto.api.IDBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.IDBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.IDBody}
 */
proto.api.IDBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.Identifier;
      reader.readMessage(value,common_common_pb.Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new common_common_pb.Bytes;
      reader.readMessage(value,common_common_pb.Bytes.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.IDBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.IDBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.IDBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.IDBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.Bytes.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.Identifier id = 1;
 * @return {?proto.common.Identifier}
 */
proto.api.IDBody.prototype.getId = function() {
  return /** @type{?proto.common.Identifier} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Identifier, 1));
};


/** @param {?proto.common.Identifier|undefined} value */
proto.api.IDBody.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.IDBody.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.IDBody.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.Bytes body = 2;
 * @return {?proto.common.Bytes}
 */
proto.api.IDBody.prototype.getBody = function() {
  return /** @type{?proto.common.Bytes} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Bytes, 2));
};


/** @param {?proto.common.Bytes|undefined} value */
proto.api.IDBody.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.IDBody.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.IDBody.prototype.hasBody = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.IDStrings = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.IDStrings, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.IDStrings.displayName = 'proto.api.IDStrings';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.IDStrings.prototype.toObject = function(opt_includeInstance) {
  return proto.api.IDStrings.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.IDStrings} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.IDStrings.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && common_common_pb.Identifier.toObject(includeInstance, f),
    strings: (f = msg.getStrings()) && common_common_pb.StringArray.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.IDStrings}
 */
proto.api.IDStrings.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.IDStrings;
  return proto.api.IDStrings.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.IDStrings} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.IDStrings}
 */
proto.api.IDStrings.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.Identifier;
      reader.readMessage(value,common_common_pb.Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new common_common_pb.StringArray;
      reader.readMessage(value,common_common_pb.StringArray.deserializeBinaryFromReader);
      msg.setStrings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.IDStrings.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.IDStrings.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.IDStrings} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.IDStrings.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getStrings();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.StringArray.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.Identifier id = 1;
 * @return {?proto.common.Identifier}
 */
proto.api.IDStrings.prototype.getId = function() {
  return /** @type{?proto.common.Identifier} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Identifier, 1));
};


/** @param {?proto.common.Identifier|undefined} value */
proto.api.IDStrings.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.IDStrings.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.IDStrings.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.StringArray strings = 2;
 * @return {?proto.common.StringArray}
 */
proto.api.IDStrings.prototype.getStrings = function() {
  return /** @type{?proto.common.StringArray} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringArray, 2));
};


/** @param {?proto.common.StringArray|undefined} value */
proto.api.IDStrings.prototype.setStrings = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.IDStrings.prototype.clearStrings = function() {
  this.setStrings(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.IDStrings.prototype.hasStrings = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Role = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Role, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Role.displayName = 'proto.api.Role';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Role.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Role.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Role} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Role.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && common_common_pb.String.toObject(includeInstance, f),
    name: (f = msg.getName()) && common_common_pb.String.toObject(includeInstance, f),
    description: (f = msg.getDescription()) && common_common_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Role}
 */
proto.api.Role.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Role;
  return proto.api.Role.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Role} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Role}
 */
proto.api.Role.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Role.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Role.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Role} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Role.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String id = 1;
 * @return {?proto.common.String}
 */
proto.api.Role.prototype.getId = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Role.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.Role.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Role.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String name = 2;
 * @return {?proto.common.String}
 */
proto.api.Role.prototype.getName = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Role.prototype.setName = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Role.prototype.clearName = function() {
  this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Role.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String description = 3;
 * @return {?proto.common.String}
 */
proto.api.Role.prototype.getDescription = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Role.prototype.setDescription = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.Role.prototype.clearDescription = function() {
  this.setDescription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Role.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * @enum {number}
 */
proto.api.Scope = {
  OPENID: 0,
  PROFILE: 1,
  EMAIL: 2,
  READ_USERS: 3,
  READ_USER_IDP_TOKENS: 4,
  CREATE_USERS: 5,
  READ_STATS: 6,
  READ_EMAIL_TEMPLATES: 7,
  UPDATE_EMAIL_TEMPLATES: 8,
  CREATE_EMAIL_TEMPLATES: 9,
  READ_RULES: 10,
  UPDATE_RULES: 11,
  CREATE_RULES: 12,
  DELETE_RULES: 13,
  READ_ROLES: 14,
  UPDATE_ROLES: 15,
  CREATE_ROLES: 16,
  DELETE_ROLES: 17,
  READ_LOGS: 18
};

/**
 * @enum {number}
 */
proto.api.URL = {
  USER_INFOURL: 0,
  TOKENURL: 1,
  AUTHORIZEURL: 2,
  USERSURL: 3,
  CLIENTSURL: 4,
  GRANTSURL: 5,
  RULESURL: 6,
  ROLESURL: 7,
  LOGSURL: 8,
  STATSURL: 9,
  CONNECTIONSURL: 10,
  TENANTSURL: 11,
  EMAIL_TEMPLATEURL: 12,
  EMAILURL: 13,
  SEARCH_USERSURL: 14,
  DEVICEURL: 18,
  JWKSURL: 19,
  CLIENT_GRANTSURL: 20
};

/**
 * @enum {number}
 */
proto.api.Plan = {
  FREE: 0,
  BASIC: 1,
  PREMIUM: 2
};

goog.object.extend(exports, proto.api);
