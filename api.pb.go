// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	common "github.com/autom8ter/api/common"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UpdateUserRequest struct {
	Email                *common.Identifier `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Fields               *common.StringMap  `protobuf:"bytes,2,opt,name=fields,proto3" json:"fields,omitempty"`
	Overwrite            *common.Bool       `protobuf:"bytes,3,opt,name=overwrite,proto3" json:"overwrite,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *UpdateUserRequest) Reset()         { *m = UpdateUserRequest{} }
func (m *UpdateUserRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateUserRequest) ProtoMessage()    {}
func (*UpdateUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *UpdateUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateUserRequest.Unmarshal(m, b)
}
func (m *UpdateUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateUserRequest.Marshal(b, m, deterministic)
}
func (m *UpdateUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateUserRequest.Merge(m, src)
}
func (m *UpdateUserRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateUserRequest.Size(m)
}
func (m *UpdateUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateUserRequest proto.InternalMessageInfo

func (m *UpdateUserRequest) GetEmail() *common.Identifier {
	if m != nil {
		return m.Email
	}
	return nil
}

func (m *UpdateUserRequest) GetFields() *common.StringMap {
	if m != nil {
		return m.Fields
	}
	return nil
}

func (m *UpdateUserRequest) GetOverwrite() *common.Bool {
	if m != nil {
		return m.Overwrite
	}
	return nil
}

type Card struct {
	Number               *common.Identifier `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	ExpMonth             *common.String     `protobuf:"bytes,2,opt,name=exp_month,json=expMonth,proto3" json:"exp_month,omitempty"`
	ExpYear              *common.String     `protobuf:"bytes,3,opt,name=exp_year,json=expYear,proto3" json:"exp_year,omitempty"`
	Cvc                  *common.String     `protobuf:"bytes,4,opt,name=cvc,proto3" json:"cvc,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Card) Reset()         { *m = Card{} }
func (m *Card) String() string { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()    {}
func (*Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *Card) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Card.Unmarshal(m, b)
}
func (m *Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Card.Marshal(b, m, deterministic)
}
func (m *Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Card.Merge(m, src)
}
func (m *Card) XXX_Size() int {
	return xxx_messageInfo_Card.Size(m)
}
func (m *Card) XXX_DiscardUnknown() {
	xxx_messageInfo_Card.DiscardUnknown(m)
}

var xxx_messageInfo_Card proto.InternalMessageInfo

func (m *Card) GetNumber() *common.Identifier {
	if m != nil {
		return m.Number
	}
	return nil
}

func (m *Card) GetExpMonth() *common.String {
	if m != nil {
		return m.ExpMonth
	}
	return nil
}

func (m *Card) GetExpYear() *common.String {
	if m != nil {
		return m.ExpYear
	}
	return nil
}

func (m *Card) GetCvc() *common.String {
	if m != nil {
		return m.Cvc
	}
	return nil
}

type User struct {
	UserId               *common.Identifier  `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Name                 *common.String      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GivenName            *common.String      `protobuf:"bytes,3,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	FamilyName           *common.String      `protobuf:"bytes,4,opt,name=family_name,json=familyName,proto3" json:"family_name,omitempty"`
	Gender               *common.String      `protobuf:"bytes,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Birthdate            *common.String      `protobuf:"bytes,6,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	Email                *common.Identifier  `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	PhoneNumber          *common.Identifier  `protobuf:"bytes,8,opt,name=phone_number,json=phoneNumber,proto3" json:"phone_number,omitempty"`
	Picture              *common.String      `protobuf:"bytes,9,opt,name=picture,proto3" json:"picture,omitempty"`
	Nickname             *common.String      `protobuf:"bytes,14,opt,name=nickname,proto3" json:"nickname,omitempty"`
	UserMetadata         *common.StringMap   `protobuf:"bytes,10,opt,name=user_metadata,json=userMetadata,proto3" json:"user_metadata,omitempty"`
	AppMetadata          *common.StringMap   `protobuf:"bytes,11,opt,name=app_metadata,json=appMetadata,proto3" json:"app_metadata,omitempty"`
	LastIp               *common.String      `protobuf:"bytes,12,opt,name=last_ip,json=lastIp,proto3" json:"last_ip,omitempty"`
	Blocked              *common.Bool        `protobuf:"bytes,13,opt,name=blocked,proto3" json:"blocked,omitempty"`
	Multifactor          *common.StringArray `protobuf:"bytes,15,opt,name=multifactor,proto3" json:"multifactor,omitempty"`
	CreatedAt            *common.String      `protobuf:"bytes,17,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *common.String      `protobuf:"bytes,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	PhoneVerified        *common.Bool        `protobuf:"bytes,19,opt,name=phone_verified,json=phoneVerified,proto3" json:"phone_verified,omitempty"`
	EmailVerified        *common.Bool        `protobuf:"bytes,20,opt,name=email_verified,json=emailVerified,proto3" json:"email_verified,omitempty"`
	Password             *common.String      `protobuf:"bytes,21,opt,name=password,proto3" json:"password,omitempty"`
	Identities           []*Identity         `protobuf:"bytes,22,rep,name=identities,proto3" json:"identities,omitempty"`
	Roles                []*Role             `protobuf:"bytes,23,rep,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUserId() *common.Identifier {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *User) GetName() *common.String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *User) GetGivenName() *common.String {
	if m != nil {
		return m.GivenName
	}
	return nil
}

func (m *User) GetFamilyName() *common.String {
	if m != nil {
		return m.FamilyName
	}
	return nil
}

func (m *User) GetGender() *common.String {
	if m != nil {
		return m.Gender
	}
	return nil
}

func (m *User) GetBirthdate() *common.String {
	if m != nil {
		return m.Birthdate
	}
	return nil
}

func (m *User) GetEmail() *common.Identifier {
	if m != nil {
		return m.Email
	}
	return nil
}

func (m *User) GetPhoneNumber() *common.Identifier {
	if m != nil {
		return m.PhoneNumber
	}
	return nil
}

func (m *User) GetPicture() *common.String {
	if m != nil {
		return m.Picture
	}
	return nil
}

func (m *User) GetNickname() *common.String {
	if m != nil {
		return m.Nickname
	}
	return nil
}

func (m *User) GetUserMetadata() *common.StringMap {
	if m != nil {
		return m.UserMetadata
	}
	return nil
}

func (m *User) GetAppMetadata() *common.StringMap {
	if m != nil {
		return m.AppMetadata
	}
	return nil
}

func (m *User) GetLastIp() *common.String {
	if m != nil {
		return m.LastIp
	}
	return nil
}

func (m *User) GetBlocked() *common.Bool {
	if m != nil {
		return m.Blocked
	}
	return nil
}

func (m *User) GetMultifactor() *common.StringArray {
	if m != nil {
		return m.Multifactor
	}
	return nil
}

func (m *User) GetCreatedAt() *common.String {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *User) GetUpdatedAt() *common.String {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *User) GetPhoneVerified() *common.Bool {
	if m != nil {
		return m.PhoneVerified
	}
	return nil
}

func (m *User) GetEmailVerified() *common.Bool {
	if m != nil {
		return m.EmailVerified
	}
	return nil
}

func (m *User) GetPassword() *common.String {
	if m != nil {
		return m.Password
	}
	return nil
}

func (m *User) GetIdentities() []*Identity {
	if m != nil {
		return m.Identities
	}
	return nil
}

func (m *User) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

type UserMetadata struct {
	Status               *common.String    `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Bio                  *common.StringMap `protobuf:"bytes,2,opt,name=bio,proto3" json:"bio,omitempty"`
	Address              *Address          `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Tags                 *common.StringMap `protobuf:"bytes,4,opt,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UserMetadata) Reset()         { *m = UserMetadata{} }
func (m *UserMetadata) String() string { return proto.CompactTextString(m) }
func (*UserMetadata) ProtoMessage()    {}
func (*UserMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *UserMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserMetadata.Unmarshal(m, b)
}
func (m *UserMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserMetadata.Marshal(b, m, deterministic)
}
func (m *UserMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserMetadata.Merge(m, src)
}
func (m *UserMetadata) XXX_Size() int {
	return xxx_messageInfo_UserMetadata.Size(m)
}
func (m *UserMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_UserMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_UserMetadata proto.InternalMessageInfo

func (m *UserMetadata) GetStatus() *common.String {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *UserMetadata) GetBio() *common.StringMap {
	if m != nil {
		return m.Bio
	}
	return nil
}

func (m *UserMetadata) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *UserMetadata) GetTags() *common.StringMap {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Address struct {
	City                 *common.String `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	State                *common.String `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	Line1                *common.String `protobuf:"bytes,3,opt,name=line1,proto3" json:"line1,omitempty"`
	Line2                *common.String `protobuf:"bytes,4,opt,name=line2,proto3" json:"line2,omitempty"`
	Zip                  *common.String `protobuf:"bytes,5,opt,name=zip,proto3" json:"zip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetCity() *common.String {
	if m != nil {
		return m.City
	}
	return nil
}

func (m *Address) GetState() *common.String {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *Address) GetLine1() *common.String {
	if m != nil {
		return m.Line1
	}
	return nil
}

func (m *Address) GetLine2() *common.String {
	if m != nil {
		return m.Line2
	}
	return nil
}

func (m *Address) GetZip() *common.String {
	if m != nil {
		return m.Zip
	}
	return nil
}

type AppMetadata struct {
	Description          *common.String    `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	AccountBalance       *common.String    `protobuf:"bytes,2,opt,name=account_balance,json=accountBalance,proto3" json:"account_balance,omitempty"`
	Plan                 *Plan             `protobuf:"bytes,3,opt,name=plan,proto3" json:"plan,omitempty"`
	Tags                 *common.StringMap `protobuf:"bytes,4,opt,name=tags,proto3" json:"tags,omitempty"`
	Card                 *Card             `protobuf:"bytes,5,opt,name=card,proto3" json:"card,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AppMetadata) Reset()         { *m = AppMetadata{} }
func (m *AppMetadata) String() string { return proto.CompactTextString(m) }
func (*AppMetadata) ProtoMessage()    {}
func (*AppMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *AppMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppMetadata.Unmarshal(m, b)
}
func (m *AppMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppMetadata.Marshal(b, m, deterministic)
}
func (m *AppMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppMetadata.Merge(m, src)
}
func (m *AppMetadata) XXX_Size() int {
	return xxx_messageInfo_AppMetadata.Size(m)
}
func (m *AppMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_AppMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_AppMetadata proto.InternalMessageInfo

func (m *AppMetadata) GetDescription() *common.String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *AppMetadata) GetAccountBalance() *common.String {
	if m != nil {
		return m.AccountBalance
	}
	return nil
}

func (m *AppMetadata) GetPlan() *Plan {
	if m != nil {
		return m.Plan
	}
	return nil
}

func (m *AppMetadata) GetTags() *common.StringMap {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *AppMetadata) GetCard() *Card {
	if m != nil {
		return m.Card
	}
	return nil
}

type Plan struct {
	Id                   *common.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Active               *common.Bool       `protobuf:"bytes,2,opt,name=active,proto3" json:"active,omitempty"`
	Amount               *common.Int64      `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Interval             *common.String     `protobuf:"bytes,4,opt,name=interval,proto3" json:"interval,omitempty"`
	Nickname             *common.String     `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Product              *Product           `protobuf:"bytes,6,opt,name=product,proto3" json:"product,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Plan) Reset()         { *m = Plan{} }
func (m *Plan) String() string { return proto.CompactTextString(m) }
func (*Plan) ProtoMessage()    {}
func (*Plan) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *Plan) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Plan.Unmarshal(m, b)
}
func (m *Plan) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Plan.Marshal(b, m, deterministic)
}
func (m *Plan) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Plan.Merge(m, src)
}
func (m *Plan) XXX_Size() int {
	return xxx_messageInfo_Plan.Size(m)
}
func (m *Plan) XXX_DiscardUnknown() {
	xxx_messageInfo_Plan.DiscardUnknown(m)
}

var xxx_messageInfo_Plan proto.InternalMessageInfo

func (m *Plan) GetId() *common.Identifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Plan) GetActive() *common.Bool {
	if m != nil {
		return m.Active
	}
	return nil
}

func (m *Plan) GetAmount() *common.Int64 {
	if m != nil {
		return m.Amount
	}
	return nil
}

func (m *Plan) GetInterval() *common.String {
	if m != nil {
		return m.Interval
	}
	return nil
}

func (m *Plan) GetNickname() *common.String {
	if m != nil {
		return m.Nickname
	}
	return nil
}

func (m *Plan) GetProduct() *Product {
	if m != nil {
		return m.Product
	}
	return nil
}

type Product struct {
	Id                   *common.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description          *common.String     `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Url                  *common.String     `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Tags                 *common.StringMap  `protobuf:"bytes,4,opt,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetId() *common.Identifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Product) GetDescription() *common.String {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *Product) GetUrl() *common.String {
	if m != nil {
		return m.Url
	}
	return nil
}

func (m *Product) GetTags() *common.StringMap {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Identity struct {
	Connection           *common.String     `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	UserId               *common.Identifier `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Provider             *common.String     `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"`
	IsSocial             *common.Bool       `protobuf:"bytes,4,opt,name=isSocial,proto3" json:"isSocial,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Identity) Reset()         { *m = Identity{} }
func (m *Identity) String() string { return proto.CompactTextString(m) }
func (*Identity) ProtoMessage()    {}
func (*Identity) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *Identity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Identity.Unmarshal(m, b)
}
func (m *Identity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Identity.Marshal(b, m, deterministic)
}
func (m *Identity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Identity.Merge(m, src)
}
func (m *Identity) XXX_Size() int {
	return xxx_messageInfo_Identity.Size(m)
}
func (m *Identity) XXX_DiscardUnknown() {
	xxx_messageInfo_Identity.DiscardUnknown(m)
}

var xxx_messageInfo_Identity proto.InternalMessageInfo

func (m *Identity) GetConnection() *common.String {
	if m != nil {
		return m.Connection
	}
	return nil
}

func (m *Identity) GetUserId() *common.Identifier {
	if m != nil {
		return m.UserId
	}
	return nil
}

func (m *Identity) GetProvider() *common.String {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (m *Identity) GetIsSocial() *common.Bool {
	if m != nil {
		return m.IsSocial
	}
	return nil
}

type Role struct {
	Id                   *common.Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 *common.String     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          *common.String     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

func (m *Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Role.Unmarshal(m, b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Role.Marshal(b, m, deterministic)
}
func (m *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(m, src)
}
func (m *Role) XXX_Size() int {
	return xxx_messageInfo_Role.Size(m)
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

func (m *Role) GetId() *common.Identifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Role) GetName() *common.String {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Role) GetDescription() *common.String {
	if m != nil {
		return m.Description
	}
	return nil
}

type OAuth2 struct {
	ClientId             *common.String      `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret         *common.String      `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	TokenUrl             *common.String      `protobuf:"bytes,3,opt,name=token_url,json=tokenUrl,proto3" json:"token_url,omitempty"`
	AuthUrl              *common.String      `protobuf:"bytes,4,opt,name=auth_url,json=authUrl,proto3" json:"auth_url,omitempty"`
	Scopes               *common.StringArray `protobuf:"bytes,5,opt,name=scopes,proto3" json:"scopes,omitempty"`
	Redirect             *common.String      `protobuf:"bytes,6,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Code                 *common.String      `protobuf:"bytes,7,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *OAuth2) Reset()         { *m = OAuth2{} }
func (m *OAuth2) String() string { return proto.CompactTextString(m) }
func (*OAuth2) ProtoMessage()    {}
func (*OAuth2) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}

func (m *OAuth2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OAuth2.Unmarshal(m, b)
}
func (m *OAuth2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OAuth2.Marshal(b, m, deterministic)
}
func (m *OAuth2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OAuth2.Merge(m, src)
}
func (m *OAuth2) XXX_Size() int {
	return xxx_messageInfo_OAuth2.Size(m)
}
func (m *OAuth2) XXX_DiscardUnknown() {
	xxx_messageInfo_OAuth2.DiscardUnknown(m)
}

var xxx_messageInfo_OAuth2 proto.InternalMessageInfo

func (m *OAuth2) GetClientId() *common.String {
	if m != nil {
		return m.ClientId
	}
	return nil
}

func (m *OAuth2) GetClientSecret() *common.String {
	if m != nil {
		return m.ClientSecret
	}
	return nil
}

func (m *OAuth2) GetTokenUrl() *common.String {
	if m != nil {
		return m.TokenUrl
	}
	return nil
}

func (m *OAuth2) GetAuthUrl() *common.String {
	if m != nil {
		return m.AuthUrl
	}
	return nil
}

func (m *OAuth2) GetScopes() *common.StringArray {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *OAuth2) GetRedirect() *common.String {
	if m != nil {
		return m.Redirect
	}
	return nil
}

func (m *OAuth2) GetCode() *common.String {
	if m != nil {
		return m.Code
	}
	return nil
}

type ClientCredentials struct {
	ClientId             *common.String      `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret         *common.String      `protobuf:"bytes,2,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	TokenUrl             *common.String      `protobuf:"bytes,3,opt,name=token_url,json=tokenUrl,proto3" json:"token_url,omitempty"`
	Scopes               *common.StringArray `protobuf:"bytes,4,opt,name=scopes,proto3" json:"scopes,omitempty"`
	EndpointParams       *common.StringMap   `protobuf:"bytes,5,opt,name=endpoint_params,json=endpointParams,proto3" json:"endpoint_params,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ClientCredentials) Reset()         { *m = ClientCredentials{} }
func (m *ClientCredentials) String() string { return proto.CompactTextString(m) }
func (*ClientCredentials) ProtoMessage()    {}
func (*ClientCredentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}

func (m *ClientCredentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientCredentials.Unmarshal(m, b)
}
func (m *ClientCredentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientCredentials.Marshal(b, m, deterministic)
}
func (m *ClientCredentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientCredentials.Merge(m, src)
}
func (m *ClientCredentials) XXX_Size() int {
	return xxx_messageInfo_ClientCredentials.Size(m)
}
func (m *ClientCredentials) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientCredentials.DiscardUnknown(m)
}

var xxx_messageInfo_ClientCredentials proto.InternalMessageInfo

func (m *ClientCredentials) GetClientId() *common.String {
	if m != nil {
		return m.ClientId
	}
	return nil
}

func (m *ClientCredentials) GetClientSecret() *common.String {
	if m != nil {
		return m.ClientSecret
	}
	return nil
}

func (m *ClientCredentials) GetTokenUrl() *common.String {
	if m != nil {
		return m.TokenUrl
	}
	return nil
}

func (m *ClientCredentials) GetScopes() *common.StringArray {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *ClientCredentials) GetEndpointParams() *common.StringMap {
	if m != nil {
		return m.EndpointParams
	}
	return nil
}

type JWT struct {
	Email                *common.String      `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	PrivateKey           []byte              `protobuf:"bytes,2,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	PriveKeyId           *common.String      `protobuf:"bytes,3,opt,name=prive_key_id,json=priveKeyId,proto3" json:"prive_key_id,omitempty"`
	Subject              *common.String      `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Scopes               *common.StringArray `protobuf:"bytes,5,opt,name=scopes,proto3" json:"scopes,omitempty"`
	TokenUrl             *common.String      `protobuf:"bytes,6,opt,name=token_url,json=tokenUrl,proto3" json:"token_url,omitempty"`
	Expires              *common.String      `protobuf:"bytes,7,opt,name=expires,proto3" json:"expires,omitempty"`
	Audience             *common.String      `protobuf:"bytes,8,opt,name=audience,proto3" json:"audience,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *JWT) Reset()         { *m = JWT{} }
func (m *JWT) String() string { return proto.CompactTextString(m) }
func (*JWT) ProtoMessage()    {}
func (*JWT) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}

func (m *JWT) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JWT.Unmarshal(m, b)
}
func (m *JWT) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JWT.Marshal(b, m, deterministic)
}
func (m *JWT) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JWT.Merge(m, src)
}
func (m *JWT) XXX_Size() int {
	return xxx_messageInfo_JWT.Size(m)
}
func (m *JWT) XXX_DiscardUnknown() {
	xxx_messageInfo_JWT.DiscardUnknown(m)
}

var xxx_messageInfo_JWT proto.InternalMessageInfo

func (m *JWT) GetEmail() *common.String {
	if m != nil {
		return m.Email
	}
	return nil
}

func (m *JWT) GetPrivateKey() []byte {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

func (m *JWT) GetPriveKeyId() *common.String {
	if m != nil {
		return m.PriveKeyId
	}
	return nil
}

func (m *JWT) GetSubject() *common.String {
	if m != nil {
		return m.Subject
	}
	return nil
}

func (m *JWT) GetScopes() *common.StringArray {
	if m != nil {
		return m.Scopes
	}
	return nil
}

func (m *JWT) GetTokenUrl() *common.String {
	if m != nil {
		return m.TokenUrl
	}
	return nil
}

func (m *JWT) GetExpires() *common.String {
	if m != nil {
		return m.Expires
	}
	return nil
}

func (m *JWT) GetAudience() *common.String {
	if m != nil {
		return m.Audience
	}
	return nil
}

type DefaultGCPCredentials struct {
	Scopes               *common.StringArray `protobuf:"bytes,1,opt,name=scopes,proto3" json:"scopes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *DefaultGCPCredentials) Reset()         { *m = DefaultGCPCredentials{} }
func (m *DefaultGCPCredentials) String() string { return proto.CompactTextString(m) }
func (*DefaultGCPCredentials) ProtoMessage()    {}
func (*DefaultGCPCredentials) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}

func (m *DefaultGCPCredentials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DefaultGCPCredentials.Unmarshal(m, b)
}
func (m *DefaultGCPCredentials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DefaultGCPCredentials.Marshal(b, m, deterministic)
}
func (m *DefaultGCPCredentials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DefaultGCPCredentials.Merge(m, src)
}
func (m *DefaultGCPCredentials) XXX_Size() int {
	return xxx_messageInfo_DefaultGCPCredentials.Size(m)
}
func (m *DefaultGCPCredentials) XXX_DiscardUnknown() {
	xxx_messageInfo_DefaultGCPCredentials.DiscardUnknown(m)
}

var xxx_messageInfo_DefaultGCPCredentials proto.InternalMessageInfo

func (m *DefaultGCPCredentials) GetScopes() *common.StringArray {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type JSONWebKeys struct {
	Kty                  *common.String      `protobuf:"bytes,1,opt,name=kty,proto3" json:"kty,omitempty"`
	Kid                  *common.Identifier  `protobuf:"bytes,2,opt,name=kid,proto3" json:"kid,omitempty"`
	Use                  *common.String      `protobuf:"bytes,3,opt,name=use,proto3" json:"use,omitempty"`
	N                    *common.String      `protobuf:"bytes,4,opt,name=n,proto3" json:"n,omitempty"`
	E                    *common.String      `protobuf:"bytes,5,opt,name=e,proto3" json:"e,omitempty"`
	X5C                  *common.StringArray `protobuf:"bytes,6,opt,name=x5c,proto3" json:"x5c,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *JSONWebKeys) Reset()         { *m = JSONWebKeys{} }
func (m *JSONWebKeys) String() string { return proto.CompactTextString(m) }
func (*JSONWebKeys) ProtoMessage()    {}
func (*JSONWebKeys) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}

func (m *JSONWebKeys) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JSONWebKeys.Unmarshal(m, b)
}
func (m *JSONWebKeys) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JSONWebKeys.Marshal(b, m, deterministic)
}
func (m *JSONWebKeys) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JSONWebKeys.Merge(m, src)
}
func (m *JSONWebKeys) XXX_Size() int {
	return xxx_messageInfo_JSONWebKeys.Size(m)
}
func (m *JSONWebKeys) XXX_DiscardUnknown() {
	xxx_messageInfo_JSONWebKeys.DiscardUnknown(m)
}

var xxx_messageInfo_JSONWebKeys proto.InternalMessageInfo

func (m *JSONWebKeys) GetKty() *common.String {
	if m != nil {
		return m.Kty
	}
	return nil
}

func (m *JSONWebKeys) GetKid() *common.Identifier {
	if m != nil {
		return m.Kid
	}
	return nil
}

func (m *JSONWebKeys) GetUse() *common.String {
	if m != nil {
		return m.Use
	}
	return nil
}

func (m *JSONWebKeys) GetN() *common.String {
	if m != nil {
		return m.N
	}
	return nil
}

func (m *JSONWebKeys) GetE() *common.String {
	if m != nil {
		return m.E
	}
	return nil
}

func (m *JSONWebKeys) GetX5C() *common.StringArray {
	if m != nil {
		return m.X5C
	}
	return nil
}

type Jwks struct {
	Keys                 []*JSONWebKeys `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Jwks) Reset()         { *m = Jwks{} }
func (m *Jwks) String() string { return proto.CompactTextString(m) }
func (*Jwks) ProtoMessage()    {}
func (*Jwks) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}

func (m *Jwks) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Jwks.Unmarshal(m, b)
}
func (m *Jwks) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Jwks.Marshal(b, m, deterministic)
}
func (m *Jwks) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Jwks.Merge(m, src)
}
func (m *Jwks) XXX_Size() int {
	return xxx_messageInfo_Jwks.Size(m)
}
func (m *Jwks) XXX_DiscardUnknown() {
	xxx_messageInfo_Jwks.DiscardUnknown(m)
}

var xxx_messageInfo_Jwks proto.InternalMessageInfo

func (m *Jwks) GetKeys() []*JSONWebKeys {
	if m != nil {
		return m.Keys
	}
	return nil
}

func init() {
	proto.RegisterType((*UpdateUserRequest)(nil), "api.UpdateUserRequest")
	proto.RegisterType((*Card)(nil), "api.Card")
	proto.RegisterType((*User)(nil), "api.User")
	proto.RegisterType((*UserMetadata)(nil), "api.UserMetadata")
	proto.RegisterType((*Address)(nil), "api.Address")
	proto.RegisterType((*AppMetadata)(nil), "api.AppMetadata")
	proto.RegisterType((*Plan)(nil), "api.Plan")
	proto.RegisterType((*Product)(nil), "api.Product")
	proto.RegisterType((*Identity)(nil), "api.Identity")
	proto.RegisterType((*Role)(nil), "api.Role")
	proto.RegisterType((*OAuth2)(nil), "api.OAuth2")
	proto.RegisterType((*ClientCredentials)(nil), "api.ClientCredentials")
	proto.RegisterType((*JWT)(nil), "api.JWT")
	proto.RegisterType((*DefaultGCPCredentials)(nil), "api.DefaultGCPCredentials")
	proto.RegisterType((*JSONWebKeys)(nil), "api.JSONWebKeys")
	proto.RegisterType((*Jwks)(nil), "api.Jwks")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 1511 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xcd, 0x6e, 0xdc, 0x46,
	0x12, 0x06, 0x67, 0x46, 0xf3, 0x53, 0x33, 0x92, 0x56, 0x2d, 0xdb, 0x4b, 0x08, 0x5e, 0x58, 0xe0,
	0xca, 0x5a, 0x59, 0xf6, 0x6a, 0xbc, 0xf2, 0xcf, 0x62, 0x0d, 0xec, 0x02, 0xb2, 0x64, 0x18, 0xb2,
	0xd7, 0xb6, 0x40, 0x45, 0x31, 0x72, 0x1a, 0xf4, 0x90, 0x25, 0xa9, 0x33, 0x1c, 0x36, 0xd3, 0x6c,
	0x8e, 0x35, 0x39, 0x05, 0xb9, 0xe6, 0x98, 0x3c, 0x44, 0x10, 0xe4, 0x15, 0x82, 0x20, 0xcf, 0x90,
	0x4b, 0x10, 0x20, 0xb7, 0x5c, 0xf2, 0x04, 0xb9, 0x05, 0x41, 0x37, 0x9b, 0xf3, 0x23, 0x91, 0x1a,
	0xe5, 0x96, 0x93, 0x34, 0xfd, 0x7d, 0x55, 0xac, 0xbf, 0xae, 0x2a, 0x12, 0x1a, 0x34, 0x62, 0x5b,
	0x91, 0xe0, 0x92, 0x93, 0x32, 0x8d, 0xd8, 0xca, 0xcd, 0x13, 0xce, 0x4f, 0x02, 0x6c, 0xd3, 0x88,
	0xb5, 0x69, 0x18, 0x72, 0x49, 0x25, 0xe3, 0x61, 0x9c, 0x52, 0x56, 0x96, 0x3d, 0xde, 0xef, 0xf3,
	0xb0, 0x9d, 0xfe, 0x49, 0x0f, 0x9d, 0x2f, 0x2c, 0x58, 0x3a, 0x8a, 0x7c, 0x2a, 0xf1, 0x28, 0x46,
	0xe1, 0xe2, 0x47, 0x09, 0xc6, 0x92, 0x6c, 0xc0, 0x1c, 0xf6, 0x29, 0x0b, 0x6c, 0x6b, 0xd5, 0xda,
	0x68, 0x6e, 0x93, 0x2d, 0x23, 0xb3, 0xef, 0x63, 0x28, 0xd9, 0x31, 0x43, 0xe1, 0xa6, 0x04, 0x72,
	0x07, 0xaa, 0xc7, 0x0c, 0x03, 0x3f, 0xb6, 0x4b, 0x9a, 0xba, 0x94, 0x51, 0x0f, 0xa5, 0x60, 0xe1,
	0xc9, 0x2b, 0x1a, 0xb9, 0x86, 0x40, 0x36, 0xa1, 0xc1, 0x07, 0x28, 0xde, 0x09, 0x26, 0xd1, 0x2e,
	0x6b, 0x76, 0x2b, 0x63, 0x3f, 0xe5, 0x3c, 0x70, 0xc7, 0xb0, 0xf3, 0xb5, 0x05, 0x95, 0x5d, 0x2a,
	0x7c, 0xb2, 0x09, 0xd5, 0x30, 0xe9, 0x77, 0x51, 0x5c, 0x62, 0x8a, 0x61, 0x90, 0xbb, 0xd0, 0xc0,
	0xb3, 0xa8, 0xd3, 0xe7, 0xa1, 0x3c, 0x35, 0xe6, 0x2c, 0x4c, 0x9b, 0xe3, 0xd6, 0xf1, 0x2c, 0x7a,
	0xa5, 0x70, 0x72, 0x07, 0xd4, 0xff, 0x9d, 0x21, 0x52, 0x61, 0x8c, 0x39, 0xcf, 0xad, 0xe1, 0x59,
	0xf4, 0x01, 0x52, 0x41, 0x56, 0xa1, 0xec, 0x0d, 0x3c, 0xbb, 0x92, 0xcb, 0x52, 0x90, 0xf3, 0x5b,
	0x0d, 0x2a, 0x2a, 0x7e, 0xe4, 0x2e, 0xd4, 0x92, 0x18, 0x45, 0x87, 0xf9, 0x97, 0xd9, 0xab, 0x28,
	0xfb, 0x3e, 0x71, 0xa0, 0x12, 0xd2, 0x3e, 0x16, 0x98, 0xaa, 0x31, 0xf2, 0x4f, 0x80, 0x13, 0x36,
	0xc0, 0xb0, 0xa3, 0x99, 0xf9, 0x86, 0x36, 0x34, 0xe3, 0xb5, 0xa2, 0xb7, 0xa1, 0x79, 0x4c, 0xfb,
	0x2c, 0x18, 0xa6, 0xfc, 0x7c, 0x93, 0x21, 0xa5, 0x68, 0x81, 0x75, 0xa8, 0x9e, 0x60, 0xe8, 0xa3,
	0xb0, 0xe7, 0x72, 0xb9, 0x06, 0x25, 0xf7, 0xa0, 0xd1, 0x65, 0x42, 0x9e, 0xaa, 0x4a, 0xb1, 0xab,
	0xf9, 0x66, 0x8c, 0x08, 0xe3, 0xfa, 0xa9, 0xcd, 0xaa, 0x9f, 0x47, 0xd0, 0x8a, 0x4e, 0x79, 0x88,
	0x1d, 0x93, 0xe5, 0x7a, 0xa1, 0x40, 0x53, 0xf3, 0x5e, 0xa7, 0xa9, 0xde, 0x80, 0x5a, 0xc4, 0x3c,
	0x99, 0x08, 0xb4, 0x1b, 0xf9, 0xc9, 0x33, 0x30, 0xd9, 0x84, 0x7a, 0xc8, 0xbc, 0x9e, 0x0e, 0xc7,
	0x42, 0x7e, 0x4d, 0x64, 0x38, 0x79, 0x0c, 0xf3, 0x3a, 0x7b, 0x7d, 0x94, 0xd4, 0xa7, 0x92, 0xda,
	0x50, 0x54, 0xd3, 0x2d, 0xc5, 0x7b, 0x65, 0x68, 0xe4, 0x21, 0xb4, 0x68, 0x14, 0x8d, 0xc5, 0x9a,
	0x45, 0x62, 0x4d, 0x1a, 0x45, 0x23, 0xa9, 0x7f, 0x40, 0x2d, 0xa0, 0xb1, 0xec, 0xb0, 0xc8, 0x6e,
	0xe5, 0xc7, 0x5e, 0xc1, 0xfb, 0x11, 0x59, 0x87, 0x5a, 0x37, 0xe0, 0x5e, 0x0f, 0x7d, 0x7b, 0x3e,
	0xe7, 0xda, 0x64, 0x20, 0x79, 0x04, 0xcd, 0x7e, 0x12, 0x48, 0x76, 0x4c, 0x3d, 0xc9, 0x85, 0xbd,
	0xa8, 0xb9, 0xcb, 0xd3, 0x4a, 0x77, 0x84, 0xa0, 0x43, 0x77, 0x92, 0xa7, 0x4a, 0xcc, 0x13, 0x48,
	0x25, 0xfa, 0x1d, 0x2a, 0xed, 0xa5, 0xfc, 0xdc, 0x1a, 0xc6, 0x8e, 0x54, 0xf4, 0x44, 0x37, 0x0c,
	0x4d, 0x27, 0xf9, 0x74, 0xc3, 0xd8, 0x91, 0xe4, 0x01, 0x2c, 0xa4, 0x09, 0x1e, 0xa0, 0x50, 0x89,
	0xf4, 0xed, 0xe5, 0x1c, 0x1f, 0xe6, 0x35, 0xe7, 0x7d, 0x43, 0x51, 0x42, 0xba, 0x3c, 0xc6, 0x42,
	0xd7, 0xf2, 0x84, 0x34, 0x67, 0x24, 0xb4, 0x09, 0xf5, 0x88, 0xc6, 0xf1, 0x3b, 0x2e, 0x7c, 0xfb,
	0x7a, 0x7e, 0xa6, 0x33, 0x5c, 0x39, 0xc1, 0x74, 0x69, 0x49, 0x86, 0xb1, 0x7d, 0x63, 0xb5, 0xbc,
	0xd1, 0xdc, 0x9e, 0xdf, 0x52, 0xed, 0x34, 0xad, 0x38, 0x39, 0x74, 0x27, 0x08, 0xe4, 0x16, 0xcc,
	0x09, 0x1e, 0x60, 0x6c, 0xff, 0x55, 0x33, 0x1b, 0x9a, 0xe9, 0xf2, 0x00, 0xdd, 0xf4, 0xdc, 0xf9,
	0xca, 0x82, 0xd6, 0xd1, 0x64, 0x49, 0xac, 0x43, 0x35, 0x96, 0x54, 0x26, 0xb1, 0xe9, 0x03, 0x17,
	0x72, 0x9b, 0xa2, 0xe4, 0xef, 0x50, 0xee, 0x32, 0x5e, 0xdc, 0x3c, 0x15, 0xaa, 0x0a, 0x80, 0xfa,
	0xbe, 0xc0, 0x38, 0x1e, 0xf5, 0x4d, 0x65, 0xc0, 0x4e, 0x7a, 0xe6, 0x66, 0x20, 0xb9, 0x0d, 0x15,
	0x49, 0x4f, 0x62, 0x73, 0xed, 0x73, 0xb4, 0x69, 0xd8, 0xf9, 0xce, 0x82, 0x9a, 0x91, 0x55, 0x3d,
	0xc8, 0x63, 0x72, 0x58, 0x60, 0xa5, 0xc6, 0xc8, 0x1a, 0xcc, 0x29, 0x6b, 0x8b, 0x1a, 0x55, 0x0a,
	0x2a, 0x56, 0xc0, 0x42, 0xfc, 0x57, 0x41, 0x93, 0x4a, 0xc1, 0x8c, 0xb5, 0x5d, 0xd0, 0x9a, 0x52,
	0x50, 0x75, 0xdc, 0x8f, 0x59, 0x54, 0xd0, 0x92, 0x14, 0xe4, 0xfc, 0x64, 0x41, 0x73, 0x67, 0xe2,
	0x32, 0xdd, 0x87, 0xa6, 0x8f, 0xb1, 0x27, 0x58, 0xa4, 0x46, 0x5e, 0x81, 0x3b, 0x93, 0x14, 0xf2,
	0x6f, 0x58, 0xa4, 0x9e, 0xc7, 0x93, 0x50, 0x76, 0xba, 0x34, 0xa0, 0xa1, 0x57, 0xe4, 0xdf, 0x82,
	0xa1, 0x3d, 0x4d, 0x59, 0xe4, 0x6f, 0x50, 0x89, 0x02, 0x1a, 0x1a, 0x3f, 0xd3, 0x5a, 0x38, 0x08,
	0x68, 0xe8, 0xea, 0xe3, 0x2b, 0x26, 0x41, 0x69, 0xf1, 0xa8, 0xf0, 0x8d, 0x8f, 0xa9, 0x16, 0x35,
	0xf1, 0x5c, 0x7d, 0xec, 0xfc, 0x6a, 0x41, 0x45, 0x29, 0x25, 0x0e, 0x94, 0x2e, 0x1d, 0x26, 0x25,
	0xe6, 0x93, 0x35, 0xa8, 0x52, 0x4f, 0xb2, 0x41, 0xe6, 0xc1, 0xf4, 0x35, 0x31, 0x18, 0xb9, 0x0d,
	0x55, 0xda, 0x57, 0x8e, 0x18, 0xcb, 0xe7, 0x47, 0xda, 0x42, 0xf9, 0xf8, 0xa1, 0x6b, 0x40, 0x75,
	0x8d, 0x58, 0x28, 0x51, 0x0c, 0x68, 0x50, 0x90, 0xa4, 0x11, 0x3e, 0xd5, 0x5c, 0xe7, 0x66, 0x34,
	0xd7, 0x75, 0xa8, 0x45, 0x82, 0xfb, 0x89, 0x27, 0xcd, 0xfc, 0x48, 0x8b, 0xf8, 0x20, 0x3d, 0x73,
	0x33, 0xd0, 0xf9, 0xd2, 0x82, 0x9a, 0x39, 0xbc, 0x92, 0xf3, 0xe7, 0x32, 0x5f, 0x9a, 0x9d, 0xf9,
	0x55, 0x28, 0x27, 0x22, 0x28, 0xa8, 0x53, 0x05, 0x5d, 0xf5, 0x22, 0x7d, 0x63, 0x41, 0x3d, 0xeb,
	0x17, 0x64, 0x0b, 0xc0, 0xe3, 0x61, 0x88, 0xde, 0x25, 0x05, 0x38, 0xc1, 0x98, 0x5c, 0x15, 0x4a,
	0x33, 0x57, 0x05, 0xd5, 0xdb, 0x04, 0x1f, 0x30, 0x35, 0xa8, 0xcb, 0x05, 0xbd, 0xcd, 0xe0, 0x64,
	0x03, 0xea, 0x2c, 0x3e, 0xe4, 0x1e, 0x1b, 0x25, 0x70, 0xba, 0x1e, 0x46, 0xa8, 0xf3, 0x89, 0x05,
	0x15, 0xd5, 0xc5, 0xae, 0x14, 0xe7, 0xab, 0x6c, 0x2b, 0xe7, 0x72, 0x51, 0x9e, 0x99, 0x0b, 0xe7,
	0xdb, 0x12, 0x54, 0xdf, 0xec, 0x24, 0xf2, 0x74, 0x5b, 0xad, 0x6f, 0x5e, 0xc0, 0x30, 0x94, 0xe3,
	0xed, 0xe9, 0x82, 0x93, 0x29, 0x61, 0x5f, 0x4d, 0x88, 0x79, 0x43, 0x8e, 0xd1, 0x13, 0x28, 0x0b,
	0xcc, 0x6a, 0xa5, 0xa4, 0x43, 0xcd, 0x51, 0x4f, 0x90, 0xbc, 0x87, 0x61, 0xa7, 0x38, 0xfd, 0x75,
	0x4d, 0x38, 0x12, 0x6a, 0xb3, 0xad, 0xd3, 0x44, 0x9e, 0x6a, 0x6e, 0xfe, 0x3d, 0xa8, 0x29, 0x5c,
	0x51, 0xef, 0x42, 0x35, 0xf6, 0x78, 0x84, 0xb1, 0xb9, 0x04, 0xb9, 0x33, 0xd7, 0x50, 0x54, 0x2a,
	0x05, 0xfa, 0x4c, 0xe0, 0xe8, 0x22, 0x5c, 0xb0, 0x21, 0xc3, 0x75, 0x77, 0xe6, 0x3e, 0x9a, 0x35,
	0xea, 0x62, 0x77, 0xe6, 0x3e, 0x3a, 0x9f, 0x95, 0x60, 0x69, 0x57, 0x7b, 0xb9, 0x2b, 0x50, 0xa7,
	0x8c, 0x06, 0xf1, 0x9f, 0x2d, 0x98, 0xe3, 0x08, 0x55, 0x66, 0x47, 0xe8, 0x09, 0x2c, 0x62, 0xe8,
	0x47, 0x9c, 0x85, 0xb2, 0x13, 0x51, 0x41, 0xfb, 0x59, 0x5c, 0x73, 0x2e, 0xe2, 0x42, 0xc6, 0x3c,
	0xd0, 0x44, 0xe7, 0x87, 0x12, 0x94, 0x5f, 0xbc, 0x7d, 0x4f, 0xcd, 0x99, 0xc9, 0x37, 0x98, 0x0b,
	0x73, 0x26, 0xdd, 0x3e, 0x6f, 0x41, 0x33, 0x12, 0x6c, 0x40, 0x25, 0x76, 0x7a, 0x38, 0xd4, 0x6e,
	0xb7, 0x5c, 0x30, 0x47, 0x2f, 0x71, 0x48, 0xee, 0x43, 0x4b, 0xfd, 0xd2, 0xb0, 0x8a, 0x64, 0xbe,
	0x9f, 0x5a, 0x42, 0xf1, 0xf7, 0x7d, 0xb5, 0x99, 0xc6, 0x49, 0xf7, 0x43, 0x95, 0xdd, 0x82, 0xaa,
	0x31, 0xf0, 0x1f, 0xab, 0x9a, 0xa9, 0x68, 0x57, 0x67, 0x44, 0x7b, 0x03, 0xd4, 0xbb, 0x0b, 0x13,
	0x18, 0x17, 0x54, 0x4e, 0x06, 0xab, 0x62, 0xa4, 0x89, 0xcf, 0x50, 0x4d, 0xbf, 0x7a, 0xbe, 0xd6,
	0x0c, 0x77, 0xf6, 0xe0, 0xfa, 0x1e, 0x1e, 0xd3, 0x24, 0x90, 0xcf, 0x77, 0x0f, 0xa6, 0x6b, 0x2d,
	0x73, 0xc4, 0x9a, 0xe9, 0x88, 0xf3, 0xa3, 0x05, 0xcd, 0x17, 0x87, 0x6f, 0x5e, 0xbf, 0xc5, 0xee,
	0x4b, 0x1c, 0xc6, 0xaa, 0x19, 0xf7, 0x0a, 0xf7, 0x0f, 0x05, 0x91, 0x35, 0x28, 0xf7, 0x2e, 0x6d,
	0x92, 0x0a, 0xd6, 0x4d, 0x3d, 0xc6, 0xc2, 0xa6, 0x1e, 0x23, 0xb9, 0x09, 0x56, 0x58, 0x90, 0x13,
	0x2b, 0x54, 0x68, 0xd1, 0x0c, 0xb3, 0xd4, 0xec, 0x2c, 0x9f, 0x3d, 0xf2, 0x4c, 0xe0, 0x73, 0xfd,
	0x53, 0xb8, 0x73, 0x0f, 0x2a, 0x2f, 0xde, 0xf5, 0x62, 0xb2, 0x06, 0x95, 0x1e, 0x0e, 0x55, 0x3c,
	0xd4, 0xba, 0xf8, 0x17, 0x3d, 0xe8, 0x26, 0x9c, 0x76, 0x35, 0xba, 0xbd, 0x0f, 0xad, 0x3d, 0xec,
	0x26, 0x27, 0x87, 0x28, 0x06, 0xcc, 0x43, 0xf2, 0x1f, 0xa8, 0x3c, 0xf3, 0x4e, 0x39, 0x39, 0xf7,
	0xfc, 0x95, 0x73, 0xbf, 0x9d, 0xa5, 0x4f, 0xbf, 0xff, 0xf9, 0xf3, 0x52, 0xd3, 0xa9, 0xb6, 0x7d,
	0x25, 0xfe, 0xc4, 0xda, 0xdc, 0xfe, 0xa5, 0x04, 0x8d, 0xbd, 0xa7, 0x99, 0xa2, 0xff, 0x42, 0xed,
	0x39, 0x4a, 0xfd, 0x42, 0x9a, 0x13, 0xaf, 0x95, 0x74, 0xd9, 0x50, 0xb0, 0xb3, 0xac, 0x55, 0xcd,
	0x3b, 0xf5, 0xb6, 0xdf, 0x6d, 0xab, 0x59, 0xf3, 0xc4, 0xda, 0x24, 0x2f, 0x01, 0xf6, 0x30, 0xc0,
	0xf4, 0x93, 0x40, 0xae, 0x86, 0xd1, 0xea, 0xf0, 0xac, 0x1f, 0xc9, 0xa1, 0xb3, 0xa2, 0xb5, 0x5c,
	0x73, 0x16, 0x33, 0x2d, 0x6d, 0x5f, 0xcb, 0x1b, 0x65, 0xe3, 0xef, 0x0b, 0xe4, 0x46, 0xfa, 0xe8,
	0xf3, 0x1f, 0x1c, 0x26, 0x4d, 0xba, 0x4c, 0xd9, 0xff, 0x00, 0x76, 0xf5, 0x8b, 0x88, 0x56, 0x36,
	0x16, 0xba, 0xaa, 0xfc, 0x2e, 0x34, 0xfe, 0xcf, 0x62, 0x1d, 0x99, 0x98, 0x4c, 0x3b, 0x71, 0x45,
	0x15, 0xf7, 0xad, 0x6e, 0x55, 0x7f, 0x39, 0x79, 0xf0, 0x7b, 0x00, 0x00, 0x00, 0xff, 0xff, 0x59,
	0x2f, 0xd9, 0x96, 0x7e, 0x11, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DebugServiceClient is the client API for DebugService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DebugServiceClient interface {
	Echo(ctx context.Context, in *common.String, opts ...grpc.CallOption) (*common.String, error)
}

type debugServiceClient struct {
	cc *grpc.ClientConn
}

func NewDebugServiceClient(cc *grpc.ClientConn) DebugServiceClient {
	return &debugServiceClient{cc}
}

func (c *debugServiceClient) Echo(ctx context.Context, in *common.String, opts ...grpc.CallOption) (*common.String, error) {
	out := new(common.String)
	err := c.cc.Invoke(ctx, "/api.DebugService/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DebugServiceServer is the server API for DebugService service.
type DebugServiceServer interface {
	Echo(context.Context, *common.String) (*common.String, error)
}

func RegisterDebugServiceServer(s *grpc.Server, srv DebugServiceServer) {
	s.RegisterService(&_DebugService_serviceDesc, srv)
}

func _DebugService_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.String)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DebugServiceServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DebugService/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DebugServiceServer).Echo(ctx, req.(*common.String))
	}
	return interceptor(ctx, in, info, handler)
}

var _DebugService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.DebugService",
	HandlerType: (*DebugServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _DebugService_Echo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// DBServiceClient is the client API for DBService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DBServiceClient interface {
	GetUser(ctx context.Context, in *common.Identifier, opts ...grpc.CallOption) (*User, error)
	DeleteUser(ctx context.Context, in *common.Identifier, opts ...grpc.CallOption) (*common.Empty, error)
	UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*User, error)
	CreateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error)
	ListUsers(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (DBService_ListUsersClient, error)
}

type dBServiceClient struct {
	cc *grpc.ClientConn
}

func NewDBServiceClient(cc *grpc.ClientConn) DBServiceClient {
	return &dBServiceClient{cc}
}

func (c *dBServiceClient) GetUser(ctx context.Context, in *common.Identifier, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/api.DBService/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dBServiceClient) DeleteUser(ctx context.Context, in *common.Identifier, opts ...grpc.CallOption) (*common.Empty, error) {
	out := new(common.Empty)
	err := c.cc.Invoke(ctx, "/api.DBService/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dBServiceClient) UpdateUser(ctx context.Context, in *UpdateUserRequest, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/api.DBService/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dBServiceClient) CreateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/api.DBService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dBServiceClient) ListUsers(ctx context.Context, in *common.Empty, opts ...grpc.CallOption) (DBService_ListUsersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DBService_serviceDesc.Streams[0], "/api.DBService/ListUsers", opts...)
	if err != nil {
		return nil, err
	}
	x := &dBServiceListUsersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DBService_ListUsersClient interface {
	Recv() (*User, error)
	grpc.ClientStream
}

type dBServiceListUsersClient struct {
	grpc.ClientStream
}

func (x *dBServiceListUsersClient) Recv() (*User, error) {
	m := new(User)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// DBServiceServer is the server API for DBService service.
type DBServiceServer interface {
	GetUser(context.Context, *common.Identifier) (*User, error)
	DeleteUser(context.Context, *common.Identifier) (*common.Empty, error)
	UpdateUser(context.Context, *UpdateUserRequest) (*User, error)
	CreateUser(context.Context, *User) (*User, error)
	ListUsers(*common.Empty, DBService_ListUsersServer) error
}

func RegisterDBServiceServer(s *grpc.Server, srv DBServiceServer) {
	s.RegisterService(&_DBService_serviceDesc, srv)
}

func _DBService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Identifier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DBServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DBService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DBServiceServer).GetUser(ctx, req.(*common.Identifier))
	}
	return interceptor(ctx, in, info, handler)
}

func _DBService_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Identifier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DBServiceServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DBService/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DBServiceServer).DeleteUser(ctx, req.(*common.Identifier))
	}
	return interceptor(ctx, in, info, handler)
}

func _DBService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DBServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DBService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DBServiceServer).UpdateUser(ctx, req.(*UpdateUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DBService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DBServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DBService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DBServiceServer).CreateUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _DBService_ListUsers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(common.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DBServiceServer).ListUsers(m, &dBServiceListUsersServer{stream})
}

type DBService_ListUsersServer interface {
	Send(*User) error
	grpc.ServerStream
}

type dBServiceListUsersServer struct {
	grpc.ServerStream
}

func (x *dBServiceListUsersServer) Send(m *User) error {
	return x.ServerStream.SendMsg(m)
}

var _DBService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.DBService",
	HandlerType: (*DBServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUser",
			Handler:    _DBService_GetUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _DBService_DeleteUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _DBService_UpdateUser_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _DBService_CreateUser_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListUsers",
			Handler:       _DBService_ListUsers_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}
