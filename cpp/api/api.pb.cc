// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

#include "api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace api {
class GetByEmailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GetByEmail>
      _instance;
} _GetByEmail_default_instance_;
class IDTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IDToken>
      _instance;
} _IDToken_default_instance_;
class UserMetadataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UserMetadata>
      _instance;
} _UserMetadata_default_instance_;
class AccessTokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<AccessToken>
      _instance;
} _AccessToken_default_instance_;
}  // namespace api
namespace protobuf_api_2eproto {
static void InitDefaultsGetByEmail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_GetByEmail_default_instance_;
    new (ptr) ::api::GetByEmail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::GetByEmail::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GetByEmail =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGetByEmail}, {}};

static void InitDefaultsIDToken() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_IDToken_default_instance_;
    new (ptr) ::api::IDToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::IDToken::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IDToken =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIDToken}, {}};

static void InitDefaultsUserMetadata() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_UserMetadata_default_instance_;
    new (ptr) ::api::UserMetadata();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::UserMetadata::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_UserMetadata =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsUserMetadata}, {}};

static void InitDefaultsAccessToken() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_AccessToken_default_instance_;
    new (ptr) ::api::AccessToken();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::AccessToken::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_AccessToken =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsAccessToken}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_GetByEmail.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IDToken.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UserMetadata.base);
  ::google::protobuf::internal::InitSCC(&scc_info_AccessToken.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::GetByEmail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::GetByEmail, email_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::IDToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::IDToken, iss_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::IDToken, sub_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::IDToken, aud_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::IDToken, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::IDToken, iat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::IDToken, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::IDToken, given_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::IDToken, family_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::IDToken, gender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::IDToken, birthdate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::IDToken, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::IDToken, picture_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserMetadata, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserMetadata, phone_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserMetadata, plan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserMetadata, pay_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UserMetadata, last_contact_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AccessToken, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AccessToken, iss_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AccessToken, sub_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AccessToken, aud_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AccessToken, azp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AccessToken, exp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AccessToken, iat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::AccessToken, scope_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::api::GetByEmail)},
  { 6, -1, sizeof(::api::IDToken)},
  { 23, -1, sizeof(::api::UserMetadata)},
  { 32, -1, sizeof(::api::AccessToken)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_GetByEmail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_IDToken_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_UserMetadata_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_AccessToken_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "api.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tapi.proto\022\003api\032\034google/api/annotations"
      ".proto\"\033\n\nGetByEmail\022\r\n\005email\030\001 \001(\t\"\304\001\n\007"
      "IDToken\022\013\n\003iss\030\001 \001(\t\022\013\n\003sub\030\002 \001(\t\022\013\n\003aud"
      "\030\003 \001(\t\022\013\n\003exp\030\004 \001(\003\022\013\n\003iat\030\005 \001(\003\022\014\n\004name"
      "\030\006 \001(\t\022\022\n\ngiven_name\030\007 \001(\t\022\023\n\013family_nam"
      "e\030\010 \001(\t\022\016\n\006gender\030\t \001(\t\022\021\n\tbirthdate\030\n \001"
      "(\t\022\r\n\005email\030\013 \001(\t\022\017\n\007picture\030\014 \001(\t\"T\n\014Us"
      "erMetadata\022\r\n\005phone\030\001 \001(\t\022\014\n\004plan\030\002 \001(\t\022"
      "\021\n\tpay_token\030\003 \001(\t\022\024\n\014last_contact\030\004 \001(\t"
      "\"j\n\013AccessToken\022\013\n\003iss\030\001 \001(\t\022\013\n\003sub\030\002 \001("
      "\t\022\013\n\003aud\030\003 \003(\t\022\013\n\003azp\030\004 \001(\t\022\013\n\003exp\030\005 \001(\003"
      "\022\013\n\003iat\030\006 \001(\003\022\r\n\005scope\030\007 \001(\t2T\n\tIDServic"
      "e\022G\n\nGetIDToken\022\017.api.GetByEmail\032\014.api.I"
      "DToken\"\032\202\323\344\223\002\024\"\017/api/id/{email}:\001*2`\n\rAc"
      "cessService\022O\n\nGetIDToken\022\017.api.GetByEma"
      "il\032\020.api.AccessToken\"\036\202\323\344\223\002\030\"\023/api/acces"
      "s/{email}:\001*b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 660);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_api_2eproto
namespace api {

// ===================================================================

void GetByEmail::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GetByEmail::kEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GetByEmail::GetByEmail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_GetByEmail.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.GetByEmail)
}
GetByEmail::GetByEmail(const GetByEmail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  // @@protoc_insertion_point(copy_constructor:api.GetByEmail)
}

void GetByEmail::SharedCtor() {
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GetByEmail::~GetByEmail() {
  // @@protoc_insertion_point(destructor:api.GetByEmail)
  SharedDtor();
}

void GetByEmail::SharedDtor() {
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GetByEmail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GetByEmail::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GetByEmail& GetByEmail::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_GetByEmail.base);
  return *internal_default_instance();
}


void GetByEmail::Clear() {
// @@protoc_insertion_point(message_clear_start:api.GetByEmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GetByEmail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.GetByEmail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.GetByEmail.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.GetByEmail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.GetByEmail)
  return false;
#undef DO_
}

void GetByEmail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.GetByEmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.GetByEmail.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->email(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.GetByEmail)
}

::google::protobuf::uint8* GetByEmail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.GetByEmail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string email = 1;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.GetByEmail.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->email(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.GetByEmail)
  return target;
}

size_t GetByEmail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.GetByEmail)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string email = 1;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetByEmail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.GetByEmail)
  GOOGLE_DCHECK_NE(&from, this);
  const GetByEmail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GetByEmail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.GetByEmail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.GetByEmail)
    MergeFrom(*source);
  }
}

void GetByEmail::MergeFrom(const GetByEmail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.GetByEmail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
}

void GetByEmail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.GetByEmail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetByEmail::CopyFrom(const GetByEmail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.GetByEmail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetByEmail::IsInitialized() const {
  return true;
}

void GetByEmail::Swap(GetByEmail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GetByEmail::InternalSwap(GetByEmail* other) {
  using std::swap;
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GetByEmail::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IDToken::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IDToken::kIssFieldNumber;
const int IDToken::kSubFieldNumber;
const int IDToken::kAudFieldNumber;
const int IDToken::kExpFieldNumber;
const int IDToken::kIatFieldNumber;
const int IDToken::kNameFieldNumber;
const int IDToken::kGivenNameFieldNumber;
const int IDToken::kFamilyNameFieldNumber;
const int IDToken::kGenderFieldNumber;
const int IDToken::kBirthdateFieldNumber;
const int IDToken::kEmailFieldNumber;
const int IDToken::kPictureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IDToken::IDToken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_IDToken.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.IDToken)
}
IDToken::IDToken(const IDToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  iss_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.iss().size() > 0) {
    iss_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iss_);
  }
  sub_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sub().size() > 0) {
    sub_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sub_);
  }
  aud_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.aud().size() > 0) {
    aud_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aud_);
  }
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  given_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.given_name().size() > 0) {
    given_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.given_name_);
  }
  family_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.family_name().size() > 0) {
    family_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.family_name_);
  }
  gender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gender().size() > 0) {
    gender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gender_);
  }
  birthdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.birthdate().size() > 0) {
    birthdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthdate_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  picture_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.picture().size() > 0) {
    picture_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.picture_);
  }
  ::memcpy(&exp_, &from.exp_,
    static_cast<size_t>(reinterpret_cast<char*>(&iat_) -
    reinterpret_cast<char*>(&exp_)) + sizeof(iat_));
  // @@protoc_insertion_point(copy_constructor:api.IDToken)
}

void IDToken::SharedCtor() {
  iss_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sub_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aud_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  given_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  family_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gender_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthdate_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picture_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&exp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iat_) -
      reinterpret_cast<char*>(&exp_)) + sizeof(iat_));
}

IDToken::~IDToken() {
  // @@protoc_insertion_point(destructor:api.IDToken)
  SharedDtor();
}

void IDToken::SharedDtor() {
  iss_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sub_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aud_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  given_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  family_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gender_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthdate_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picture_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IDToken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IDToken::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IDToken& IDToken::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_IDToken.base);
  return *internal_default_instance();
}


void IDToken::Clear() {
// @@protoc_insertion_point(message_clear_start:api.IDToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  iss_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sub_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  aud_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  given_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  family_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gender_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birthdate_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  picture_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&exp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iat_) -
      reinterpret_cast<char*>(&exp_)) + sizeof(iat_));
  _internal_metadata_.Clear();
}

bool IDToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.IDToken)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string iss = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iss()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->iss().data(), static_cast<int>(this->iss().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.IDToken.iss"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sub = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sub()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sub().data(), static_cast<int>(this->sub().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.IDToken.sub"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string aud = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_aud()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->aud().data(), static_cast<int>(this->aud().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.IDToken.aud"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 exp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 iat = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string name = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.IDToken.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string given_name = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_given_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->given_name().data(), static_cast<int>(this->given_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.IDToken.given_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string family_name = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_family_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->family_name().data(), static_cast<int>(this->family_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.IDToken.family_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string gender = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_gender()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->gender().data(), static_cast<int>(this->gender().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.IDToken.gender"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string birthdate = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_birthdate()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->birthdate().data(), static_cast<int>(this->birthdate().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.IDToken.birthdate"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string email = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.IDToken.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string picture = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_picture()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->picture().data(), static_cast<int>(this->picture().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.IDToken.picture"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.IDToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.IDToken)
  return false;
#undef DO_
}

void IDToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.IDToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string iss = 1;
  if (this->iss().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iss().data(), static_cast<int>(this->iss().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.iss");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->iss(), output);
  }

  // string sub = 2;
  if (this->sub().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sub().data(), static_cast<int>(this->sub().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.sub");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sub(), output);
  }

  // string aud = 3;
  if (this->aud().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->aud().data(), static_cast<int>(this->aud().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.aud");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->aud(), output);
  }

  // int64 exp = 4;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->exp(), output);
  }

  // int64 iat = 5;
  if (this->iat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->iat(), output);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->name(), output);
  }

  // string given_name = 7;
  if (this->given_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->given_name().data(), static_cast<int>(this->given_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.given_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->given_name(), output);
  }

  // string family_name = 8;
  if (this->family_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->family_name().data(), static_cast<int>(this->family_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.family_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->family_name(), output);
  }

  // string gender = 9;
  if (this->gender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gender().data(), static_cast<int>(this->gender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.gender");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->gender(), output);
  }

  // string birthdate = 10;
  if (this->birthdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthdate().data(), static_cast<int>(this->birthdate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.birthdate");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->birthdate(), output);
  }

  // string email = 11;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->email(), output);
  }

  // string picture = 12;
  if (this->picture().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->picture().data(), static_cast<int>(this->picture().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.picture");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->picture(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.IDToken)
}

::google::protobuf::uint8* IDToken::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.IDToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string iss = 1;
  if (this->iss().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iss().data(), static_cast<int>(this->iss().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.iss");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->iss(), target);
  }

  // string sub = 2;
  if (this->sub().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sub().data(), static_cast<int>(this->sub().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.sub");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sub(), target);
  }

  // string aud = 3;
  if (this->aud().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->aud().data(), static_cast<int>(this->aud().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.aud");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->aud(), target);
  }

  // int64 exp = 4;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->exp(), target);
  }

  // int64 iat = 5;
  if (this->iat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->iat(), target);
  }

  // string name = 6;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->name(), target);
  }

  // string given_name = 7;
  if (this->given_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->given_name().data(), static_cast<int>(this->given_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.given_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->given_name(), target);
  }

  // string family_name = 8;
  if (this->family_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->family_name().data(), static_cast<int>(this->family_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.family_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->family_name(), target);
  }

  // string gender = 9;
  if (this->gender().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->gender().data(), static_cast<int>(this->gender().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.gender");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->gender(), target);
  }

  // string birthdate = 10;
  if (this->birthdate().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->birthdate().data(), static_cast<int>(this->birthdate().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.birthdate");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->birthdate(), target);
  }

  // string email = 11;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->email(), target);
  }

  // string picture = 12;
  if (this->picture().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->picture().data(), static_cast<int>(this->picture().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.IDToken.picture");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->picture(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.IDToken)
  return target;
}

size_t IDToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.IDToken)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string iss = 1;
  if (this->iss().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iss());
  }

  // string sub = 2;
  if (this->sub().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sub());
  }

  // string aud = 3;
  if (this->aud().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->aud());
  }

  // string name = 6;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string given_name = 7;
  if (this->given_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->given_name());
  }

  // string family_name = 8;
  if (this->family_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->family_name());
  }

  // string gender = 9;
  if (this->gender().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->gender());
  }

  // string birthdate = 10;
  if (this->birthdate().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->birthdate());
  }

  // string email = 11;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string picture = 12;
  if (this->picture().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->picture());
  }

  // int64 exp = 4;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->exp());
  }

  // int64 iat = 5;
  if (this->iat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->iat());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.IDToken)
  GOOGLE_DCHECK_NE(&from, this);
  const IDToken* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IDToken>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.IDToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.IDToken)
    MergeFrom(*source);
  }
}

void IDToken::MergeFrom(const IDToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.IDToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.iss().size() > 0) {

    iss_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iss_);
  }
  if (from.sub().size() > 0) {

    sub_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sub_);
  }
  if (from.aud().size() > 0) {

    aud_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.aud_);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.given_name().size() > 0) {

    given_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.given_name_);
  }
  if (from.family_name().size() > 0) {

    family_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.family_name_);
  }
  if (from.gender().size() > 0) {

    gender_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gender_);
  }
  if (from.birthdate().size() > 0) {

    birthdate_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birthdate_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.picture().size() > 0) {

    picture_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.picture_);
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.iat() != 0) {
    set_iat(from.iat());
  }
}

void IDToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.IDToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDToken::CopyFrom(const IDToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.IDToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDToken::IsInitialized() const {
  return true;
}

void IDToken::Swap(IDToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IDToken::InternalSwap(IDToken* other) {
  using std::swap;
  iss_.Swap(&other->iss_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sub_.Swap(&other->sub_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  aud_.Swap(&other->aud_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  given_name_.Swap(&other->given_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  family_name_.Swap(&other->family_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gender_.Swap(&other->gender_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  birthdate_.Swap(&other->birthdate_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  email_.Swap(&other->email_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  picture_.Swap(&other->picture_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(exp_, other->exp_);
  swap(iat_, other->iat_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IDToken::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UserMetadata::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UserMetadata::kPhoneFieldNumber;
const int UserMetadata::kPlanFieldNumber;
const int UserMetadata::kPayTokenFieldNumber;
const int UserMetadata::kLastContactFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UserMetadata::UserMetadata()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_UserMetadata.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.UserMetadata)
}
UserMetadata::UserMetadata(const UserMetadata& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.plan().size() > 0) {
    plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plan_);
  }
  pay_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pay_token().size() > 0) {
    pay_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pay_token_);
  }
  last_contact_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.last_contact().size() > 0) {
    last_contact_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_contact_);
  }
  // @@protoc_insertion_point(copy_constructor:api.UserMetadata)
}

void UserMetadata::SharedCtor() {
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plan_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_contact_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

UserMetadata::~UserMetadata() {
  // @@protoc_insertion_point(destructor:api.UserMetadata)
  SharedDtor();
}

void UserMetadata::SharedDtor() {
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plan_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_contact_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UserMetadata::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UserMetadata::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UserMetadata& UserMetadata::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_UserMetadata.base);
  return *internal_default_instance();
}


void UserMetadata::Clear() {
// @@protoc_insertion_point(message_clear_start:api.UserMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  plan_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pay_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  last_contact_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UserMetadata::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.UserMetadata)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string phone = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.UserMetadata.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string plan = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_plan()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->plan().data(), static_cast<int>(this->plan().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.UserMetadata.plan"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string pay_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pay_token()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->pay_token().data(), static_cast<int>(this->pay_token().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.UserMetadata.pay_token"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string last_contact = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_last_contact()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->last_contact().data(), static_cast<int>(this->last_contact().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.UserMetadata.last_contact"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.UserMetadata)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.UserMetadata)
  return false;
#undef DO_
}

void UserMetadata::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.UserMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string phone = 1;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UserMetadata.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->phone(), output);
  }

  // string plan = 2;
  if (this->plan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plan().data(), static_cast<int>(this->plan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UserMetadata.plan");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->plan(), output);
  }

  // string pay_token = 3;
  if (this->pay_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pay_token().data(), static_cast<int>(this->pay_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UserMetadata.pay_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->pay_token(), output);
  }

  // string last_contact = 4;
  if (this->last_contact().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_contact().data(), static_cast<int>(this->last_contact().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UserMetadata.last_contact");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->last_contact(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.UserMetadata)
}

::google::protobuf::uint8* UserMetadata::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.UserMetadata)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string phone = 1;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UserMetadata.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->phone(), target);
  }

  // string plan = 2;
  if (this->plan().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->plan().data(), static_cast<int>(this->plan().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UserMetadata.plan");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->plan(), target);
  }

  // string pay_token = 3;
  if (this->pay_token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->pay_token().data(), static_cast<int>(this->pay_token().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UserMetadata.pay_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->pay_token(), target);
  }

  // string last_contact = 4;
  if (this->last_contact().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->last_contact().data(), static_cast<int>(this->last_contact().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.UserMetadata.last_contact");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->last_contact(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.UserMetadata)
  return target;
}

size_t UserMetadata::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.UserMetadata)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string phone = 1;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  // string plan = 2;
  if (this->plan().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->plan());
  }

  // string pay_token = 3;
  if (this->pay_token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->pay_token());
  }

  // string last_contact = 4;
  if (this->last_contact().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->last_contact());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UserMetadata::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.UserMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  const UserMetadata* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UserMetadata>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.UserMetadata)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.UserMetadata)
    MergeFrom(*source);
  }
}

void UserMetadata::MergeFrom(const UserMetadata& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.UserMetadata)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.plan().size() > 0) {

    plan_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.plan_);
  }
  if (from.pay_token().size() > 0) {

    pay_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pay_token_);
  }
  if (from.last_contact().size() > 0) {

    last_contact_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.last_contact_);
  }
}

void UserMetadata::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.UserMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UserMetadata::CopyFrom(const UserMetadata& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.UserMetadata)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserMetadata::IsInitialized() const {
  return true;
}

void UserMetadata::Swap(UserMetadata* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UserMetadata::InternalSwap(UserMetadata* other) {
  using std::swap;
  phone_.Swap(&other->phone_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  plan_.Swap(&other->plan_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pay_token_.Swap(&other->pay_token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  last_contact_.Swap(&other->last_contact_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UserMetadata::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void AccessToken::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccessToken::kIssFieldNumber;
const int AccessToken::kSubFieldNumber;
const int AccessToken::kAudFieldNumber;
const int AccessToken::kAzpFieldNumber;
const int AccessToken::kExpFieldNumber;
const int AccessToken::kIatFieldNumber;
const int AccessToken::kScopeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccessToken::AccessToken()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_AccessToken.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.AccessToken)
}
AccessToken::AccessToken(const AccessToken& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      aud_(from.aud_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  iss_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.iss().size() > 0) {
    iss_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iss_);
  }
  sub_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sub().size() > 0) {
    sub_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sub_);
  }
  azp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.azp().size() > 0) {
    azp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.azp_);
  }
  scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.scope().size() > 0) {
    scope_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scope_);
  }
  ::memcpy(&exp_, &from.exp_,
    static_cast<size_t>(reinterpret_cast<char*>(&iat_) -
    reinterpret_cast<char*>(&exp_)) + sizeof(iat_));
  // @@protoc_insertion_point(copy_constructor:api.AccessToken)
}

void AccessToken::SharedCtor() {
  iss_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sub_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  azp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scope_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&exp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iat_) -
      reinterpret_cast<char*>(&exp_)) + sizeof(iat_));
}

AccessToken::~AccessToken() {
  // @@protoc_insertion_point(destructor:api.AccessToken)
  SharedDtor();
}

void AccessToken::SharedDtor() {
  iss_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sub_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  azp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scope_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccessToken::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* AccessToken::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccessToken& AccessToken::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_AccessToken.base);
  return *internal_default_instance();
}


void AccessToken::Clear() {
// @@protoc_insertion_point(message_clear_start:api.AccessToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  aud_.Clear();
  iss_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sub_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  azp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scope_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&exp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&iat_) -
      reinterpret_cast<char*>(&exp_)) + sizeof(iat_));
  _internal_metadata_.Clear();
}

bool AccessToken::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.AccessToken)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string iss = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_iss()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->iss().data(), static_cast<int>(this->iss().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AccessToken.iss"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string sub = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sub()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->sub().data(), static_cast<int>(this->sub().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AccessToken.sub"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string aud = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_aud()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->aud(this->aud_size() - 1).data(),
            static_cast<int>(this->aud(this->aud_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AccessToken.aud"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string azp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_azp()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->azp().data(), static_cast<int>(this->azp().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AccessToken.azp"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 exp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &exp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 iat = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &iat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string scope = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scope()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->scope().data(), static_cast<int>(this->scope().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "api.AccessToken.scope"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.AccessToken)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.AccessToken)
  return false;
#undef DO_
}

void AccessToken::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.AccessToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string iss = 1;
  if (this->iss().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iss().data(), static_cast<int>(this->iss().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AccessToken.iss");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->iss(), output);
  }

  // string sub = 2;
  if (this->sub().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sub().data(), static_cast<int>(this->sub().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AccessToken.sub");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->sub(), output);
  }

  // repeated string aud = 3;
  for (int i = 0, n = this->aud_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->aud(i).data(), static_cast<int>(this->aud(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AccessToken.aud");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->aud(i), output);
  }

  // string azp = 4;
  if (this->azp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->azp().data(), static_cast<int>(this->azp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AccessToken.azp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->azp(), output);
  }

  // int64 exp = 5;
  if (this->exp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->exp(), output);
  }

  // int64 iat = 6;
  if (this->iat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->iat(), output);
  }

  // string scope = 7;
  if (this->scope().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scope().data(), static_cast<int>(this->scope().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AccessToken.scope");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->scope(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.AccessToken)
}

::google::protobuf::uint8* AccessToken::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.AccessToken)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string iss = 1;
  if (this->iss().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->iss().data(), static_cast<int>(this->iss().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AccessToken.iss");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->iss(), target);
  }

  // string sub = 2;
  if (this->sub().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->sub().data(), static_cast<int>(this->sub().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AccessToken.sub");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->sub(), target);
  }

  // repeated string aud = 3;
  for (int i = 0, n = this->aud_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->aud(i).data(), static_cast<int>(this->aud(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AccessToken.aud");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->aud(i), target);
  }

  // string azp = 4;
  if (this->azp().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->azp().data(), static_cast<int>(this->azp().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AccessToken.azp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->azp(), target);
  }

  // int64 exp = 5;
  if (this->exp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->exp(), target);
  }

  // int64 iat = 6;
  if (this->iat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->iat(), target);
  }

  // string scope = 7;
  if (this->scope().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->scope().data(), static_cast<int>(this->scope().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "api.AccessToken.scope");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->scope(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.AccessToken)
  return target;
}

size_t AccessToken::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.AccessToken)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string aud = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->aud_size());
  for (int i = 0, n = this->aud_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->aud(i));
  }

  // string iss = 1;
  if (this->iss().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->iss());
  }

  // string sub = 2;
  if (this->sub().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sub());
  }

  // string azp = 4;
  if (this->azp().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->azp());
  }

  // string scope = 7;
  if (this->scope().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->scope());
  }

  // int64 exp = 5;
  if (this->exp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->exp());
  }

  // int64 iat = 6;
  if (this->iat() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->iat());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AccessToken::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.AccessToken)
  GOOGLE_DCHECK_NE(&from, this);
  const AccessToken* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccessToken>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.AccessToken)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.AccessToken)
    MergeFrom(*source);
  }
}

void AccessToken::MergeFrom(const AccessToken& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.AccessToken)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  aud_.MergeFrom(from.aud_);
  if (from.iss().size() > 0) {

    iss_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.iss_);
  }
  if (from.sub().size() > 0) {

    sub_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sub_);
  }
  if (from.azp().size() > 0) {

    azp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.azp_);
  }
  if (from.scope().size() > 0) {

    scope_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scope_);
  }
  if (from.exp() != 0) {
    set_exp(from.exp());
  }
  if (from.iat() != 0) {
    set_iat(from.iat());
  }
}

void AccessToken::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.AccessToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccessToken::CopyFrom(const AccessToken& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.AccessToken)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccessToken::IsInitialized() const {
  return true;
}

void AccessToken::Swap(AccessToken* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccessToken::InternalSwap(AccessToken* other) {
  using std::swap;
  aud_.InternalSwap(CastToBase(&other->aud_));
  iss_.Swap(&other->iss_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sub_.Swap(&other->sub_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  azp_.Swap(&other->azp_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  scope_.Swap(&other->scope_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(exp_, other->exp_);
  swap(iat_, other->iat_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata AccessToken::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::GetByEmail* Arena::CreateMaybeMessage< ::api::GetByEmail >(Arena* arena) {
  return Arena::CreateInternal< ::api::GetByEmail >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::IDToken* Arena::CreateMaybeMessage< ::api::IDToken >(Arena* arena) {
  return Arena::CreateInternal< ::api::IDToken >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::UserMetadata* Arena::CreateMaybeMessage< ::api::UserMetadata >(Arena* arena) {
  return Arena::CreateInternal< ::api::UserMetadata >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::AccessToken* Arena::CreateMaybeMessage< ::api::AccessToken >(Arena* arena) {
  return Arena::CreateInternal< ::api::AccessToken >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
