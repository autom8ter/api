// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common/common.proto

#include "common/common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_common_2fcommon_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Bytes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_String;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StringMap;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StringMap_StringMapEntry_DoNotUse;
}  // namespace protobuf_common_2fcommon_2eproto
namespace common {
class StringDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<String>
      _instance;
} _String_default_instance_;
class BytesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Bytes>
      _instance;
} _Bytes_default_instance_;
class StringArrayDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringArray>
      _instance;
} _StringArray_default_instance_;
class StringMap_StringMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringMap_StringMapEntry_DoNotUse>
      _instance;
} _StringMap_StringMapEntry_DoNotUse_default_instance_;
class StringMapDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StringMap>
      _instance;
} _StringMap_default_instance_;
class EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Empty>
      _instance;
} _Empty_default_instance_;
class IdentifierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Identifier>
      _instance;
} _Identifier_default_instance_;
class Int64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Int64>
      _instance;
} _Int64_default_instance_;
class Float64DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Float64>
      _instance;
} _Float64_default_instance_;
class RGBADefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RGBA>
      _instance;
} _RGBA_default_instance_;
class HTTPRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HTTPRequest>
      _instance;
} _HTTPRequest_default_instance_;
class TokenDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Token>
      _instance;
} _Token_default_instance_;
}  // namespace common
namespace protobuf_common_2fcommon_2eproto {
static void InitDefaultsString() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_String_default_instance_;
    new (ptr) ::common::String();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::String::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_String =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsString}, {}};

static void InitDefaultsBytes() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_Bytes_default_instance_;
    new (ptr) ::common::Bytes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::Bytes::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Bytes =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsBytes}, {}};

static void InitDefaultsStringArray() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_StringArray_default_instance_;
    new (ptr) ::common::StringArray();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::StringArray::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StringArray =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStringArray}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsStringMap_StringMapEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_StringMap_StringMapEntry_DoNotUse_default_instance_;
    new (ptr) ::common::StringMap_StringMapEntry_DoNotUse();
  }
  ::common::StringMap_StringMapEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StringMap_StringMapEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStringMap_StringMapEntry_DoNotUse}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsStringMap() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_StringMap_default_instance_;
    new (ptr) ::common::StringMap();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::StringMap::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_StringMap =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsStringMap}, {
      &protobuf_common_2fcommon_2eproto::scc_info_StringMap_StringMapEntry_DoNotUse.base,}};

static void InitDefaultsEmpty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_Empty_default_instance_;
    new (ptr) ::common::Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::Empty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Empty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmpty}, {}};

static void InitDefaultsIdentifier() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_Identifier_default_instance_;
    new (ptr) ::common::Identifier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::Identifier::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Identifier =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsIdentifier}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsInt64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_Int64_default_instance_;
    new (ptr) ::common::Int64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::Int64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Int64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsInt64}, {}};

static void InitDefaultsFloat64() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_Float64_default_instance_;
    new (ptr) ::common::Float64();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::Float64::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Float64 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFloat64}, {}};

static void InitDefaultsRGBA() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_RGBA_default_instance_;
    new (ptr) ::common::RGBA();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::RGBA::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RGBA =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRGBA}, {
      &protobuf_common_2fcommon_2eproto::scc_info_Int64.base,}};

static void InitDefaultsHTTPRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_HTTPRequest_default_instance_;
    new (ptr) ::common::HTTPRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::HTTPRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_HTTPRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsHTTPRequest}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringMap.base,
      &protobuf_common_2fcommon_2eproto::scc_info_Bytes.base,}};

static void InitDefaultsToken() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::common::_Token_default_instance_;
    new (ptr) ::common::Token();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::common::Token::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Token =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsToken}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_String.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Bytes.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StringArray.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StringMap_StringMapEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StringMap.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Empty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Identifier.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Int64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Float64.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RGBA.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HTTPRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Token.base);
}

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::String, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::String, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Bytes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Bytes, bits_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::StringArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::StringArray, strings_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::StringMap_StringMapEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::StringMap_StringMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::StringMap_StringMapEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::StringMap_StringMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::StringMap, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::StringMap, string_map_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Identifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Identifier, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Int64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Int64, num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Float64, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Float64, num_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::RGBA, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::RGBA, r_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::RGBA, g_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::RGBA, b_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::RGBA, a_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::HTTPRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::HTTPRequest, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::HTTPRequest, url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::HTTPRequest, form_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::HTTPRequest, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Token, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Token, access_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Token, token_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Token, refresh_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Token, expiry_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::common::Token, id_token_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::common::String)},
  { 6, -1, sizeof(::common::Bytes)},
  { 12, -1, sizeof(::common::StringArray)},
  { 18, 25, sizeof(::common::StringMap_StringMapEntry_DoNotUse)},
  { 27, -1, sizeof(::common::StringMap)},
  { 33, -1, sizeof(::common::Empty)},
  { 38, -1, sizeof(::common::Identifier)},
  { 44, -1, sizeof(::common::Int64)},
  { 50, -1, sizeof(::common::Float64)},
  { 56, -1, sizeof(::common::RGBA)},
  { 65, -1, sizeof(::common::HTTPRequest)},
  { 74, -1, sizeof(::common::Token)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_String_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_Bytes_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_StringArray_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_StringMap_StringMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_StringMap_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_Identifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_Int64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_Float64_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_RGBA_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_HTTPRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::common::_Token_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "common/common.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023common/common.proto\022\006common\"\026\n\006String\022"
      "\014\n\004text\030\001 \001(\t\"\025\n\005Bytes\022\014\n\004bits\030\001 \001(\014\".\n\013"
      "StringArray\022\037\n\007strings\030\001 \003(\0132\016.common.St"
      "ring\"\203\001\n\tStringMap\0224\n\nstring_map\030\001 \003(\0132 "
      ".common.StringMap.StringMapEntry\032@\n\016Stri"
      "ngMapEntry\022\013\n\003key\030\001 \001(\t\022\035\n\005value\030\002 \001(\0132\016"
      ".common.String:\0028\001\"\007\n\005Empty\"(\n\nIdentifie"
      "r\022\032\n\002id\030\001 \001(\0132\016.common.String\"\024\n\005Int64\022\013"
      "\n\003num\030\001 \001(\003\"\026\n\007Float64\022\013\n\003num\030\001 \001(\001\"n\n\004R"
      "GBA\022\030\n\001r\030\001 \001(\0132\r.common.Int64\022\030\n\001g\030\002 \001(\013"
      "2\r.common.Int64\022\030\n\001b\030\003 \001(\0132\r.common.Int6"
      "4\022\030\n\001a\030\004 \001(\0132\r.common.Int64\"\214\001\n\013HTTPRequ"
      "est\022\"\n\006method\030\001 \001(\0162\022.common.HTTPMethod\022"
      "\033\n\003url\030\002 \001(\0132\016.common.String\022\037\n\004form\030\003 \001"
      "(\0132\021.common.StringMap\022\033\n\004body\030\004 \001(\0132\r.co"
      "mmon.Bytes\"\272\001\n\005Token\022$\n\014access_token\030\001 \001"
      "(\0132\016.common.String\022\"\n\ntoken_type\030\002 \001(\0132\016"
      ".common.String\022%\n\rrefresh_token\030\003 \001(\0132\016."
      "common.String\022\036\n\006expiry\030\004 \001(\0132\016.common.S"
      "tring\022 \n\010id_token\030\005 \001(\0132\016.common.String*"
      "*\n\nHTTPMethod\022\007\n\003GET\020\000\022\010\n\004POST\020\001\022\t\n\005PATC"
      "H\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 851);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "common/common.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_common_2fcommon_2eproto
namespace common {
const ::google::protobuf::EnumDescriptor* HTTPMethod_descriptor() {
  protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_common_2fcommon_2eproto::file_level_enum_descriptors[0];
}
bool HTTPMethod_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void String::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int String::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

String::String()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2fcommon_2eproto::scc_info_String.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.String)
}
String::String(const String& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:common.String)
}

void String::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

String::~String() {
  // @@protoc_insertion_point(destructor:common.String)
  SharedDtor();
}

void String::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void String::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* String::descriptor() {
  ::protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const String& String::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2fcommon_2eproto::scc_info_String.base);
  return *internal_default_instance();
}


void String::Clear() {
// @@protoc_insertion_point(message_clear_start:common.String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool String::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.String)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), static_cast<int>(this->text().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.String.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.String)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.String)
  return false;
#undef DO_
}

void String::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.String.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.String)
}

::google::protobuf::uint8* String::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.String)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), static_cast<int>(this->text().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "common.String.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.String)
  return target;
}

size_t String::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.String)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void String::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.String)
  GOOGLE_DCHECK_NE(&from, this);
  const String* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const String>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.String)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.String)
    MergeFrom(*source);
  }
}

void String::MergeFrom(const String& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.String)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void String::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void String::CopyFrom(const String& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.String)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool String::IsInitialized() const {
  return true;
}

void String::Swap(String* other) {
  if (other == this) return;
  InternalSwap(other);
}
void String::InternalSwap(String* other) {
  using std::swap;
  text_.Swap(&other->text_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata String::GetMetadata() const {
  protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Bytes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bytes::kBitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bytes::Bytes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2fcommon_2eproto::scc_info_Bytes.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.Bytes)
}
Bytes::Bytes(const Bytes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bits_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.bits().size() > 0) {
    bits_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bits_);
  }
  // @@protoc_insertion_point(copy_constructor:common.Bytes)
}

void Bytes::SharedCtor() {
  bits_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Bytes::~Bytes() {
  // @@protoc_insertion_point(destructor:common.Bytes)
  SharedDtor();
}

void Bytes::SharedDtor() {
  bits_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Bytes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Bytes::descriptor() {
  ::protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bytes& Bytes::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2fcommon_2eproto::scc_info_Bytes.base);
  return *internal_default_instance();
}


void Bytes::Clear() {
// @@protoc_insertion_point(message_clear_start:common.Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  bits_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Bytes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.Bytes)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes bits = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_bits()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.Bytes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.Bytes)
  return false;
#undef DO_
}

void Bytes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes bits = 1;
  if (this->bits().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->bits(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.Bytes)
}

::google::protobuf::uint8* Bytes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.Bytes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes bits = 1;
  if (this->bits().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->bits(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.Bytes)
  return target;
}

size_t Bytes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.Bytes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes bits = 1;
  if (this->bits().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->bits());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Bytes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  const Bytes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bytes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.Bytes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.Bytes)
    MergeFrom(*source);
  }
}

void Bytes::MergeFrom(const Bytes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.Bytes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.bits().size() > 0) {

    bits_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bits_);
  }
}

void Bytes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bytes::CopyFrom(const Bytes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.Bytes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bytes::IsInitialized() const {
  return true;
}

void Bytes::Swap(Bytes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bytes::InternalSwap(Bytes* other) {
  using std::swap;
  bits_.Swap(&other->bits_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Bytes::GetMetadata() const {
  protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StringArray::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringArray::kStringsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringArray::StringArray()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2fcommon_2eproto::scc_info_StringArray.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.StringArray)
}
StringArray::StringArray(const StringArray& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      strings_(from.strings_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.StringArray)
}

void StringArray::SharedCtor() {
}

StringArray::~StringArray() {
  // @@protoc_insertion_point(destructor:common.StringArray)
  SharedDtor();
}

void StringArray::SharedDtor() {
}

void StringArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StringArray::descriptor() {
  ::protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringArray& StringArray::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2fcommon_2eproto::scc_info_StringArray.base);
  return *internal_default_instance();
}


void StringArray::Clear() {
// @@protoc_insertion_point(message_clear_start:common.StringArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  strings_.Clear();
  _internal_metadata_.Clear();
}

bool StringArray::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.StringArray)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .common.String strings = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_strings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.StringArray)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.StringArray)
  return false;
#undef DO_
}

void StringArray::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.StringArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.String strings = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->strings_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->strings(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.StringArray)
}

::google::protobuf::uint8* StringArray::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.StringArray)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .common.String strings = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->strings_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->strings(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.StringArray)
  return target;
}

size_t StringArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.StringArray)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .common.String strings = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->strings_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->strings(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringArray::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.StringArray)
  GOOGLE_DCHECK_NE(&from, this);
  const StringArray* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringArray>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.StringArray)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.StringArray)
    MergeFrom(*source);
  }
}

void StringArray::MergeFrom(const StringArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.StringArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  strings_.MergeFrom(from.strings_);
}

void StringArray::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.StringArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringArray::CopyFrom(const StringArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.StringArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringArray::IsInitialized() const {
  return true;
}

void StringArray::Swap(StringArray* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringArray::InternalSwap(StringArray* other) {
  using std::swap;
  CastToBase(&strings_)->InternalSwap(CastToBase(&other->strings_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StringArray::GetMetadata() const {
  protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

StringMap_StringMapEntry_DoNotUse::StringMap_StringMapEntry_DoNotUse() {}
StringMap_StringMapEntry_DoNotUse::StringMap_StringMapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void StringMap_StringMapEntry_DoNotUse::MergeFrom(const StringMap_StringMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata StringMap_StringMapEntry_DoNotUse::GetMetadata() const {
  ::protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[3];
}
void StringMap_StringMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void StringMap::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringMap::kStringMapFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringMap::StringMap()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2fcommon_2eproto::scc_info_StringMap.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.StringMap)
}
StringMap::StringMap(const StringMap& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  string_map_.MergeFrom(from.string_map_);
  // @@protoc_insertion_point(copy_constructor:common.StringMap)
}

void StringMap::SharedCtor() {
}

StringMap::~StringMap() {
  // @@protoc_insertion_point(destructor:common.StringMap)
  SharedDtor();
}

void StringMap::SharedDtor() {
}

void StringMap::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StringMap::descriptor() {
  ::protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringMap& StringMap::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2fcommon_2eproto::scc_info_StringMap.base);
  return *internal_default_instance();
}


void StringMap::Clear() {
// @@protoc_insertion_point(message_clear_start:common.StringMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  string_map_.Clear();
  _internal_metadata_.Clear();
}

bool StringMap::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.StringMap)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .common.String> string_map = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          StringMap_StringMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              StringMap_StringMapEntry_DoNotUse,
              ::std::string, ::common::String,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::common::String > > parser(&string_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "common.StringMap.StringMapEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.StringMap)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.StringMap)
  return false;
#undef DO_
}

void StringMap::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.StringMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .common.String> string_map = 1;
  if (!this->string_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::common::String >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "common.StringMap.StringMapEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->string_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->string_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::common::String >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::common::String >::const_iterator
          it = this->string_map().begin();
          it != this->string_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<StringMap_StringMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(string_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<StringMap_StringMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::common::String >::const_iterator
          it = this->string_map().begin();
          it != this->string_map().end(); ++it) {
        entry.reset(string_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.StringMap)
}

::google::protobuf::uint8* StringMap::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.StringMap)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .common.String> string_map = 1;
  if (!this->string_map().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::common::String >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "common.StringMap.StringMapEntry.key");
      }
    };

    if (deterministic &&
        this->string_map().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->string_map().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::common::String >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::common::String >::const_iterator
          it = this->string_map().begin();
          it != this->string_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<StringMap_StringMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(string_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<StringMap_StringMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::common::String >::const_iterator
          it = this->string_map().begin();
          it != this->string_map().end(); ++it) {
        entry.reset(string_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.StringMap)
  return target;
}

size_t StringMap::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.StringMap)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .common.String> string_map = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->string_map_size());
  {
    ::std::unique_ptr<StringMap_StringMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::common::String >::const_iterator
        it = this->string_map().begin();
        it != this->string_map().end(); ++it) {
      entry.reset(string_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StringMap::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.StringMap)
  GOOGLE_DCHECK_NE(&from, this);
  const StringMap* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StringMap>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.StringMap)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.StringMap)
    MergeFrom(*source);
  }
}

void StringMap::MergeFrom(const StringMap& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.StringMap)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  string_map_.MergeFrom(from.string_map_);
}

void StringMap::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.StringMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringMap::CopyFrom(const StringMap& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.StringMap)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringMap::IsInitialized() const {
  return true;
}

void StringMap::Swap(StringMap* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringMap::InternalSwap(StringMap* other) {
  using std::swap;
  string_map_.Swap(&other->string_map_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StringMap::GetMetadata() const {
  protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2fcommon_2eproto::scc_info_Empty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:common.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:common.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  ::protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Empty& Empty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2fcommon_2eproto::scc_info_Empty.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:common.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.Empty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:common.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.Empty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Identifier::InitAsDefaultInstance() {
  ::common::_Identifier_default_instance_._instance.get_mutable()->id_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Identifier::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Identifier::Identifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.Identifier)
}
Identifier::Identifier(const Identifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::common::String(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common.Identifier)
}

void Identifier::SharedCtor() {
  id_ = NULL;
}

Identifier::~Identifier() {
  // @@protoc_insertion_point(destructor:common.Identifier)
  SharedDtor();
}

void Identifier::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void Identifier::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Identifier::descriptor() {
  ::protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Identifier& Identifier::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2fcommon_2eproto::scc_info_Identifier.base);
  return *internal_default_instance();
}


void Identifier::Clear() {
// @@protoc_insertion_point(message_clear_start:common.Identifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool Identifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.Identifier)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.Identifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.Identifier)
  return false;
#undef DO_
}

void Identifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.Identifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.Identifier)
}

::google::protobuf::uint8* Identifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.Identifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.Identifier)
  return target;
}

size_t Identifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.Identifier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Identifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.Identifier)
  GOOGLE_DCHECK_NE(&from, this);
  const Identifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Identifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.Identifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.Identifier)
    MergeFrom(*source);
  }
}

void Identifier::MergeFrom(const Identifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.Identifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::common::String::MergeFrom(from.id());
  }
}

void Identifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.Identifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identifier::CopyFrom(const Identifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.Identifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identifier::IsInitialized() const {
  return true;
}

void Identifier::Swap(Identifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Identifier::InternalSwap(Identifier* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Identifier::GetMetadata() const {
  protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Int64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Int64::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Int64::Int64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2fcommon_2eproto::scc_info_Int64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.Int64)
}
Int64::Int64(const Int64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  num_ = from.num_;
  // @@protoc_insertion_point(copy_constructor:common.Int64)
}

void Int64::SharedCtor() {
  num_ = GOOGLE_LONGLONG(0);
}

Int64::~Int64() {
  // @@protoc_insertion_point(destructor:common.Int64)
  SharedDtor();
}

void Int64::SharedDtor() {
}

void Int64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Int64::descriptor() {
  ::protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Int64& Int64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2fcommon_2eproto::scc_info_Int64.base);
  return *internal_default_instance();
}


void Int64::Clear() {
// @@protoc_insertion_point(message_clear_start:common.Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  num_ = GOOGLE_LONGLONG(0);
  _internal_metadata_.Clear();
}

bool Int64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.Int64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.Int64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.Int64)
  return false;
#undef DO_
}

void Int64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 num = 1;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.Int64)
}

::google::protobuf::uint8* Int64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.Int64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 num = 1;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.Int64)
  return target;
}

size_t Int64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.Int64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int64 num = 1;
  if (this->num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->num());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Int64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.Int64)
  GOOGLE_DCHECK_NE(&from, this);
  const Int64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Int64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.Int64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.Int64)
    MergeFrom(*source);
  }
}

void Int64::MergeFrom(const Int64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.Int64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.num() != 0) {
    set_num(from.num());
  }
}

void Int64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Int64::CopyFrom(const Int64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.Int64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Int64::IsInitialized() const {
  return true;
}

void Int64::Swap(Int64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Int64::InternalSwap(Int64* other) {
  using std::swap;
  swap(num_, other->num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Int64::GetMetadata() const {
  protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Float64::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Float64::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Float64::Float64()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2fcommon_2eproto::scc_info_Float64.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.Float64)
}
Float64::Float64(const Float64& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  num_ = from.num_;
  // @@protoc_insertion_point(copy_constructor:common.Float64)
}

void Float64::SharedCtor() {
  num_ = 0;
}

Float64::~Float64() {
  // @@protoc_insertion_point(destructor:common.Float64)
  SharedDtor();
}

void Float64::SharedDtor() {
}

void Float64::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Float64::descriptor() {
  ::protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Float64& Float64::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2fcommon_2eproto::scc_info_Float64.base);
  return *internal_default_instance();
}


void Float64::Clear() {
// @@protoc_insertion_point(message_clear_start:common.Float64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  num_ = 0;
  _internal_metadata_.Clear();
}

bool Float64::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.Float64)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double num = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.Float64)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.Float64)
  return false;
#undef DO_
}

void Float64::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.Float64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double num = 1;
  if (this->num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->num(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.Float64)
}

::google::protobuf::uint8* Float64::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.Float64)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double num = 1;
  if (this->num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->num(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.Float64)
  return target;
}

size_t Float64::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.Float64)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // double num = 1;
  if (this->num() != 0) {
    total_size += 1 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Float64::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.Float64)
  GOOGLE_DCHECK_NE(&from, this);
  const Float64* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Float64>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.Float64)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.Float64)
    MergeFrom(*source);
  }
}

void Float64::MergeFrom(const Float64& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.Float64)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.num() != 0) {
    set_num(from.num());
  }
}

void Float64::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.Float64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Float64::CopyFrom(const Float64& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.Float64)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Float64::IsInitialized() const {
  return true;
}

void Float64::Swap(Float64* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Float64::InternalSwap(Float64* other) {
  using std::swap;
  swap(num_, other->num_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Float64::GetMetadata() const {
  protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RGBA::InitAsDefaultInstance() {
  ::common::_RGBA_default_instance_._instance.get_mutable()->r_ = const_cast< ::common::Int64*>(
      ::common::Int64::internal_default_instance());
  ::common::_RGBA_default_instance_._instance.get_mutable()->g_ = const_cast< ::common::Int64*>(
      ::common::Int64::internal_default_instance());
  ::common::_RGBA_default_instance_._instance.get_mutable()->b_ = const_cast< ::common::Int64*>(
      ::common::Int64::internal_default_instance());
  ::common::_RGBA_default_instance_._instance.get_mutable()->a_ = const_cast< ::common::Int64*>(
      ::common::Int64::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RGBA::kRFieldNumber;
const int RGBA::kGFieldNumber;
const int RGBA::kBFieldNumber;
const int RGBA::kAFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RGBA::RGBA()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2fcommon_2eproto::scc_info_RGBA.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.RGBA)
}
RGBA::RGBA(const RGBA& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_r()) {
    r_ = new ::common::Int64(*from.r_);
  } else {
    r_ = NULL;
  }
  if (from.has_g()) {
    g_ = new ::common::Int64(*from.g_);
  } else {
    g_ = NULL;
  }
  if (from.has_b()) {
    b_ = new ::common::Int64(*from.b_);
  } else {
    b_ = NULL;
  }
  if (from.has_a()) {
    a_ = new ::common::Int64(*from.a_);
  } else {
    a_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common.RGBA)
}

void RGBA::SharedCtor() {
  ::memset(&r_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&a_) -
      reinterpret_cast<char*>(&r_)) + sizeof(a_));
}

RGBA::~RGBA() {
  // @@protoc_insertion_point(destructor:common.RGBA)
  SharedDtor();
}

void RGBA::SharedDtor() {
  if (this != internal_default_instance()) delete r_;
  if (this != internal_default_instance()) delete g_;
  if (this != internal_default_instance()) delete b_;
  if (this != internal_default_instance()) delete a_;
}

void RGBA::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RGBA::descriptor() {
  ::protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RGBA& RGBA::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2fcommon_2eproto::scc_info_RGBA.base);
  return *internal_default_instance();
}


void RGBA::Clear() {
// @@protoc_insertion_point(message_clear_start:common.RGBA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && r_ != NULL) {
    delete r_;
  }
  r_ = NULL;
  if (GetArenaNoVirtual() == NULL && g_ != NULL) {
    delete g_;
  }
  g_ = NULL;
  if (GetArenaNoVirtual() == NULL && b_ != NULL) {
    delete b_;
  }
  b_ = NULL;
  if (GetArenaNoVirtual() == NULL && a_ != NULL) {
    delete a_;
  }
  a_ = NULL;
  _internal_metadata_.Clear();
}

bool RGBA::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.RGBA)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Int64 r = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_r()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Int64 g = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_g()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Int64 b = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_b()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Int64 a = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_a()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.RGBA)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.RGBA)
  return false;
#undef DO_
}

void RGBA::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.RGBA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Int64 r = 1;
  if (this->has_r()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_r(), output);
  }

  // .common.Int64 g = 2;
  if (this->has_g()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_g(), output);
  }

  // .common.Int64 b = 3;
  if (this->has_b()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_b(), output);
  }

  // .common.Int64 a = 4;
  if (this->has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_a(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.RGBA)
}

::google::protobuf::uint8* RGBA::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.RGBA)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Int64 r = 1;
  if (this->has_r()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_r(), deterministic, target);
  }

  // .common.Int64 g = 2;
  if (this->has_g()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_g(), deterministic, target);
  }

  // .common.Int64 b = 3;
  if (this->has_b()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_b(), deterministic, target);
  }

  // .common.Int64 a = 4;
  if (this->has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_a(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.RGBA)
  return target;
}

size_t RGBA::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.RGBA)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.Int64 r = 1;
  if (this->has_r()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *r_);
  }

  // .common.Int64 g = 2;
  if (this->has_g()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *g_);
  }

  // .common.Int64 b = 3;
  if (this->has_b()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *b_);
  }

  // .common.Int64 a = 4;
  if (this->has_a()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *a_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RGBA::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.RGBA)
  GOOGLE_DCHECK_NE(&from, this);
  const RGBA* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RGBA>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.RGBA)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.RGBA)
    MergeFrom(*source);
  }
}

void RGBA::MergeFrom(const RGBA& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.RGBA)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_r()) {
    mutable_r()->::common::Int64::MergeFrom(from.r());
  }
  if (from.has_g()) {
    mutable_g()->::common::Int64::MergeFrom(from.g());
  }
  if (from.has_b()) {
    mutable_b()->::common::Int64::MergeFrom(from.b());
  }
  if (from.has_a()) {
    mutable_a()->::common::Int64::MergeFrom(from.a());
  }
}

void RGBA::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.RGBA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RGBA::CopyFrom(const RGBA& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.RGBA)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RGBA::IsInitialized() const {
  return true;
}

void RGBA::Swap(RGBA* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RGBA::InternalSwap(RGBA* other) {
  using std::swap;
  swap(r_, other->r_);
  swap(g_, other->g_);
  swap(b_, other->b_);
  swap(a_, other->a_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RGBA::GetMetadata() const {
  protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HTTPRequest::InitAsDefaultInstance() {
  ::common::_HTTPRequest_default_instance_._instance.get_mutable()->url_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::common::_HTTPRequest_default_instance_._instance.get_mutable()->form_ = const_cast< ::common::StringMap*>(
      ::common::StringMap::internal_default_instance());
  ::common::_HTTPRequest_default_instance_._instance.get_mutable()->body_ = const_cast< ::common::Bytes*>(
      ::common::Bytes::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HTTPRequest::kMethodFieldNumber;
const int HTTPRequest::kUrlFieldNumber;
const int HTTPRequest::kFormFieldNumber;
const int HTTPRequest::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HTTPRequest::HTTPRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2fcommon_2eproto::scc_info_HTTPRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.HTTPRequest)
}
HTTPRequest::HTTPRequest(const HTTPRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_url()) {
    url_ = new ::common::String(*from.url_);
  } else {
    url_ = NULL;
  }
  if (from.has_form()) {
    form_ = new ::common::StringMap(*from.form_);
  } else {
    form_ = NULL;
  }
  if (from.has_body()) {
    body_ = new ::common::Bytes(*from.body_);
  } else {
    body_ = NULL;
  }
  method_ = from.method_;
  // @@protoc_insertion_point(copy_constructor:common.HTTPRequest)
}

void HTTPRequest::SharedCtor() {
  ::memset(&url_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&method_) -
      reinterpret_cast<char*>(&url_)) + sizeof(method_));
}

HTTPRequest::~HTTPRequest() {
  // @@protoc_insertion_point(destructor:common.HTTPRequest)
  SharedDtor();
}

void HTTPRequest::SharedDtor() {
  if (this != internal_default_instance()) delete url_;
  if (this != internal_default_instance()) delete form_;
  if (this != internal_default_instance()) delete body_;
}

void HTTPRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HTTPRequest::descriptor() {
  ::protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HTTPRequest& HTTPRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2fcommon_2eproto::scc_info_HTTPRequest.base);
  return *internal_default_instance();
}


void HTTPRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:common.HTTPRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && url_ != NULL) {
    delete url_;
  }
  url_ = NULL;
  if (GetArenaNoVirtual() == NULL && form_ != NULL) {
    delete form_;
  }
  form_ = NULL;
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
  method_ = 0;
  _internal_metadata_.Clear();
}

bool HTTPRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.HTTPRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.HTTPMethod method = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_method(static_cast< ::common::HTTPMethod >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String url = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringMap form = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_form()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Bytes body = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.HTTPRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.HTTPRequest)
  return false;
#undef DO_
}

void HTTPRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.HTTPRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.HTTPMethod method = 1;
  if (this->method() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->method(), output);
  }

  // .common.String url = 2;
  if (this->has_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_url(), output);
  }

  // .common.StringMap form = 3;
  if (this->has_form()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_form(), output);
  }

  // .common.Bytes body = 4;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.HTTPRequest)
}

::google::protobuf::uint8* HTTPRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.HTTPRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.HTTPMethod method = 1;
  if (this->method() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->method(), target);
  }

  // .common.String url = 2;
  if (this->has_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_url(), deterministic, target);
  }

  // .common.StringMap form = 3;
  if (this->has_form()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_form(), deterministic, target);
  }

  // .common.Bytes body = 4;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_body(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.HTTPRequest)
  return target;
}

size_t HTTPRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.HTTPRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String url = 2;
  if (this->has_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *url_);
  }

  // .common.StringMap form = 3;
  if (this->has_form()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *form_);
  }

  // .common.Bytes body = 4;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *body_);
  }

  // .common.HTTPMethod method = 1;
  if (this->method() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->method());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HTTPRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.HTTPRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HTTPRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HTTPRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.HTTPRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.HTTPRequest)
    MergeFrom(*source);
  }
}

void HTTPRequest::MergeFrom(const HTTPRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.HTTPRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_url()) {
    mutable_url()->::common::String::MergeFrom(from.url());
  }
  if (from.has_form()) {
    mutable_form()->::common::StringMap::MergeFrom(from.form());
  }
  if (from.has_body()) {
    mutable_body()->::common::Bytes::MergeFrom(from.body());
  }
  if (from.method() != 0) {
    set_method(from.method());
  }
}

void HTTPRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.HTTPRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HTTPRequest::CopyFrom(const HTTPRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.HTTPRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HTTPRequest::IsInitialized() const {
  return true;
}

void HTTPRequest::Swap(HTTPRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HTTPRequest::InternalSwap(HTTPRequest* other) {
  using std::swap;
  swap(url_, other->url_);
  swap(form_, other->form_);
  swap(body_, other->body_);
  swap(method_, other->method_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HTTPRequest::GetMetadata() const {
  protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Token::InitAsDefaultInstance() {
  ::common::_Token_default_instance_._instance.get_mutable()->access_token_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::common::_Token_default_instance_._instance.get_mutable()->token_type_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::common::_Token_default_instance_._instance.get_mutable()->refresh_token_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::common::_Token_default_instance_._instance.get_mutable()->expiry_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::common::_Token_default_instance_._instance.get_mutable()->id_token_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Token::kAccessTokenFieldNumber;
const int Token::kTokenTypeFieldNumber;
const int Token::kRefreshTokenFieldNumber;
const int Token::kExpiryFieldNumber;
const int Token::kIdTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Token::Token()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_common_2fcommon_2eproto::scc_info_Token.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:common.Token)
}
Token::Token(const Token& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_access_token()) {
    access_token_ = new ::common::String(*from.access_token_);
  } else {
    access_token_ = NULL;
  }
  if (from.has_token_type()) {
    token_type_ = new ::common::String(*from.token_type_);
  } else {
    token_type_ = NULL;
  }
  if (from.has_refresh_token()) {
    refresh_token_ = new ::common::String(*from.refresh_token_);
  } else {
    refresh_token_ = NULL;
  }
  if (from.has_expiry()) {
    expiry_ = new ::common::String(*from.expiry_);
  } else {
    expiry_ = NULL;
  }
  if (from.has_id_token()) {
    id_token_ = new ::common::String(*from.id_token_);
  } else {
    id_token_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:common.Token)
}

void Token::SharedCtor() {
  ::memset(&access_token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_token_) -
      reinterpret_cast<char*>(&access_token_)) + sizeof(id_token_));
}

Token::~Token() {
  // @@protoc_insertion_point(destructor:common.Token)
  SharedDtor();
}

void Token::SharedDtor() {
  if (this != internal_default_instance()) delete access_token_;
  if (this != internal_default_instance()) delete token_type_;
  if (this != internal_default_instance()) delete refresh_token_;
  if (this != internal_default_instance()) delete expiry_;
  if (this != internal_default_instance()) delete id_token_;
}

void Token::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Token::descriptor() {
  ::protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Token& Token::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_common_2fcommon_2eproto::scc_info_Token.base);
  return *internal_default_instance();
}


void Token::Clear() {
// @@protoc_insertion_point(message_clear_start:common.Token)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && access_token_ != NULL) {
    delete access_token_;
  }
  access_token_ = NULL;
  if (GetArenaNoVirtual() == NULL && token_type_ != NULL) {
    delete token_type_;
  }
  token_type_ = NULL;
  if (GetArenaNoVirtual() == NULL && refresh_token_ != NULL) {
    delete refresh_token_;
  }
  refresh_token_ = NULL;
  if (GetArenaNoVirtual() == NULL && expiry_ != NULL) {
    delete expiry_;
  }
  expiry_ = NULL;
  if (GetArenaNoVirtual() == NULL && id_token_ != NULL) {
    delete id_token_;
  }
  id_token_ = NULL;
  _internal_metadata_.Clear();
}

bool Token::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:common.Token)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String access_token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_access_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String token_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_token_type()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String refresh_token = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_refresh_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String expiry = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_expiry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String id_token = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:common.Token)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:common.Token)
  return false;
#undef DO_
}

void Token::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:common.Token)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String access_token = 1;
  if (this->has_access_token()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_access_token(), output);
  }

  // .common.String token_type = 2;
  if (this->has_token_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_token_type(), output);
  }

  // .common.String refresh_token = 3;
  if (this->has_refresh_token()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_refresh_token(), output);
  }

  // .common.String expiry = 4;
  if (this->has_expiry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_expiry(), output);
  }

  // .common.String id_token = 5;
  if (this->has_id_token()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_id_token(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:common.Token)
}

::google::protobuf::uint8* Token::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:common.Token)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String access_token = 1;
  if (this->has_access_token()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_access_token(), deterministic, target);
  }

  // .common.String token_type = 2;
  if (this->has_token_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_token_type(), deterministic, target);
  }

  // .common.String refresh_token = 3;
  if (this->has_refresh_token()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_refresh_token(), deterministic, target);
  }

  // .common.String expiry = 4;
  if (this->has_expiry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_expiry(), deterministic, target);
  }

  // .common.String id_token = 5;
  if (this->has_id_token()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_id_token(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:common.Token)
  return target;
}

size_t Token::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:common.Token)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String access_token = 1;
  if (this->has_access_token()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *access_token_);
  }

  // .common.String token_type = 2;
  if (this->has_token_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *token_type_);
  }

  // .common.String refresh_token = 3;
  if (this->has_refresh_token()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *refresh_token_);
  }

  // .common.String expiry = 4;
  if (this->has_expiry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *expiry_);
  }

  // .common.String id_token = 5;
  if (this->has_id_token()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_token_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Token::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:common.Token)
  GOOGLE_DCHECK_NE(&from, this);
  const Token* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Token>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:common.Token)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:common.Token)
    MergeFrom(*source);
  }
}

void Token::MergeFrom(const Token& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:common.Token)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_access_token()) {
    mutable_access_token()->::common::String::MergeFrom(from.access_token());
  }
  if (from.has_token_type()) {
    mutable_token_type()->::common::String::MergeFrom(from.token_type());
  }
  if (from.has_refresh_token()) {
    mutable_refresh_token()->::common::String::MergeFrom(from.refresh_token());
  }
  if (from.has_expiry()) {
    mutable_expiry()->::common::String::MergeFrom(from.expiry());
  }
  if (from.has_id_token()) {
    mutable_id_token()->::common::String::MergeFrom(from.id_token());
  }
}

void Token::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:common.Token)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Token::CopyFrom(const Token& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:common.Token)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Token::IsInitialized() const {
  return true;
}

void Token::Swap(Token* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Token::InternalSwap(Token* other) {
  using std::swap;
  swap(access_token_, other->access_token_);
  swap(token_type_, other->token_type_);
  swap(refresh_token_, other->refresh_token_);
  swap(expiry_, other->expiry_);
  swap(id_token_, other->id_token_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Token::GetMetadata() const {
  protobuf_common_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_common_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace common
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::String* Arena::CreateMaybeMessage< ::common::String >(Arena* arena) {
  return Arena::CreateInternal< ::common::String >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::Bytes* Arena::CreateMaybeMessage< ::common::Bytes >(Arena* arena) {
  return Arena::CreateInternal< ::common::Bytes >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::StringArray* Arena::CreateMaybeMessage< ::common::StringArray >(Arena* arena) {
  return Arena::CreateInternal< ::common::StringArray >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::StringMap_StringMapEntry_DoNotUse* Arena::CreateMaybeMessage< ::common::StringMap_StringMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::common::StringMap_StringMapEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::StringMap* Arena::CreateMaybeMessage< ::common::StringMap >(Arena* arena) {
  return Arena::CreateInternal< ::common::StringMap >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::Empty* Arena::CreateMaybeMessage< ::common::Empty >(Arena* arena) {
  return Arena::CreateInternal< ::common::Empty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::Identifier* Arena::CreateMaybeMessage< ::common::Identifier >(Arena* arena) {
  return Arena::CreateInternal< ::common::Identifier >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::Int64* Arena::CreateMaybeMessage< ::common::Int64 >(Arena* arena) {
  return Arena::CreateInternal< ::common::Int64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::Float64* Arena::CreateMaybeMessage< ::common::Float64 >(Arena* arena) {
  return Arena::CreateInternal< ::common::Float64 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::RGBA* Arena::CreateMaybeMessage< ::common::RGBA >(Arena* arena) {
  return Arena::CreateInternal< ::common::RGBA >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::HTTPRequest* Arena::CreateMaybeMessage< ::common::HTTPRequest >(Arena* arena) {
  return Arena::CreateInternal< ::common::HTTPRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::common::Token* Arena::CreateMaybeMessage< ::common::Token >(Arena* arena) {
  return Arena::CreateInternal< ::common::Token >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
