// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Api {

  /// <summary>Holder for reflection information generated from api.proto</summary>
  public static partial class ApiReflection {

    #region Descriptor
    /// <summary>File descriptor for api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglhcGkucHJvdG8SA2FwaRocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90",
            "byIiChFHZXRQcm9maWxlQnlFbWFpbBINCgVlbWFpbBgBIAEoCSKOAwoHUHJv",
            "ZmlsZRINCgVlbWFpbBgBIAEoCRIWCg5lbWFpbF92ZXJpZmllZBgCIAEoCBIM",
            "CgRuYW1lGAMgASgJEhIKCmdpdmVuX25hbWUYBCABKAkSEwoLZmFtaWx5X25h",
            "bWUYBSABKAkSDwoHcGljdHVyZRgGIAEoCRIOCgZsb2NhbGUYByABKAkSDwoH",
            "dXNlcl9pZBgIIAEoCRIQCghuaWNrbmFtZRgJIAEoCRISCgpjb25uZWN0aW9u",
            "GAogASgJEiEKCmlkZW50aXRpZXMYCyADKAsyDS5hcGkuSWRlbnRpdHkSDwoH",
            "bGFzdF9pcBgMIAEoCRITCgtsb2dpbl9jb3VudBgNIAEoAxISCgp1cGRhdGVk",
            "X2F0GA4gASgJEhIKCmNyZWF0ZWRfYXQYDyABKAkSCwoDc3ViGBAgASgJEgsK",
            "A2lzcxgRIAEoCRILCgNhdWQYEiABKAkSCwoDaWF0GBMgASgJEigKDXVzZXJf",
            "bWV0YWRhdGEYFCABKAsyES5hcGkuVXNlck1ldGFkYXRhIlQKDFVzZXJNZXRh",
            "ZGF0YRINCgVwaG9uZRgBIAEoCRIMCgRwbGFuGAIgASgJEhEKCXBheV90b2tl",
            "bhgDIAEoCRIUCgxsYXN0X2NvbnRhY3QYBCABKAkiUwoISWRlbnRpdHkSEAoI",
            "cHJvdmlkZXIYASABKAkSDwoHdXNlcl9pZBgCIAEoCRISCgpjb25uZWN0aW9u",
            "GAMgASgJEhAKCGlzU29jaWFsGAQgASgIMmUKDlByb2ZpbGVTZXJ2aWNlElMK",
            "CkdldFByb2ZpbGUSFi5hcGkuR2V0UHJvZmlsZUJ5RW1haWwaDC5hcGkuUHJv",
            "ZmlsZSIfgtPkkwIZIhQvYXBpL3Byb2ZpbGUve2VtYWlsfToBKmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.GetProfileByEmail), global::Api.GetProfileByEmail.Parser, new[]{ "Email" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Profile), global::Api.Profile.Parser, new[]{ "Email", "EmailVerified", "Name", "GivenName", "FamilyName", "Picture", "Locale", "UserId", "Nickname", "Connection", "Identities", "LastIp", "LoginCount", "UpdatedAt", "CreatedAt", "Sub", "Iss", "Aud", "Iat", "UserMetadata" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.UserMetadata), global::Api.UserMetadata.Parser, new[]{ "Phone", "Plan", "PayToken", "LastContact" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Identity), global::Api.Identity.Parser, new[]{ "Provider", "UserId", "Connection", "IsSocial" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class GetProfileByEmail : pb::IMessage<GetProfileByEmail> {
    private static readonly pb::MessageParser<GetProfileByEmail> _parser = new pb::MessageParser<GetProfileByEmail>(() => new GetProfileByEmail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetProfileByEmail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProfileByEmail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProfileByEmail(GetProfileByEmail other) : this() {
      email_ = other.email_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetProfileByEmail Clone() {
      return new GetProfileByEmail(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetProfileByEmail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetProfileByEmail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetProfileByEmail other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Profile : pb::IMessage<Profile> {
    private static readonly pb::MessageParser<Profile> _parser = new pb::MessageParser<Profile>(() => new Profile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Profile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Profile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Profile(Profile other) : this() {
      email_ = other.email_;
      emailVerified_ = other.emailVerified_;
      name_ = other.name_;
      givenName_ = other.givenName_;
      familyName_ = other.familyName_;
      picture_ = other.picture_;
      locale_ = other.locale_;
      userId_ = other.userId_;
      nickname_ = other.nickname_;
      connection_ = other.connection_;
      identities_ = other.identities_.Clone();
      lastIp_ = other.lastIp_;
      loginCount_ = other.loginCount_;
      updatedAt_ = other.updatedAt_;
      createdAt_ = other.createdAt_;
      sub_ = other.sub_;
      iss_ = other.iss_;
      aud_ = other.aud_;
      iat_ = other.iat_;
      userMetadata_ = other.userMetadata_ != null ? other.userMetadata_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Profile Clone() {
      return new Profile(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email_verified" field.</summary>
    public const int EmailVerifiedFieldNumber = 2;
    private bool emailVerified_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool EmailVerified {
      get { return emailVerified_; }
      set {
        emailVerified_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "given_name" field.</summary>
    public const int GivenNameFieldNumber = 4;
    private string givenName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GivenName {
      get { return givenName_; }
      set {
        givenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "family_name" field.</summary>
    public const int FamilyNameFieldNumber = 5;
    private string familyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FamilyName {
      get { return familyName_; }
      set {
        familyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "picture" field.</summary>
    public const int PictureFieldNumber = 6;
    private string picture_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Picture {
      get { return picture_; }
      set {
        picture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "locale" field.</summary>
    public const int LocaleFieldNumber = 7;
    private string locale_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Locale {
      get { return locale_; }
      set {
        locale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 8;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 9;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "connection" field.</summary>
    public const int ConnectionFieldNumber = 10;
    private string connection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Connection {
      get { return connection_; }
      set {
        connection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "identities" field.</summary>
    public const int IdentitiesFieldNumber = 11;
    private static readonly pb::FieldCodec<global::Api.Identity> _repeated_identities_codec
        = pb::FieldCodec.ForMessage(90, global::Api.Identity.Parser);
    private readonly pbc::RepeatedField<global::Api.Identity> identities_ = new pbc::RepeatedField<global::Api.Identity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Identity> Identities {
      get { return identities_; }
    }

    /// <summary>Field number for the "last_ip" field.</summary>
    public const int LastIpFieldNumber = 12;
    private string lastIp_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastIp {
      get { return lastIp_; }
      set {
        lastIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "login_count" field.</summary>
    public const int LoginCountFieldNumber = 13;
    private long loginCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LoginCount {
      get { return loginCount_; }
      set {
        loginCount_ = value;
      }
    }

    /// <summary>Field number for the "updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 14;
    private string updatedAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 15;
    private string createdAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sub" field.</summary>
    public const int SubFieldNumber = 16;
    private string sub_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Sub {
      get { return sub_; }
      set {
        sub_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iss" field.</summary>
    public const int IssFieldNumber = 17;
    private string iss_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Iss {
      get { return iss_; }
      set {
        iss_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "aud" field.</summary>
    public const int AudFieldNumber = 18;
    private string aud_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Aud {
      get { return aud_; }
      set {
        aud_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "iat" field.</summary>
    public const int IatFieldNumber = 19;
    private string iat_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Iat {
      get { return iat_; }
      set {
        iat_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_metadata" field.</summary>
    public const int UserMetadataFieldNumber = 20;
    private global::Api.UserMetadata userMetadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.UserMetadata UserMetadata {
      get { return userMetadata_; }
      set {
        userMetadata_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Profile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Profile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      if (EmailVerified != other.EmailVerified) return false;
      if (Name != other.Name) return false;
      if (GivenName != other.GivenName) return false;
      if (FamilyName != other.FamilyName) return false;
      if (Picture != other.Picture) return false;
      if (Locale != other.Locale) return false;
      if (UserId != other.UserId) return false;
      if (Nickname != other.Nickname) return false;
      if (Connection != other.Connection) return false;
      if(!identities_.Equals(other.identities_)) return false;
      if (LastIp != other.LastIp) return false;
      if (LoginCount != other.LoginCount) return false;
      if (UpdatedAt != other.UpdatedAt) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (Sub != other.Sub) return false;
      if (Iss != other.Iss) return false;
      if (Aud != other.Aud) return false;
      if (Iat != other.Iat) return false;
      if (!object.Equals(UserMetadata, other.UserMetadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (EmailVerified != false) hash ^= EmailVerified.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (GivenName.Length != 0) hash ^= GivenName.GetHashCode();
      if (FamilyName.Length != 0) hash ^= FamilyName.GetHashCode();
      if (Picture.Length != 0) hash ^= Picture.GetHashCode();
      if (Locale.Length != 0) hash ^= Locale.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      if (Connection.Length != 0) hash ^= Connection.GetHashCode();
      hash ^= identities_.GetHashCode();
      if (LastIp.Length != 0) hash ^= LastIp.GetHashCode();
      if (LoginCount != 0L) hash ^= LoginCount.GetHashCode();
      if (UpdatedAt.Length != 0) hash ^= UpdatedAt.GetHashCode();
      if (CreatedAt.Length != 0) hash ^= CreatedAt.GetHashCode();
      if (Sub.Length != 0) hash ^= Sub.GetHashCode();
      if (Iss.Length != 0) hash ^= Iss.GetHashCode();
      if (Aud.Length != 0) hash ^= Aud.GetHashCode();
      if (Iat.Length != 0) hash ^= Iat.GetHashCode();
      if (userMetadata_ != null) hash ^= UserMetadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (EmailVerified != false) {
        output.WriteRawTag(16);
        output.WriteBool(EmailVerified);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (GivenName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(GivenName);
      }
      if (FamilyName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FamilyName);
      }
      if (Picture.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Picture);
      }
      if (Locale.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Locale);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(UserId);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Nickname);
      }
      if (Connection.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Connection);
      }
      identities_.WriteTo(output, _repeated_identities_codec);
      if (LastIp.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(LastIp);
      }
      if (LoginCount != 0L) {
        output.WriteRawTag(104);
        output.WriteInt64(LoginCount);
      }
      if (UpdatedAt.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(UpdatedAt);
      }
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(CreatedAt);
      }
      if (Sub.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Sub);
      }
      if (Iss.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(Iss);
      }
      if (Aud.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(Aud);
      }
      if (Iat.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Iat);
      }
      if (userMetadata_ != null) {
        output.WriteRawTag(162, 1);
        output.WriteMessage(UserMetadata);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (EmailVerified != false) {
        size += 1 + 1;
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (GivenName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GivenName);
      }
      if (FamilyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FamilyName);
      }
      if (Picture.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Picture);
      }
      if (Locale.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Locale);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      if (Connection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Connection);
      }
      size += identities_.CalculateSize(_repeated_identities_codec);
      if (LastIp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastIp);
      }
      if (LoginCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LoginCount);
      }
      if (UpdatedAt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UpdatedAt);
      }
      if (CreatedAt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreatedAt);
      }
      if (Sub.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Sub);
      }
      if (Iss.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Iss);
      }
      if (Aud.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Aud);
      }
      if (Iat.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Iat);
      }
      if (userMetadata_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(UserMetadata);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Profile other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.EmailVerified != false) {
        EmailVerified = other.EmailVerified;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.GivenName.Length != 0) {
        GivenName = other.GivenName;
      }
      if (other.FamilyName.Length != 0) {
        FamilyName = other.FamilyName;
      }
      if (other.Picture.Length != 0) {
        Picture = other.Picture;
      }
      if (other.Locale.Length != 0) {
        Locale = other.Locale;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      if (other.Connection.Length != 0) {
        Connection = other.Connection;
      }
      identities_.Add(other.identities_);
      if (other.LastIp.Length != 0) {
        LastIp = other.LastIp;
      }
      if (other.LoginCount != 0L) {
        LoginCount = other.LoginCount;
      }
      if (other.UpdatedAt.Length != 0) {
        UpdatedAt = other.UpdatedAt;
      }
      if (other.CreatedAt.Length != 0) {
        CreatedAt = other.CreatedAt;
      }
      if (other.Sub.Length != 0) {
        Sub = other.Sub;
      }
      if (other.Iss.Length != 0) {
        Iss = other.Iss;
      }
      if (other.Aud.Length != 0) {
        Aud = other.Aud;
      }
      if (other.Iat.Length != 0) {
        Iat = other.Iat;
      }
      if (other.userMetadata_ != null) {
        if (userMetadata_ == null) {
          userMetadata_ = new global::Api.UserMetadata();
        }
        UserMetadata.MergeFrom(other.UserMetadata);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 16: {
            EmailVerified = input.ReadBool();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            GivenName = input.ReadString();
            break;
          }
          case 42: {
            FamilyName = input.ReadString();
            break;
          }
          case 50: {
            Picture = input.ReadString();
            break;
          }
          case 58: {
            Locale = input.ReadString();
            break;
          }
          case 66: {
            UserId = input.ReadString();
            break;
          }
          case 74: {
            Nickname = input.ReadString();
            break;
          }
          case 82: {
            Connection = input.ReadString();
            break;
          }
          case 90: {
            identities_.AddEntriesFrom(input, _repeated_identities_codec);
            break;
          }
          case 98: {
            LastIp = input.ReadString();
            break;
          }
          case 104: {
            LoginCount = input.ReadInt64();
            break;
          }
          case 114: {
            UpdatedAt = input.ReadString();
            break;
          }
          case 122: {
            CreatedAt = input.ReadString();
            break;
          }
          case 130: {
            Sub = input.ReadString();
            break;
          }
          case 138: {
            Iss = input.ReadString();
            break;
          }
          case 146: {
            Aud = input.ReadString();
            break;
          }
          case 154: {
            Iat = input.ReadString();
            break;
          }
          case 162: {
            if (userMetadata_ == null) {
              userMetadata_ = new global::Api.UserMetadata();
            }
            input.ReadMessage(userMetadata_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserMetadata : pb::IMessage<UserMetadata> {
    private static readonly pb::MessageParser<UserMetadata> _parser = new pb::MessageParser<UserMetadata>(() => new UserMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMetadata(UserMetadata other) : this() {
      phone_ = other.phone_;
      plan_ = other.plan_;
      payToken_ = other.payToken_;
      lastContact_ = other.lastContact_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMetadata Clone() {
      return new UserMetadata(this);
    }

    /// <summary>Field number for the "phone" field.</summary>
    public const int PhoneFieldNumber = 1;
    private string phone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phone {
      get { return phone_; }
      set {
        phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plan" field.</summary>
    public const int PlanFieldNumber = 2;
    private string plan_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Plan {
      get { return plan_; }
      set {
        plan_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pay_token" field.</summary>
    public const int PayTokenFieldNumber = 3;
    private string payToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PayToken {
      get { return payToken_; }
      set {
        payToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_contact" field.</summary>
    public const int LastContactFieldNumber = 4;
    private string lastContact_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastContact {
      get { return lastContact_; }
      set {
        lastContact_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Phone != other.Phone) return false;
      if (Plan != other.Plan) return false;
      if (PayToken != other.PayToken) return false;
      if (LastContact != other.LastContact) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Phone.Length != 0) hash ^= Phone.GetHashCode();
      if (Plan.Length != 0) hash ^= Plan.GetHashCode();
      if (PayToken.Length != 0) hash ^= PayToken.GetHashCode();
      if (LastContact.Length != 0) hash ^= LastContact.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Phone.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Phone);
      }
      if (Plan.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Plan);
      }
      if (PayToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PayToken);
      }
      if (LastContact.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LastContact);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Phone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
      }
      if (Plan.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Plan);
      }
      if (PayToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PayToken);
      }
      if (LastContact.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastContact);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserMetadata other) {
      if (other == null) {
        return;
      }
      if (other.Phone.Length != 0) {
        Phone = other.Phone;
      }
      if (other.Plan.Length != 0) {
        Plan = other.Plan;
      }
      if (other.PayToken.Length != 0) {
        PayToken = other.PayToken;
      }
      if (other.LastContact.Length != 0) {
        LastContact = other.LastContact;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Phone = input.ReadString();
            break;
          }
          case 18: {
            Plan = input.ReadString();
            break;
          }
          case 26: {
            PayToken = input.ReadString();
            break;
          }
          case 34: {
            LastContact = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Identity : pb::IMessage<Identity> {
    private static readonly pb::MessageParser<Identity> _parser = new pb::MessageParser<Identity>(() => new Identity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Identity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identity(Identity other) : this() {
      provider_ = other.provider_;
      userId_ = other.userId_;
      connection_ = other.connection_;
      isSocial_ = other.isSocial_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identity Clone() {
      return new Identity(this);
    }

    /// <summary>Field number for the "provider" field.</summary>
    public const int ProviderFieldNumber = 1;
    private string provider_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Provider {
      get { return provider_; }
      set {
        provider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "connection" field.</summary>
    public const int ConnectionFieldNumber = 3;
    private string connection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Connection {
      get { return connection_; }
      set {
        connection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isSocial" field.</summary>
    public const int IsSocialFieldNumber = 4;
    private bool isSocial_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSocial {
      get { return isSocial_; }
      set {
        isSocial_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Identity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Identity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Provider != other.Provider) return false;
      if (UserId != other.UserId) return false;
      if (Connection != other.Connection) return false;
      if (IsSocial != other.IsSocial) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Provider.Length != 0) hash ^= Provider.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Connection.Length != 0) hash ^= Connection.GetHashCode();
      if (IsSocial != false) hash ^= IsSocial.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Provider.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Provider);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (Connection.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Connection);
      }
      if (IsSocial != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsSocial);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Provider.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Provider);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Connection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Connection);
      }
      if (IsSocial != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Identity other) {
      if (other == null) {
        return;
      }
      if (other.Provider.Length != 0) {
        Provider = other.Provider;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Connection.Length != 0) {
        Connection = other.Connection;
      }
      if (other.IsSocial != false) {
        IsSocial = other.IsSocial;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Provider = input.ReadString();
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            Connection = input.ReadString();
            break;
          }
          case 32: {
            IsSocial = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
