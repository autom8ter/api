// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class Address;
@class Card;
@class Identifier;
@class Identity;
@class Int64;
@class JSONWebKeys;
@class Plan;
@class Product;
@class Role;
@class String;
@class StringArray;
@class StringMap;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum BillingInterval

typedef GPB_ENUM(BillingInterval) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  BillingInterval_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  BillingInterval_Daily = 0,
  BillingInterval_Weekly = 1,
  BillingInterval_Monthly = 2,
  BillingInterval_Yearly = 3,
};

GPBEnumDescriptor *BillingInterval_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL BillingInterval_IsValidValue(int32_t value);

#pragma mark - ApiRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface ApiRoot : GPBRootObject
@end

#pragma mark - AddUserRolesRequest

typedef GPB_ENUM(AddUserRolesRequest_FieldNumber) {
  AddUserRolesRequest_FieldNumber_Email = 1,
  AddUserRolesRequest_FieldNumber_RolesArray = 2,
};

@interface AddUserRolesRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Identifier *email;
/** Test to see if @c email has been set. */
@property(nonatomic, readwrite) BOOL hasEmail;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Role*> *rolesArray;
/** The number of items in @c rolesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger rolesArray_Count;

@end

#pragma mark - SubscribeRequest

typedef GPB_ENUM(SubscribeRequest_FieldNumber) {
  SubscribeRequest_FieldNumber_Email = 1,
  SubscribeRequest_FieldNumber_Plan = 2,
  SubscribeRequest_FieldNumber_Card = 3,
};

@interface SubscribeRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Identifier *email;
/** Test to see if @c email has been set. */
@property(nonatomic, readwrite) BOOL hasEmail;

@property(nonatomic, readwrite, strong, null_resettable) Identifier *plan;
/** Test to see if @c plan has been set. */
@property(nonatomic, readwrite) BOOL hasPlan;

@property(nonatomic, readwrite, strong, null_resettable) Card *card;
/** Test to see if @c card has been set. */
@property(nonatomic, readwrite) BOOL hasCard;

@end

#pragma mark - UnSubscribeRequest

typedef GPB_ENUM(UnSubscribeRequest_FieldNumber) {
  UnSubscribeRequest_FieldNumber_Email = 1,
  UnSubscribeRequest_FieldNumber_Plan = 2,
};

@interface UnSubscribeRequest : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Identifier *email;
/** Test to see if @c email has been set. */
@property(nonatomic, readwrite) BOOL hasEmail;

@property(nonatomic, readwrite, strong, null_resettable) String *plan;
/** Test to see if @c plan has been set. */
@property(nonatomic, readwrite) BOOL hasPlan;

@end

#pragma mark - Card

typedef GPB_ENUM(Card_FieldNumber) {
  Card_FieldNumber_Number = 1,
  Card_FieldNumber_ExpMonth = 2,
  Card_FieldNumber_ExpYear = 3,
  Card_FieldNumber_Cvc = 4,
};

@interface Card : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Identifier *number;
/** Test to see if @c number has been set. */
@property(nonatomic, readwrite) BOOL hasNumber;

@property(nonatomic, readwrite, strong, null_resettable) String *expMonth;
/** Test to see if @c expMonth has been set. */
@property(nonatomic, readwrite) BOOL hasExpMonth;

@property(nonatomic, readwrite, strong, null_resettable) String *expYear;
/** Test to see if @c expYear has been set. */
@property(nonatomic, readwrite) BOOL hasExpYear;

@property(nonatomic, readwrite, strong, null_resettable) String *cvc;
/** Test to see if @c cvc has been set. */
@property(nonatomic, readwrite) BOOL hasCvc;

@end

#pragma mark - User

typedef GPB_ENUM(User_FieldNumber) {
  User_FieldNumber_UserId = 1,
  User_FieldNumber_Name = 2,
  User_FieldNumber_GivenName = 3,
  User_FieldNumber_FamilyName = 4,
  User_FieldNumber_Gender = 5,
  User_FieldNumber_Birthdate = 6,
  User_FieldNumber_Email = 7,
  User_FieldNumber_PhoneNumber = 8,
  User_FieldNumber_Picture = 9,
  User_FieldNumber_UserMetadata = 10,
  User_FieldNumber_AppMetadata = 11,
  User_FieldNumber_LastIp = 12,
  User_FieldNumber_Blocked = 13,
  User_FieldNumber_Nickname = 14,
  User_FieldNumber_Multifactor = 15,
  User_FieldNumber_CreatedAt = 17,
  User_FieldNumber_UpdatedAt = 18,
  User_FieldNumber_PhoneVerified = 19,
  User_FieldNumber_EmailVerified = 20,
  User_FieldNumber_Password = 21,
  User_FieldNumber_IdentitiesArray = 22,
};

@interface User : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Identifier *userId;
/** Test to see if @c userId has been set. */
@property(nonatomic, readwrite) BOOL hasUserId;

@property(nonatomic, readwrite, strong, null_resettable) String *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@property(nonatomic, readwrite, strong, null_resettable) String *givenName;
/** Test to see if @c givenName has been set. */
@property(nonatomic, readwrite) BOOL hasGivenName;

@property(nonatomic, readwrite, strong, null_resettable) String *familyName;
/** Test to see if @c familyName has been set. */
@property(nonatomic, readwrite) BOOL hasFamilyName;

@property(nonatomic, readwrite, strong, null_resettable) String *gender;
/** Test to see if @c gender has been set. */
@property(nonatomic, readwrite) BOOL hasGender;

@property(nonatomic, readwrite, strong, null_resettable) String *birthdate;
/** Test to see if @c birthdate has been set. */
@property(nonatomic, readwrite) BOOL hasBirthdate;

@property(nonatomic, readwrite, strong, null_resettable) Identifier *email;
/** Test to see if @c email has been set. */
@property(nonatomic, readwrite) BOOL hasEmail;

@property(nonatomic, readwrite, strong, null_resettable) Identifier *phoneNumber;
/** Test to see if @c phoneNumber has been set. */
@property(nonatomic, readwrite) BOOL hasPhoneNumber;

@property(nonatomic, readwrite, strong, null_resettable) String *picture;
/** Test to see if @c picture has been set. */
@property(nonatomic, readwrite) BOOL hasPicture;

@property(nonatomic, readwrite, strong, null_resettable) String *nickname;
/** Test to see if @c nickname has been set. */
@property(nonatomic, readwrite) BOOL hasNickname;

@property(nonatomic, readwrite, strong, null_resettable) StringMap *userMetadata;
/** Test to see if @c userMetadata has been set. */
@property(nonatomic, readwrite) BOOL hasUserMetadata;

@property(nonatomic, readwrite, strong, null_resettable) StringMap *appMetadata;
/** Test to see if @c appMetadata has been set. */
@property(nonatomic, readwrite) BOOL hasAppMetadata;

@property(nonatomic, readwrite, strong, null_resettable) String *lastIp;
/** Test to see if @c lastIp has been set. */
@property(nonatomic, readwrite) BOOL hasLastIp;

@property(nonatomic, readwrite) BOOL blocked;

@property(nonatomic, readwrite, strong, null_resettable) StringArray *multifactor;
/** Test to see if @c multifactor has been set. */
@property(nonatomic, readwrite) BOOL hasMultifactor;

@property(nonatomic, readwrite, strong, null_resettable) String *createdAt;
/** Test to see if @c createdAt has been set. */
@property(nonatomic, readwrite) BOOL hasCreatedAt;

@property(nonatomic, readwrite, strong, null_resettable) String *updatedAt;
/** Test to see if @c updatedAt has been set. */
@property(nonatomic, readwrite) BOOL hasUpdatedAt;

@property(nonatomic, readwrite) BOOL phoneVerified;

@property(nonatomic, readwrite) BOOL emailVerified;

@property(nonatomic, readwrite, strong, null_resettable) String *password;
/** Test to see if @c password has been set. */
@property(nonatomic, readwrite) BOOL hasPassword;

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<Identity*> *identitiesArray;
/** The number of items in @c identitiesArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger identitiesArray_Count;

@end

#pragma mark - UserMetadata

typedef GPB_ENUM(UserMetadata_FieldNumber) {
  UserMetadata_FieldNumber_Status = 1,
  UserMetadata_FieldNumber_Bio = 2,
  UserMetadata_FieldNumber_Address = 3,
  UserMetadata_FieldNumber_Tags = 4,
};

@interface UserMetadata : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) String *status;
/** Test to see if @c status has been set. */
@property(nonatomic, readwrite) BOOL hasStatus;

@property(nonatomic, readwrite, strong, null_resettable) StringMap *bio;
/** Test to see if @c bio has been set. */
@property(nonatomic, readwrite) BOOL hasBio;

@property(nonatomic, readwrite, strong, null_resettable) Address *address;
/** Test to see if @c address has been set. */
@property(nonatomic, readwrite) BOOL hasAddress;

@property(nonatomic, readwrite, strong, null_resettable) StringMap *tags;
/** Test to see if @c tags has been set. */
@property(nonatomic, readwrite) BOOL hasTags;

@end

#pragma mark - Address

typedef GPB_ENUM(Address_FieldNumber) {
  Address_FieldNumber_City = 1,
  Address_FieldNumber_State = 2,
  Address_FieldNumber_Line1 = 3,
  Address_FieldNumber_Line2 = 4,
  Address_FieldNumber_Zip = 5,
};

@interface Address : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *city;

@property(nonatomic, readwrite, copy, null_resettable) NSString *state;

@property(nonatomic, readwrite, copy, null_resettable) NSString *line1;

@property(nonatomic, readwrite, copy, null_resettable) NSString *line2;

@property(nonatomic, readwrite, copy, null_resettable) NSString *zip;

@end

#pragma mark - AppMetadata

typedef GPB_ENUM(AppMetadata_FieldNumber) {
  AppMetadata_FieldNumber_Description_p = 1,
  AppMetadata_FieldNumber_AccountBalance = 2,
  AppMetadata_FieldNumber_Plan = 3,
  AppMetadata_FieldNumber_Tags = 4,
};

@interface AppMetadata : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) String *description_p;
/** Test to see if @c description_p has been set. */
@property(nonatomic, readwrite) BOOL hasDescription_p;

@property(nonatomic, readwrite, strong, null_resettable) String *accountBalance;
/** Test to see if @c accountBalance has been set. */
@property(nonatomic, readwrite) BOOL hasAccountBalance;

@property(nonatomic, readwrite, strong, null_resettable) Plan *plan;
/** Test to see if @c plan has been set. */
@property(nonatomic, readwrite) BOOL hasPlan;

@property(nonatomic, readwrite, strong, null_resettable) StringMap *tags;
/** Test to see if @c tags has been set. */
@property(nonatomic, readwrite) BOOL hasTags;

@end

#pragma mark - Plan

typedef GPB_ENUM(Plan_FieldNumber) {
  Plan_FieldNumber_Id_p = 1,
  Plan_FieldNumber_Active = 2,
  Plan_FieldNumber_Amount = 3,
  Plan_FieldNumber_Interval = 4,
  Plan_FieldNumber_Nickname = 5,
  Plan_FieldNumber_Product = 6,
};

@interface Plan : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Identifier *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

@property(nonatomic, readwrite) BOOL active;

@property(nonatomic, readwrite, strong, null_resettable) Int64 *amount;
/** Test to see if @c amount has been set. */
@property(nonatomic, readwrite) BOOL hasAmount;

@property(nonatomic, readwrite) BillingInterval interval;

@property(nonatomic, readwrite, strong, null_resettable) String *nickname;
/** Test to see if @c nickname has been set. */
@property(nonatomic, readwrite) BOOL hasNickname;

@property(nonatomic, readwrite, strong, null_resettable) Product *product;
/** Test to see if @c product has been set. */
@property(nonatomic, readwrite) BOOL hasProduct;

@end

/**
 * Fetches the raw value of a @c Plan's @c interval property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t Plan_Interval_RawValue(Plan *message);
/**
 * Sets the raw value of an @c Plan's @c interval property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPlan_Interval_RawValue(Plan *message, int32_t value);

#pragma mark - Product

typedef GPB_ENUM(Product_FieldNumber) {
  Product_FieldNumber_Id_p = 1,
  Product_FieldNumber_Description_p = 2,
  Product_FieldNumber_URL = 3,
};

@interface Product : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Identifier *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

@property(nonatomic, readwrite, strong, null_resettable) String *description_p;
/** Test to see if @c description_p has been set. */
@property(nonatomic, readwrite) BOOL hasDescription_p;

@property(nonatomic, readwrite, strong, null_resettable) String *URL;
/** Test to see if @c URL has been set. */
@property(nonatomic, readwrite) BOOL hasURL;

@end

#pragma mark - Identity

typedef GPB_ENUM(Identity_FieldNumber) {
  Identity_FieldNumber_Connection = 1,
  Identity_FieldNumber_UserId = 2,
  Identity_FieldNumber_Provider = 3,
  Identity_FieldNumber_IsSocial = 4,
};

@interface Identity : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) String *connection;
/** Test to see if @c connection has been set. */
@property(nonatomic, readwrite) BOOL hasConnection;

@property(nonatomic, readwrite, strong, null_resettable) Identifier *userId;
/** Test to see if @c userId has been set. */
@property(nonatomic, readwrite) BOOL hasUserId;

@property(nonatomic, readwrite, strong, null_resettable) String *provider;
/** Test to see if @c provider has been set. */
@property(nonatomic, readwrite) BOOL hasProvider;

@property(nonatomic, readwrite) BOOL isSocial;

@end

#pragma mark - Role

typedef GPB_ENUM(Role_FieldNumber) {
  Role_FieldNumber_Id_p = 1,
  Role_FieldNumber_Name = 2,
  Role_FieldNumber_Description_p = 3,
};

@interface Role : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) Identifier *id_p;
/** Test to see if @c id_p has been set. */
@property(nonatomic, readwrite) BOOL hasId_p;

@property(nonatomic, readwrite, strong, null_resettable) String *name;
/** Test to see if @c name has been set. */
@property(nonatomic, readwrite) BOOL hasName;

@property(nonatomic, readwrite, strong, null_resettable) String *description_p;
/** Test to see if @c description_p has been set. */
@property(nonatomic, readwrite) BOOL hasDescription_p;

@end

#pragma mark - OAuth2

typedef GPB_ENUM(OAuth2_FieldNumber) {
  OAuth2_FieldNumber_ClientId = 1,
  OAuth2_FieldNumber_ClientSecret = 2,
  OAuth2_FieldNumber_TokenURL = 3,
  OAuth2_FieldNumber_AuthURL = 4,
  OAuth2_FieldNumber_Scopes = 5,
  OAuth2_FieldNumber_Redirect = 6,
  OAuth2_FieldNumber_Code = 7,
};

@interface OAuth2 : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) String *clientId;
/** Test to see if @c clientId has been set. */
@property(nonatomic, readwrite) BOOL hasClientId;

@property(nonatomic, readwrite, strong, null_resettable) String *clientSecret;
/** Test to see if @c clientSecret has been set. */
@property(nonatomic, readwrite) BOOL hasClientSecret;

@property(nonatomic, readwrite, strong, null_resettable) String *tokenURL;
/** Test to see if @c tokenURL has been set. */
@property(nonatomic, readwrite) BOOL hasTokenURL;

@property(nonatomic, readwrite, strong, null_resettable) String *authURL;
/** Test to see if @c authURL has been set. */
@property(nonatomic, readwrite) BOOL hasAuthURL;

@property(nonatomic, readwrite, strong, null_resettable) StringArray *scopes;
/** Test to see if @c scopes has been set. */
@property(nonatomic, readwrite) BOOL hasScopes;

@property(nonatomic, readwrite, strong, null_resettable) String *redirect;
/** Test to see if @c redirect has been set. */
@property(nonatomic, readwrite) BOOL hasRedirect;

@property(nonatomic, readwrite, strong, null_resettable) String *code;
/** Test to see if @c code has been set. */
@property(nonatomic, readwrite) BOOL hasCode;

@end

#pragma mark - ClientCredentials

typedef GPB_ENUM(ClientCredentials_FieldNumber) {
  ClientCredentials_FieldNumber_ClientId = 1,
  ClientCredentials_FieldNumber_ClientSecret = 2,
  ClientCredentials_FieldNumber_TokenURL = 3,
  ClientCredentials_FieldNumber_Scopes = 4,
  ClientCredentials_FieldNumber_EndpointParams = 5,
};

@interface ClientCredentials : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) String *clientId;
/** Test to see if @c clientId has been set. */
@property(nonatomic, readwrite) BOOL hasClientId;

@property(nonatomic, readwrite, strong, null_resettable) String *clientSecret;
/** Test to see if @c clientSecret has been set. */
@property(nonatomic, readwrite) BOOL hasClientSecret;

@property(nonatomic, readwrite, strong, null_resettable) String *tokenURL;
/** Test to see if @c tokenURL has been set. */
@property(nonatomic, readwrite) BOOL hasTokenURL;

@property(nonatomic, readwrite, strong, null_resettable) StringArray *scopes;
/** Test to see if @c scopes has been set. */
@property(nonatomic, readwrite) BOOL hasScopes;

@property(nonatomic, readwrite, strong, null_resettable) StringMap *endpointParams;
/** Test to see if @c endpointParams has been set. */
@property(nonatomic, readwrite) BOOL hasEndpointParams;

@end

#pragma mark - JWT

typedef GPB_ENUM(JWT_FieldNumber) {
  JWT_FieldNumber_Email = 1,
  JWT_FieldNumber_PrivateKey = 2,
  JWT_FieldNumber_PriveKeyId = 3,
  JWT_FieldNumber_Subject = 4,
  JWT_FieldNumber_Scopes = 5,
  JWT_FieldNumber_TokenURL = 6,
  JWT_FieldNumber_Expires = 7,
  JWT_FieldNumber_Audience = 8,
};

@interface JWT : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) String *email;
/** Test to see if @c email has been set. */
@property(nonatomic, readwrite) BOOL hasEmail;

@property(nonatomic, readwrite, copy, null_resettable) NSData *privateKey;

@property(nonatomic, readwrite, strong, null_resettable) String *priveKeyId;
/** Test to see if @c priveKeyId has been set. */
@property(nonatomic, readwrite) BOOL hasPriveKeyId;

@property(nonatomic, readwrite, strong, null_resettable) String *subject;
/** Test to see if @c subject has been set. */
@property(nonatomic, readwrite) BOOL hasSubject;

@property(nonatomic, readwrite, strong, null_resettable) StringArray *scopes;
/** Test to see if @c scopes has been set. */
@property(nonatomic, readwrite) BOOL hasScopes;

@property(nonatomic, readwrite, strong, null_resettable) String *tokenURL;
/** Test to see if @c tokenURL has been set. */
@property(nonatomic, readwrite) BOOL hasTokenURL;

@property(nonatomic, readwrite, strong, null_resettable) String *expires;
/** Test to see if @c expires has been set. */
@property(nonatomic, readwrite) BOOL hasExpires;

@property(nonatomic, readwrite, strong, null_resettable) String *audience;
/** Test to see if @c audience has been set. */
@property(nonatomic, readwrite) BOOL hasAudience;

@end

#pragma mark - Query

typedef GPB_ENUM(Query_FieldNumber) {
  Query_FieldNumber_Query = 4,
  Query_FieldNumber_Fields = 5,
};

@interface Query : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) String *query;
/** Test to see if @c query has been set. */
@property(nonatomic, readwrite) BOOL hasQuery;

@property(nonatomic, readwrite, strong, null_resettable) String *fields;
/** Test to see if @c fields has been set. */
@property(nonatomic, readwrite) BOOL hasFields;

@end

#pragma mark - Event

typedef GPB_ENUM(Event_FieldNumber) {
  Event_FieldNumber_Date = 1,
  Event_FieldNumber_Type = 2,
  Event_FieldNumber_ClientId = 3,
  Event_FieldNumber_ClientName = 4,
  Event_FieldNumber_Ip = 5,
  Event_FieldNumber_LocationInfo = 6,
  Event_FieldNumber_Details = 7,
  Event_FieldNumber_UserId = 8,
};

@interface Event : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) String *date;
/** Test to see if @c date has been set. */
@property(nonatomic, readwrite) BOOL hasDate;

@property(nonatomic, readwrite, strong, null_resettable) String *type;
/** Test to see if @c type has been set. */
@property(nonatomic, readwrite) BOOL hasType;

@property(nonatomic, readwrite, strong, null_resettable) String *clientId;
/** Test to see if @c clientId has been set. */
@property(nonatomic, readwrite) BOOL hasClientId;

@property(nonatomic, readwrite, strong, null_resettable) String *clientName;
/** Test to see if @c clientName has been set. */
@property(nonatomic, readwrite) BOOL hasClientName;

@property(nonatomic, readwrite, strong, null_resettable) String *ip;
/** Test to see if @c ip has been set. */
@property(nonatomic, readwrite) BOOL hasIp;

@property(nonatomic, readwrite, strong, null_resettable) String *locationInfo;
/** Test to see if @c locationInfo has been set. */
@property(nonatomic, readwrite) BOOL hasLocationInfo;

@property(nonatomic, readwrite, strong, null_resettable) String *details;
/** Test to see if @c details has been set. */
@property(nonatomic, readwrite) BOOL hasDetails;

@property(nonatomic, readwrite, strong, null_resettable) String *userId;
/** Test to see if @c userId has been set. */
@property(nonatomic, readwrite) BOOL hasUserId;

@end

#pragma mark - EventQuery

typedef GPB_ENUM(EventQuery_FieldNumber) {
  EventQuery_FieldNumber_Date = 1,
  EventQuery_FieldNumber_Type = 2,
  EventQuery_FieldNumber_ClientId = 3,
  EventQuery_FieldNumber_UserId = 4,
};

@interface EventQuery : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *date;

@property(nonatomic, readwrite, copy, null_resettable) NSString *type;

@property(nonatomic, readwrite, copy, null_resettable) NSString *clientId;

@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

@end

#pragma mark - JSONWebKeys

typedef GPB_ENUM(JSONWebKeys_FieldNumber) {
  JSONWebKeys_FieldNumber_Kty = 1,
  JSONWebKeys_FieldNumber_Kid = 2,
  JSONWebKeys_FieldNumber_Use = 3,
  JSONWebKeys_FieldNumber_N = 4,
  JSONWebKeys_FieldNumber_E = 5,
  JSONWebKeys_FieldNumber_X5C = 6,
};

@interface JSONWebKeys : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) String *kty;
/** Test to see if @c kty has been set. */
@property(nonatomic, readwrite) BOOL hasKty;

@property(nonatomic, readwrite, strong, null_resettable) Identifier *kid;
/** Test to see if @c kid has been set. */
@property(nonatomic, readwrite) BOOL hasKid;

@property(nonatomic, readwrite, strong, null_resettable) String *use;
/** Test to see if @c use has been set. */
@property(nonatomic, readwrite) BOOL hasUse;

@property(nonatomic, readwrite, strong, null_resettable) String *n;
/** Test to see if @c n has been set. */
@property(nonatomic, readwrite) BOOL hasN;

@property(nonatomic, readwrite, strong, null_resettable) String *e;
/** Test to see if @c e has been set. */
@property(nonatomic, readwrite) BOOL hasE;

@property(nonatomic, readwrite, strong, null_resettable) StringArray *x5C;
/** Test to see if @c x5C has been set. */
@property(nonatomic, readwrite) BOOL hasX5C;

@end

#pragma mark - Jwks

typedef GPB_ENUM(Jwks_FieldNumber) {
  Jwks_FieldNumber_KeysArray = 1,
};

@interface Jwks : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<JSONWebKeys*> *keysArray;
/** The number of items in @c keysArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger keysArray_Count;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
