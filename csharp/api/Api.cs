// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Api {

  /// <summary>Holder for reflection information generated from api.proto</summary>
  public static partial class ApiReflection {

    #region Descriptor
    /// <summary>File descriptor for api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglhcGkucHJvdG8SA2FwaRocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90",
            "byJIChBTdWJzY3JpYmVSZXF1ZXN0Eg0KBWVtYWlsGAEgASgJEgwKBHBsYW4Y",
            "AiABKAkSFwoEY2FyZBgDIAEoCzIJLmFwaS5DYXJkIjEKElVuU3Vic2NyaWJl",
            "UmVxdWVzdBINCgVlbWFpbBgBIAEoCRIMCgRwbGFuGAIgASgJIkgKBENhcmQS",
            "DgoGbnVtYmVyGAEgASgJEhEKCWV4cF9tb250aBgCIAEoCRIQCghleHBfeWVh",
            "chgDIAEoCRILCgNjdmMYBCABKAkiFgoGU2VjcmV0EgwKBHRleHQYASABKAki",
            "BwoFRW1wdHkizAEKCURhc2hib2FyZBIfCgV1c2VycxgBIAEoCzIQLmFwaS5V",
            "c2Vyc1dpZGdldBInCgljdXN0b21lcnMYAiABKAsyFC5hcGkuQ3VzdG9tZXJz",
            "V2lkZ2V0Eh8KBXBsYW5zGAMgASgLMhAuYXBpLlBsYW5zV2lkZ2V0Ei8KDXN1",
            "YnNjcmlwdGlvbnMYBCABKAsyGC5hcGkuU3Vic2NyaXB0aW9uc1dpZGdldBIj",
            "CgdjaGFyZ2VzGAUgASgLMhIuYXBpLkNoYXJnZXNXaWRnZXQiIAoPQ3VzdG9t",
            "ZXJzV2lkZ2V0Eg0KBWNvdW50GAEgASgDIhwKC1BsYW5zV2lkZ2V0Eg0KBWNv",
            "dW50GAEgASgDIiQKE1N1YnNjcmlwdGlvbnNXaWRnZXQSDQoFY291bnQYASAB",
            "KAMiSQoNQ2hhcmdlc1dpZGdldBINCgVjb3VudBgBIAEoAxINCgV0b3RhbBgC",
            "IAEoARIaChJkb2xsYXJzX3Blcl9jaGFyZ2UYAyABKAEiHAoLVXNlcnNXaWRn",
            "ZXQSDQoFY291bnQYASABKAMiGAoKSWRlbnRpZmllchIKCgJpZBgBIAEoCSJc",
            "CglTTVNTdGF0dXMSGwoCaWQYASABKAsyDy5hcGkuSWRlbnRpZmllchIVCgNz",
            "bXMYAiABKAsyCC5hcGkuU01TEg4KBnN0YXR1cxgDIAEoCRILCgN1cmkYBCAB",
            "KAkicgoDU01TEg8KB3NlcnZpY2UYASABKAkSCgoCdG8YAiABKAkSHQoHbWVz",
            "c2FnZRgDIAEoCzIMLmFwaS5NZXNzYWdlEhAKCG1lZGlhVVJMGAQgASgJEhAK",
            "CGNhbGxiYWNrGAUgASgJEgsKA2FwcBgGIAEoCSJQCgxFbWFpbFJlcXVlc3QS",
            "EQoJZnJvbV9uYW1lGAEgASgJEhIKCmZyb21fZW1haWwYAiABKAkSGQoFZW1h",
            "aWwYAyABKAsyCi5hcGkuRW1haWwiVAoFRW1haWwSDAoEbmFtZRgBIAEoCRIP",
            "CgdhZGRyZXNzGAIgASgJEg8KB3N1YmplY3QYAyABKAkSDQoFcGxhaW4YBCAB",
            "KAkSDAoEaHRtbBgFIAEoCSItCgRDYWxsEgwKBGZyb20YASABKAkSCgoCdG8Y",
            "AiABKAkSCwoDYXBwGAMgASgJIhgKB01lc3NhZ2USDQoFdmFsdWUYASABKAki",
            "qQMKCFVzZXJJbmZvEg8KB3VzZXJfaWQYASABKAkSDAoEbmFtZRgCIAEoCRIS",
            "CgpnaXZlbl9uYW1lGAMgASgJEhMKC2ZhbWlseV9uYW1lGAQgASgJEg4KBmdl",
            "bmRlchgFIAEoCRIRCgliaXJ0aGRhdGUYBiABKAkSDQoFZW1haWwYByABKAkS",
            "FAoMcGhvbmVfbnVtYmVyGAggASgJEg8KB3BpY3R1cmUYCSABKAkSKAoNdXNl",
            "cl9tZXRhZGF0YRgKIAEoCzIRLmFwaS5Vc2VyTWV0YWRhdGESJgoMYXBwX21l",
            "dGFkYXRhGAsgASgLMhAuYXBpLkFwcE1ldGFkYXRhEg8KB2xhc3RfaXAYDCAB",
            "KAkSDwoHYmxvY2tlZBgNIAEoCBIQCghuaWNrbmFtZRgOIAEoCRITCgttdWx0",
            "aWZhY3RvchgPIAMoCRISCgpjcmVhdGVkX2F0GBEgASgJEhIKCnVwZGF0ZWRf",
            "YXQYEiABKAkSFgoOcGhvbmVfdmVyaWZpZWQYEyABKAgSIQoKaWRlbnRpdGll",
            "cxgUIAMoCzINLmFwaS5JZGVudGl0eSJTCghJZGVudGl0eRISCgpjb25uZWN0",
            "aW9uGAEgASgJEg8KB3VzZXJfaWQYAiABKAkSEAoIcHJvdmlkZXIYAyABKAkS",
            "EAoIaXNTb2NpYWwYBCABKAkicgoMVXNlck1ldGFkYXRhEjEKCG1ldGFkYXRh",
            "GAEgAygLMh8uYXBpLlVzZXJNZXRhZGF0YS5NZXRhZGF0YUVudHJ5Gi8KDU1l",
            "dGFkYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJw",
            "CgtBcHBNZXRhZGF0YRIwCghtZXRhZGF0YRgBIAMoCzIeLmFwaS5BcHBNZXRh",
            "ZGF0YS5NZXRhZGF0YUVudHJ5Gi8KDU1ldGFkYXRhRW50cnkSCwoDa2V5GAEg",
            "ASgJEg0KBXZhbHVlGAIgASgJOgI4ASJ0CgRBdXRoEg4KBmRvbWFpbhgBIAEo",
            "CRIRCgljbGllbnRfaWQYAiABKAkSFQoNY2xpZW50X3NlY3JldBgDIAEoCRIQ",
            "CghyZWRpcmVjdBgEIAEoCRIQCghhdWRpZW5jZRgFIAEoCRIOCgZzY29wZXMY",
            "BiADKAkiFQoFQnl0ZXMSDAoEYml0cxgBIAEoDCImCghUZW1wbGF0ZRIMCgR0",
            "ZXh0GAEgASgJEgwKBGRhdGEYAiABKAwiVwoLSlNPTldlYktleXMSCwoDa3R5",
            "GAEgASgJEgsKA2tpZBgCIAEoCRILCgN1c2UYAyABKAkSCQoBbhgEIAEoCRIJ",
            "CgFlGAUgASgJEgsKA3g1YxgGIAMoCSImCgRKd2tzEh4KBGtleXMYASADKAsy",
            "EC5hcGkuSlNPTldlYktleXMy6AUKDlV0aWxpdHlTZXJ2aWNlEjwKBEVjaG8S",
            "DC5hcGkuTWVzc2FnZRoMLmFwaS5NZXNzYWdlIhiC0+STAhIiDS91dGlsaXR5",
            "L2VjaG86ASoSSwoLRWNob1NwYW5pc2gSDC5hcGkuTWVzc2FnZRoMLmFwaS5N",
            "ZXNzYWdlIiCC0+STAhoiFS91dGlsaXR5L2VjaG8vc3BhbmlzaDoBKhJLCgtF",
            "Y2hvQ2hpbmVzZRIMLmFwaS5NZXNzYWdlGgwuYXBpLk1lc3NhZ2UiIILT5JMC",
            "GiIVL3V0aWxpdHkvZWNoby9jaGluZXNlOgEqEksKC0VjaG9FbmdsaXNoEgwu",
            "YXBpLk1lc3NhZ2UaDC5hcGkuTWVzc2FnZSIggtPkkwIaIhUvdXRpbGl0eS9l",
            "Y2hvL2VuZ2xpc2g6ASoSRwoJRWNob0hpbmRpEgwuYXBpLk1lc3NhZ2UaDC5h",
            "cGkuTWVzc2FnZSIegtPkkwIYIhMvdXRpbGl0eS9lY2hvL2hpbmRpOgEqEkkK",
            "CkVjaG9BcmFiaWMSDC5hcGkuTWVzc2FnZRoMLmFwaS5NZXNzYWdlIh+C0+ST",
            "AhkiFC91dGlsaXR5L2VjaG8vYXJhYmljOgEqEkcKC01hcnNoYWxKU09OEgou",
            "YXBpLkJ5dGVzGgouYXBpLkJ5dGVzIiCC0+STAhoiFS91dGlsaXR5L21hcnNo",
            "YWwvanNvbjoBKhJHCgtNYXJzaGFsWUFNTBIKLmFwaS5CeXRlcxoKLmFwaS5C",
            "eXRlcyIggtPkkwIaIhUvdXRpbGl0eS9tYXJzaGFsL3lhbWw6ASoSRQoKTWFy",
            "c2hhbFhNTBIKLmFwaS5CeXRlcxoKLmFwaS5CeXRlcyIfgtPkkwIZIhQvdXRp",
            "bGl0eS9tYXJzaGFsL3htbDoBKhJECgZSZW5kZXISDS5hcGkuVGVtcGxhdGUa",
            "Ci5hcGkuQnl0ZXMiH4LT5JMCGSIUL3V0aWxpdHkvbWFyc2hhbC94bWw6ASoy",
            "vQIKDkNvbnRhY3RTZXJ2aWNlEkIKB1NlbmRTTVMSCC5hcGkuU01TGg8uYXBp",
            "LklkZW50aWZpZXIiHILT5JMCFiIRL2NvbnRhY3Qvc21zL3t0b306ASoSRwoG",
            "R2V0U01TEg8uYXBpLklkZW50aWZpZXIaDi5hcGkuU01TU3RhdHVzIhyC0+ST",
            "AhYiES9jb250YWN0L3Ntcy97aWR9OgEqElcKCVNlbmRFbWFpbBIRLmFwaS5F",
            "bWFpbFJlcXVlc3QaDC5hcGkuTWVzc2FnZSIpgtPkkwIjIh4vY29udGFjdC9l",
            "bWFpbC97ZW1haWwuYWRkcmVzc306ASoSRQoIU2VuZENhbGwSCS5hcGkuQ2Fs",
            "bBoPLmFwaS5JZGVudGlmaWVyIh2C0+STAhciEi9jb250YWN0L2NhbGwve3Rv",
            "fToBKjLOAQoOUGF5bWVudFNlcnZpY2USWgoJU3Vic2NyaWJlEhUuYXBpLlN1",
            "YnNjcmliZVJlcXVlc3QaDy5hcGkuSWRlbnRpZmllciIlgtPkkwIfIhovcGF5",
            "bWVudC9zdWJzY3JpYmUve2VtYWlsfToBKhJgCgtVbnN1YnNjcmliZRIXLmFw",
            "aS5VblN1YnNjcmliZVJlcXVlc3QaDy5hcGkuSWRlbnRpZmllciIngtPkkwIh",
            "IhwvcGF5bWVudC91bnN1YnNjcmliZS97ZW1haWx9OgEqMr8CCgtVc2VyU2Vy",
            "dmljZRJECgdHZXRVc2VyEg8uYXBpLklkZW50aWZpZXIaDS5hcGkuVXNlcklu",
            "Zm8iGYLT5JMCEyIOL3VzZXIvZ2V0L3tpZH06ASoSTQoKVXBkYXRlVXNlchIN",
            "LmFwaS5Vc2VySW5mbxoPLmFwaS5JZGVudGlmaWVyIh+C0+STAhkiFC91c2Vy",
            "L3VwZGF0ZS97ZW1haWx9OgEqEk0KCkNyZWF0ZVVzZXISDS5hcGkuVXNlcklu",
            "Zm8aDy5hcGkuSWRlbnRpZmllciIfgtPkkwIZIhQvdXNlci9jcmVhdGUve2Vt",
            "YWlsfToBKhJMCgpEZWxldGVVc2VyEg8uYXBpLklkZW50aWZpZXIaDy5hcGku",
            "SWRlbnRpZmllciIcgtPkkwIWIhEvdXNlci9kZWxldGUve2lkfToBKjKiAQoM",
            "QWRtaW5TZXJ2aWNlEkgKDEdldERhc2hib2FyZBILLmFwaS5TZWNyZXQaDi5h",
            "cGkuRGFzaGJvYXJkIhuC0+STAhUiEC9hZG1pbi9kYXNoYm9hcmQ6ASoSSAoJ",
            "RW1haWxVc2VyEgouYXBpLkVtYWlsGgwuYXBpLk1lc3NhZ2UiIYLT5JMCGyIW",
            "L2FkbWluL2VtYWlsL3thZGRyZXNzfToBKmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.SubscribeRequest), global::Api.SubscribeRequest.Parser, new[]{ "Email", "Plan", "Card" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.UnSubscribeRequest), global::Api.UnSubscribeRequest.Parser, new[]{ "Email", "Plan" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Card), global::Api.Card.Parser, new[]{ "Number", "ExpMonth", "ExpYear", "Cvc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Secret), global::Api.Secret.Parser, new[]{ "Text" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Empty), global::Api.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Dashboard), global::Api.Dashboard.Parser, new[]{ "Users", "Customers", "Plans", "Subscriptions", "Charges" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.CustomersWidget), global::Api.CustomersWidget.Parser, new[]{ "Count" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.PlansWidget), global::Api.PlansWidget.Parser, new[]{ "Count" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.SubscriptionsWidget), global::Api.SubscriptionsWidget.Parser, new[]{ "Count" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ChargesWidget), global::Api.ChargesWidget.Parser, new[]{ "Count", "Total", "DollarsPerCharge" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.UsersWidget), global::Api.UsersWidget.Parser, new[]{ "Count" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Identifier), global::Api.Identifier.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.SMSStatus), global::Api.SMSStatus.Parser, new[]{ "Id", "Sms", "Status", "Uri" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.SMS), global::Api.SMS.Parser, new[]{ "Service", "To", "Message", "MediaURL", "Callback", "App" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.EmailRequest), global::Api.EmailRequest.Parser, new[]{ "FromName", "FromEmail", "Email" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Email), global::Api.Email.Parser, new[]{ "Name", "Address", "Subject", "Plain", "Html" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Call), global::Api.Call.Parser, new[]{ "From", "To", "App" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Message), global::Api.Message.Parser, new[]{ "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.UserInfo), global::Api.UserInfo.Parser, new[]{ "UserId", "Name", "GivenName", "FamilyName", "Gender", "Birthdate", "Email", "PhoneNumber", "Picture", "UserMetadata", "AppMetadata", "LastIp", "Blocked", "Nickname", "Multifactor", "CreatedAt", "UpdatedAt", "PhoneVerified", "Identities" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Identity), global::Api.Identity.Parser, new[]{ "Connection", "UserId", "Provider", "IsSocial" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.UserMetadata), global::Api.UserMetadata.Parser, new[]{ "Metadata" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.AppMetadata), global::Api.AppMetadata.Parser, new[]{ "Metadata" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Auth), global::Api.Auth.Parser, new[]{ "Domain", "ClientId", "ClientSecret", "Redirect", "Audience", "Scopes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Bytes), global::Api.Bytes.Parser, new[]{ "Bits" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Template), global::Api.Template.Parser, new[]{ "Text", "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.JSONWebKeys), global::Api.JSONWebKeys.Parser, new[]{ "Kty", "Kid", "Use", "N", "E", "X5C" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Jwks), global::Api.Jwks.Parser, new[]{ "Keys" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class SubscribeRequest : pb::IMessage<SubscribeRequest> {
    private static readonly pb::MessageParser<SubscribeRequest> _parser = new pb::MessageParser<SubscribeRequest>(() => new SubscribeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest(SubscribeRequest other) : this() {
      email_ = other.email_;
      plan_ = other.plan_;
      card_ = other.card_ != null ? other.card_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest Clone() {
      return new SubscribeRequest(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plan" field.</summary>
    public const int PlanFieldNumber = 2;
    private string plan_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Plan {
      get { return plan_; }
      set {
        plan_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "card" field.</summary>
    public const int CardFieldNumber = 3;
    private global::Api.Card card_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Card Card {
      get { return card_; }
      set {
        card_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      if (Plan != other.Plan) return false;
      if (!object.Equals(Card, other.Card)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Plan.Length != 0) hash ^= Plan.GetHashCode();
      if (card_ != null) hash ^= Card.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (Plan.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Plan);
      }
      if (card_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Card);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Plan.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Plan);
      }
      if (card_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Card);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Plan.Length != 0) {
        Plan = other.Plan;
      }
      if (other.card_ != null) {
        if (card_ == null) {
          card_ = new global::Api.Card();
        }
        Card.MergeFrom(other.Card);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 18: {
            Plan = input.ReadString();
            break;
          }
          case 26: {
            if (card_ == null) {
              card_ = new global::Api.Card();
            }
            input.ReadMessage(card_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnSubscribeRequest : pb::IMessage<UnSubscribeRequest> {
    private static readonly pb::MessageParser<UnSubscribeRequest> _parser = new pb::MessageParser<UnSubscribeRequest>(() => new UnSubscribeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnSubscribeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnSubscribeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnSubscribeRequest(UnSubscribeRequest other) : this() {
      email_ = other.email_;
      plan_ = other.plan_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnSubscribeRequest Clone() {
      return new UnSubscribeRequest(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plan" field.</summary>
    public const int PlanFieldNumber = 2;
    private string plan_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Plan {
      get { return plan_; }
      set {
        plan_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnSubscribeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnSubscribeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      if (Plan != other.Plan) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Plan.Length != 0) hash ^= Plan.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (Plan.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Plan);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Plan.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Plan);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnSubscribeRequest other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Plan.Length != 0) {
        Plan = other.Plan;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 18: {
            Plan = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Card : pb::IMessage<Card> {
    private static readonly pb::MessageParser<Card> _parser = new pb::MessageParser<Card>(() => new Card());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Card> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Card() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Card(Card other) : this() {
      number_ = other.number_;
      expMonth_ = other.expMonth_;
      expYear_ = other.expYear_;
      cvc_ = other.cvc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Card Clone() {
      return new Card(this);
    }

    /// <summary>Field number for the "number" field.</summary>
    public const int NumberFieldNumber = 1;
    private string number_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Number {
      get { return number_; }
      set {
        number_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exp_month" field.</summary>
    public const int ExpMonthFieldNumber = 2;
    private string expMonth_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpMonth {
      get { return expMonth_; }
      set {
        expMonth_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exp_year" field.</summary>
    public const int ExpYearFieldNumber = 3;
    private string expYear_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpYear {
      get { return expYear_; }
      set {
        expYear_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cvc" field.</summary>
    public const int CvcFieldNumber = 4;
    private string cvc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cvc {
      get { return cvc_; }
      set {
        cvc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Card);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Card other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Number != other.Number) return false;
      if (ExpMonth != other.ExpMonth) return false;
      if (ExpYear != other.ExpYear) return false;
      if (Cvc != other.Cvc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Number.Length != 0) hash ^= Number.GetHashCode();
      if (ExpMonth.Length != 0) hash ^= ExpMonth.GetHashCode();
      if (ExpYear.Length != 0) hash ^= ExpYear.GetHashCode();
      if (Cvc.Length != 0) hash ^= Cvc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Number.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Number);
      }
      if (ExpMonth.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ExpMonth);
      }
      if (ExpYear.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ExpYear);
      }
      if (Cvc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Cvc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Number.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Number);
      }
      if (ExpMonth.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpMonth);
      }
      if (ExpYear.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpYear);
      }
      if (Cvc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cvc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Card other) {
      if (other == null) {
        return;
      }
      if (other.Number.Length != 0) {
        Number = other.Number;
      }
      if (other.ExpMonth.Length != 0) {
        ExpMonth = other.ExpMonth;
      }
      if (other.ExpYear.Length != 0) {
        ExpYear = other.ExpYear;
      }
      if (other.Cvc.Length != 0) {
        Cvc = other.Cvc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Number = input.ReadString();
            break;
          }
          case 18: {
            ExpMonth = input.ReadString();
            break;
          }
          case 26: {
            ExpYear = input.ReadString();
            break;
          }
          case 34: {
            Cvc = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Secret : pb::IMessage<Secret> {
    private static readonly pb::MessageParser<Secret> _parser = new pb::MessageParser<Secret>(() => new Secret());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Secret> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secret() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secret(Secret other) : this() {
      text_ = other.text_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secret Clone() {
      return new Secret(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Secret);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Secret other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Secret other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class Dashboard : pb::IMessage<Dashboard> {
    private static readonly pb::MessageParser<Dashboard> _parser = new pb::MessageParser<Dashboard>(() => new Dashboard());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Dashboard> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dashboard() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dashboard(Dashboard other) : this() {
      users_ = other.users_ != null ? other.users_.Clone() : null;
      customers_ = other.customers_ != null ? other.customers_.Clone() : null;
      plans_ = other.plans_ != null ? other.plans_.Clone() : null;
      subscriptions_ = other.subscriptions_ != null ? other.subscriptions_.Clone() : null;
      charges_ = other.charges_ != null ? other.charges_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Dashboard Clone() {
      return new Dashboard(this);
    }

    /// <summary>Field number for the "users" field.</summary>
    public const int UsersFieldNumber = 1;
    private global::Api.UsersWidget users_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.UsersWidget Users {
      get { return users_; }
      set {
        users_ = value;
      }
    }

    /// <summary>Field number for the "customers" field.</summary>
    public const int CustomersFieldNumber = 2;
    private global::Api.CustomersWidget customers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.CustomersWidget Customers {
      get { return customers_; }
      set {
        customers_ = value;
      }
    }

    /// <summary>Field number for the "plans" field.</summary>
    public const int PlansFieldNumber = 3;
    private global::Api.PlansWidget plans_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.PlansWidget Plans {
      get { return plans_; }
      set {
        plans_ = value;
      }
    }

    /// <summary>Field number for the "subscriptions" field.</summary>
    public const int SubscriptionsFieldNumber = 4;
    private global::Api.SubscriptionsWidget subscriptions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.SubscriptionsWidget Subscriptions {
      get { return subscriptions_; }
      set {
        subscriptions_ = value;
      }
    }

    /// <summary>Field number for the "charges" field.</summary>
    public const int ChargesFieldNumber = 5;
    private global::Api.ChargesWidget charges_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.ChargesWidget Charges {
      get { return charges_; }
      set {
        charges_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Dashboard);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Dashboard other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Users, other.Users)) return false;
      if (!object.Equals(Customers, other.Customers)) return false;
      if (!object.Equals(Plans, other.Plans)) return false;
      if (!object.Equals(Subscriptions, other.Subscriptions)) return false;
      if (!object.Equals(Charges, other.Charges)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (users_ != null) hash ^= Users.GetHashCode();
      if (customers_ != null) hash ^= Customers.GetHashCode();
      if (plans_ != null) hash ^= Plans.GetHashCode();
      if (subscriptions_ != null) hash ^= Subscriptions.GetHashCode();
      if (charges_ != null) hash ^= Charges.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (users_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Users);
      }
      if (customers_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Customers);
      }
      if (plans_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Plans);
      }
      if (subscriptions_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Subscriptions);
      }
      if (charges_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Charges);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (users_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Users);
      }
      if (customers_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Customers);
      }
      if (plans_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Plans);
      }
      if (subscriptions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Subscriptions);
      }
      if (charges_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Charges);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Dashboard other) {
      if (other == null) {
        return;
      }
      if (other.users_ != null) {
        if (users_ == null) {
          users_ = new global::Api.UsersWidget();
        }
        Users.MergeFrom(other.Users);
      }
      if (other.customers_ != null) {
        if (customers_ == null) {
          customers_ = new global::Api.CustomersWidget();
        }
        Customers.MergeFrom(other.Customers);
      }
      if (other.plans_ != null) {
        if (plans_ == null) {
          plans_ = new global::Api.PlansWidget();
        }
        Plans.MergeFrom(other.Plans);
      }
      if (other.subscriptions_ != null) {
        if (subscriptions_ == null) {
          subscriptions_ = new global::Api.SubscriptionsWidget();
        }
        Subscriptions.MergeFrom(other.Subscriptions);
      }
      if (other.charges_ != null) {
        if (charges_ == null) {
          charges_ = new global::Api.ChargesWidget();
        }
        Charges.MergeFrom(other.Charges);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (users_ == null) {
              users_ = new global::Api.UsersWidget();
            }
            input.ReadMessage(users_);
            break;
          }
          case 18: {
            if (customers_ == null) {
              customers_ = new global::Api.CustomersWidget();
            }
            input.ReadMessage(customers_);
            break;
          }
          case 26: {
            if (plans_ == null) {
              plans_ = new global::Api.PlansWidget();
            }
            input.ReadMessage(plans_);
            break;
          }
          case 34: {
            if (subscriptions_ == null) {
              subscriptions_ = new global::Api.SubscriptionsWidget();
            }
            input.ReadMessage(subscriptions_);
            break;
          }
          case 42: {
            if (charges_ == null) {
              charges_ = new global::Api.ChargesWidget();
            }
            input.ReadMessage(charges_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CustomersWidget : pb::IMessage<CustomersWidget> {
    private static readonly pb::MessageParser<CustomersWidget> _parser = new pb::MessageParser<CustomersWidget>(() => new CustomersWidget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomersWidget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomersWidget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomersWidget(CustomersWidget other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomersWidget Clone() {
      return new CustomersWidget(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private long count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomersWidget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomersWidget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0L) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomersWidget other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0L) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PlansWidget : pb::IMessage<PlansWidget> {
    private static readonly pb::MessageParser<PlansWidget> _parser = new pb::MessageParser<PlansWidget>(() => new PlansWidget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PlansWidget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlansWidget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlansWidget(PlansWidget other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PlansWidget Clone() {
      return new PlansWidget(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private long count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PlansWidget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PlansWidget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0L) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PlansWidget other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0L) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscriptionsWidget : pb::IMessage<SubscriptionsWidget> {
    private static readonly pb::MessageParser<SubscriptionsWidget> _parser = new pb::MessageParser<SubscriptionsWidget>(() => new SubscriptionsWidget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscriptionsWidget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionsWidget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionsWidget(SubscriptionsWidget other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscriptionsWidget Clone() {
      return new SubscriptionsWidget(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private long count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscriptionsWidget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscriptionsWidget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0L) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscriptionsWidget other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0L) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChargesWidget : pb::IMessage<ChargesWidget> {
    private static readonly pb::MessageParser<ChargesWidget> _parser = new pb::MessageParser<ChargesWidget>(() => new ChargesWidget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChargesWidget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChargesWidget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChargesWidget(ChargesWidget other) : this() {
      count_ = other.count_;
      total_ = other.total_;
      dollarsPerCharge_ = other.dollarsPerCharge_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChargesWidget Clone() {
      return new ChargesWidget(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private long count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    /// <summary>Field number for the "total" field.</summary>
    public const int TotalFieldNumber = 2;
    private double total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "dollars_per_charge" field.</summary>
    public const int DollarsPerChargeFieldNumber = 3;
    private double dollarsPerCharge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double DollarsPerCharge {
      get { return dollarsPerCharge_; }
      set {
        dollarsPerCharge_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChargesWidget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChargesWidget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Total, other.Total)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(DollarsPerCharge, other.DollarsPerCharge)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0L) hash ^= Count.GetHashCode();
      if (Total != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Total);
      if (DollarsPerCharge != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(DollarsPerCharge);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Count);
      }
      if (Total != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Total);
      }
      if (DollarsPerCharge != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(DollarsPerCharge);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
      }
      if (Total != 0D) {
        size += 1 + 8;
      }
      if (DollarsPerCharge != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChargesWidget other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0L) {
        Count = other.Count;
      }
      if (other.Total != 0D) {
        Total = other.Total;
      }
      if (other.DollarsPerCharge != 0D) {
        DollarsPerCharge = other.DollarsPerCharge;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt64();
            break;
          }
          case 17: {
            Total = input.ReadDouble();
            break;
          }
          case 25: {
            DollarsPerCharge = input.ReadDouble();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UsersWidget : pb::IMessage<UsersWidget> {
    private static readonly pb::MessageParser<UsersWidget> _parser = new pb::MessageParser<UsersWidget>(() => new UsersWidget());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UsersWidget> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsersWidget() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsersWidget(UsersWidget other) : this() {
      count_ = other.count_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UsersWidget Clone() {
      return new UsersWidget(this);
    }

    /// <summary>Field number for the "count" field.</summary>
    public const int CountFieldNumber = 1;
    private long count_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Count {
      get { return count_; }
      set {
        count_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UsersWidget);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UsersWidget other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Count != other.Count) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Count != 0L) hash ^= Count.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Count != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Count);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Count != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Count);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UsersWidget other) {
      if (other == null) {
        return;
      }
      if (other.Count != 0L) {
        Count = other.Count;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Count = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Identifier : pb::IMessage<Identifier> {
    private static readonly pb::MessageParser<Identifier> _parser = new pb::MessageParser<Identifier>(() => new Identifier());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Identifier> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identifier() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identifier(Identifier other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identifier Clone() {
      return new Identifier(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Identifier);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Identifier other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Identifier other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SMSStatus : pb::IMessage<SMSStatus> {
    private static readonly pb::MessageParser<SMSStatus> _parser = new pb::MessageParser<SMSStatus>(() => new SMSStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SMSStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SMSStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SMSStatus(SMSStatus other) : this() {
      id_ = other.id_ != null ? other.id_.Clone() : null;
      sms_ = other.sms_ != null ? other.sms_.Clone() : null;
      status_ = other.status_;
      uri_ = other.uri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SMSStatus Clone() {
      return new SMSStatus(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private global::Api.Identifier id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Identifier Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "sms" field.</summary>
    public const int SmsFieldNumber = 2;
    private global::Api.SMS sms_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.SMS Sms {
      get { return sms_; }
      set {
        sms_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 3;
    private string status_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 4;
    private string uri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SMSStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SMSStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Id, other.Id)) return false;
      if (!object.Equals(Sms, other.Sms)) return false;
      if (Status != other.Status) return false;
      if (Uri != other.Uri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (id_ != null) hash ^= Id.GetHashCode();
      if (sms_ != null) hash ^= Sms.GetHashCode();
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (Uri.Length != 0) hash ^= Uri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (id_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Id);
      }
      if (sms_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Sms);
      }
      if (Status.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Status);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Uri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (id_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Id);
      }
      if (sms_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sms);
      }
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (Uri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SMSStatus other) {
      if (other == null) {
        return;
      }
      if (other.id_ != null) {
        if (id_ == null) {
          id_ = new global::Api.Identifier();
        }
        Id.MergeFrom(other.Id);
      }
      if (other.sms_ != null) {
        if (sms_ == null) {
          sms_ = new global::Api.SMS();
        }
        Sms.MergeFrom(other.Sms);
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      if (other.Uri.Length != 0) {
        Uri = other.Uri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (id_ == null) {
              id_ = new global::Api.Identifier();
            }
            input.ReadMessage(id_);
            break;
          }
          case 18: {
            if (sms_ == null) {
              sms_ = new global::Api.SMS();
            }
            input.ReadMessage(sms_);
            break;
          }
          case 26: {
            Status = input.ReadString();
            break;
          }
          case 34: {
            Uri = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SMS : pb::IMessage<SMS> {
    private static readonly pb::MessageParser<SMS> _parser = new pb::MessageParser<SMS>(() => new SMS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SMS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SMS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SMS(SMS other) : this() {
      service_ = other.service_;
      to_ = other.to_;
      message_ = other.message_ != null ? other.message_.Clone() : null;
      mediaURL_ = other.mediaURL_;
      callback_ = other.callback_;
      app_ = other.app_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SMS Clone() {
      return new SMS(this);
    }

    /// <summary>Field number for the "service" field.</summary>
    public const int ServiceFieldNumber = 1;
    private string service_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Service {
      get { return service_; }
      set {
        service_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private string to_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string To {
      get { return to_; }
      set {
        to_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private global::Api.Message message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Message Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    /// <summary>Field number for the "mediaURL" field.</summary>
    public const int MediaURLFieldNumber = 4;
    private string mediaURL_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MediaURL {
      get { return mediaURL_; }
      set {
        mediaURL_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "callback" field.</summary>
    public const int CallbackFieldNumber = 5;
    private string callback_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Callback {
      get { return callback_; }
      set {
        callback_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app" field.</summary>
    public const int AppFieldNumber = 6;
    private string app_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string App {
      get { return app_; }
      set {
        app_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SMS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SMS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Service != other.Service) return false;
      if (To != other.To) return false;
      if (!object.Equals(Message, other.Message)) return false;
      if (MediaURL != other.MediaURL) return false;
      if (Callback != other.Callback) return false;
      if (App != other.App) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Service.Length != 0) hash ^= Service.GetHashCode();
      if (To.Length != 0) hash ^= To.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (MediaURL.Length != 0) hash ^= MediaURL.GetHashCode();
      if (Callback.Length != 0) hash ^= Callback.GetHashCode();
      if (App.Length != 0) hash ^= App.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Service.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Service);
      }
      if (To.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(To);
      }
      if (message_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Message);
      }
      if (MediaURL.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MediaURL);
      }
      if (Callback.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Callback);
      }
      if (App.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(App);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Service.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Service);
      }
      if (To.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(To);
      }
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (MediaURL.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MediaURL);
      }
      if (Callback.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Callback);
      }
      if (App.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(App);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SMS other) {
      if (other == null) {
        return;
      }
      if (other.Service.Length != 0) {
        Service = other.Service;
      }
      if (other.To.Length != 0) {
        To = other.To;
      }
      if (other.message_ != null) {
        if (message_ == null) {
          message_ = new global::Api.Message();
        }
        Message.MergeFrom(other.Message);
      }
      if (other.MediaURL.Length != 0) {
        MediaURL = other.MediaURL;
      }
      if (other.Callback.Length != 0) {
        Callback = other.Callback;
      }
      if (other.App.Length != 0) {
        App = other.App;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Service = input.ReadString();
            break;
          }
          case 18: {
            To = input.ReadString();
            break;
          }
          case 26: {
            if (message_ == null) {
              message_ = new global::Api.Message();
            }
            input.ReadMessage(message_);
            break;
          }
          case 34: {
            MediaURL = input.ReadString();
            break;
          }
          case 42: {
            Callback = input.ReadString();
            break;
          }
          case 50: {
            App = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EmailRequest : pb::IMessage<EmailRequest> {
    private static readonly pb::MessageParser<EmailRequest> _parser = new pb::MessageParser<EmailRequest>(() => new EmailRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmailRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailRequest(EmailRequest other) : this() {
      fromName_ = other.fromName_;
      fromEmail_ = other.fromEmail_;
      email_ = other.email_ != null ? other.email_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailRequest Clone() {
      return new EmailRequest(this);
    }

    /// <summary>Field number for the "from_name" field.</summary>
    public const int FromNameFieldNumber = 1;
    private string fromName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromName {
      get { return fromName_; }
      set {
        fromName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from_email" field.</summary>
    public const int FromEmailFieldNumber = 2;
    private string fromEmail_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromEmail {
      get { return fromEmail_; }
      set {
        fromEmail_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 3;
    private global::Api.Email email_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Email Email {
      get { return email_; }
      set {
        email_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmailRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmailRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FromName != other.FromName) return false;
      if (FromEmail != other.FromEmail) return false;
      if (!object.Equals(Email, other.Email)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FromName.Length != 0) hash ^= FromName.GetHashCode();
      if (FromEmail.Length != 0) hash ^= FromEmail.GetHashCode();
      if (email_ != null) hash ^= Email.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FromName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FromName);
      }
      if (FromEmail.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FromEmail);
      }
      if (email_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Email);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FromName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromName);
      }
      if (FromEmail.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromEmail);
      }
      if (email_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Email);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmailRequest other) {
      if (other == null) {
        return;
      }
      if (other.FromName.Length != 0) {
        FromName = other.FromName;
      }
      if (other.FromEmail.Length != 0) {
        FromEmail = other.FromEmail;
      }
      if (other.email_ != null) {
        if (email_ == null) {
          email_ = new global::Api.Email();
        }
        Email.MergeFrom(other.Email);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FromName = input.ReadString();
            break;
          }
          case 18: {
            FromEmail = input.ReadString();
            break;
          }
          case 26: {
            if (email_ == null) {
              email_ = new global::Api.Email();
            }
            input.ReadMessage(email_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Email : pb::IMessage<Email> {
    private static readonly pb::MessageParser<Email> _parser = new pb::MessageParser<Email>(() => new Email());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Email> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Email() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Email(Email other) : this() {
      name_ = other.name_;
      address_ = other.address_;
      subject_ = other.subject_;
      plain_ = other.plain_;
      html_ = other.html_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Email Clone() {
      return new Email(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 2;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 3;
    private string subject_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subject {
      get { return subject_; }
      set {
        subject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plain" field.</summary>
    public const int PlainFieldNumber = 4;
    private string plain_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Plain {
      get { return plain_; }
      set {
        plain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "html" field.</summary>
    public const int HtmlFieldNumber = 5;
    private string html_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Html {
      get { return html_; }
      set {
        html_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Email);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Email other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Address != other.Address) return false;
      if (Subject != other.Subject) return false;
      if (Plain != other.Plain) return false;
      if (Html != other.Html) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (Subject.Length != 0) hash ^= Subject.GetHashCode();
      if (Plain.Length != 0) hash ^= Plain.GetHashCode();
      if (Html.Length != 0) hash ^= Html.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Address);
      }
      if (Subject.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Subject);
      }
      if (Plain.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Plain);
      }
      if (Html.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Html);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (Subject.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
      }
      if (Plain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Plain);
      }
      if (Html.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Html);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Email other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.Subject.Length != 0) {
        Subject = other.Subject;
      }
      if (other.Plain.Length != 0) {
        Plain = other.Plain;
      }
      if (other.Html.Length != 0) {
        Html = other.Html;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Address = input.ReadString();
            break;
          }
          case 26: {
            Subject = input.ReadString();
            break;
          }
          case 34: {
            Plain = input.ReadString();
            break;
          }
          case 42: {
            Html = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Call : pb::IMessage<Call> {
    private static readonly pb::MessageParser<Call> _parser = new pb::MessageParser<Call>(() => new Call());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Call> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Call() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Call(Call other) : this() {
      from_ = other.from_;
      to_ = other.to_;
      app_ = other.app_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Call Clone() {
      return new Call(this);
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 1;
    private string from_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string From {
      get { return from_; }
      set {
        from_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private string to_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string To {
      get { return to_; }
      set {
        to_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app" field.</summary>
    public const int AppFieldNumber = 3;
    private string app_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string App {
      get { return app_; }
      set {
        app_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Call);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Call other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (From != other.From) return false;
      if (To != other.To) return false;
      if (App != other.App) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (From.Length != 0) hash ^= From.GetHashCode();
      if (To.Length != 0) hash ^= To.GetHashCode();
      if (App.Length != 0) hash ^= App.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (From.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(From);
      }
      if (To.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(To);
      }
      if (App.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(App);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (From.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(From);
      }
      if (To.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(To);
      }
      if (App.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(App);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Call other) {
      if (other == null) {
        return;
      }
      if (other.From.Length != 0) {
        From = other.From;
      }
      if (other.To.Length != 0) {
        To = other.To;
      }
      if (other.App.Length != 0) {
        App = other.App;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            From = input.ReadString();
            break;
          }
          case 18: {
            To = input.ReadString();
            break;
          }
          case 26: {
            App = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Message : pb::IMessage<Message> {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserInfo : pb::IMessage<UserInfo> {
    private static readonly pb::MessageParser<UserInfo> _parser = new pb::MessageParser<UserInfo>(() => new UserInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo(UserInfo other) : this() {
      userId_ = other.userId_;
      name_ = other.name_;
      givenName_ = other.givenName_;
      familyName_ = other.familyName_;
      gender_ = other.gender_;
      birthdate_ = other.birthdate_;
      email_ = other.email_;
      phoneNumber_ = other.phoneNumber_;
      picture_ = other.picture_;
      userMetadata_ = other.userMetadata_ != null ? other.userMetadata_.Clone() : null;
      appMetadata_ = other.appMetadata_ != null ? other.appMetadata_.Clone() : null;
      lastIp_ = other.lastIp_;
      blocked_ = other.blocked_;
      nickname_ = other.nickname_;
      multifactor_ = other.multifactor_.Clone();
      createdAt_ = other.createdAt_;
      updatedAt_ = other.updatedAt_;
      phoneVerified_ = other.phoneVerified_;
      identities_ = other.identities_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo Clone() {
      return new UserInfo(this);
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "given_name" field.</summary>
    public const int GivenNameFieldNumber = 3;
    private string givenName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GivenName {
      get { return givenName_; }
      set {
        givenName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "family_name" field.</summary>
    public const int FamilyNameFieldNumber = 4;
    private string familyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FamilyName {
      get { return familyName_; }
      set {
        familyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gender" field.</summary>
    public const int GenderFieldNumber = 5;
    private string gender_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Gender {
      get { return gender_; }
      set {
        gender_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "birthdate" field.</summary>
    public const int BirthdateFieldNumber = 6;
    private string birthdate_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Birthdate {
      get { return birthdate_; }
      set {
        birthdate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 7;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phone_number" field.</summary>
    public const int PhoneNumberFieldNumber = 8;
    private string phoneNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PhoneNumber {
      get { return phoneNumber_; }
      set {
        phoneNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "picture" field.</summary>
    public const int PictureFieldNumber = 9;
    private string picture_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Picture {
      get { return picture_; }
      set {
        picture_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_metadata" field.</summary>
    public const int UserMetadataFieldNumber = 10;
    private global::Api.UserMetadata userMetadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.UserMetadata UserMetadata {
      get { return userMetadata_; }
      set {
        userMetadata_ = value;
      }
    }

    /// <summary>Field number for the "app_metadata" field.</summary>
    public const int AppMetadataFieldNumber = 11;
    private global::Api.AppMetadata appMetadata_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.AppMetadata AppMetadata {
      get { return appMetadata_; }
      set {
        appMetadata_ = value;
      }
    }

    /// <summary>Field number for the "last_ip" field.</summary>
    public const int LastIpFieldNumber = 12;
    private string lastIp_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastIp {
      get { return lastIp_; }
      set {
        lastIp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "blocked" field.</summary>
    public const int BlockedFieldNumber = 13;
    private bool blocked_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Blocked {
      get { return blocked_; }
      set {
        blocked_ = value;
      }
    }

    /// <summary>Field number for the "nickname" field.</summary>
    public const int NicknameFieldNumber = 14;
    private string nickname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nickname {
      get { return nickname_; }
      set {
        nickname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "multifactor" field.</summary>
    public const int MultifactorFieldNumber = 15;
    private static readonly pb::FieldCodec<string> _repeated_multifactor_codec
        = pb::FieldCodec.ForString(122);
    private readonly pbc::RepeatedField<string> multifactor_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Multifactor {
      get { return multifactor_; }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 17;
    private string createdAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "updated_at" field.</summary>
    public const int UpdatedAtFieldNumber = 18;
    private string updatedAt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phone_verified" field.</summary>
    public const int PhoneVerifiedFieldNumber = 19;
    private bool phoneVerified_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PhoneVerified {
      get { return phoneVerified_; }
      set {
        phoneVerified_ = value;
      }
    }

    /// <summary>Field number for the "identities" field.</summary>
    public const int IdentitiesFieldNumber = 20;
    private static readonly pb::FieldCodec<global::Api.Identity> _repeated_identities_codec
        = pb::FieldCodec.ForMessage(162, global::Api.Identity.Parser);
    private readonly pbc::RepeatedField<global::Api.Identity> identities_ = new pbc::RepeatedField<global::Api.Identity>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.Identity> Identities {
      get { return identities_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (Name != other.Name) return false;
      if (GivenName != other.GivenName) return false;
      if (FamilyName != other.FamilyName) return false;
      if (Gender != other.Gender) return false;
      if (Birthdate != other.Birthdate) return false;
      if (Email != other.Email) return false;
      if (PhoneNumber != other.PhoneNumber) return false;
      if (Picture != other.Picture) return false;
      if (!object.Equals(UserMetadata, other.UserMetadata)) return false;
      if (!object.Equals(AppMetadata, other.AppMetadata)) return false;
      if (LastIp != other.LastIp) return false;
      if (Blocked != other.Blocked) return false;
      if (Nickname != other.Nickname) return false;
      if(!multifactor_.Equals(other.multifactor_)) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (UpdatedAt != other.UpdatedAt) return false;
      if (PhoneVerified != other.PhoneVerified) return false;
      if(!identities_.Equals(other.identities_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (GivenName.Length != 0) hash ^= GivenName.GetHashCode();
      if (FamilyName.Length != 0) hash ^= FamilyName.GetHashCode();
      if (Gender.Length != 0) hash ^= Gender.GetHashCode();
      if (Birthdate.Length != 0) hash ^= Birthdate.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (PhoneNumber.Length != 0) hash ^= PhoneNumber.GetHashCode();
      if (Picture.Length != 0) hash ^= Picture.GetHashCode();
      if (userMetadata_ != null) hash ^= UserMetadata.GetHashCode();
      if (appMetadata_ != null) hash ^= AppMetadata.GetHashCode();
      if (LastIp.Length != 0) hash ^= LastIp.GetHashCode();
      if (Blocked != false) hash ^= Blocked.GetHashCode();
      if (Nickname.Length != 0) hash ^= Nickname.GetHashCode();
      hash ^= multifactor_.GetHashCode();
      if (CreatedAt.Length != 0) hash ^= CreatedAt.GetHashCode();
      if (UpdatedAt.Length != 0) hash ^= UpdatedAt.GetHashCode();
      if (PhoneVerified != false) hash ^= PhoneVerified.GetHashCode();
      hash ^= identities_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (GivenName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(GivenName);
      }
      if (FamilyName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FamilyName);
      }
      if (Gender.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Gender);
      }
      if (Birthdate.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Birthdate);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Email);
      }
      if (PhoneNumber.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PhoneNumber);
      }
      if (Picture.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Picture);
      }
      if (userMetadata_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(UserMetadata);
      }
      if (appMetadata_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(AppMetadata);
      }
      if (LastIp.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(LastIp);
      }
      if (Blocked != false) {
        output.WriteRawTag(104);
        output.WriteBool(Blocked);
      }
      if (Nickname.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Nickname);
      }
      multifactor_.WriteTo(output, _repeated_multifactor_codec);
      if (CreatedAt.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(UpdatedAt);
      }
      if (PhoneVerified != false) {
        output.WriteRawTag(152, 1);
        output.WriteBool(PhoneVerified);
      }
      identities_.WriteTo(output, _repeated_identities_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (GivenName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GivenName);
      }
      if (FamilyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FamilyName);
      }
      if (Gender.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Gender);
      }
      if (Birthdate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Birthdate);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (PhoneNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PhoneNumber);
      }
      if (Picture.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Picture);
      }
      if (userMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UserMetadata);
      }
      if (appMetadata_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AppMetadata);
      }
      if (LastIp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastIp);
      }
      if (Blocked != false) {
        size += 1 + 1;
      }
      if (Nickname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nickname);
      }
      size += multifactor_.CalculateSize(_repeated_multifactor_codec);
      if (CreatedAt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(CreatedAt);
      }
      if (UpdatedAt.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UpdatedAt);
      }
      if (PhoneVerified != false) {
        size += 2 + 1;
      }
      size += identities_.CalculateSize(_repeated_identities_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserInfo other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.GivenName.Length != 0) {
        GivenName = other.GivenName;
      }
      if (other.FamilyName.Length != 0) {
        FamilyName = other.FamilyName;
      }
      if (other.Gender.Length != 0) {
        Gender = other.Gender;
      }
      if (other.Birthdate.Length != 0) {
        Birthdate = other.Birthdate;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.PhoneNumber.Length != 0) {
        PhoneNumber = other.PhoneNumber;
      }
      if (other.Picture.Length != 0) {
        Picture = other.Picture;
      }
      if (other.userMetadata_ != null) {
        if (userMetadata_ == null) {
          userMetadata_ = new global::Api.UserMetadata();
        }
        UserMetadata.MergeFrom(other.UserMetadata);
      }
      if (other.appMetadata_ != null) {
        if (appMetadata_ == null) {
          appMetadata_ = new global::Api.AppMetadata();
        }
        AppMetadata.MergeFrom(other.AppMetadata);
      }
      if (other.LastIp.Length != 0) {
        LastIp = other.LastIp;
      }
      if (other.Blocked != false) {
        Blocked = other.Blocked;
      }
      if (other.Nickname.Length != 0) {
        Nickname = other.Nickname;
      }
      multifactor_.Add(other.multifactor_);
      if (other.CreatedAt.Length != 0) {
        CreatedAt = other.CreatedAt;
      }
      if (other.UpdatedAt.Length != 0) {
        UpdatedAt = other.UpdatedAt;
      }
      if (other.PhoneVerified != false) {
        PhoneVerified = other.PhoneVerified;
      }
      identities_.Add(other.identities_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            GivenName = input.ReadString();
            break;
          }
          case 34: {
            FamilyName = input.ReadString();
            break;
          }
          case 42: {
            Gender = input.ReadString();
            break;
          }
          case 50: {
            Birthdate = input.ReadString();
            break;
          }
          case 58: {
            Email = input.ReadString();
            break;
          }
          case 66: {
            PhoneNumber = input.ReadString();
            break;
          }
          case 74: {
            Picture = input.ReadString();
            break;
          }
          case 82: {
            if (userMetadata_ == null) {
              userMetadata_ = new global::Api.UserMetadata();
            }
            input.ReadMessage(userMetadata_);
            break;
          }
          case 90: {
            if (appMetadata_ == null) {
              appMetadata_ = new global::Api.AppMetadata();
            }
            input.ReadMessage(appMetadata_);
            break;
          }
          case 98: {
            LastIp = input.ReadString();
            break;
          }
          case 104: {
            Blocked = input.ReadBool();
            break;
          }
          case 114: {
            Nickname = input.ReadString();
            break;
          }
          case 122: {
            multifactor_.AddEntriesFrom(input, _repeated_multifactor_codec);
            break;
          }
          case 138: {
            CreatedAt = input.ReadString();
            break;
          }
          case 146: {
            UpdatedAt = input.ReadString();
            break;
          }
          case 152: {
            PhoneVerified = input.ReadBool();
            break;
          }
          case 162: {
            identities_.AddEntriesFrom(input, _repeated_identities_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Identity : pb::IMessage<Identity> {
    private static readonly pb::MessageParser<Identity> _parser = new pb::MessageParser<Identity>(() => new Identity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Identity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identity(Identity other) : this() {
      connection_ = other.connection_;
      userId_ = other.userId_;
      provider_ = other.provider_;
      isSocial_ = other.isSocial_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Identity Clone() {
      return new Identity(this);
    }

    /// <summary>Field number for the "connection" field.</summary>
    public const int ConnectionFieldNumber = 1;
    private string connection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Connection {
      get { return connection_; }
      set {
        connection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "provider" field.</summary>
    public const int ProviderFieldNumber = 3;
    private string provider_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Provider {
      get { return provider_; }
      set {
        provider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isSocial" field.</summary>
    public const int IsSocialFieldNumber = 4;
    private string isSocial_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string IsSocial {
      get { return isSocial_; }
      set {
        isSocial_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Identity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Identity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Connection != other.Connection) return false;
      if (UserId != other.UserId) return false;
      if (Provider != other.Provider) return false;
      if (IsSocial != other.IsSocial) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Connection.Length != 0) hash ^= Connection.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Provider.Length != 0) hash ^= Provider.GetHashCode();
      if (IsSocial.Length != 0) hash ^= IsSocial.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Connection.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Connection);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (Provider.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Provider);
      }
      if (IsSocial.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(IsSocial);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Connection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Connection);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Provider.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Provider);
      }
      if (IsSocial.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(IsSocial);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Identity other) {
      if (other == null) {
        return;
      }
      if (other.Connection.Length != 0) {
        Connection = other.Connection;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Provider.Length != 0) {
        Provider = other.Provider;
      }
      if (other.IsSocial.Length != 0) {
        IsSocial = other.IsSocial;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Connection = input.ReadString();
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            Provider = input.ReadString();
            break;
          }
          case 34: {
            IsSocial = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserMetadata : pb::IMessage<UserMetadata> {
    private static readonly pb::MessageParser<UserMetadata> _parser = new pb::MessageParser<UserMetadata>(() => new UserMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMetadata(UserMetadata other) : this() {
      metadata_ = other.metadata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserMetadata Clone() {
      return new UserMetadata(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_metadata_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 10);
    private readonly pbc::MapField<string, string> metadata_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Metadata {
      get { return metadata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Metadata.Equals(other.Metadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Metadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      metadata_.WriteTo(output, _map_metadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += metadata_.CalculateSize(_map_metadata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserMetadata other) {
      if (other == null) {
        return;
      }
      metadata_.Add(other.metadata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            metadata_.AddEntriesFrom(input, _map_metadata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AppMetadata : pb::IMessage<AppMetadata> {
    private static readonly pb::MessageParser<AppMetadata> _parser = new pb::MessageParser<AppMetadata>(() => new AppMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AppMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppMetadata(AppMetadata other) : this() {
      metadata_ = other.metadata_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AppMetadata Clone() {
      return new AppMetadata(this);
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_metadata_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 10);
    private readonly pbc::MapField<string, string> metadata_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Metadata {
      get { return metadata_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AppMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AppMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Metadata.Equals(other.Metadata)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Metadata.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      metadata_.WriteTo(output, _map_metadata_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += metadata_.CalculateSize(_map_metadata_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AppMetadata other) {
      if (other == null) {
        return;
      }
      metadata_.Add(other.metadata_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            metadata_.AddEntriesFrom(input, _map_metadata_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Auth : pb::IMessage<Auth> {
    private static readonly pb::MessageParser<Auth> _parser = new pb::MessageParser<Auth>(() => new Auth());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Auth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Auth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Auth(Auth other) : this() {
      domain_ = other.domain_;
      clientId_ = other.clientId_;
      clientSecret_ = other.clientSecret_;
      redirect_ = other.redirect_;
      audience_ = other.audience_;
      scopes_ = other.scopes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Auth Clone() {
      return new Auth(this);
    }

    /// <summary>Field number for the "domain" field.</summary>
    public const int DomainFieldNumber = 1;
    private string domain_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Domain {
      get { return domain_; }
      set {
        domain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_id" field.</summary>
    public const int ClientIdFieldNumber = 2;
    private string clientId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "client_secret" field.</summary>
    public const int ClientSecretFieldNumber = 3;
    private string clientSecret_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClientSecret {
      get { return clientSecret_; }
      set {
        clientSecret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "redirect" field.</summary>
    public const int RedirectFieldNumber = 4;
    private string redirect_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Redirect {
      get { return redirect_; }
      set {
        redirect_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "audience" field.</summary>
    public const int AudienceFieldNumber = 5;
    private string audience_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Audience {
      get { return audience_; }
      set {
        audience_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scopes" field.</summary>
    public const int ScopesFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_scopes_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> scopes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Scopes {
      get { return scopes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Auth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Auth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Domain != other.Domain) return false;
      if (ClientId != other.ClientId) return false;
      if (ClientSecret != other.ClientSecret) return false;
      if (Redirect != other.Redirect) return false;
      if (Audience != other.Audience) return false;
      if(!scopes_.Equals(other.scopes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Domain.Length != 0) hash ^= Domain.GetHashCode();
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (ClientSecret.Length != 0) hash ^= ClientSecret.GetHashCode();
      if (Redirect.Length != 0) hash ^= Redirect.GetHashCode();
      if (Audience.Length != 0) hash ^= Audience.GetHashCode();
      hash ^= scopes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Domain.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Domain);
      }
      if (ClientId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClientId);
      }
      if (ClientSecret.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ClientSecret);
      }
      if (Redirect.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Redirect);
      }
      if (Audience.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Audience);
      }
      scopes_.WriteTo(output, _repeated_scopes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Domain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Domain);
      }
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (ClientSecret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientSecret);
      }
      if (Redirect.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Redirect);
      }
      if (Audience.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Audience);
      }
      size += scopes_.CalculateSize(_repeated_scopes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Auth other) {
      if (other == null) {
        return;
      }
      if (other.Domain.Length != 0) {
        Domain = other.Domain;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.ClientSecret.Length != 0) {
        ClientSecret = other.ClientSecret;
      }
      if (other.Redirect.Length != 0) {
        Redirect = other.Redirect;
      }
      if (other.Audience.Length != 0) {
        Audience = other.Audience;
      }
      scopes_.Add(other.scopes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Domain = input.ReadString();
            break;
          }
          case 18: {
            ClientId = input.ReadString();
            break;
          }
          case 26: {
            ClientSecret = input.ReadString();
            break;
          }
          case 34: {
            Redirect = input.ReadString();
            break;
          }
          case 42: {
            Audience = input.ReadString();
            break;
          }
          case 50: {
            scopes_.AddEntriesFrom(input, _repeated_scopes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Bytes : pb::IMessage<Bytes> {
    private static readonly pb::MessageParser<Bytes> _parser = new pb::MessageParser<Bytes>(() => new Bytes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Bytes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bytes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bytes(Bytes other) : this() {
      bits_ = other.bits_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bytes Clone() {
      return new Bytes(this);
    }

    /// <summary>Field number for the "bits" field.</summary>
    public const int BitsFieldNumber = 1;
    private pb::ByteString bits_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Bits {
      get { return bits_; }
      set {
        bits_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Bytes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Bytes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Bits != other.Bits) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Bits.Length != 0) hash ^= Bits.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Bits.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Bits);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Bits.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bits);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Bytes other) {
      if (other == null) {
        return;
      }
      if (other.Bits.Length != 0) {
        Bits = other.Bits;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Bits = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Template : pb::IMessage<Template> {
    private static readonly pb::MessageParser<Template> _parser = new pb::MessageParser<Template>(() => new Template());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Template> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Template() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Template(Template other) : this() {
      text_ = other.text_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Template Clone() {
      return new Template(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 2;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Template);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Template other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Template other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 18: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JSONWebKeys : pb::IMessage<JSONWebKeys> {
    private static readonly pb::MessageParser<JSONWebKeys> _parser = new pb::MessageParser<JSONWebKeys>(() => new JSONWebKeys());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JSONWebKeys> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JSONWebKeys() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JSONWebKeys(JSONWebKeys other) : this() {
      kty_ = other.kty_;
      kid_ = other.kid_;
      use_ = other.use_;
      n_ = other.n_;
      e_ = other.e_;
      x5C_ = other.x5C_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JSONWebKeys Clone() {
      return new JSONWebKeys(this);
    }

    /// <summary>Field number for the "kty" field.</summary>
    public const int KtyFieldNumber = 1;
    private string kty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Kty {
      get { return kty_; }
      set {
        kty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "kid" field.</summary>
    public const int KidFieldNumber = 2;
    private string kid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Kid {
      get { return kid_; }
      set {
        kid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "use" field.</summary>
    public const int UseFieldNumber = 3;
    private string use_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Use {
      get { return use_; }
      set {
        use_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "n" field.</summary>
    public const int NFieldNumber = 4;
    private string n_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string N {
      get { return n_; }
      set {
        n_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "e" field.</summary>
    public const int EFieldNumber = 5;
    private string e_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string E {
      get { return e_; }
      set {
        e_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "x5c" field.</summary>
    public const int X5CFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_x5C_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> x5C_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> X5C {
      get { return x5C_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JSONWebKeys);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JSONWebKeys other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Kty != other.Kty) return false;
      if (Kid != other.Kid) return false;
      if (Use != other.Use) return false;
      if (N != other.N) return false;
      if (E != other.E) return false;
      if(!x5C_.Equals(other.x5C_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Kty.Length != 0) hash ^= Kty.GetHashCode();
      if (Kid.Length != 0) hash ^= Kid.GetHashCode();
      if (Use.Length != 0) hash ^= Use.GetHashCode();
      if (N.Length != 0) hash ^= N.GetHashCode();
      if (E.Length != 0) hash ^= E.GetHashCode();
      hash ^= x5C_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Kty.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Kty);
      }
      if (Kid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Kid);
      }
      if (Use.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Use);
      }
      if (N.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(N);
      }
      if (E.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(E);
      }
      x5C_.WriteTo(output, _repeated_x5C_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Kty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Kty);
      }
      if (Kid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Kid);
      }
      if (Use.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Use);
      }
      if (N.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(N);
      }
      if (E.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(E);
      }
      size += x5C_.CalculateSize(_repeated_x5C_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JSONWebKeys other) {
      if (other == null) {
        return;
      }
      if (other.Kty.Length != 0) {
        Kty = other.Kty;
      }
      if (other.Kid.Length != 0) {
        Kid = other.Kid;
      }
      if (other.Use.Length != 0) {
        Use = other.Use;
      }
      if (other.N.Length != 0) {
        N = other.N;
      }
      if (other.E.Length != 0) {
        E = other.E;
      }
      x5C_.Add(other.x5C_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Kty = input.ReadString();
            break;
          }
          case 18: {
            Kid = input.ReadString();
            break;
          }
          case 26: {
            Use = input.ReadString();
            break;
          }
          case 34: {
            N = input.ReadString();
            break;
          }
          case 42: {
            E = input.ReadString();
            break;
          }
          case 50: {
            x5C_.AddEntriesFrom(input, _repeated_x5C_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Jwks : pb::IMessage<Jwks> {
    private static readonly pb::MessageParser<Jwks> _parser = new pb::MessageParser<Jwks>(() => new Jwks());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Jwks> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Jwks() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Jwks(Jwks other) : this() {
      keys_ = other.keys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Jwks Clone() {
      return new Jwks(this);
    }

    /// <summary>Field number for the "keys" field.</summary>
    public const int KeysFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Api.JSONWebKeys> _repeated_keys_codec
        = pb::FieldCodec.ForMessage(10, global::Api.JSONWebKeys.Parser);
    private readonly pbc::RepeatedField<global::Api.JSONWebKeys> keys_ = new pbc::RepeatedField<global::Api.JSONWebKeys>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.JSONWebKeys> Keys {
      get { return keys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Jwks);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Jwks other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!keys_.Equals(other.keys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= keys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      keys_.WriteTo(output, _repeated_keys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += keys_.CalculateSize(_repeated_keys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Jwks other) {
      if (other == null) {
        return;
      }
      keys_.Add(other.keys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            keys_.AddEntriesFrom(input, _repeated_keys_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
