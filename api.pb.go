// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type Dashboard struct {
	TotalUsers           int64    `protobuf:"varint,1,opt,name=total_users,json=totalUsers,proto3" json:"total_users,omitempty"`
	TotalCustomers       int64    `protobuf:"varint,2,opt,name=total_customers,json=totalCustomers,proto3" json:"total_customers,omitempty"`
	TotalPlans           int64    `protobuf:"varint,3,opt,name=total_plans,json=totalPlans,proto3" json:"total_plans,omitempty"`
	TotalSubscriptions   int64    `protobuf:"varint,4,opt,name=total_subscriptions,json=totalSubscriptions,proto3" json:"total_subscriptions,omitempty"`
	TotalCharges         int64    `protobuf:"varint,5,opt,name=total_charges,json=totalCharges,proto3" json:"total_charges,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Dashboard) Reset()         { *m = Dashboard{} }
func (m *Dashboard) String() string { return proto.CompactTextString(m) }
func (*Dashboard) ProtoMessage()    {}
func (*Dashboard) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *Dashboard) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Dashboard.Unmarshal(m, b)
}
func (m *Dashboard) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Dashboard.Marshal(b, m, deterministic)
}
func (m *Dashboard) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Dashboard.Merge(m, src)
}
func (m *Dashboard) XXX_Size() int {
	return xxx_messageInfo_Dashboard.Size(m)
}
func (m *Dashboard) XXX_DiscardUnknown() {
	xxx_messageInfo_Dashboard.DiscardUnknown(m)
}

var xxx_messageInfo_Dashboard proto.InternalMessageInfo

func (m *Dashboard) GetTotalUsers() int64 {
	if m != nil {
		return m.TotalUsers
	}
	return 0
}

func (m *Dashboard) GetTotalCustomers() int64 {
	if m != nil {
		return m.TotalCustomers
	}
	return 0
}

func (m *Dashboard) GetTotalPlans() int64 {
	if m != nil {
		return m.TotalPlans
	}
	return 0
}

func (m *Dashboard) GetTotalSubscriptions() int64 {
	if m != nil {
		return m.TotalSubscriptions
	}
	return 0
}

func (m *Dashboard) GetTotalCharges() int64 {
	if m != nil {
		return m.TotalCharges
	}
	return 0
}

type Identifier struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Identifier) Reset()         { *m = Identifier{} }
func (m *Identifier) String() string { return proto.CompactTextString(m) }
func (*Identifier) ProtoMessage()    {}
func (*Identifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *Identifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Identifier.Unmarshal(m, b)
}
func (m *Identifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Identifier.Marshal(b, m, deterministic)
}
func (m *Identifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Identifier.Merge(m, src)
}
func (m *Identifier) XXX_Size() int {
	return xxx_messageInfo_Identifier.Size(m)
}
func (m *Identifier) XXX_DiscardUnknown() {
	xxx_messageInfo_Identifier.DiscardUnknown(m)
}

var xxx_messageInfo_Identifier proto.InternalMessageInfo

func (m *Identifier) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SMSStatus struct {
	Id                   *Identifier `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Sms                  *SMS        `protobuf:"bytes,2,opt,name=sms,proto3" json:"sms,omitempty"`
	Status               string      `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Uri                  string      `protobuf:"bytes,4,opt,name=uri,proto3" json:"uri,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SMSStatus) Reset()         { *m = SMSStatus{} }
func (m *SMSStatus) String() string { return proto.CompactTextString(m) }
func (*SMSStatus) ProtoMessage()    {}
func (*SMSStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *SMSStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMSStatus.Unmarshal(m, b)
}
func (m *SMSStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMSStatus.Marshal(b, m, deterministic)
}
func (m *SMSStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMSStatus.Merge(m, src)
}
func (m *SMSStatus) XXX_Size() int {
	return xxx_messageInfo_SMSStatus.Size(m)
}
func (m *SMSStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_SMSStatus.DiscardUnknown(m)
}

var xxx_messageInfo_SMSStatus proto.InternalMessageInfo

func (m *SMSStatus) GetId() *Identifier {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SMSStatus) GetSms() *SMS {
	if m != nil {
		return m.Sms
	}
	return nil
}

func (m *SMSStatus) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *SMSStatus) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

type SMS struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Message              *Message `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	MediaURL             string   `protobuf:"bytes,4,opt,name=mediaURL,proto3" json:"mediaURL,omitempty"`
	Callback             string   `protobuf:"bytes,5,opt,name=callback,proto3" json:"callback,omitempty"`
	App                  string   `protobuf:"bytes,6,opt,name=app,proto3" json:"app,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SMS) Reset()         { *m = SMS{} }
func (m *SMS) String() string { return proto.CompactTextString(m) }
func (*SMS) ProtoMessage()    {}
func (*SMS) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *SMS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMS.Unmarshal(m, b)
}
func (m *SMS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMS.Marshal(b, m, deterministic)
}
func (m *SMS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMS.Merge(m, src)
}
func (m *SMS) XXX_Size() int {
	return xxx_messageInfo_SMS.Size(m)
}
func (m *SMS) XXX_DiscardUnknown() {
	xxx_messageInfo_SMS.DiscardUnknown(m)
}

var xxx_messageInfo_SMS proto.InternalMessageInfo

func (m *SMS) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *SMS) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *SMS) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *SMS) GetMediaURL() string {
	if m != nil {
		return m.MediaURL
	}
	return ""
}

func (m *SMS) GetCallback() string {
	if m != nil {
		return m.Callback
	}
	return ""
}

func (m *SMS) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

type EmailRequest struct {
	FromName             string   `protobuf:"bytes,1,opt,name=from_name,json=fromName,proto3" json:"from_name,omitempty"`
	FromEmail            string   `protobuf:"bytes,2,opt,name=from_email,json=fromEmail,proto3" json:"from_email,omitempty"`
	Email                *Email   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmailRequest) Reset()         { *m = EmailRequest{} }
func (m *EmailRequest) String() string { return proto.CompactTextString(m) }
func (*EmailRequest) ProtoMessage()    {}
func (*EmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *EmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailRequest.Unmarshal(m, b)
}
func (m *EmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailRequest.Marshal(b, m, deterministic)
}
func (m *EmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailRequest.Merge(m, src)
}
func (m *EmailRequest) XXX_Size() int {
	return xxx_messageInfo_EmailRequest.Size(m)
}
func (m *EmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmailRequest proto.InternalMessageInfo

func (m *EmailRequest) GetFromName() string {
	if m != nil {
		return m.FromName
	}
	return ""
}

func (m *EmailRequest) GetFromEmail() string {
	if m != nil {
		return m.FromEmail
	}
	return ""
}

func (m *EmailRequest) GetEmail() *Email {
	if m != nil {
		return m.Email
	}
	return nil
}

type Email struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Subject              string   `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	Plain                string   `protobuf:"bytes,4,opt,name=plain,proto3" json:"plain,omitempty"`
	Html                 string   `protobuf:"bytes,5,opt,name=html,proto3" json:"html,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Email) Reset()         { *m = Email{} }
func (m *Email) String() string { return proto.CompactTextString(m) }
func (*Email) ProtoMessage()    {}
func (*Email) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *Email) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Email.Unmarshal(m, b)
}
func (m *Email) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Email.Marshal(b, m, deterministic)
}
func (m *Email) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Email.Merge(m, src)
}
func (m *Email) XXX_Size() int {
	return xxx_messageInfo_Email.Size(m)
}
func (m *Email) XXX_DiscardUnknown() {
	xxx_messageInfo_Email.DiscardUnknown(m)
}

var xxx_messageInfo_Email proto.InternalMessageInfo

func (m *Email) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Email) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *Email) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Email) GetPlain() string {
	if m != nil {
		return m.Plain
	}
	return ""
}

func (m *Email) GetHtml() string {
	if m != nil {
		return m.Html
	}
	return ""
}

type Call struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To                   string   `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	App                  string   `protobuf:"bytes,3,opt,name=app,proto3" json:"app,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Call) Reset()         { *m = Call{} }
func (m *Call) String() string { return proto.CompactTextString(m) }
func (*Call) ProtoMessage()    {}
func (*Call) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *Call) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Call.Unmarshal(m, b)
}
func (m *Call) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Call.Marshal(b, m, deterministic)
}
func (m *Call) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Call.Merge(m, src)
}
func (m *Call) XXX_Size() int {
	return xxx_messageInfo_Call.Size(m)
}
func (m *Call) XXX_DiscardUnknown() {
	xxx_messageInfo_Call.DiscardUnknown(m)
}

var xxx_messageInfo_Call proto.InternalMessageInfo

func (m *Call) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Call) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Call) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

type Message struct {
	Value                string   `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type UserInfo struct {
	Name                 string        `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	GivenName            string        `protobuf:"bytes,7,opt,name=given_name,json=givenName,proto3" json:"given_name,omitempty"`
	FamilyName           string        `protobuf:"bytes,8,opt,name=family_name,json=familyName,proto3" json:"family_name,omitempty"`
	Gender               string        `protobuf:"bytes,9,opt,name=gender,proto3" json:"gender,omitempty"`
	Birthdate            string        `protobuf:"bytes,10,opt,name=birthdate,proto3" json:"birthdate,omitempty"`
	Email                string        `protobuf:"bytes,11,opt,name=email,proto3" json:"email,omitempty"`
	Picture              string        `protobuf:"bytes,12,opt,name=picture,proto3" json:"picture,omitempty"`
	UserMetadata         *UserMetadata `protobuf:"bytes,13,opt,name=user_metadata,json=userMetadata,proto3" json:"user_metadata,omitempty"`
	AppMetadata          *AppMetadata  `protobuf:"bytes,14,opt,name=app_metadata,json=appMetadata,proto3" json:"app_metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UserInfo) GetGivenName() string {
	if m != nil {
		return m.GivenName
	}
	return ""
}

func (m *UserInfo) GetFamilyName() string {
	if m != nil {
		return m.FamilyName
	}
	return ""
}

func (m *UserInfo) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *UserInfo) GetBirthdate() string {
	if m != nil {
		return m.Birthdate
	}
	return ""
}

func (m *UserInfo) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserInfo) GetPicture() string {
	if m != nil {
		return m.Picture
	}
	return ""
}

func (m *UserInfo) GetUserMetadata() *UserMetadata {
	if m != nil {
		return m.UserMetadata
	}
	return nil
}

func (m *UserInfo) GetAppMetadata() *AppMetadata {
	if m != nil {
		return m.AppMetadata
	}
	return nil
}

type UserMetadata struct {
	Phone                string   `protobuf:"bytes,1,opt,name=phone,proto3" json:"phone,omitempty"`
	PreferredContact     string   `protobuf:"bytes,2,opt,name=preferred_contact,json=preferredContact,proto3" json:"preferred_contact,omitempty"`
	Status               string   `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	Tags                 []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserMetadata) Reset()         { *m = UserMetadata{} }
func (m *UserMetadata) String() string { return proto.CompactTextString(m) }
func (*UserMetadata) ProtoMessage()    {}
func (*UserMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}

func (m *UserMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserMetadata.Unmarshal(m, b)
}
func (m *UserMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserMetadata.Marshal(b, m, deterministic)
}
func (m *UserMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserMetadata.Merge(m, src)
}
func (m *UserMetadata) XXX_Size() int {
	return xxx_messageInfo_UserMetadata.Size(m)
}
func (m *UserMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_UserMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_UserMetadata proto.InternalMessageInfo

func (m *UserMetadata) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *UserMetadata) GetPreferredContact() string {
	if m != nil {
		return m.PreferredContact
	}
	return ""
}

func (m *UserMetadata) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *UserMetadata) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type AppMetadata struct {
	Plan                 string   `protobuf:"bytes,1,opt,name=plan,proto3" json:"plan,omitempty"`
	PayToken             string   `protobuf:"bytes,2,opt,name=pay_token,json=payToken,proto3" json:"pay_token,omitempty"`
	Delinquent           string   `protobuf:"bytes,3,opt,name=delinquent,proto3" json:"delinquent,omitempty"`
	Tags                 []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AppMetadata) Reset()         { *m = AppMetadata{} }
func (m *AppMetadata) String() string { return proto.CompactTextString(m) }
func (*AppMetadata) ProtoMessage()    {}
func (*AppMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}

func (m *AppMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AppMetadata.Unmarshal(m, b)
}
func (m *AppMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AppMetadata.Marshal(b, m, deterministic)
}
func (m *AppMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AppMetadata.Merge(m, src)
}
func (m *AppMetadata) XXX_Size() int {
	return xxx_messageInfo_AppMetadata.Size(m)
}
func (m *AppMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_AppMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_AppMetadata proto.InternalMessageInfo

func (m *AppMetadata) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

func (m *AppMetadata) GetPayToken() string {
	if m != nil {
		return m.PayToken
	}
	return ""
}

func (m *AppMetadata) GetDelinquent() string {
	if m != nil {
		return m.Delinquent
	}
	return ""
}

func (m *AppMetadata) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type Auth struct {
	Domain               string   `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`
	ClientId             string   `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ClientSecret         string   `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	Redirect             string   `protobuf:"bytes,4,opt,name=redirect,proto3" json:"redirect,omitempty"`
	Audience             string   `protobuf:"bytes,5,opt,name=audience,proto3" json:"audience,omitempty"`
	Scopes               []string `protobuf:"bytes,6,rep,name=scopes,proto3" json:"scopes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Auth) Reset()         { *m = Auth{} }
func (m *Auth) String() string { return proto.CompactTextString(m) }
func (*Auth) ProtoMessage()    {}
func (*Auth) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}

func (m *Auth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Auth.Unmarshal(m, b)
}
func (m *Auth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Auth.Marshal(b, m, deterministic)
}
func (m *Auth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Auth.Merge(m, src)
}
func (m *Auth) XXX_Size() int {
	return xxx_messageInfo_Auth.Size(m)
}
func (m *Auth) XXX_DiscardUnknown() {
	xxx_messageInfo_Auth.DiscardUnknown(m)
}

var xxx_messageInfo_Auth proto.InternalMessageInfo

func (m *Auth) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Auth) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *Auth) GetClientSecret() string {
	if m != nil {
		return m.ClientSecret
	}
	return ""
}

func (m *Auth) GetRedirect() string {
	if m != nil {
		return m.Redirect
	}
	return ""
}

func (m *Auth) GetAudience() string {
	if m != nil {
		return m.Audience
	}
	return ""
}

func (m *Auth) GetScopes() []string {
	if m != nil {
		return m.Scopes
	}
	return nil
}

type Bytes struct {
	Bits                 []byte   `protobuf:"bytes,1,opt,name=bits,proto3" json:"bits,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bytes) Reset()         { *m = Bytes{} }
func (m *Bytes) String() string { return proto.CompactTextString(m) }
func (*Bytes) ProtoMessage()    {}
func (*Bytes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}

func (m *Bytes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bytes.Unmarshal(m, b)
}
func (m *Bytes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bytes.Marshal(b, m, deterministic)
}
func (m *Bytes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bytes.Merge(m, src)
}
func (m *Bytes) XXX_Size() int {
	return xxx_messageInfo_Bytes.Size(m)
}
func (m *Bytes) XXX_DiscardUnknown() {
	xxx_messageInfo_Bytes.DiscardUnknown(m)
}

var xxx_messageInfo_Bytes proto.InternalMessageInfo

func (m *Bytes) GetBits() []byte {
	if m != nil {
		return m.Bits
	}
	return nil
}

type Template struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Template) Reset()         { *m = Template{} }
func (m *Template) String() string { return proto.CompactTextString(m) }
func (*Template) ProtoMessage()    {}
func (*Template) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}

func (m *Template) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Template.Unmarshal(m, b)
}
func (m *Template) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Template.Marshal(b, m, deterministic)
}
func (m *Template) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Template.Merge(m, src)
}
func (m *Template) XXX_Size() int {
	return xxx_messageInfo_Template.Size(m)
}
func (m *Template) XXX_DiscardUnknown() {
	xxx_messageInfo_Template.DiscardUnknown(m)
}

var xxx_messageInfo_Template proto.InternalMessageInfo

func (m *Template) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Template) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*Empty)(nil), "api.Empty")
	proto.RegisterType((*Dashboard)(nil), "api.Dashboard")
	proto.RegisterType((*Identifier)(nil), "api.Identifier")
	proto.RegisterType((*SMSStatus)(nil), "api.SMSStatus")
	proto.RegisterType((*SMS)(nil), "api.SMS")
	proto.RegisterType((*EmailRequest)(nil), "api.EmailRequest")
	proto.RegisterType((*Email)(nil), "api.Email")
	proto.RegisterType((*Call)(nil), "api.Call")
	proto.RegisterType((*Message)(nil), "api.Message")
	proto.RegisterType((*UserInfo)(nil), "api.UserInfo")
	proto.RegisterType((*UserMetadata)(nil), "api.UserMetadata")
	proto.RegisterType((*AppMetadata)(nil), "api.AppMetadata")
	proto.RegisterType((*Auth)(nil), "api.Auth")
	proto.RegisterType((*Bytes)(nil), "api.Bytes")
	proto.RegisterType((*Template)(nil), "api.Template")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 1303 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x96, 0xdf, 0x6e, 0x13, 0x47,
	0x17, 0xc0, 0x65, 0x3b, 0x71, 0xbc, 0xc7, 0x8e, 0x49, 0x86, 0x7f, 0xc6, 0x84, 0x04, 0x0d, 0x9f,
	0xbe, 0xef, 0x2b, 0x95, 0x58, 0xc9, 0x48, 0xbd, 0x40, 0xdc, 0x84, 0x10, 0xd1, 0x14, 0x0c, 0xc8,
	0x4b, 0xd4, 0xf6, 0x2a, 0x1a, 0xef, 0x4e, 0xec, 0x81, 0xfd, 0xc7, 0xce, 0x2c, 0xc2, 0x42, 0xdc,
	0xf4, 0x15, 0xfa, 0x04, 0x7d, 0x81, 0xaa, 0x7d, 0x80, 0xbe, 0x41, 0xef, 0xfa, 0x0a, 0xbd, 0xe8,
	0x63, 0x54, 0xe7, 0xcc, 0xec, 0xc6, 0x21, 0x10, 0xb5, 0x5c, 0xed, 0x9c, 0x73, 0xe6, 0xfc, 0xce,
	0x9f, 0x99, 0x9d, 0x19, 0xf0, 0x44, 0xae, 0xee, 0xe4, 0x45, 0x66, 0x32, 0xd6, 0x12, 0xb9, 0x1a,
	0x6e, 0xcd, 0xb2, 0x6c, 0x16, 0x4b, 0x5f, 0xe4, 0xca, 0x17, 0x69, 0x9a, 0x19, 0x61, 0x54, 0x96,
	0x6a, 0x3b, 0x85, 0xaf, 0xc1, 0xea, 0x7e, 0x92, 0x9b, 0x05, 0xff, 0xbd, 0x01, 0xde, 0x43, 0xa1,
	0xe7, 0xd3, 0x4c, 0x14, 0x11, 0xdb, 0x81, 0xae, 0xc9, 0x8c, 0x88, 0x8f, 0x4a, 0x2d, 0x0b, 0x3d,
	0x68, 0xdc, 0x6c, 0xfc, 0xbf, 0x35, 0x01, 0x52, 0x1d, 0xa2, 0x86, 0xfd, 0x0f, 0x2e, 0xd8, 0x09,
	0x61, 0xa9, 0x4d, 0x96, 0xe0, 0xa4, 0x26, 0x4d, 0xea, 0x93, 0x7a, 0xaf, 0xd2, 0x9e, 0x90, 0xf2,
	0x58, 0xa4, 0x7a, 0xd0, 0x5a, 0x22, 0x3d, 0x47, 0x0d, 0xf3, 0xe1, 0xa2, 0x9d, 0xa0, 0xcb, 0xa9,
	0x0e, 0x0b, 0x95, 0x53, 0x7a, 0x83, 0x15, 0x9a, 0xc8, 0xc8, 0x14, 0x2c, 0x5b, 0xd8, 0x2d, 0x58,
	0x77, 0xa1, 0xe7, 0xa2, 0x98, 0x49, 0x3d, 0x58, 0xa5, 0xa9, 0x3d, 0x1b, 0xd8, 0xea, 0xf8, 0x16,
	0xc0, 0x41, 0x24, 0x53, 0xa3, 0x8e, 0x95, 0x2c, 0x58, 0x1f, 0x9a, 0x2a, 0xa2, 0x2a, 0xbc, 0x49,
	0x53, 0x45, 0xbc, 0x00, 0x2f, 0x18, 0x07, 0x81, 0x11, 0xa6, 0xc4, 0x0c, 0x2b, 0x63, 0x77, 0x74,
	0xe1, 0x0e, 0x76, 0xef, 0xc4, 0x13, 0x67, 0xb3, 0x21, 0xb4, 0x74, 0x62, 0xeb, 0xeb, 0x8e, 0x3a,
	0x34, 0x23, 0x18, 0x07, 0x13, 0x54, 0xb2, 0x2b, 0xd0, 0xd6, 0x84, 0xa1, 0xca, 0xbc, 0x89, 0x93,
	0xd8, 0x06, 0xb4, 0xca, 0x42, 0x51, 0x15, 0xde, 0x04, 0x87, 0xfc, 0xa7, 0x06, 0xb4, 0x82, 0x71,
	0xc0, 0x06, 0xb0, 0xa6, 0x65, 0xf1, 0x46, 0x85, 0xd2, 0x25, 0x54, 0x89, 0x98, 0xa5, 0xc9, 0x28,
	0x8c, 0x37, 0x69, 0x9a, 0x8c, 0xfd, 0x17, 0xd6, 0x12, 0xa9, 0xb5, 0x98, 0x49, 0x82, 0x77, 0x47,
	0x3d, 0x8a, 0x3d, 0xb6, 0xba, 0x49, 0x65, 0x64, 0x43, 0xe8, 0x24, 0x32, 0x52, 0xe2, 0x70, 0xf2,
	0xc4, 0x05, 0xac, 0x65, 0xb4, 0x85, 0x22, 0x8e, 0xa7, 0x22, 0x7c, 0x45, 0x7d, 0xf2, 0x26, 0xb5,
	0x8c, 0x39, 0x8a, 0x3c, 0x1f, 0xb4, 0x6d, 0x8e, 0x22, 0xcf, 0x79, 0x0c, 0xbd, 0xfd, 0x44, 0xa8,
	0x78, 0x22, 0x5f, 0x97, 0x52, 0x1b, 0x76, 0x1d, 0xbc, 0xe3, 0x22, 0x4b, 0x8e, 0x52, 0x91, 0x54,
	0xd9, 0x76, 0x50, 0xf1, 0x54, 0x24, 0x92, 0xdd, 0x00, 0x20, 0xa3, 0x44, 0x0f, 0x97, 0x36, 0x4d,
	0x27, 0x04, 0xbb, 0x09, 0xab, 0xd6, 0x62, 0x73, 0x07, 0xca, 0xdd, 0xd2, 0xad, 0x81, 0x2f, 0x70,
	0xef, 0xe1, 0x54, 0x06, 0x2b, 0x4b, 0x11, 0x68, 0x8c, 0x6d, 0x12, 0x51, 0x54, 0x48, 0xad, 0x1d,
	0xba, 0x12, 0xa9, 0x81, 0xe5, 0xf4, 0xa5, 0x0c, 0x8d, 0xeb, 0x79, 0x25, 0xb2, 0x4b, 0xb0, 0x9a,
	0xc7, 0x42, 0xa5, 0xae, 0x0b, 0x56, 0x40, 0xfa, 0xdc, 0x24, 0xb1, 0x2b, 0x9f, 0xc6, 0xfc, 0x3e,
	0xac, 0xec, 0x89, 0x98, 0x22, 0x63, 0xc6, 0x55, 0x64, 0x1c, 0x9f, 0x59, 0x06, 0xd7, 0xa6, 0xd6,
	0x49, 0x9b, 0x76, 0x60, 0xcd, 0x2d, 0x02, 0x86, 0x7c, 0x23, 0xe2, 0xb2, 0xca, 0xdd, 0x0a, 0xfc,
	0xd7, 0x26, 0x74, 0xf0, 0x3f, 0x39, 0x48, 0x8f, 0xb3, 0xba, 0xba, 0xf6, 0x52, 0x75, 0x37, 0x00,
	0x66, 0xea, 0x8d, 0x4c, 0x6d, 0x67, 0xd7, 0x6c, 0xef, 0x48, 0x43, 0xad, 0xdd, 0x81, 0xee, 0xb1,
	0x48, 0x54, 0xbc, 0xb0, 0xf6, 0x0e, 0xd9, 0xc1, 0xaa, 0x68, 0xc2, 0x15, 0x68, 0xcf, 0x64, 0x1a,
	0xc9, 0x62, 0xe0, 0xd9, 0x6d, 0x67, 0x25, 0xb6, 0x05, 0xde, 0x54, 0x15, 0x66, 0x1e, 0x09, 0x23,
	0x07, 0x60, 0xb1, 0xb5, 0x02, 0x93, 0xb5, 0x4b, 0xd2, 0xb5, 0xc9, 0x92, 0x80, 0xfd, 0xcc, 0x55,
	0x68, 0xca, 0x42, 0x0e, 0x7a, 0xb6, 0x9f, 0x4e, 0x64, 0x5f, 0xc1, 0x3a, 0xfe, 0xff, 0x47, 0x89,
	0x34, 0x22, 0x12, 0x46, 0x0c, 0xd6, 0x69, 0x29, 0x37, 0x69, 0x29, 0xb1, 0xbe, 0xb1, 0x33, 0x4c,
	0x7a, 0xe5, 0x92, 0xc4, 0xee, 0x42, 0x4f, 0xe4, 0xf9, 0x89, 0x5b, 0x9f, 0xdc, 0x36, 0xc8, 0x6d,
	0x37, 0xcf, 0x6b, 0xaf, 0xae, 0x38, 0x11, 0xf8, 0x7b, 0xe8, 0x2d, 0x23, 0x69, 0x31, 0xe7, 0x59,
	0x5a, 0x77, 0x96, 0x04, 0xf6, 0x25, 0x6c, 0xe6, 0x85, 0x3c, 0x96, 0x45, 0x21, 0xa3, 0xa3, 0x30,
	0x4b, 0x8d, 0x08, 0x8d, 0x5b, 0xab, 0x8d, 0xda, 0xb0, 0x67, 0xf5, 0x9f, 0xfc, 0x39, 0x19, 0xac,
	0x18, 0x31, 0xc3, 0x33, 0xa6, 0x85, 0x2b, 0x82, 0x63, 0x5e, 0x40, 0x77, 0x29, 0x35, 0x9c, 0x82,
	0x07, 0x56, 0xb5, 0x31, 0x70, 0x8c, 0x7f, 0x43, 0x2e, 0x16, 0x47, 0x26, 0x7b, 0x25, 0x53, 0x17,
	0xb3, 0x93, 0x8b, 0xc5, 0x0b, 0x94, 0xd9, 0x36, 0x40, 0x24, 0x63, 0x95, 0xbe, 0x2e, 0x65, 0x5a,
	0x6d, 0xcc, 0x25, 0xcd, 0x47, 0x63, 0xfe, 0xd2, 0x80, 0x95, 0xdd, 0xd2, 0xcc, 0x31, 0xd1, 0x28,
	0x4b, 0x70, 0xe7, 0xda, 0x78, 0x4e, 0xc2, 0x88, 0x61, 0xac, 0x64, 0x6a, 0x8e, 0x54, 0x54, 0x45,
	0xb4, 0x8a, 0x83, 0x08, 0xcf, 0x41, 0x67, 0xd4, 0x32, 0x2c, 0x64, 0x15, 0xb4, 0x67, 0x95, 0x01,
	0xe9, 0xf0, 0xff, 0x2f, 0x64, 0xa4, 0x0a, 0xfc, 0x5b, 0xdc, 0xd9, 0x50, 0xc9, 0x68, 0x13, 0x65,
	0xa4, 0x64, 0x1a, 0xca, 0xea, 0x6c, 0xa8, 0x64, 0x6a, 0x5d, 0x98, 0xe5, 0x52, 0x0f, 0xda, 0x94,
	0xb0, 0x93, 0xf8, 0x75, 0x58, 0x7d, 0xb0, 0x30, 0x92, 0x7a, 0x38, 0x55, 0xc6, 0x5e, 0x0d, 0xbd,
	0x09, 0x8d, 0xf9, 0x08, 0x3a, 0x2f, 0x64, 0x92, 0xc7, 0xb8, 0xd7, 0xb0, 0x5e, 0xf9, 0xd6, 0x54,
	0x0d, 0xc4, 0x31, 0xea, 0x68, 0x3f, 0x34, 0xad, 0x0f, 0x8e, 0x47, 0x7f, 0xad, 0x42, 0xff, 0xd0,
	0xa8, 0x58, 0x99, 0x45, 0xe0, 0xce, 0xc1, 0xfb, 0xb0, 0xb2, 0x1f, 0xce, 0x33, 0x76, 0xea, 0xb8,
	0x1b, 0x9e, 0x92, 0xf8, 0xe0, 0x87, 0x3f, 0xfe, 0xfc, 0xb1, 0xc9, 0xf8, 0xba, 0x5f, 0x5a, 0x67,
	0x5f, 0x86, 0xf3, 0xec, 0x5e, 0xe3, 0x36, 0x7b, 0x0c, 0x5d, 0xf4, 0x0e, 0x72, 0x91, 0x2a, 0x3d,
	0x3f, 0x17, 0x72, 0x93, 0x20, 0x43, 0x7e, 0xf9, 0x14, 0xc4, 0xd7, 0xd6, 0x75, 0x09, 0xb6, 0x37,
	0x57, 0xa9, 0xd4, 0xf2, 0x73, 0x60, 0xa1, 0x75, 0x5d, 0x82, 0xed, 0xa7, 0xb3, 0xf8, 0x33, 0x33,
	0x93, 0xd6, 0x15, 0x61, 0x8f, 0xc0, 0x43, 0xd8, 0xd7, 0x2a, 0x8d, 0xd4, 0xb9, 0xa8, 0x6d, 0x42,
	0x0d, 0xf8, 0xc5, 0xd3, 0xa8, 0x39, 0x3a, 0x22, 0xe8, 0x00, 0x00, 0x41, 0xbb, 0x85, 0x98, 0xaa,
	0xf0, 0x5c, 0xd2, 0x0e, 0x91, 0xae, 0xf1, 0x4b, 0xa7, 0x49, 0x82, 0x3c, 0x6d, 0x4e, 0xdd, 0xb1,
	0x28, 0xf4, 0x5c, 0xc4, 0xdf, 0x04, 0xcf, 0x9e, 0x32, 0x7b, 0xe4, 0xd3, 0x76, 0x19, 0x2e, 0x8d,
	0x3f, 0x52, 0x5c, 0x62, 0xbd, 0xfc, 0x97, 0x3a, 0x4b, 0x4f, 0x83, 0xbe, 0xdf, 0x1d, 0x3f, 0xf9,
	0x0c, 0xd0, 0x42, 0x24, 0x31, 0x82, 0xf6, 0x01, 0x1c, 0xe8, 0xbb, 0x73, 0x38, 0x67, 0x0b, 0xab,
	0x38, 0x6f, 0x2d, 0xe6, 0x21, 0xb4, 0x27, 0xf6, 0x80, 0x5d, 0x27, 0xb7, 0x6a, 0x97, 0xff, 0x2b,
	0xca, 0xe8, 0xb7, 0x26, 0xf4, 0xdd, 0xd1, 0x54, 0x6d, 0xf5, 0x07, 0xb0, 0x16, 0xc8, 0x34, 0xc2,
	0x77, 0x41, 0xfd, 0xb0, 0x18, 0x7e, 0xf8, 0x08, 0xe1, 0x5b, 0x44, 0xbe, 0xc2, 0x37, 0x7d, 0x77,
	0xe2, 0xf9, 0x3a, 0xd1, 0xfe, 0x3b, 0x93, 0xbd, 0xb7, 0xcd, 0x6a, 0x3f, 0x92, 0x06, 0x11, 0x1f,
	0x3a, 0x0e, 0xfb, 0x15, 0xd3, 0x3e, 0x75, 0x3e, 0x05, 0x52, 0x11, 0x81, 0xbe, 0x05, 0x0f, 0x93,
	0xb1, 0x77, 0xf2, 0xe6, 0xd2, 0x7d, 0x6d, 0x5f, 0x03, 0x1f, 0xec, 0x86, 0x2f, 0x88, 0x75, 0x8b,
	0x6f, 0xd7, 0x2c, 0xba, 0x4e, 0xfc, 0x77, 0xf4, 0xb9, 0xe3, 0x6e, 0xeb, 0xf7, 0x76, 0x15, 0x3a,
	0x08, 0xa6, 0x1b, 0xd7, 0x23, 0x08, 0x0e, 0xcf, 0xd6, 0x79, 0x83, 0x90, 0x57, 0x39, 0xab, 0x91,
	0xf8, 0x56, 0xa9, 0x0a, 0x1d, 0xfd, 0xdc, 0x80, 0xfe, 0x73, 0xb1, 0x48, 0xe8, 0x74, 0xb3, 0xfd,
	0x7b, 0x0c, 0x9e, 0x7b, 0x1c, 0x4e, 0xe5, 0xb9, 0x68, 0x4e, 0xe8, 0x2d, 0x7e, 0xd5, 0xcf, 0x2d,
	0xc1, 0xd7, 0x95, 0x5f, 0xdd, 0xc8, 0x67, 0xd0, 0x3d, 0x4c, 0xf5, 0x3f, 0xc2, 0xfd, 0x87, 0x70,
	0xdb, 0xfc, 0x5a, 0x8d, 0x2b, 0xd3, 0x33, 0xc0, 0xd1, 0x3a, 0x74, 0xf1, 0x4a, 0x73, 0xc9, 0x8e,
	0x0e, 0x61, 0xa3, 0x7e, 0x61, 0x57, 0x05, 0xec, 0x42, 0xef, 0x91, 0x34, 0x27, 0x0f, 0xef, 0xea,
	0x99, 0x94, 0x9b, 0x85, 0x5b, 0xbd, 0xda, 0xc6, 0x2f, 0x53, 0xd0, 0x0b, 0x1c, 0xfc, 0xa8, 0xd2,
	0xdd, 0x6b, 0xdc, 0x9e, 0xb6, 0xe9, 0x25, 0x7f, 0xf7, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x10,
	0x2d, 0xa7, 0x23, 0xf9, 0x0b, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UtilityServiceClient is the client API for UtilityService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UtilityServiceClient interface {
	Echo(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	EchoSpanish(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	EchoChinese(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	EchoEnglish(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	EchoHindi(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	EchoArabic(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error)
	MarshalJSON(ctx context.Context, in *Bytes, opts ...grpc.CallOption) (*Bytes, error)
	MarshalYAML(ctx context.Context, in *Bytes, opts ...grpc.CallOption) (*Bytes, error)
	MarshalXML(ctx context.Context, in *Bytes, opts ...grpc.CallOption) (*Bytes, error)
	Render(ctx context.Context, in *Template, opts ...grpc.CallOption) (*Bytes, error)
}

type utilityServiceClient struct {
	cc *grpc.ClientConn
}

func NewUtilityServiceClient(cc *grpc.ClientConn) UtilityServiceClient {
	return &utilityServiceClient{cc}
}

func (c *utilityServiceClient) Echo(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/api.UtilityService/Echo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) EchoSpanish(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/api.UtilityService/EchoSpanish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) EchoChinese(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/api.UtilityService/EchoChinese", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) EchoEnglish(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/api.UtilityService/EchoEnglish", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) EchoHindi(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/api.UtilityService/EchoHindi", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) EchoArabic(ctx context.Context, in *Message, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/api.UtilityService/EchoArabic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) MarshalJSON(ctx context.Context, in *Bytes, opts ...grpc.CallOption) (*Bytes, error) {
	out := new(Bytes)
	err := c.cc.Invoke(ctx, "/api.UtilityService/MarshalJSON", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) MarshalYAML(ctx context.Context, in *Bytes, opts ...grpc.CallOption) (*Bytes, error) {
	out := new(Bytes)
	err := c.cc.Invoke(ctx, "/api.UtilityService/MarshalYAML", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) MarshalXML(ctx context.Context, in *Bytes, opts ...grpc.CallOption) (*Bytes, error) {
	out := new(Bytes)
	err := c.cc.Invoke(ctx, "/api.UtilityService/MarshalXML", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *utilityServiceClient) Render(ctx context.Context, in *Template, opts ...grpc.CallOption) (*Bytes, error) {
	out := new(Bytes)
	err := c.cc.Invoke(ctx, "/api.UtilityService/Render", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UtilityServiceServer is the server API for UtilityService service.
type UtilityServiceServer interface {
	Echo(context.Context, *Message) (*Message, error)
	EchoSpanish(context.Context, *Message) (*Message, error)
	EchoChinese(context.Context, *Message) (*Message, error)
	EchoEnglish(context.Context, *Message) (*Message, error)
	EchoHindi(context.Context, *Message) (*Message, error)
	EchoArabic(context.Context, *Message) (*Message, error)
	MarshalJSON(context.Context, *Bytes) (*Bytes, error)
	MarshalYAML(context.Context, *Bytes) (*Bytes, error)
	MarshalXML(context.Context, *Bytes) (*Bytes, error)
	Render(context.Context, *Template) (*Bytes, error)
}

func RegisterUtilityServiceServer(s *grpc.Server, srv UtilityServiceServer) {
	s.RegisterService(&_UtilityService_serviceDesc, srv)
}

func _UtilityService_Echo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).Echo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/Echo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).Echo(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_EchoSpanish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).EchoSpanish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/EchoSpanish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).EchoSpanish(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_EchoChinese_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).EchoChinese(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/EchoChinese",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).EchoChinese(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_EchoEnglish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).EchoEnglish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/EchoEnglish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).EchoEnglish(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_EchoHindi_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).EchoHindi(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/EchoHindi",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).EchoHindi(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_EchoArabic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Message)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).EchoArabic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/EchoArabic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).EchoArabic(ctx, req.(*Message))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_MarshalJSON_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Bytes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).MarshalJSON(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/MarshalJSON",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).MarshalJSON(ctx, req.(*Bytes))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_MarshalYAML_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Bytes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).MarshalYAML(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/MarshalYAML",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).MarshalYAML(ctx, req.(*Bytes))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_MarshalXML_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Bytes)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).MarshalXML(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/MarshalXML",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).MarshalXML(ctx, req.(*Bytes))
	}
	return interceptor(ctx, in, info, handler)
}

func _UtilityService_Render_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Template)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UtilityServiceServer).Render(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UtilityService/Render",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UtilityServiceServer).Render(ctx, req.(*Template))
	}
	return interceptor(ctx, in, info, handler)
}

var _UtilityService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.UtilityService",
	HandlerType: (*UtilityServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Echo",
			Handler:    _UtilityService_Echo_Handler,
		},
		{
			MethodName: "EchoSpanish",
			Handler:    _UtilityService_EchoSpanish_Handler,
		},
		{
			MethodName: "EchoChinese",
			Handler:    _UtilityService_EchoChinese_Handler,
		},
		{
			MethodName: "EchoEnglish",
			Handler:    _UtilityService_EchoEnglish_Handler,
		},
		{
			MethodName: "EchoHindi",
			Handler:    _UtilityService_EchoHindi_Handler,
		},
		{
			MethodName: "EchoArabic",
			Handler:    _UtilityService_EchoArabic_Handler,
		},
		{
			MethodName: "MarshalJSON",
			Handler:    _UtilityService_MarshalJSON_Handler,
		},
		{
			MethodName: "MarshalYAML",
			Handler:    _UtilityService_MarshalYAML_Handler,
		},
		{
			MethodName: "MarshalXML",
			Handler:    _UtilityService_MarshalXML_Handler,
		},
		{
			MethodName: "Render",
			Handler:    _UtilityService_Render_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// ContactServiceClient is the client API for ContactService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ContactServiceClient interface {
	SendSMS(ctx context.Context, in *SMS, opts ...grpc.CallOption) (*Identifier, error)
	GetSMS(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*SMSStatus, error)
	SendEmail(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Message, error)
	SendCall(ctx context.Context, in *Call, opts ...grpc.CallOption) (*Identifier, error)
}

type contactServiceClient struct {
	cc *grpc.ClientConn
}

func NewContactServiceClient(cc *grpc.ClientConn) ContactServiceClient {
	return &contactServiceClient{cc}
}

func (c *contactServiceClient) SendSMS(ctx context.Context, in *SMS, opts ...grpc.CallOption) (*Identifier, error) {
	out := new(Identifier)
	err := c.cc.Invoke(ctx, "/api.ContactService/SendSMS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactServiceClient) GetSMS(ctx context.Context, in *Identifier, opts ...grpc.CallOption) (*SMSStatus, error) {
	out := new(SMSStatus)
	err := c.cc.Invoke(ctx, "/api.ContactService/GetSMS", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactServiceClient) SendEmail(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/api.ContactService/SendEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *contactServiceClient) SendCall(ctx context.Context, in *Call, opts ...grpc.CallOption) (*Identifier, error) {
	out := new(Identifier)
	err := c.cc.Invoke(ctx, "/api.ContactService/SendCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ContactServiceServer is the server API for ContactService service.
type ContactServiceServer interface {
	SendSMS(context.Context, *SMS) (*Identifier, error)
	GetSMS(context.Context, *Identifier) (*SMSStatus, error)
	SendEmail(context.Context, *EmailRequest) (*Message, error)
	SendCall(context.Context, *Call) (*Identifier, error)
}

func RegisterContactServiceServer(s *grpc.Server, srv ContactServiceServer) {
	s.RegisterService(&_ContactService_serviceDesc, srv)
}

func _ContactService_SendSMS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SMS)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactServiceServer).SendSMS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ContactService/SendSMS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactServiceServer).SendSMS(ctx, req.(*SMS))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactService_GetSMS_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Identifier)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactServiceServer).GetSMS(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ContactService/GetSMS",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactServiceServer).GetSMS(ctx, req.(*Identifier))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactService_SendEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactServiceServer).SendEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ContactService/SendEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactServiceServer).SendEmail(ctx, req.(*EmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ContactService_SendCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Call)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ContactServiceServer).SendCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ContactService/SendCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ContactServiceServer).SendCall(ctx, req.(*Call))
	}
	return interceptor(ctx, in, info, handler)
}

var _ContactService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ContactService",
	HandlerType: (*ContactServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendSMS",
			Handler:    _ContactService_SendSMS_Handler,
		},
		{
			MethodName: "GetSMS",
			Handler:    _ContactService_GetSMS_Handler,
		},
		{
			MethodName: "SendEmail",
			Handler:    _ContactService_SendEmail_Handler,
		},
		{
			MethodName: "SendCall",
			Handler:    _ContactService_SendCall_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// PaymentServiceClient is the client API for PaymentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PaymentServiceClient interface {
	Subscribe(ctx context.Context, in *Call, opts ...grpc.CallOption) (*Identifier, error)
	Unsubscribe(ctx context.Context, in *Call, opts ...grpc.CallOption) (*Identifier, error)
}

type paymentServiceClient struct {
	cc *grpc.ClientConn
}

func NewPaymentServiceClient(cc *grpc.ClientConn) PaymentServiceClient {
	return &paymentServiceClient{cc}
}

func (c *paymentServiceClient) Subscribe(ctx context.Context, in *Call, opts ...grpc.CallOption) (*Identifier, error) {
	out := new(Identifier)
	err := c.cc.Invoke(ctx, "/api.PaymentService/Subscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServiceClient) Unsubscribe(ctx context.Context, in *Call, opts ...grpc.CallOption) (*Identifier, error) {
	out := new(Identifier)
	err := c.cc.Invoke(ctx, "/api.PaymentService/Unsubscribe", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PaymentServiceServer is the server API for PaymentService service.
type PaymentServiceServer interface {
	Subscribe(context.Context, *Call) (*Identifier, error)
	Unsubscribe(context.Context, *Call) (*Identifier, error)
}

func RegisterPaymentServiceServer(s *grpc.Server, srv PaymentServiceServer) {
	s.RegisterService(&_PaymentService_serviceDesc, srv)
}

func _PaymentService_Subscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Call)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServiceServer).Subscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PaymentService/Subscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServiceServer).Subscribe(ctx, req.(*Call))
	}
	return interceptor(ctx, in, info, handler)
}

func _PaymentService_Unsubscribe_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Call)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PaymentServiceServer).Unsubscribe(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PaymentService/Unsubscribe",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PaymentServiceServer).Unsubscribe(ctx, req.(*Call))
	}
	return interceptor(ctx, in, info, handler)
}

var _PaymentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.PaymentService",
	HandlerType: (*PaymentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Subscribe",
			Handler:    _PaymentService_Subscribe_Handler,
		},
		{
			MethodName: "Unsubscribe",
			Handler:    _PaymentService_Unsubscribe_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams:     []grpc.StreamDesc{},
	Metadata:    "api.proto",
}

// DashboardServiceClient is the client API for DashboardService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DashboardServiceClient interface {
	GetDashboard(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Dashboard, error)
}

type dashboardServiceClient struct {
	cc *grpc.ClientConn
}

func NewDashboardServiceClient(cc *grpc.ClientConn) DashboardServiceClient {
	return &dashboardServiceClient{cc}
}

func (c *dashboardServiceClient) GetDashboard(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Dashboard, error) {
	out := new(Dashboard)
	err := c.cc.Invoke(ctx, "/api.DashboardService/GetDashboard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DashboardServiceServer is the server API for DashboardService service.
type DashboardServiceServer interface {
	GetDashboard(context.Context, *Empty) (*Dashboard, error)
}

func RegisterDashboardServiceServer(s *grpc.Server, srv DashboardServiceServer) {
	s.RegisterService(&_DashboardService_serviceDesc, srv)
}

func _DashboardService_GetDashboard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DashboardServiceServer).GetDashboard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.DashboardService/GetDashboard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DashboardServiceServer).GetDashboard(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _DashboardService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.DashboardService",
	HandlerType: (*DashboardServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetDashboard",
			Handler:    _DashboardService_GetDashboard_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
