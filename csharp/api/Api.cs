// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: api.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Api {

  /// <summary>Holder for reflection information generated from api.proto</summary>
  public static partial class ApiReflection {

    #region Descriptor
    /// <summary>File descriptor for api.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ApiReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CglhcGkucHJvdG8SA2FwaRobZ29vZ2xlL3Byb3RvYnVmL2VtcHR5LnByb3Rv",
            "Gh5nb29nbGUvcHJvdG9idWYvZHVyYXRpb24ucHJvdG8aIGdvb2dsZS9wcm90",
            "b2J1Zi9maWVsZF9tYXNrLnByb3RvGhxnb29nbGUvYXBpL2Fubm90YXRpb25z",
            "LnByb3RvGhVnb29nbGUvYXBpL2F1dGgucHJvdG8aHWdvb2dsZS9wdWJzdWIv",
            "djEvcHVic3ViLnByb3RvIhAKAklkEgoKAmlkGAEgASgJImAKEUFjdGlvbkhv",
            "b2tSZXF1ZXN0EiMKCmF0dGFjaG1lbnQYASABKAsyDy5hcGkuQXR0YWNobWVu",
            "dBImCgdhY3Rpb25zGAIgASgLMhUuYXBpLkF0dGFjaG1lbnRBY3Rpb24iMQoS",
            "TWVzc2FnZVVzZXJSZXF1ZXN0EgoKAmlkGAEgASgJEg8KB21lc3NhZ2UYAiAB",
            "KAkiZQoNUmVmdW5kUmVxdWVzdBIKCgJpZBgBIAEoCRIOCgZyZWFzb24YAiAB",
            "KAkSDgoGYW1vdW50GAMgASgDEhgKEHJldmVyc2VfdHJhbnNmZXIYBCABKAgS",
            "DgoGc3RhdHVzGAUgASgJIjoKDUNoYXJnZVJlcXVlc3QSHQoHcHJvZHVjdBgB",
            "IAEoCzIMLmFwaS5Qcm9kdWN0EgoKAmlkGAIgASgJIicKGUNhbmNlbFN1YnNj",
            "cmlwdGlvblJlcXVlc3QSCgoCaWQYASABKAkidQoRQ3JlYXRlUGxhblJlcXVl",
            "c3QSDwoHcGxhbl9pZBgBIAEoCRIOCgZhbW91bnQYAiABKAMSEgoKc2Vydmlj",
            "ZV9pZBgDIAEoCRIUCgxzZXJ2aWNlX25hbWUYBCABKAkSFQoNZnJpZW5kbHlf",
            "bmFtZRgFIAEoCSImCgpTTVNSZXF1ZXN0EgoKAmlkGAEgASgJEgwKBGJvZHkY",
            "AiABKAkiLwoLQ2FsbFJlcXVlc3QSCgoCaWQYASABKAkSFAoMY2FsbGJhY2tf",
            "dXJsGAIgASgJIj0KCk1NU1JlcXVlc3QSHAoDc21zGAEgASgLMg8uYXBpLlNN",
            "U1JlcXVlc3QSEQoJbWVkaWFfdXJsGAMgASgJIlEKDEVtYWlsUmVxdWVzdBIK",
            "CgJpZBgBIAEoCRIPCgdzdWJqZWN0GAIgASgJEhIKCnBsYWluX3RleHQYAyAB",
            "KAkSEAoIaHRtbF9hbHQYBCABKAkifwoPQ3VzdG9tZXJSZXF1ZXN0Eg0KBWVt",
            "YWlsGAEgASgJEgwKBHBsYW4YAiABKAkSDQoFcGhvbmUYAyABKAkSDAoEbmFt",
            "ZRgEIAEoCRITCgtkZXNjcmlwdGlvbhgHIAEoCRIdCgdhZGRyZXNzGAggASgL",
            "MgwuYXBpLkFkZHJlc3MiSwoVVXBkYXRlQ3VzdG9tZXJSZXF1ZXN0EgoKAmlk",
            "GAEgASgJEiYKCGN1c3RvbWVyGAIgASgLMhQuYXBpLkN1c3RvbWVyUmVxdWVz",
            "dCJ7ChhTdWJzY3JpYmVDdXN0b21lclJlcXVlc3QSCgoCaWQYASABKAkSDAoE",
            "cGxhbhgCIAEoCRITCgtjYXJkX251bWJlchgDIAEoCRIRCglleHBfbW9udGgY",
            "BCABKAkSEAoIZXhwX3llYXIYBSABKAkSCwoDY3ZjGAYgASgJIlsKFENyZWF0",
            "ZUFjY291bnRSZXF1ZXN0EiYKCGN1c3RvbWVyGAEgASgLMhQuYXBpLkN1c3Rv",
            "bWVyUmVxdWVzdBIbCgZhY2Nlc3MYAiABKAsyCy5hcGkuQWNjZXNzIkcKB0Fj",
            "Y291bnQSHwoIY3VzdG9tZXIYASABKAsyDS5hcGkuQ3VzdG9tZXISGwoGYWNj",
            "ZXNzGAIgASgLMgsuYXBpLkFjY2VzcyKTAgoEVXNlchIKCgJpZBgBIAEoCRIP",
            "Cgd0ZWFtX2lkGAIgASgJEgwKBG5hbWUYAyABKAkSDQoFcGhvbmUYBCABKAkS",
            "HQoHcHJvZmlsZRgFIAEoCzIMLmFwaS5Qcm9maWxlEg8KB2RlbGV0ZWQYBiAB",
            "KAgSDQoFYWRtaW4YByABKAgSDgoGb3duZGVyGAggASgIEhUKDXByaW1hcnlf",
            "b3duZXIYCSABKAgSEgoKcmVzdHJpY3RlZBgKIAEoCBIYChB1bHRyYV9yZXN0",
            "cmljdGVkGAsgASgIEhAKCHN0cmFuZ2VyGAwgASgIEgsKA2JvdBgNIAEoCBIO",
            "CgZoYXMyZmEYDiABKAgSDgoGbG9jYWxlGA8gASgJIpkBCgdQcm9maWxlEhMK",
            "C2F2YXRhcl9oYXNoGAEgASgJEg4KBnN0YXR1cxgCIAEoCRIUCgxzdGF0dXNf",
            "ZW1vamkYAyABKAkSFAoMZGlzcGxheV9uYW1lGAQgASgJEgwKBG5hbWUYBSAB",
            "KAkSDQoFZW1haWwYBiABKAkSEgoKaW1hZ2VfdXJscxgHIAMoCRIMCgR0ZWFt",
            "GAggASgJIgcKBUVtcHR5IooCCghDdXN0b21lchIKCgJpZBgBIAEoCRIMCgRw",
            "bGFuGAIgASgJEgwKBG5hbWUYAyABKAkSDQoFZW1haWwYBCABKAkSEwoLZGVz",
            "Y3JpcHRpb24YBSABKAkSDQoFcGhvbmUYBiABKAkSHQoHYWRkcmVzcxgIIAEo",
            "CzIMLmFwaS5BZGRyZXNzEi0KCG1ldGFkYXRhGAkgAygLMhsuYXBpLkN1c3Rv",
            "bWVyLk1ldGFkYXRhRW50cnkSDwoHZGVsZXRlZBgKIAEoCBITCgtjcmVhdGVf",
            "ZGF0ZRgUIAEoAxovCg1NZXRhZGF0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2",
            "YWx1ZRgCIAEoCToCOAEifgoEQ2FyZBIgCgljYXJkX3R5cGUYASABKA4yDS5h",
            "cGkuQ2FyZFR5cGUSEwoLY2FyZF9udW1iZXIYAyABKAkSEQoJZXhwX21vbnRo",
            "GAQgASgJEhAKCGV4cF95ZWFyGAUgASgJEgsKA2N2YxgGIAEoCRINCgVkZWJp",
            "dBgHIAEoCCI9CgtCYW5rQWNjb3VudBIWCg5hY2NvdW50X251bWJlchgBIAEo",
            "CRIWCg5yb3V0aW5nX251bWJlchgCIAEoCSJqCgdBZGRyZXNzEgwKBGNpdHkY",
            "ASABKAkSDwoHY291bnRyeRgCIAEoCRINCgVsaW5lMRgDIAEoCRINCgVsaW5l",
            "MhgEIAEoCRITCgtwb3N0YWxfY29kZRgFIAEoCRINCgVzdGF0ZRgGIAEoCSJB",
            "Cg9DaGFubmVsUmVtaW5kZXISEgoKY2hhbm5lbF9pZBgBIAEoCRIMCgR0ZXh0",
            "GAIgASgJEgwKBHRpbWUYAyABKAkiUgoMVXNlclJlbWluZGVyEgoKAmlkGAEg",
            "ASgJEgwKBHRleHQYAiABKAkSDAoEdGltZRgDIAEoCRIaCgRpdGVtGAQgASgL",
            "MgwuYXBpLkl0ZW1SZWYiOQoHSXRlbVJlZhIPCgdjaGFubmVsGAEgASgJEgwK",
            "BGZpbGUYAiABKAkSDwoHY29tbWVudBgDIAEoCSIwCgRTdGFyEgwKBHRleHQY",
            "ASABKAkSGgoEaXRlbRgEIAEoCzIMLmFwaS5JdGVtUmVmIi8KA1BpbhIMCgR0",
            "ZXh0GAEgASgJEhoKBGl0ZW0YBCABKAsyDC5hcGkuSXRlbVJlZiIfCglTaWdu",
            "ZWRLZXkSEgoKc2lnbmVkX2tleRgBIAEoCSKSAgoGQWNjZXNzEhkKEWF1dG9t",
            "OHRlcl9hY2NvdW50GAEgASgJEhUKDWF1dG9tOHRlcl9rZXkYAiABKAkSFgoO",
            "dHdpbGlvX2FjY291bnQYAyABKAkSEgoKdHdpbGlvX2tleRgEIAEoCRIYChBz",
            "ZW5kZ3JpZF9hY2NvdW50GAUgASgJEhQKDHNlbmRncmlkX2tleRgGIAEoCRIW",
            "Cg5zdHJpcGVfYWNjb3VudBgHIAEoCRISCgpzdHJpcGVfa2V5GAggASgJEhUK",
            "DXNsYWNrX2FjY291bnQYCSABKAkSEQoJc2xhY2tfa2V5GAogASgJEhMKC2dj",
            "cF9wcm9qZWN0GAsgASgJEg8KB2djcF9rZXkYDCABKAkilwEKDlN0YW5kYXJk",
            "Q2xhaW1zEhsKBmFjY2VzcxgBIAEoCzILLmFwaS5BY2Nlc3MSEAoIYXVkaWVu",
            "Y2UYAiABKAkSDwoHc3ViamVjdBgDIAEoCRISCgpleHBpcmVzX2F0GAQgASgD",
            "EgoKAmlkGAUgASgJEhEKCWlzc3VlZF9hdBgGIAEoAxISCgpub3RfYmVmb3Jl",
            "GAcgASgDIi4KCUxvZ0NvbmZpZxIQCgh1c2VybmFtZRgBIAEoCRIPCgdjaGFu",
            "bmVsGAIgASgJIi0KDEVtYWlsQWRkcmVzcxIMCgRuYW1lGAEgASgJEg8KB2Fk",
            "ZHJlc3MYAiABKAkiUAoFRW1haWwSHwoEZnJvbRgBIAEoCzIRLmFwaS5FbWFp",
            "bEFkZHJlc3MSJgoJcmVjaXBpZW50GAIgASgLMhMuYXBpLlJlY2lwaWVudEVt",
            "YWlsImIKDlJlY2lwaWVudEVtYWlsEh0KAnRvGAIgASgLMhEuYXBpLkVtYWls",
            "QWRkcmVzcxIPCgdzdWJqZWN0GAMgASgJEhIKCnBsYWluX3RleHQYBCABKAkS",
            "DAoEaHRtbBgFIAEoCSJfCgNTTVMSCgoCdG8YASABKAkSDAoEZnJvbRgCIAEo",
            "CRIMCgRib2R5GAMgASgJEhEKCW1lZGlhX3VybBgEIAEoCRIQCghjYWxsYmFj",
            "axgFIAEoCRILCgNhcHAYBiABKAkiMgoEQ2FsbBIKCgJ0bxgBIAEoCRIMCgRm",
            "cm9tGAIgASgJEhAKCGNhbGxiYWNrGAUgASgJImoKA0ZheBIKCgJ0bxgBIAEo",
            "CRIMCgRmcm9tGAIgASgJEhEKCW1lZGlhX3VybBgDIAEoCRIPCgdxdWFsaXR5",
            "GAQgASgJEhAKCGNhbGxiYWNrGAUgASgJEhMKC3N0b3JlX21lZGlhGAYgASgI",
            "IooCCgxTbGFzaENvbW1hbmQSDQoFdG9rZW4YASABKAkSDwoHdGVhbV9pZBgC",
            "IAEoCRITCgt0ZWFtX2RvbWFpbhgDIAEoCRIVCg1lbnRlcnByaXNlX2lkGAQg",
            "ASgJEhcKD2VudGVycHJpc2VfbmFtZRgGIAEoCRISCgpjaGFubmVsX2lkGAcg",
            "ASgJEhQKDGNoYW5uZWxfbmFtZRgIIAEoCRIPCgd1c2VyX2lkGAkgASgJEhEK",
            "CXVzZXJfbmFtZRgKIAEoCRIPCgdjb21tYW5kGAsgASgJEgwKBHRleHQYDCAB",
            "KAkSFAoMcmVzcG9uc2VfdXJsGA0gASgJEhIKCnRyaWdnZXJfaWQYDiABKAki",
            "NgoHTG9nSG9vaxIOCgZhdXRob3IYASABKAkSDAoEaWNvbhgCIAEoCRINCgV0",
            "aXRsZRgDIAEoCSKwAgoKQXR0YWNobWVudBINCgVjb2xvchgBIAEoCRIQCghm",
            "YWxsYmFjaxgCIAEoCRITCgtjYWxsYmFja19pZBgDIAEoCRIKCgJpZBgEIAEo",
            "AxIRCglhdXRob3JfaWQYBSABKAkSEwoLYXV0aG9yX25hbWUYBiABKAkSEwoL",
            "YXV0aG9yX2xpbmsYByABKAkSEwoLYXV0aG9yX2ljb24YCCABKAkSDQoFdGl0",
            "bGUYCSABKAkSFAoMdGl0bGVfcHJlZml4GAogASgJEg8KB3ByZXRleHQYCyAB",
            "KAkSDAoEdGV4dBgMIAEoCRIRCglpbWFnZV91cmwYDSABKAkSEQoJdGh1bWJf",
            "dXJsGA4gASgJEiQKBmZpZWxkcxgPIAMoCzIULmFwaS5BdHRhY2htZW50Rmll",
            "bGQi5wIKEEF0dGFjaG1lbnRBY3Rpb24SDAoEbmFtZRgBIAEoCRIMCgR0ZXh0",
            "GAIgASgJEg0KBXN0eWxlGAMgASgJEgwKBHR5cGUYBCABKAkSDQoFdmFsdWUY",
            "BSABKAkSEwoLZGF0YV9zb3VyY2UYBiABKAkSGAoQbWluX3F1ZXJ5X2xlbmd0",
            "aBgHIAEoAxIsCgdvcHRpb25zGAggAygLMhsuYXBpLkF0dGFjaG1lbnRBY3Rp",
            "b25PcHRpb24SNQoQc2VsZWN0ZWRfb3B0aW9ucxgJIAMoCzIbLmFwaS5BdHRh",
            "Y2htZW50QWN0aW9uT3B0aW9uEjcKDW9wdGlvbl9ncm91cHMYCiADKAsyIC5h",
            "cGkuQXR0YWNobWVudEFjdGlvbk9wdGlvbkdyb3VwEjEKB2NvbmZpcm0YCyAB",
            "KAsyIC5hcGkuQXR0YWNobWVudENvbmZpcm1hdGlvbkZpZWxkEgsKA3VybBgM",
            "IAEoCSJhChtBdHRhY2htZW50Q29uZmlybWF0aW9uRmllbGQSDQoFdGl0bGUY",
            "ASABKAkSDAoEdGV4dBgCIAEoCRIPCgdva190ZXh0GAMgASgJEhQKDGRpc21p",
            "c3NfdGV4dBgEIAEoCSJZChtBdHRhY2htZW50QWN0aW9uT3B0aW9uR3JvdXAS",
            "DAoEdGV4dBgBIAEoCRIsCgdvcHRpb25zGAIgAygLMhsuYXBpLkF0dGFjaG1l",
            "bnRBY3Rpb25PcHRpb24iSwoWQXR0YWNobWVudEFjdGlvbk9wdGlvbhINCgV0",
            "aXRsZRgBIAEoCRINCgV2YWx1ZRgCIAEoCRITCgtkZXNjcmlwdGlvbhgDIAEo",
            "CSI+Cg9BdHRhY2htZW50RmllbGQSDQoFdGl0bGUYASABKAkSDQoFdmFsdWUY",
            "AiABKAkSDQoFc2hvcnQYAyABKAgiIgoESlNPThIMCgRkYXRhGAEgASgMEgwK",
            "BHNpemUYAiABKAMigAEKBEZpbGUSDAoEZGF0YRgBIAEoDBIMCgRzaXplGAIg",
            "ASgDEgwKBG5hbWUYAyABKAkSIQoEdGFncxgEIAMoCzITLmFwaS5GaWxlLlRh",
            "Z3NFbnRyeRorCglUYWdzRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIg",
            "ASgJOgI4ASIuCglTbGFja0hvb2sSEAoIdXNlcm5hbWUYASABKAkSDwoHY2hh",
            "bm5lbBgCIAEoCSK8AQoHUHJvZHVjdBIMCgRuYW1lGAEgASgJEg4KBmFtb3Vu",
            "dBgCIAEoAxITCgtkZXNjcmlwdGlvbhgDIAEoCRIYCgVmaWxlcxgEIAMoCzIJ",
            "LmFwaS5GaWxlEiQKBHRhZ3MYBSADKAsyFi5hcGkuUHJvZHVjdC5UYWdzRW50",
            "cnkSEQoJYXZhaWxhYmxlGAYgASgIGisKCVRhZ3NFbnRyeRILCgNrZXkYASAB",
            "KAkSDQoFdmFsdWUYAiABKAk6AjgBImkKD1N0cmluZ01hcFN0cmluZxIqCgNt",
            "YXAYASADKAsyHS5hcGkuU3RyaW5nTWFwU3RyaW5nLk1hcEVudHJ5GioKCE1h",
            "cEVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEqLQoNQ3Vz",
            "dG9tZXJJbmRleBIGCgJJRBAAEgkKBUVNQUlMEAESCQoFUEhPTkUQAipQCgVD",
            "bGFpbRIKCgZUV0lMSU8QABIMCghTRU5ER1JJRBABEgoKBlNUUklQRRACEgkK",
            "BVNMQUNLEAMSBwoDR0NQEAQSDQoJQVVUT004VEVSEAUqOQoNU2lnbmluZ01l",
            "dGhvZBIICgRITUFDEAASCQoFRUNEU0EQARIHCgNSU0EQAhIKCgZSU0FQUFMQ",
            "Ayo8CghDYXJkVHlwZRIICgRWSVNBEAASDgoKTUFTVEVSQ0FSRBABEgwKCERJ",
            "U0NPVkVSEAISCAoEQU1FWBADKjcKBVRvcGljEggKBFVTRVIQABILCgdBQ0NP",
            "VU5UEAESDAoIQ1VTVE9NRVIQAhIJCgVPVEhFUhADMvoCCg5BY2NvdW50U2Vy",
            "dmljZRJPCg1DcmVhdGVBY2NvdW50EhkuYXBpLkNyZWF0ZUFjY291bnRSZXF1",
            "ZXN0GgkuYXBpLkpTT04iGILT5JMCEiINL2FwaS9hY2NvdW50czoBKhJQCg1V",
            "cGRhdGVBY2NvdW50EgwuYXBpLkFjY291bnQaCS5hcGkuSlNPTiImgtPkkwIg",
            "IhsvYXBpL2FjY291bnRzL3tjdXN0b21lci5pZH06ASoSQgoNRGVsZXRlQWNj",
            "b3VudBIHLmFwaS5JZBoJLmFwaS5KU09OIh2C0+STAhciEi9hcGkvYWNjb3Vu",
            "dHMve2lkfToBKhJACgtSZWFkQWNjb3VudBIHLmFwaS5JZBoJLmFwaS5KU09O",
            "Ih2C0+STAhciEi9hcGkvYWNjb3VudHMve2lkfToBKhI/CgxMaXN0QWNjb3Vu",
            "dHMSCi5hcGkuRW1wdHkaCS5hcGkuSlNPTiIYgtPkkwISIg0vYXBpL2FjY291",
            "bnRzOgEqMpYICg9DdXN0b21lclNlcnZpY2USTAoOQ3JlYXRlQ3VzdG9tZXIS",
            "FC5hcGkuQ3VzdG9tZXJSZXF1ZXN0GgkuYXBpLkpTT04iGYLT5JMCEyIOL2Fw",
            "aS9jdXN0b21lcnM6ASoSVwoOVXBkYXRlQ3VzdG9tZXISGi5hcGkuVXBkYXRl",
            "Q3VzdG9tZXJSZXF1ZXN0GgkuYXBpLkpTT04iHoLT5JMCGCITL2FwaS9jdXN0",
            "b21lcnMve2lkfToBKhJECg5EZWxldGVDdXN0b21lchIHLmFwaS5JZBoJLmFw",
            "aS5KU09OIh6C0+STAhgiEy9hcGkvY3VzdG9tZXJzL3tpZH06ASoSRgoNTGlz",
            "dEN1c3RvbWVycxIKLmFwaS5FbXB0eRoJLmFwaS5KU09OIh6C0+STAhgiEy9h",
            "cGkvY3VzdG9tZXJzL2xpc3Q6ASoSVgoOQ2hhcmdlQ3VzdG9tZXISEi5hcGku",
            "Q2hhcmdlUmVxdWVzdBoJLmFwaS5KU09OIiWC0+STAh8iGi9hcGkvY3VzdG9t",
            "ZXJzL3tpZH0vY2hhcmdlOgEqElYKDlJlZnVuZEN1c3RvbWVyEhIuYXBpLlJl",
            "ZnVuZFJlcXVlc3QaCS5hcGkuSlNPTiIlgtPkkwIfIhovYXBpL2N1c3RvbWVy",
            "cy97aWR9L3JlZnVuZDoBKhJnChFTdWJzY3JpYmVDdXN0b21lchIdLmFwaS5T",
            "dWJzY3JpYmVDdXN0b21lclJlcXVlc3QaCS5hcGkuSlNPTiIogtPkkwIiIh0v",
            "YXBpL2N1c3RvbWVycy97aWR9L3N1YnNjcmliZToBKhJsChNVblN1YnNjcmli",
            "ZUN1c3RvbWVyEh4uYXBpLkNhbmNlbFN1YnNjcmlwdGlvblJlcXVlc3QaCS5h",
            "cGkuSlNPTiIqgtPkkwIkIh8vYXBpL2N1c3RvbWVycy97aWR9L3Vuc3Vic2Ny",
            "aWJlOgEqEk0KC1NNU0N1c3RvbWVyEg8uYXBpLlNNU1JlcXVlc3QaCS5hcGku",
            "SlNPTiIigtPkkwIcIhcvYXBpL2N1c3RvbWVycy97aWR9L3NtczoBKhJQCgxD",
            "YWxsQ3VzdG9tZXISEC5hcGkuQ2FsbFJlcXVlc3QaCS5hcGkuSlNPTiIjgtPk",
            "kwIdIhgvYXBpL2N1c3RvbWVycy97aWR9L2NhbGw6ASoSUQoLTU1TQ3VzdG9t",
            "ZXISDy5hcGkuTU1TUmVxdWVzdBoJLmFwaS5KU09OIiaC0+STAiAiGy9hcGkv",
            "Y3VzdG9tZXJzL3tzbXMuaWR9L21tczoBKhJTCg1FbWFpbEN1c3RvbWVyEhEu",
            "YXBpLkVtYWlsUmVxdWVzdBoJLmFwaS5KU09OIiSC0+STAh4iGS9hcGkvY3Vz",
            "dG9tZXJzL3tpZH0vZW1haWw6ASoyYQoLUGxhblNlcnZpY2USUgoWQ3JlYXRl",
            "U3Vic2NyaXB0aW9uUGxhbhIWLmFwaS5DcmVhdGVQbGFuUmVxdWVzdBoJLmFw",
            "aS5KU09OIhWC0+STAg8iCi9hcGkvcGxhbnM6ASoy9gQKC1VzZXJTZXJ2aWNl",
            "EksKCUVtYWlsVXNlchIRLmFwaS5FbWFpbFJlcXVlc3QaCS5hcGkuSlNPTiIg",
            "gtPkkwIaIhUvYXBpL3VzZXJzL3tpZH0vZW1haWw6ASoSSAoLTWVzc2FnZVVz",
            "ZXISFy5hcGkuTWVzc2FnZVVzZXJSZXF1ZXN0GgkuYXBpLkpTT04iFYLT5JMC",
            "DyIKL2FwaS91c2VyczoBKhJJCgdTTVNVc2VyEg8uYXBpLlNNU1JlcXVlc3Qa",
            "CS5hcGkuSlNPTiIigtPkkwIcIhcvYXBpL2N1c3RvbWVycy97aWR9L3NtczoB",
            "KhJMCghDYWxsVXNlchIQLmFwaS5DYWxsUmVxdWVzdBoJLmFwaS5KU09OIiOC",
            "0+STAh0iGC9hcGkvY3VzdG9tZXJzL3tpZH0vY2FsbDoBKhJNCgdNTVNVc2Vy",
            "Eg8uYXBpLk1NU1JlcXVlc3QaCS5hcGkuSlNPTiImgtPkkwIgIhsvYXBpL2N1",
            "c3RvbWVycy97c21zLmlkfS9tbXM6ASoSOQoKQ3JlYXRlVXNlchIJLmFwaS5V",
            "c2VyGgkuYXBpLkpTT04iFYLT5JMCDyIKL2FwaS91c2VyczoBKhI5CgpVcGRh",
            "dGVVc2VyEgkuYXBpLlVzZXIaCS5hcGkuSlNPTiIVgtPkkwIPIgovYXBpL3Vz",
            "ZXJzOgEqEjcKCkRlbGV0ZVVzZXISBy5hcGkuSWQaCS5hcGkuSlNPTiIVgtPk",
            "kwIPIgovYXBpL3VzZXJzOgEqEjkKCUxpc3RVc2VycxIKLmFwaS5FbXB0eRoJ",
            "LmFwaS5KU09OIhWC0+STAg8iCi9hcGkvdXNlcnM6ASoy1AEKC0hvb2tTZXJ2",
            "aWNlEjoKBEhvb2sSDy5hcGkuQXR0YWNobWVudBoKLmFwaS5FbXB0eSIVgtPk",
            "kwIPIgovYXBpL2hvb2tzOgEqEkcKCkFjdGlvbkhvb2sSFi5hcGkuQWN0aW9u",
            "SG9va1JlcXVlc3QaCi5hcGkuRW1wdHkiFYLT5JMCDyIKL2FwaS9ob29rczoB",
            "KhJACghTbGFzaENtZBIRLmFwaS5TbGFzaENvbW1hbmQaCi5hcGkuRW1wdHki",
            "FYLT5JMCDyIKL2FwaS9ob29rczoBKmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.EmptyReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Api.AuthReflection.Descriptor, global::Google.Cloud.PubSub.V1.PubsubReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Api.CustomerIndex), typeof(global::Api.Claim), typeof(global::Api.SigningMethod), typeof(global::Api.CardType), typeof(global::Api.Topic), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Id), global::Api.Id.Parser, new[]{ "Id_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ActionHookRequest), global::Api.ActionHookRequest.Parser, new[]{ "Attachment", "Actions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.MessageUserRequest), global::Api.MessageUserRequest.Parser, new[]{ "Id", "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.RefundRequest), global::Api.RefundRequest.Parser, new[]{ "Id", "Reason", "Amount", "ReverseTransfer", "Status" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ChargeRequest), global::Api.ChargeRequest.Parser, new[]{ "Product", "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.CancelSubscriptionRequest), global::Api.CancelSubscriptionRequest.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.CreatePlanRequest), global::Api.CreatePlanRequest.Parser, new[]{ "PlanId", "Amount", "ServiceId", "ServiceName", "FriendlyName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.SMSRequest), global::Api.SMSRequest.Parser, new[]{ "Id", "Body" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.CallRequest), global::Api.CallRequest.Parser, new[]{ "Id", "CallbackUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.MMSRequest), global::Api.MMSRequest.Parser, new[]{ "Sms", "MediaUrl" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.EmailRequest), global::Api.EmailRequest.Parser, new[]{ "Id", "Subject", "PlainText", "HtmlAlt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.CustomerRequest), global::Api.CustomerRequest.Parser, new[]{ "Email", "Plan", "Phone", "Name", "Description", "Address" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.UpdateCustomerRequest), global::Api.UpdateCustomerRequest.Parser, new[]{ "Id", "Customer" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.SubscribeCustomerRequest), global::Api.SubscribeCustomerRequest.Parser, new[]{ "Id", "Plan", "CardNumber", "ExpMonth", "ExpYear", "Cvc" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.CreateAccountRequest), global::Api.CreateAccountRequest.Parser, new[]{ "Customer", "Access" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Account), global::Api.Account.Parser, new[]{ "Customer", "Access" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.User), global::Api.User.Parser, new[]{ "Id", "TeamId", "Name", "Phone", "Profile", "Deleted", "Admin", "Ownder", "PrimaryOwner", "Restricted", "UltraRestricted", "Stranger", "Bot", "Has2Fa", "Locale" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Profile), global::Api.Profile.Parser, new[]{ "AvatarHash", "Status", "StatusEmoji", "DisplayName", "Name", "Email", "ImageUrls", "Team" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Empty), global::Api.Empty.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Customer), global::Api.Customer.Parser, new[]{ "Id", "Plan", "Name", "Email", "Description", "Phone", "Address", "Metadata", "Deleted", "CreateDate" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Card), global::Api.Card.Parser, new[]{ "CardType", "CardNumber", "ExpMonth", "ExpYear", "Cvc", "Debit" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.BankAccount), global::Api.BankAccount.Parser, new[]{ "AccountNumber", "RoutingNumber" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Address), global::Api.Address.Parser, new[]{ "City", "Country", "Line1", "Line2", "PostalCode", "State" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ChannelReminder), global::Api.ChannelReminder.Parser, new[]{ "ChannelId", "Text", "Time" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.UserReminder), global::Api.UserReminder.Parser, new[]{ "Id", "Text", "Time", "Item" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.ItemRef), global::Api.ItemRef.Parser, new[]{ "Channel", "File", "Comment" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Star), global::Api.Star.Parser, new[]{ "Text", "Item" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Pin), global::Api.Pin.Parser, new[]{ "Text", "Item" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.SignedKey), global::Api.SignedKey.Parser, new[]{ "SignedKey_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Access), global::Api.Access.Parser, new[]{ "Autom8TerAccount", "Autom8TerKey", "TwilioAccount", "TwilioKey", "SendgridAccount", "SendgridKey", "StripeAccount", "StripeKey", "SlackAccount", "SlackKey", "GcpProject", "GcpKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.StandardClaims), global::Api.StandardClaims.Parser, new[]{ "Access", "Audience", "Subject", "ExpiresAt", "Id", "IssuedAt", "NotBefore" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.LogConfig), global::Api.LogConfig.Parser, new[]{ "Username", "Channel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.EmailAddress), global::Api.EmailAddress.Parser, new[]{ "Name", "Address" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Email), global::Api.Email.Parser, new[]{ "From", "Recipient" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.RecipientEmail), global::Api.RecipientEmail.Parser, new[]{ "To", "Subject", "PlainText", "Html" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.SMS), global::Api.SMS.Parser, new[]{ "To", "From", "Body", "MediaUrl", "Callback", "App" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Call), global::Api.Call.Parser, new[]{ "To", "From", "Callback" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Fax), global::Api.Fax.Parser, new[]{ "To", "From", "MediaUrl", "Quality", "Callback", "StoreMedia" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.SlashCommand), global::Api.SlashCommand.Parser, new[]{ "Token", "TeamId", "TeamDomain", "EnterpriseId", "EnterpriseName", "ChannelId", "ChannelName", "UserId", "UserName", "Command", "Text", "ResponseUrl", "TriggerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.LogHook), global::Api.LogHook.Parser, new[]{ "Author", "Icon", "Title" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Attachment), global::Api.Attachment.Parser, new[]{ "Color", "Fallback", "CallbackId", "Id", "AuthorId", "AuthorName", "AuthorLink", "AuthorIcon", "Title", "TitlePrefix", "Pretext", "Text", "ImageUrl", "ThumbUrl", "Fields" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.AttachmentAction), global::Api.AttachmentAction.Parser, new[]{ "Name", "Text", "Style", "Type", "Value", "DataSource", "MinQueryLength", "Options", "SelectedOptions", "OptionGroups", "Confirm", "Url" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.AttachmentConfirmationField), global::Api.AttachmentConfirmationField.Parser, new[]{ "Title", "Text", "OkText", "DismissText" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.AttachmentActionOptionGroup), global::Api.AttachmentActionOptionGroup.Parser, new[]{ "Text", "Options" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.AttachmentActionOption), global::Api.AttachmentActionOption.Parser, new[]{ "Title", "Value", "Description" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.AttachmentField), global::Api.AttachmentField.Parser, new[]{ "Title", "Value", "Short" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.JSON), global::Api.JSON.Parser, new[]{ "Data", "Size" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.File), global::Api.File.Parser, new[]{ "Data", "Size", "Name", "Tags" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.SlackHook), global::Api.SlackHook.Parser, new[]{ "Username", "Channel" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.Product), global::Api.Product.Parser, new[]{ "Name", "Amount", "Description", "Files", "Tags", "Available" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Api.StringMapString), global::Api.StringMapString.Parser, new[]{ "Map" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Enums
  public enum CustomerIndex {
    [pbr::OriginalName("ID")] Id = 0,
    [pbr::OriginalName("EMAIL")] Email = 1,
    [pbr::OriginalName("PHONE")] Phone = 2,
  }

  public enum Claim {
    [pbr::OriginalName("TWILIO")] Twilio = 0,
    [pbr::OriginalName("SENDGRID")] Sendgrid = 1,
    [pbr::OriginalName("STRIPE")] Stripe = 2,
    [pbr::OriginalName("SLACK")] Slack = 3,
    [pbr::OriginalName("GCP")] Gcp = 4,
    [pbr::OriginalName("AUTOM8TER")] Autom8Ter = 5,
  }

  public enum SigningMethod {
    [pbr::OriginalName("HMAC")] Hmac = 0,
    [pbr::OriginalName("ECDSA")] Ecdsa = 1,
    [pbr::OriginalName("RSA")] Rsa = 2,
    [pbr::OriginalName("RSAPPS")] Rsapps = 3,
  }

  public enum CardType {
    [pbr::OriginalName("VISA")] Visa = 0,
    [pbr::OriginalName("MASTERCARD")] Mastercard = 1,
    [pbr::OriginalName("DISCOVER")] Discover = 2,
    [pbr::OriginalName("AMEX")] Amex = 3,
  }

  public enum Topic {
    [pbr::OriginalName("USER")] User = 0,
    [pbr::OriginalName("ACCOUNT")] Account = 1,
    [pbr::OriginalName("CUSTOMER")] Customer = 2,
    [pbr::OriginalName("OTHER")] Other = 3,
  }

  #endregion

  #region Messages
  public sealed partial class Id : pb::IMessage<Id> {
    private static readonly pb::MessageParser<Id> _parser = new pb::MessageParser<Id>(() => new Id());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Id> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Id() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Id(Id other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Id Clone() {
      return new Id(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int Id_FieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id_ {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Id);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Id other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id_ != other.Id_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id_.Length != 0) hash ^= Id_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Id other) {
      if (other == null) {
        return;
      }
      if (other.Id_.Length != 0) {
        Id_ = other.Id_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActionHookRequest : pb::IMessage<ActionHookRequest> {
    private static readonly pb::MessageParser<ActionHookRequest> _parser = new pb::MessageParser<ActionHookRequest>(() => new ActionHookRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActionHookRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionHookRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionHookRequest(ActionHookRequest other) : this() {
      attachment_ = other.attachment_ != null ? other.attachment_.Clone() : null;
      actions_ = other.actions_ != null ? other.actions_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionHookRequest Clone() {
      return new ActionHookRequest(this);
    }

    /// <summary>Field number for the "attachment" field.</summary>
    public const int AttachmentFieldNumber = 1;
    private global::Api.Attachment attachment_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Attachment Attachment {
      get { return attachment_; }
      set {
        attachment_ = value;
      }
    }

    /// <summary>Field number for the "actions" field.</summary>
    public const int ActionsFieldNumber = 2;
    private global::Api.AttachmentAction actions_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.AttachmentAction Actions {
      get { return actions_; }
      set {
        actions_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActionHookRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActionHookRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Attachment, other.Attachment)) return false;
      if (!object.Equals(Actions, other.Actions)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (attachment_ != null) hash ^= Attachment.GetHashCode();
      if (actions_ != null) hash ^= Actions.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (attachment_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Attachment);
      }
      if (actions_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Actions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (attachment_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Attachment);
      }
      if (actions_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Actions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActionHookRequest other) {
      if (other == null) {
        return;
      }
      if (other.attachment_ != null) {
        if (attachment_ == null) {
          attachment_ = new global::Api.Attachment();
        }
        Attachment.MergeFrom(other.Attachment);
      }
      if (other.actions_ != null) {
        if (actions_ == null) {
          actions_ = new global::Api.AttachmentAction();
        }
        Actions.MergeFrom(other.Actions);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (attachment_ == null) {
              attachment_ = new global::Api.Attachment();
            }
            input.ReadMessage(attachment_);
            break;
          }
          case 18: {
            if (actions_ == null) {
              actions_ = new global::Api.AttachmentAction();
            }
            input.ReadMessage(actions_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class MessageUserRequest : pb::IMessage<MessageUserRequest> {
    private static readonly pb::MessageParser<MessageUserRequest> _parser = new pb::MessageParser<MessageUserRequest>(() => new MessageUserRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MessageUserRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageUserRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageUserRequest(MessageUserRequest other) : this() {
      id_ = other.id_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MessageUserRequest Clone() {
      return new MessageUserRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MessageUserRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MessageUserRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MessageUserRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RefundRequest : pb::IMessage<RefundRequest> {
    private static readonly pb::MessageParser<RefundRequest> _parser = new pb::MessageParser<RefundRequest>(() => new RefundRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RefundRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefundRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefundRequest(RefundRequest other) : this() {
      id_ = other.id_;
      reason_ = other.reason_;
      amount_ = other.amount_;
      reverseTransfer_ = other.reverseTransfer_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RefundRequest Clone() {
      return new RefundRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 2;
    private string reason_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Reason {
      get { return reason_; }
      set {
        reason_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 3;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "reverse_transfer" field.</summary>
    public const int ReverseTransferFieldNumber = 4;
    private bool reverseTransfer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool ReverseTransfer {
      get { return reverseTransfer_; }
      set {
        reverseTransfer_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private string status_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RefundRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RefundRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Reason != other.Reason) return false;
      if (Amount != other.Amount) return false;
      if (ReverseTransfer != other.ReverseTransfer) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Reason.Length != 0) hash ^= Reason.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (ReverseTransfer != false) hash ^= ReverseTransfer.GetHashCode();
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Reason.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Reason);
      }
      if (Amount != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Amount);
      }
      if (ReverseTransfer != false) {
        output.WriteRawTag(32);
        output.WriteBool(ReverseTransfer);
      }
      if (Status.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Reason.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Reason);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (ReverseTransfer != false) {
        size += 1 + 1;
      }
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RefundRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Reason.Length != 0) {
        Reason = other.Reason;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.ReverseTransfer != false) {
        ReverseTransfer = other.ReverseTransfer;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Reason = input.ReadString();
            break;
          }
          case 24: {
            Amount = input.ReadInt64();
            break;
          }
          case 32: {
            ReverseTransfer = input.ReadBool();
            break;
          }
          case 42: {
            Status = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChargeRequest : pb::IMessage<ChargeRequest> {
    private static readonly pb::MessageParser<ChargeRequest> _parser = new pb::MessageParser<ChargeRequest>(() => new ChargeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChargeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChargeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChargeRequest(ChargeRequest other) : this() {
      product_ = other.product_ != null ? other.product_.Clone() : null;
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChargeRequest Clone() {
      return new ChargeRequest(this);
    }

    /// <summary>Field number for the "product" field.</summary>
    public const int ProductFieldNumber = 1;
    private global::Api.Product product_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Product Product {
      get { return product_; }
      set {
        product_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 2;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChargeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChargeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Product, other.Product)) return false;
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (product_ != null) hash ^= Product.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (product_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Product);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (product_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Product);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChargeRequest other) {
      if (other == null) {
        return;
      }
      if (other.product_ != null) {
        if (product_ == null) {
          product_ = new global::Api.Product();
        }
        Product.MergeFrom(other.Product);
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (product_ == null) {
              product_ = new global::Api.Product();
            }
            input.ReadMessage(product_);
            break;
          }
          case 18: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CancelSubscriptionRequest : pb::IMessage<CancelSubscriptionRequest> {
    private static readonly pb::MessageParser<CancelSubscriptionRequest> _parser = new pb::MessageParser<CancelSubscriptionRequest>(() => new CancelSubscriptionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CancelSubscriptionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelSubscriptionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelSubscriptionRequest(CancelSubscriptionRequest other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CancelSubscriptionRequest Clone() {
      return new CancelSubscriptionRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CancelSubscriptionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CancelSubscriptionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CancelSubscriptionRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreatePlanRequest : pb::IMessage<CreatePlanRequest> {
    private static readonly pb::MessageParser<CreatePlanRequest> _parser = new pb::MessageParser<CreatePlanRequest>(() => new CreatePlanRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreatePlanRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlanRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlanRequest(CreatePlanRequest other) : this() {
      planId_ = other.planId_;
      amount_ = other.amount_;
      serviceId_ = other.serviceId_;
      serviceName_ = other.serviceName_;
      friendlyName_ = other.friendlyName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreatePlanRequest Clone() {
      return new CreatePlanRequest(this);
    }

    /// <summary>Field number for the "plan_id" field.</summary>
    public const int PlanIdFieldNumber = 1;
    private string planId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlanId {
      get { return planId_; }
      set {
        planId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "service_id" field.</summary>
    public const int ServiceIdFieldNumber = 3;
    private string serviceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceId {
      get { return serviceId_; }
      set {
        serviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_name" field.</summary>
    public const int ServiceNameFieldNumber = 4;
    private string serviceName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceName {
      get { return serviceName_; }
      set {
        serviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "friendly_name" field.</summary>
    public const int FriendlyNameFieldNumber = 5;
    private string friendlyName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FriendlyName {
      get { return friendlyName_; }
      set {
        friendlyName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreatePlanRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreatePlanRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlanId != other.PlanId) return false;
      if (Amount != other.Amount) return false;
      if (ServiceId != other.ServiceId) return false;
      if (ServiceName != other.ServiceName) return false;
      if (FriendlyName != other.FriendlyName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlanId.Length != 0) hash ^= PlanId.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (ServiceId.Length != 0) hash ^= ServiceId.GetHashCode();
      if (ServiceName.Length != 0) hash ^= ServiceName.GetHashCode();
      if (FriendlyName.Length != 0) hash ^= FriendlyName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlanId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(PlanId);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (ServiceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServiceId);
      }
      if (ServiceName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ServiceName);
      }
      if (FriendlyName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FriendlyName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlanId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlanId);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (ServiceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceId);
      }
      if (ServiceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceName);
      }
      if (FriendlyName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FriendlyName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreatePlanRequest other) {
      if (other == null) {
        return;
      }
      if (other.PlanId.Length != 0) {
        PlanId = other.PlanId;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.ServiceId.Length != 0) {
        ServiceId = other.ServiceId;
      }
      if (other.ServiceName.Length != 0) {
        ServiceName = other.ServiceName;
      }
      if (other.FriendlyName.Length != 0) {
        FriendlyName = other.FriendlyName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            PlanId = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 26: {
            ServiceId = input.ReadString();
            break;
          }
          case 34: {
            ServiceName = input.ReadString();
            break;
          }
          case 42: {
            FriendlyName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SMSRequest : pb::IMessage<SMSRequest> {
    private static readonly pb::MessageParser<SMSRequest> _parser = new pb::MessageParser<SMSRequest>(() => new SMSRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SMSRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SMSRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SMSRequest(SMSRequest other) : this() {
      id_ = other.id_;
      body_ = other.body_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SMSRequest Clone() {
      return new SMSRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 2;
    private string body_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SMSRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SMSRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Body != other.Body) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Body);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Body);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SMSRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Body = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CallRequest : pb::IMessage<CallRequest> {
    private static readonly pb::MessageParser<CallRequest> _parser = new pb::MessageParser<CallRequest>(() => new CallRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CallRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallRequest(CallRequest other) : this() {
      id_ = other.id_;
      callbackUrl_ = other.callbackUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CallRequest Clone() {
      return new CallRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "callback_url" field.</summary>
    public const int CallbackUrlFieldNumber = 2;
    private string callbackUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CallbackUrl {
      get { return callbackUrl_; }
      set {
        callbackUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CallRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CallRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (CallbackUrl != other.CallbackUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (CallbackUrl.Length != 0) hash ^= CallbackUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (CallbackUrl.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(CallbackUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (CallbackUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CallbackUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CallRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.CallbackUrl.Length != 0) {
        CallbackUrl = other.CallbackUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            CallbackUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MMSRequest : pb::IMessage<MMSRequest> {
    private static readonly pb::MessageParser<MMSRequest> _parser = new pb::MessageParser<MMSRequest>(() => new MMSRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MMSRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MMSRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MMSRequest(MMSRequest other) : this() {
      sms_ = other.sms_ != null ? other.sms_.Clone() : null;
      mediaUrl_ = other.mediaUrl_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MMSRequest Clone() {
      return new MMSRequest(this);
    }

    /// <summary>Field number for the "sms" field.</summary>
    public const int SmsFieldNumber = 1;
    private global::Api.SMSRequest sms_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.SMSRequest Sms {
      get { return sms_; }
      set {
        sms_ = value;
      }
    }

    /// <summary>Field number for the "media_url" field.</summary>
    public const int MediaUrlFieldNumber = 3;
    private string mediaUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MediaUrl {
      get { return mediaUrl_; }
      set {
        mediaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MMSRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MMSRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Sms, other.Sms)) return false;
      if (MediaUrl != other.MediaUrl) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sms_ != null) hash ^= Sms.GetHashCode();
      if (MediaUrl.Length != 0) hash ^= MediaUrl.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sms_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Sms);
      }
      if (MediaUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MediaUrl);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sms_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Sms);
      }
      if (MediaUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MediaUrl);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MMSRequest other) {
      if (other == null) {
        return;
      }
      if (other.sms_ != null) {
        if (sms_ == null) {
          sms_ = new global::Api.SMSRequest();
        }
        Sms.MergeFrom(other.Sms);
      }
      if (other.MediaUrl.Length != 0) {
        MediaUrl = other.MediaUrl;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (sms_ == null) {
              sms_ = new global::Api.SMSRequest();
            }
            input.ReadMessage(sms_);
            break;
          }
          case 26: {
            MediaUrl = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EmailRequest : pb::IMessage<EmailRequest> {
    private static readonly pb::MessageParser<EmailRequest> _parser = new pb::MessageParser<EmailRequest>(() => new EmailRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmailRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailRequest(EmailRequest other) : this() {
      id_ = other.id_;
      subject_ = other.subject_;
      plainText_ = other.plainText_;
      htmlAlt_ = other.htmlAlt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailRequest Clone() {
      return new EmailRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 2;
    private string subject_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subject {
      get { return subject_; }
      set {
        subject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plain_text" field.</summary>
    public const int PlainTextFieldNumber = 3;
    private string plainText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlainText {
      get { return plainText_; }
      set {
        plainText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "html_alt" field.</summary>
    public const int HtmlAltFieldNumber = 4;
    private string htmlAlt_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HtmlAlt {
      get { return htmlAlt_; }
      set {
        htmlAlt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmailRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmailRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Subject != other.Subject) return false;
      if (PlainText != other.PlainText) return false;
      if (HtmlAlt != other.HtmlAlt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Subject.Length != 0) hash ^= Subject.GetHashCode();
      if (PlainText.Length != 0) hash ^= PlainText.GetHashCode();
      if (HtmlAlt.Length != 0) hash ^= HtmlAlt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Subject.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Subject);
      }
      if (PlainText.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PlainText);
      }
      if (HtmlAlt.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(HtmlAlt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Subject.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
      }
      if (PlainText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlainText);
      }
      if (HtmlAlt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HtmlAlt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmailRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Subject.Length != 0) {
        Subject = other.Subject;
      }
      if (other.PlainText.Length != 0) {
        PlainText = other.PlainText;
      }
      if (other.HtmlAlt.Length != 0) {
        HtmlAlt = other.HtmlAlt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Subject = input.ReadString();
            break;
          }
          case 26: {
            PlainText = input.ReadString();
            break;
          }
          case 34: {
            HtmlAlt = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CustomerRequest : pb::IMessage<CustomerRequest> {
    private static readonly pb::MessageParser<CustomerRequest> _parser = new pb::MessageParser<CustomerRequest>(() => new CustomerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerRequest(CustomerRequest other) : this() {
      email_ = other.email_;
      plan_ = other.plan_;
      phone_ = other.phone_;
      name_ = other.name_;
      description_ = other.description_;
      address_ = other.address_ != null ? other.address_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomerRequest Clone() {
      return new CustomerRequest(this);
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 1;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plan" field.</summary>
    public const int PlanFieldNumber = 2;
    private string plan_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Plan {
      get { return plan_; }
      set {
        plan_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phone" field.</summary>
    public const int PhoneFieldNumber = 3;
    private string phone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phone {
      get { return phone_; }
      set {
        phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 7;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 8;
    private global::Api.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Email != other.Email) return false;
      if (Plan != other.Plan) return false;
      if (Phone != other.Phone) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!object.Equals(Address, other.Address)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Plan.Length != 0) hash ^= Plan.GetHashCode();
      if (Phone.Length != 0) hash ^= Phone.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Email.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Email);
      }
      if (Plan.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Plan);
      }
      if (Phone.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Phone);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Description);
      }
      if (address_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Plan.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Plan);
      }
      if (Phone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomerRequest other) {
      if (other == null) {
        return;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Plan.Length != 0) {
        Plan = other.Plan;
      }
      if (other.Phone.Length != 0) {
        Phone = other.Phone;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          address_ = new global::Api.Address();
        }
        Address.MergeFrom(other.Address);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Email = input.ReadString();
            break;
          }
          case 18: {
            Plan = input.ReadString();
            break;
          }
          case 26: {
            Phone = input.ReadString();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 58: {
            Description = input.ReadString();
            break;
          }
          case 66: {
            if (address_ == null) {
              address_ = new global::Api.Address();
            }
            input.ReadMessage(address_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateCustomerRequest : pb::IMessage<UpdateCustomerRequest> {
    private static readonly pb::MessageParser<UpdateCustomerRequest> _parser = new pb::MessageParser<UpdateCustomerRequest>(() => new UpdateCustomerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateCustomerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCustomerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCustomerRequest(UpdateCustomerRequest other) : this() {
      id_ = other.id_;
      customer_ = other.customer_ != null ? other.customer_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateCustomerRequest Clone() {
      return new UpdateCustomerRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "customer" field.</summary>
    public const int CustomerFieldNumber = 2;
    private global::Api.CustomerRequest customer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.CustomerRequest Customer {
      get { return customer_; }
      set {
        customer_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateCustomerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateCustomerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Customer, other.Customer)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (customer_ != null) hash ^= Customer.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (customer_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Customer);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (customer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Customer);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateCustomerRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.customer_ != null) {
        if (customer_ == null) {
          customer_ = new global::Api.CustomerRequest();
        }
        Customer.MergeFrom(other.Customer);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            if (customer_ == null) {
              customer_ = new global::Api.CustomerRequest();
            }
            input.ReadMessage(customer_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeCustomerRequest : pb::IMessage<SubscribeCustomerRequest> {
    private static readonly pb::MessageParser<SubscribeCustomerRequest> _parser = new pb::MessageParser<SubscribeCustomerRequest>(() => new SubscribeCustomerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeCustomerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeCustomerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeCustomerRequest(SubscribeCustomerRequest other) : this() {
      id_ = other.id_;
      plan_ = other.plan_;
      cardNumber_ = other.cardNumber_;
      expMonth_ = other.expMonth_;
      expYear_ = other.expYear_;
      cvc_ = other.cvc_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeCustomerRequest Clone() {
      return new SubscribeCustomerRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plan" field.</summary>
    public const int PlanFieldNumber = 2;
    private string plan_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Plan {
      get { return plan_; }
      set {
        plan_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "card_number" field.</summary>
    public const int CardNumberFieldNumber = 3;
    private string cardNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardNumber {
      get { return cardNumber_; }
      set {
        cardNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exp_month" field.</summary>
    public const int ExpMonthFieldNumber = 4;
    private string expMonth_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpMonth {
      get { return expMonth_; }
      set {
        expMonth_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exp_year" field.</summary>
    public const int ExpYearFieldNumber = 5;
    private string expYear_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpYear {
      get { return expYear_; }
      set {
        expYear_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cvc" field.</summary>
    public const int CvcFieldNumber = 6;
    private string cvc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cvc {
      get { return cvc_; }
      set {
        cvc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeCustomerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeCustomerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Plan != other.Plan) return false;
      if (CardNumber != other.CardNumber) return false;
      if (ExpMonth != other.ExpMonth) return false;
      if (ExpYear != other.ExpYear) return false;
      if (Cvc != other.Cvc) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Plan.Length != 0) hash ^= Plan.GetHashCode();
      if (CardNumber.Length != 0) hash ^= CardNumber.GetHashCode();
      if (ExpMonth.Length != 0) hash ^= ExpMonth.GetHashCode();
      if (ExpYear.Length != 0) hash ^= ExpYear.GetHashCode();
      if (Cvc.Length != 0) hash ^= Cvc.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Plan.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Plan);
      }
      if (CardNumber.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CardNumber);
      }
      if (ExpMonth.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ExpMonth);
      }
      if (ExpYear.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ExpYear);
      }
      if (Cvc.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Cvc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Plan.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Plan);
      }
      if (CardNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CardNumber);
      }
      if (ExpMonth.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpMonth);
      }
      if (ExpYear.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpYear);
      }
      if (Cvc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cvc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeCustomerRequest other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Plan.Length != 0) {
        Plan = other.Plan;
      }
      if (other.CardNumber.Length != 0) {
        CardNumber = other.CardNumber;
      }
      if (other.ExpMonth.Length != 0) {
        ExpMonth = other.ExpMonth;
      }
      if (other.ExpYear.Length != 0) {
        ExpYear = other.ExpYear;
      }
      if (other.Cvc.Length != 0) {
        Cvc = other.Cvc;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Plan = input.ReadString();
            break;
          }
          case 26: {
            CardNumber = input.ReadString();
            break;
          }
          case 34: {
            ExpMonth = input.ReadString();
            break;
          }
          case 42: {
            ExpYear = input.ReadString();
            break;
          }
          case 50: {
            Cvc = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateAccountRequest : pb::IMessage<CreateAccountRequest> {
    private static readonly pb::MessageParser<CreateAccountRequest> _parser = new pb::MessageParser<CreateAccountRequest>(() => new CreateAccountRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateAccountRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAccountRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAccountRequest(CreateAccountRequest other) : this() {
      customer_ = other.customer_ != null ? other.customer_.Clone() : null;
      access_ = other.access_ != null ? other.access_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateAccountRequest Clone() {
      return new CreateAccountRequest(this);
    }

    /// <summary>Field number for the "customer" field.</summary>
    public const int CustomerFieldNumber = 1;
    private global::Api.CustomerRequest customer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.CustomerRequest Customer {
      get { return customer_; }
      set {
        customer_ = value;
      }
    }

    /// <summary>Field number for the "access" field.</summary>
    public const int AccessFieldNumber = 2;
    private global::Api.Access access_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Access Access {
      get { return access_; }
      set {
        access_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateAccountRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateAccountRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Customer, other.Customer)) return false;
      if (!object.Equals(Access, other.Access)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (customer_ != null) hash ^= Customer.GetHashCode();
      if (access_ != null) hash ^= Access.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (customer_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Customer);
      }
      if (access_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Access);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (customer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Customer);
      }
      if (access_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Access);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateAccountRequest other) {
      if (other == null) {
        return;
      }
      if (other.customer_ != null) {
        if (customer_ == null) {
          customer_ = new global::Api.CustomerRequest();
        }
        Customer.MergeFrom(other.Customer);
      }
      if (other.access_ != null) {
        if (access_ == null) {
          access_ = new global::Api.Access();
        }
        Access.MergeFrom(other.Access);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (customer_ == null) {
              customer_ = new global::Api.CustomerRequest();
            }
            input.ReadMessage(customer_);
            break;
          }
          case 18: {
            if (access_ == null) {
              access_ = new global::Api.Access();
            }
            input.ReadMessage(access_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Account : pb::IMessage<Account> {
    private static readonly pb::MessageParser<Account> _parser = new pb::MessageParser<Account>(() => new Account());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Account> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account(Account other) : this() {
      customer_ = other.customer_ != null ? other.customer_.Clone() : null;
      access_ = other.access_ != null ? other.access_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account Clone() {
      return new Account(this);
    }

    /// <summary>Field number for the "customer" field.</summary>
    public const int CustomerFieldNumber = 1;
    private global::Api.Customer customer_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Customer Customer {
      get { return customer_; }
      set {
        customer_ = value;
      }
    }

    /// <summary>Field number for the "access" field.</summary>
    public const int AccessFieldNumber = 2;
    private global::Api.Access access_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Access Access {
      get { return access_; }
      set {
        access_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Account);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Account other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Customer, other.Customer)) return false;
      if (!object.Equals(Access, other.Access)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (customer_ != null) hash ^= Customer.GetHashCode();
      if (access_ != null) hash ^= Access.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (customer_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Customer);
      }
      if (access_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Access);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (customer_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Customer);
      }
      if (access_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Access);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Account other) {
      if (other == null) {
        return;
      }
      if (other.customer_ != null) {
        if (customer_ == null) {
          customer_ = new global::Api.Customer();
        }
        Customer.MergeFrom(other.Customer);
      }
      if (other.access_ != null) {
        if (access_ == null) {
          access_ = new global::Api.Access();
        }
        Access.MergeFrom(other.Access);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (customer_ == null) {
              customer_ = new global::Api.Customer();
            }
            input.ReadMessage(customer_);
            break;
          }
          case 18: {
            if (access_ == null) {
              access_ = new global::Api.Access();
            }
            input.ReadMessage(access_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class User : pb::IMessage<User> {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      id_ = other.id_;
      teamId_ = other.teamId_;
      name_ = other.name_;
      phone_ = other.phone_;
      profile_ = other.profile_ != null ? other.profile_.Clone() : null;
      deleted_ = other.deleted_;
      admin_ = other.admin_;
      ownder_ = other.ownder_;
      primaryOwner_ = other.primaryOwner_;
      restricted_ = other.restricted_;
      ultraRestricted_ = other.ultraRestricted_;
      stranger_ = other.stranger_;
      bot_ = other.bot_;
      has2Fa_ = other.has2Fa_;
      locale_ = other.locale_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int TeamIdFieldNumber = 2;
    private string teamId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TeamId {
      get { return teamId_; }
      set {
        teamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phone" field.</summary>
    public const int PhoneFieldNumber = 4;
    private string phone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phone {
      get { return phone_; }
      set {
        phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "profile" field.</summary>
    public const int ProfileFieldNumber = 5;
    private global::Api.Profile profile_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Profile Profile {
      get { return profile_; }
      set {
        profile_ = value;
      }
    }

    /// <summary>Field number for the "deleted" field.</summary>
    public const int DeletedFieldNumber = 6;
    private bool deleted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Deleted {
      get { return deleted_; }
      set {
        deleted_ = value;
      }
    }

    /// <summary>Field number for the "admin" field.</summary>
    public const int AdminFieldNumber = 7;
    private bool admin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Admin {
      get { return admin_; }
      set {
        admin_ = value;
      }
    }

    /// <summary>Field number for the "ownder" field.</summary>
    public const int OwnderFieldNumber = 8;
    private bool ownder_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Ownder {
      get { return ownder_; }
      set {
        ownder_ = value;
      }
    }

    /// <summary>Field number for the "primary_owner" field.</summary>
    public const int PrimaryOwnerFieldNumber = 9;
    private bool primaryOwner_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PrimaryOwner {
      get { return primaryOwner_; }
      set {
        primaryOwner_ = value;
      }
    }

    /// <summary>Field number for the "restricted" field.</summary>
    public const int RestrictedFieldNumber = 10;
    private bool restricted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Restricted {
      get { return restricted_; }
      set {
        restricted_ = value;
      }
    }

    /// <summary>Field number for the "ultra_restricted" field.</summary>
    public const int UltraRestrictedFieldNumber = 11;
    private bool ultraRestricted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UltraRestricted {
      get { return ultraRestricted_; }
      set {
        ultraRestricted_ = value;
      }
    }

    /// <summary>Field number for the "stranger" field.</summary>
    public const int StrangerFieldNumber = 12;
    private bool stranger_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Stranger {
      get { return stranger_; }
      set {
        stranger_ = value;
      }
    }

    /// <summary>Field number for the "bot" field.</summary>
    public const int BotFieldNumber = 13;
    private bool bot_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Bot {
      get { return bot_; }
      set {
        bot_ = value;
      }
    }

    /// <summary>Field number for the "has2fa" field.</summary>
    public const int Has2FaFieldNumber = 14;
    private bool has2Fa_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Has2Fa {
      get { return has2Fa_; }
      set {
        has2Fa_ = value;
      }
    }

    /// <summary>Field number for the "locale" field.</summary>
    public const int LocaleFieldNumber = 15;
    private string locale_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Locale {
      get { return locale_; }
      set {
        locale_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (TeamId != other.TeamId) return false;
      if (Name != other.Name) return false;
      if (Phone != other.Phone) return false;
      if (!object.Equals(Profile, other.Profile)) return false;
      if (Deleted != other.Deleted) return false;
      if (Admin != other.Admin) return false;
      if (Ownder != other.Ownder) return false;
      if (PrimaryOwner != other.PrimaryOwner) return false;
      if (Restricted != other.Restricted) return false;
      if (UltraRestricted != other.UltraRestricted) return false;
      if (Stranger != other.Stranger) return false;
      if (Bot != other.Bot) return false;
      if (Has2Fa != other.Has2Fa) return false;
      if (Locale != other.Locale) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (TeamId.Length != 0) hash ^= TeamId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Phone.Length != 0) hash ^= Phone.GetHashCode();
      if (profile_ != null) hash ^= Profile.GetHashCode();
      if (Deleted != false) hash ^= Deleted.GetHashCode();
      if (Admin != false) hash ^= Admin.GetHashCode();
      if (Ownder != false) hash ^= Ownder.GetHashCode();
      if (PrimaryOwner != false) hash ^= PrimaryOwner.GetHashCode();
      if (Restricted != false) hash ^= Restricted.GetHashCode();
      if (UltraRestricted != false) hash ^= UltraRestricted.GetHashCode();
      if (Stranger != false) hash ^= Stranger.GetHashCode();
      if (Bot != false) hash ^= Bot.GetHashCode();
      if (Has2Fa != false) hash ^= Has2Fa.GetHashCode();
      if (Locale.Length != 0) hash ^= Locale.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (TeamId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TeamId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Phone.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Phone);
      }
      if (profile_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Profile);
      }
      if (Deleted != false) {
        output.WriteRawTag(48);
        output.WriteBool(Deleted);
      }
      if (Admin != false) {
        output.WriteRawTag(56);
        output.WriteBool(Admin);
      }
      if (Ownder != false) {
        output.WriteRawTag(64);
        output.WriteBool(Ownder);
      }
      if (PrimaryOwner != false) {
        output.WriteRawTag(72);
        output.WriteBool(PrimaryOwner);
      }
      if (Restricted != false) {
        output.WriteRawTag(80);
        output.WriteBool(Restricted);
      }
      if (UltraRestricted != false) {
        output.WriteRawTag(88);
        output.WriteBool(UltraRestricted);
      }
      if (Stranger != false) {
        output.WriteRawTag(96);
        output.WriteBool(Stranger);
      }
      if (Bot != false) {
        output.WriteRawTag(104);
        output.WriteBool(Bot);
      }
      if (Has2Fa != false) {
        output.WriteRawTag(112);
        output.WriteBool(Has2Fa);
      }
      if (Locale.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Locale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (TeamId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Phone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
      }
      if (profile_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Profile);
      }
      if (Deleted != false) {
        size += 1 + 1;
      }
      if (Admin != false) {
        size += 1 + 1;
      }
      if (Ownder != false) {
        size += 1 + 1;
      }
      if (PrimaryOwner != false) {
        size += 1 + 1;
      }
      if (Restricted != false) {
        size += 1 + 1;
      }
      if (UltraRestricted != false) {
        size += 1 + 1;
      }
      if (Stranger != false) {
        size += 1 + 1;
      }
      if (Bot != false) {
        size += 1 + 1;
      }
      if (Has2Fa != false) {
        size += 1 + 1;
      }
      if (Locale.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Locale);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.TeamId.Length != 0) {
        TeamId = other.TeamId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Phone.Length != 0) {
        Phone = other.Phone;
      }
      if (other.profile_ != null) {
        if (profile_ == null) {
          profile_ = new global::Api.Profile();
        }
        Profile.MergeFrom(other.Profile);
      }
      if (other.Deleted != false) {
        Deleted = other.Deleted;
      }
      if (other.Admin != false) {
        Admin = other.Admin;
      }
      if (other.Ownder != false) {
        Ownder = other.Ownder;
      }
      if (other.PrimaryOwner != false) {
        PrimaryOwner = other.PrimaryOwner;
      }
      if (other.Restricted != false) {
        Restricted = other.Restricted;
      }
      if (other.UltraRestricted != false) {
        UltraRestricted = other.UltraRestricted;
      }
      if (other.Stranger != false) {
        Stranger = other.Stranger;
      }
      if (other.Bot != false) {
        Bot = other.Bot;
      }
      if (other.Has2Fa != false) {
        Has2Fa = other.Has2Fa;
      }
      if (other.Locale.Length != 0) {
        Locale = other.Locale;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            TeamId = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Phone = input.ReadString();
            break;
          }
          case 42: {
            if (profile_ == null) {
              profile_ = new global::Api.Profile();
            }
            input.ReadMessage(profile_);
            break;
          }
          case 48: {
            Deleted = input.ReadBool();
            break;
          }
          case 56: {
            Admin = input.ReadBool();
            break;
          }
          case 64: {
            Ownder = input.ReadBool();
            break;
          }
          case 72: {
            PrimaryOwner = input.ReadBool();
            break;
          }
          case 80: {
            Restricted = input.ReadBool();
            break;
          }
          case 88: {
            UltraRestricted = input.ReadBool();
            break;
          }
          case 96: {
            Stranger = input.ReadBool();
            break;
          }
          case 104: {
            Bot = input.ReadBool();
            break;
          }
          case 112: {
            Has2Fa = input.ReadBool();
            break;
          }
          case 122: {
            Locale = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Profile : pb::IMessage<Profile> {
    private static readonly pb::MessageParser<Profile> _parser = new pb::MessageParser<Profile>(() => new Profile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Profile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Profile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Profile(Profile other) : this() {
      avatarHash_ = other.avatarHash_;
      status_ = other.status_;
      statusEmoji_ = other.statusEmoji_;
      displayName_ = other.displayName_;
      name_ = other.name_;
      email_ = other.email_;
      imageUrls_ = other.imageUrls_.Clone();
      team_ = other.team_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Profile Clone() {
      return new Profile(this);
    }

    /// <summary>Field number for the "avatar_hash" field.</summary>
    public const int AvatarHashFieldNumber = 1;
    private string avatarHash_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AvatarHash {
      get { return avatarHash_; }
      set {
        avatarHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private string status_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Status {
      get { return status_; }
      set {
        status_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status_emoji" field.</summary>
    public const int StatusEmojiFieldNumber = 3;
    private string statusEmoji_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StatusEmoji {
      get { return statusEmoji_; }
      set {
        statusEmoji_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "display_name" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 5;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 6;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image_urls" field.</summary>
    public const int ImageUrlsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_imageUrls_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> imageUrls_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ImageUrls {
      get { return imageUrls_; }
    }

    /// <summary>Field number for the "team" field.</summary>
    public const int TeamFieldNumber = 8;
    private string team_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Team {
      get { return team_; }
      set {
        team_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Profile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Profile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AvatarHash != other.AvatarHash) return false;
      if (Status != other.Status) return false;
      if (StatusEmoji != other.StatusEmoji) return false;
      if (DisplayName != other.DisplayName) return false;
      if (Name != other.Name) return false;
      if (Email != other.Email) return false;
      if(!imageUrls_.Equals(other.imageUrls_)) return false;
      if (Team != other.Team) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AvatarHash.Length != 0) hash ^= AvatarHash.GetHashCode();
      if (Status.Length != 0) hash ^= Status.GetHashCode();
      if (StatusEmoji.Length != 0) hash ^= StatusEmoji.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      hash ^= imageUrls_.GetHashCode();
      if (Team.Length != 0) hash ^= Team.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AvatarHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AvatarHash);
      }
      if (Status.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Status);
      }
      if (StatusEmoji.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StatusEmoji);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayName);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Name);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Email);
      }
      imageUrls_.WriteTo(output, _repeated_imageUrls_codec);
      if (Team.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Team);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AvatarHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AvatarHash);
      }
      if (Status.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Status);
      }
      if (StatusEmoji.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StatusEmoji);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      size += imageUrls_.CalculateSize(_repeated_imageUrls_codec);
      if (Team.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Team);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Profile other) {
      if (other == null) {
        return;
      }
      if (other.AvatarHash.Length != 0) {
        AvatarHash = other.AvatarHash;
      }
      if (other.Status.Length != 0) {
        Status = other.Status;
      }
      if (other.StatusEmoji.Length != 0) {
        StatusEmoji = other.StatusEmoji;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      imageUrls_.Add(other.imageUrls_);
      if (other.Team.Length != 0) {
        Team = other.Team;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AvatarHash = input.ReadString();
            break;
          }
          case 18: {
            Status = input.ReadString();
            break;
          }
          case 26: {
            StatusEmoji = input.ReadString();
            break;
          }
          case 34: {
            DisplayName = input.ReadString();
            break;
          }
          case 42: {
            Name = input.ReadString();
            break;
          }
          case 50: {
            Email = input.ReadString();
            break;
          }
          case 58: {
            imageUrls_.AddEntriesFrom(input, _repeated_imageUrls_codec);
            break;
          }
          case 66: {
            Team = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Empty : pb::IMessage<Empty> {
    private static readonly pb::MessageParser<Empty> _parser = new pb::MessageParser<Empty>(() => new Empty());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Empty> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty(Empty other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Empty Clone() {
      return new Empty(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Empty);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Empty other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Empty other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// User is a user of the application
  /// </summary>
  public sealed partial class Customer : pb::IMessage<Customer> {
    private static readonly pb::MessageParser<Customer> _parser = new pb::MessageParser<Customer>(() => new Customer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Customer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Customer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Customer(Customer other) : this() {
      id_ = other.id_;
      plan_ = other.plan_;
      name_ = other.name_;
      email_ = other.email_;
      description_ = other.description_;
      phone_ = other.phone_;
      address_ = other.address_ != null ? other.address_.Clone() : null;
      metadata_ = other.metadata_.Clone();
      deleted_ = other.deleted_;
      createDate_ = other.createDate_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Customer Clone() {
      return new Customer(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plan" field.</summary>
    public const int PlanFieldNumber = 2;
    private string plan_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Plan {
      get { return plan_; }
      set {
        plan_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "email" field.</summary>
    public const int EmailFieldNumber = 4;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "phone" field.</summary>
    public const int PhoneFieldNumber = 6;
    private string phone_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Phone {
      get { return phone_; }
      set {
        phone_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 8;
    private global::Api.Address address_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Address Address {
      get { return address_; }
      set {
        address_ = value;
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 9;
    private static readonly pbc::MapField<string, string>.Codec _map_metadata_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 74);
    private readonly pbc::MapField<string, string> metadata_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Metadata {
      get { return metadata_; }
    }

    /// <summary>Field number for the "deleted" field.</summary>
    public const int DeletedFieldNumber = 10;
    private bool deleted_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Deleted {
      get { return deleted_; }
      set {
        deleted_ = value;
      }
    }

    /// <summary>Field number for the "create_date" field.</summary>
    public const int CreateDateFieldNumber = 20;
    private long createDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreateDate {
      get { return createDate_; }
      set {
        createDate_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Customer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Customer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Plan != other.Plan) return false;
      if (Name != other.Name) return false;
      if (Email != other.Email) return false;
      if (Description != other.Description) return false;
      if (Phone != other.Phone) return false;
      if (!object.Equals(Address, other.Address)) return false;
      if (!Metadata.Equals(other.Metadata)) return false;
      if (Deleted != other.Deleted) return false;
      if (CreateDate != other.CreateDate) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Plan.Length != 0) hash ^= Plan.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Phone.Length != 0) hash ^= Phone.GetHashCode();
      if (address_ != null) hash ^= Address.GetHashCode();
      hash ^= Metadata.GetHashCode();
      if (Deleted != false) hash ^= Deleted.GetHashCode();
      if (CreateDate != 0L) hash ^= CreateDate.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Plan.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Plan);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Email);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (Phone.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Phone);
      }
      if (address_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Address);
      }
      metadata_.WriteTo(output, _map_metadata_codec);
      if (Deleted != false) {
        output.WriteRawTag(80);
        output.WriteBool(Deleted);
      }
      if (CreateDate != 0L) {
        output.WriteRawTag(160, 1);
        output.WriteInt64(CreateDate);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Plan.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Plan);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Phone.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phone);
      }
      if (address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Address);
      }
      size += metadata_.CalculateSize(_map_metadata_codec);
      if (Deleted != false) {
        size += 1 + 1;
      }
      if (CreateDate != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(CreateDate);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Customer other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Plan.Length != 0) {
        Plan = other.Plan;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Phone.Length != 0) {
        Phone = other.Phone;
      }
      if (other.address_ != null) {
        if (address_ == null) {
          address_ = new global::Api.Address();
        }
        Address.MergeFrom(other.Address);
      }
      metadata_.Add(other.metadata_);
      if (other.Deleted != false) {
        Deleted = other.Deleted;
      }
      if (other.CreateDate != 0L) {
        CreateDate = other.CreateDate;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Plan = input.ReadString();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Email = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50: {
            Phone = input.ReadString();
            break;
          }
          case 66: {
            if (address_ == null) {
              address_ = new global::Api.Address();
            }
            input.ReadMessage(address_);
            break;
          }
          case 74: {
            metadata_.AddEntriesFrom(input, _map_metadata_codec);
            break;
          }
          case 80: {
            Deleted = input.ReadBool();
            break;
          }
          case 160: {
            CreateDate = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Card : pb::IMessage<Card> {
    private static readonly pb::MessageParser<Card> _parser = new pb::MessageParser<Card>(() => new Card());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Card> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Card() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Card(Card other) : this() {
      cardType_ = other.cardType_;
      cardNumber_ = other.cardNumber_;
      expMonth_ = other.expMonth_;
      expYear_ = other.expYear_;
      cvc_ = other.cvc_;
      debit_ = other.debit_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Card Clone() {
      return new Card(this);
    }

    /// <summary>Field number for the "card_type" field.</summary>
    public const int CardTypeFieldNumber = 1;
    private global::Api.CardType cardType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.CardType CardType {
      get { return cardType_; }
      set {
        cardType_ = value;
      }
    }

    /// <summary>Field number for the "card_number" field.</summary>
    public const int CardNumberFieldNumber = 3;
    private string cardNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CardNumber {
      get { return cardNumber_; }
      set {
        cardNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exp_month" field.</summary>
    public const int ExpMonthFieldNumber = 4;
    private string expMonth_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpMonth {
      get { return expMonth_; }
      set {
        expMonth_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exp_year" field.</summary>
    public const int ExpYearFieldNumber = 5;
    private string expYear_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ExpYear {
      get { return expYear_; }
      set {
        expYear_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cvc" field.</summary>
    public const int CvcFieldNumber = 6;
    private string cvc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cvc {
      get { return cvc_; }
      set {
        cvc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "debit" field.</summary>
    public const int DebitFieldNumber = 7;
    private bool debit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Debit {
      get { return debit_; }
      set {
        debit_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Card);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Card other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CardType != other.CardType) return false;
      if (CardNumber != other.CardNumber) return false;
      if (ExpMonth != other.ExpMonth) return false;
      if (ExpYear != other.ExpYear) return false;
      if (Cvc != other.Cvc) return false;
      if (Debit != other.Debit) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CardType != 0) hash ^= CardType.GetHashCode();
      if (CardNumber.Length != 0) hash ^= CardNumber.GetHashCode();
      if (ExpMonth.Length != 0) hash ^= ExpMonth.GetHashCode();
      if (ExpYear.Length != 0) hash ^= ExpYear.GetHashCode();
      if (Cvc.Length != 0) hash ^= Cvc.GetHashCode();
      if (Debit != false) hash ^= Debit.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CardType != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) CardType);
      }
      if (CardNumber.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CardNumber);
      }
      if (ExpMonth.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ExpMonth);
      }
      if (ExpYear.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ExpYear);
      }
      if (Cvc.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Cvc);
      }
      if (Debit != false) {
        output.WriteRawTag(56);
        output.WriteBool(Debit);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CardType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CardType);
      }
      if (CardNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CardNumber);
      }
      if (ExpMonth.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpMonth);
      }
      if (ExpYear.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ExpYear);
      }
      if (Cvc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cvc);
      }
      if (Debit != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Card other) {
      if (other == null) {
        return;
      }
      if (other.CardType != 0) {
        CardType = other.CardType;
      }
      if (other.CardNumber.Length != 0) {
        CardNumber = other.CardNumber;
      }
      if (other.ExpMonth.Length != 0) {
        ExpMonth = other.ExpMonth;
      }
      if (other.ExpYear.Length != 0) {
        ExpYear = other.ExpYear;
      }
      if (other.Cvc.Length != 0) {
        Cvc = other.Cvc;
      }
      if (other.Debit != false) {
        Debit = other.Debit;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            cardType_ = (global::Api.CardType) input.ReadEnum();
            break;
          }
          case 26: {
            CardNumber = input.ReadString();
            break;
          }
          case 34: {
            ExpMonth = input.ReadString();
            break;
          }
          case 42: {
            ExpYear = input.ReadString();
            break;
          }
          case 50: {
            Cvc = input.ReadString();
            break;
          }
          case 56: {
            Debit = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BankAccount : pb::IMessage<BankAccount> {
    private static readonly pb::MessageParser<BankAccount> _parser = new pb::MessageParser<BankAccount>(() => new BankAccount());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BankAccount> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankAccount() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankAccount(BankAccount other) : this() {
      accountNumber_ = other.accountNumber_;
      routingNumber_ = other.routingNumber_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BankAccount Clone() {
      return new BankAccount(this);
    }

    /// <summary>Field number for the "account_number" field.</summary>
    public const int AccountNumberFieldNumber = 1;
    private string accountNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccountNumber {
      get { return accountNumber_; }
      set {
        accountNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "routing_number" field.</summary>
    public const int RoutingNumberFieldNumber = 2;
    private string routingNumber_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoutingNumber {
      get { return routingNumber_; }
      set {
        routingNumber_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BankAccount);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BankAccount other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountNumber != other.AccountNumber) return false;
      if (RoutingNumber != other.RoutingNumber) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountNumber.Length != 0) hash ^= AccountNumber.GetHashCode();
      if (RoutingNumber.Length != 0) hash ^= RoutingNumber.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountNumber.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccountNumber);
      }
      if (RoutingNumber.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RoutingNumber);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccountNumber);
      }
      if (RoutingNumber.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoutingNumber);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BankAccount other) {
      if (other == null) {
        return;
      }
      if (other.AccountNumber.Length != 0) {
        AccountNumber = other.AccountNumber;
      }
      if (other.RoutingNumber.Length != 0) {
        RoutingNumber = other.RoutingNumber;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountNumber = input.ReadString();
            break;
          }
          case 18: {
            RoutingNumber = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Address : pb::IMessage<Address> {
    private static readonly pb::MessageParser<Address> _parser = new pb::MessageParser<Address>(() => new Address());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Address> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address(Address other) : this() {
      city_ = other.city_;
      country_ = other.country_;
      line1_ = other.line1_;
      line2_ = other.line2_;
      postalCode_ = other.postalCode_;
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Address Clone() {
      return new Address(this);
    }

    /// <summary>Field number for the "city" field.</summary>
    public const int CityFieldNumber = 1;
    private string city_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string City {
      get { return city_; }
      set {
        city_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "country" field.</summary>
    public const int CountryFieldNumber = 2;
    private string country_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Country {
      get { return country_; }
      set {
        country_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "line1" field.</summary>
    public const int Line1FieldNumber = 3;
    private string line1_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Line1 {
      get { return line1_; }
      set {
        line1_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "line2" field.</summary>
    public const int Line2FieldNumber = 4;
    private string line2_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Line2 {
      get { return line2_; }
      set {
        line2_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "postal_code" field.</summary>
    public const int PostalCodeFieldNumber = 5;
    private string postalCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PostalCode {
      get { return postalCode_; }
      set {
        postalCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 6;
    private string state_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string State {
      get { return state_; }
      set {
        state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Address);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Address other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (City != other.City) return false;
      if (Country != other.Country) return false;
      if (Line1 != other.Line1) return false;
      if (Line2 != other.Line2) return false;
      if (PostalCode != other.PostalCode) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (City.Length != 0) hash ^= City.GetHashCode();
      if (Country.Length != 0) hash ^= Country.GetHashCode();
      if (Line1.Length != 0) hash ^= Line1.GetHashCode();
      if (Line2.Length != 0) hash ^= Line2.GetHashCode();
      if (PostalCode.Length != 0) hash ^= PostalCode.GetHashCode();
      if (State.Length != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (City.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(City);
      }
      if (Country.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Country);
      }
      if (Line1.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Line1);
      }
      if (Line2.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Line2);
      }
      if (PostalCode.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(PostalCode);
      }
      if (State.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (City.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(City);
      }
      if (Country.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Country);
      }
      if (Line1.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Line1);
      }
      if (Line2.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Line2);
      }
      if (PostalCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PostalCode);
      }
      if (State.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Address other) {
      if (other == null) {
        return;
      }
      if (other.City.Length != 0) {
        City = other.City;
      }
      if (other.Country.Length != 0) {
        Country = other.Country;
      }
      if (other.Line1.Length != 0) {
        Line1 = other.Line1;
      }
      if (other.Line2.Length != 0) {
        Line2 = other.Line2;
      }
      if (other.PostalCode.Length != 0) {
        PostalCode = other.PostalCode;
      }
      if (other.State.Length != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            City = input.ReadString();
            break;
          }
          case 18: {
            Country = input.ReadString();
            break;
          }
          case 26: {
            Line1 = input.ReadString();
            break;
          }
          case 34: {
            Line2 = input.ReadString();
            break;
          }
          case 42: {
            PostalCode = input.ReadString();
            break;
          }
          case 50: {
            State = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChannelReminder : pb::IMessage<ChannelReminder> {
    private static readonly pb::MessageParser<ChannelReminder> _parser = new pb::MessageParser<ChannelReminder>(() => new ChannelReminder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChannelReminder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelReminder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelReminder(ChannelReminder other) : this() {
      channelId_ = other.channelId_;
      text_ = other.text_;
      time_ = other.time_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChannelReminder Clone() {
      return new ChannelReminder(this);
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 1;
    private string channelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChannelId {
      get { return channelId_; }
      set {
        channelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChannelReminder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChannelReminder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ChannelId != other.ChannelId) return false;
      if (Text != other.Text) return false;
      if (Time != other.Time) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ChannelId.Length != 0) hash ^= ChannelId.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ChannelId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ChannelId);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ChannelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelId);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChannelReminder other) {
      if (other == null) {
        return;
      }
      if (other.ChannelId.Length != 0) {
        ChannelId = other.ChannelId;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ChannelId = input.ReadString();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 26: {
            Time = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserReminder : pb::IMessage<UserReminder> {
    private static readonly pb::MessageParser<UserReminder> _parser = new pb::MessageParser<UserReminder>(() => new UserReminder());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserReminder> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserReminder() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserReminder(UserReminder other) : this() {
      id_ = other.id_;
      text_ = other.text_;
      time_ = other.time_;
      item_ = other.item_ != null ? other.item_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserReminder Clone() {
      return new UserReminder(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private string time_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Time {
      get { return time_; }
      set {
        time_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 4;
    private global::Api.ItemRef item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.ItemRef Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserReminder);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserReminder other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Text != other.Text) return false;
      if (Time != other.Time) return false;
      if (!object.Equals(Item, other.Item)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (Time.Length != 0) hash ^= Time.GetHashCode();
      if (item_ != null) hash ^= Item.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (Time.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Time);
      }
      if (item_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Item);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (Time.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Time);
      }
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserReminder other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.Time.Length != 0) {
        Time = other.Time;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          item_ = new global::Api.ItemRef();
        }
        Item.MergeFrom(other.Item);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 26: {
            Time = input.ReadString();
            break;
          }
          case 34: {
            if (item_ == null) {
              item_ = new global::Api.ItemRef();
            }
            input.ReadMessage(item_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ItemRef : pb::IMessage<ItemRef> {
    private static readonly pb::MessageParser<ItemRef> _parser = new pb::MessageParser<ItemRef>(() => new ItemRef());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ItemRef> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemRef() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemRef(ItemRef other) : this() {
      channel_ = other.channel_;
      file_ = other.file_;
      comment_ = other.comment_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ItemRef Clone() {
      return new ItemRef(this);
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 1;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "file" field.</summary>
    public const int FileFieldNumber = 2;
    private string file_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string File {
      get { return file_; }
      set {
        file_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "comment" field.</summary>
    public const int CommentFieldNumber = 3;
    private string comment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Comment {
      get { return comment_; }
      set {
        comment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ItemRef);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ItemRef other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Channel != other.Channel) return false;
      if (File != other.File) return false;
      if (Comment != other.Comment) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (File.Length != 0) hash ^= File.GetHashCode();
      if (Comment.Length != 0) hash ^= Comment.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Channel.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Channel);
      }
      if (File.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(File);
      }
      if (Comment.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Comment);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (File.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(File);
      }
      if (Comment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Comment);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ItemRef other) {
      if (other == null) {
        return;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.File.Length != 0) {
        File = other.File;
      }
      if (other.Comment.Length != 0) {
        Comment = other.Comment;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Channel = input.ReadString();
            break;
          }
          case 18: {
            File = input.ReadString();
            break;
          }
          case 26: {
            Comment = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Star : pb::IMessage<Star> {
    private static readonly pb::MessageParser<Star> _parser = new pb::MessageParser<Star>(() => new Star());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Star> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Star() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Star(Star other) : this() {
      text_ = other.text_;
      item_ = other.item_ != null ? other.item_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Star Clone() {
      return new Star(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 4;
    private global::Api.ItemRef item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.ItemRef Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Star);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Star other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      if (!object.Equals(Item, other.Item)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (item_ != null) hash ^= Item.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (item_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Item);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Star other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          item_ = new global::Api.ItemRef();
        }
        Item.MergeFrom(other.Item);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 34: {
            if (item_ == null) {
              item_ = new global::Api.ItemRef();
            }
            input.ReadMessage(item_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Pin : pb::IMessage<Pin> {
    private static readonly pb::MessageParser<Pin> _parser = new pb::MessageParser<Pin>(() => new Pin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Pin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pin(Pin other) : this() {
      text_ = other.text_;
      item_ = other.item_ != null ? other.item_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Pin Clone() {
      return new Pin(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "item" field.</summary>
    public const int ItemFieldNumber = 4;
    private global::Api.ItemRef item_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.ItemRef Item {
      get { return item_; }
      set {
        item_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Pin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Pin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      if (!object.Equals(Item, other.Item)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (item_ != null) hash ^= Item.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      if (item_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Item);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (item_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Item);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Pin other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.item_ != null) {
        if (item_ == null) {
          item_ = new global::Api.ItemRef();
        }
        Item.MergeFrom(other.Item);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 34: {
            if (item_ == null) {
              item_ = new global::Api.ItemRef();
            }
            input.ReadMessage(item_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SignedKey : pb::IMessage<SignedKey> {
    private static readonly pb::MessageParser<SignedKey> _parser = new pb::MessageParser<SignedKey>(() => new SignedKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SignedKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignedKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignedKey(SignedKey other) : this() {
      signedKey_ = other.signedKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SignedKey Clone() {
      return new SignedKey(this);
    }

    /// <summary>Field number for the "signed_key" field.</summary>
    public const int SignedKey_FieldNumber = 1;
    private string signedKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SignedKey_ {
      get { return signedKey_; }
      set {
        signedKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SignedKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SignedKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SignedKey_ != other.SignedKey_) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SignedKey_.Length != 0) hash ^= SignedKey_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SignedKey_.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(SignedKey_);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SignedKey_.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SignedKey_);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SignedKey other) {
      if (other == null) {
        return;
      }
      if (other.SignedKey_.Length != 0) {
        SignedKey_ = other.SignedKey_;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            SignedKey_ = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Access : pb::IMessage<Access> {
    private static readonly pb::MessageParser<Access> _parser = new pb::MessageParser<Access>(() => new Access());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Access> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Access() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Access(Access other) : this() {
      autom8TerAccount_ = other.autom8TerAccount_;
      autom8TerKey_ = other.autom8TerKey_;
      twilioAccount_ = other.twilioAccount_;
      twilioKey_ = other.twilioKey_;
      sendgridAccount_ = other.sendgridAccount_;
      sendgridKey_ = other.sendgridKey_;
      stripeAccount_ = other.stripeAccount_;
      stripeKey_ = other.stripeKey_;
      slackAccount_ = other.slackAccount_;
      slackKey_ = other.slackKey_;
      gcpProject_ = other.gcpProject_;
      gcpKey_ = other.gcpKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Access Clone() {
      return new Access(this);
    }

    /// <summary>Field number for the "autom8ter_account" field.</summary>
    public const int Autom8TerAccountFieldNumber = 1;
    private string autom8TerAccount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Autom8TerAccount {
      get { return autom8TerAccount_; }
      set {
        autom8TerAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "autom8ter_key" field.</summary>
    public const int Autom8TerKeyFieldNumber = 2;
    private string autom8TerKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Autom8TerKey {
      get { return autom8TerKey_; }
      set {
        autom8TerKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "twilio_account" field.</summary>
    public const int TwilioAccountFieldNumber = 3;
    private string twilioAccount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TwilioAccount {
      get { return twilioAccount_; }
      set {
        twilioAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "twilio_key" field.</summary>
    public const int TwilioKeyFieldNumber = 4;
    private string twilioKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TwilioKey {
      get { return twilioKey_; }
      set {
        twilioKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sendgrid_account" field.</summary>
    public const int SendgridAccountFieldNumber = 5;
    private string sendgridAccount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SendgridAccount {
      get { return sendgridAccount_; }
      set {
        sendgridAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sendgrid_key" field.</summary>
    public const int SendgridKeyFieldNumber = 6;
    private string sendgridKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SendgridKey {
      get { return sendgridKey_; }
      set {
        sendgridKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stripe_account" field.</summary>
    public const int StripeAccountFieldNumber = 7;
    private string stripeAccount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StripeAccount {
      get { return stripeAccount_; }
      set {
        stripeAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stripe_key" field.</summary>
    public const int StripeKeyFieldNumber = 8;
    private string stripeKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StripeKey {
      get { return stripeKey_; }
      set {
        stripeKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "slack_account" field.</summary>
    public const int SlackAccountFieldNumber = 9;
    private string slackAccount_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SlackAccount {
      get { return slackAccount_; }
      set {
        slackAccount_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "slack_key" field.</summary>
    public const int SlackKeyFieldNumber = 10;
    private string slackKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SlackKey {
      get { return slackKey_; }
      set {
        slackKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gcp_project" field.</summary>
    public const int GcpProjectFieldNumber = 11;
    private string gcpProject_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GcpProject {
      get { return gcpProject_; }
      set {
        gcpProject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "gcp_key" field.</summary>
    public const int GcpKeyFieldNumber = 12;
    private string gcpKey_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GcpKey {
      get { return gcpKey_; }
      set {
        gcpKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Access);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Access other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Autom8TerAccount != other.Autom8TerAccount) return false;
      if (Autom8TerKey != other.Autom8TerKey) return false;
      if (TwilioAccount != other.TwilioAccount) return false;
      if (TwilioKey != other.TwilioKey) return false;
      if (SendgridAccount != other.SendgridAccount) return false;
      if (SendgridKey != other.SendgridKey) return false;
      if (StripeAccount != other.StripeAccount) return false;
      if (StripeKey != other.StripeKey) return false;
      if (SlackAccount != other.SlackAccount) return false;
      if (SlackKey != other.SlackKey) return false;
      if (GcpProject != other.GcpProject) return false;
      if (GcpKey != other.GcpKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Autom8TerAccount.Length != 0) hash ^= Autom8TerAccount.GetHashCode();
      if (Autom8TerKey.Length != 0) hash ^= Autom8TerKey.GetHashCode();
      if (TwilioAccount.Length != 0) hash ^= TwilioAccount.GetHashCode();
      if (TwilioKey.Length != 0) hash ^= TwilioKey.GetHashCode();
      if (SendgridAccount.Length != 0) hash ^= SendgridAccount.GetHashCode();
      if (SendgridKey.Length != 0) hash ^= SendgridKey.GetHashCode();
      if (StripeAccount.Length != 0) hash ^= StripeAccount.GetHashCode();
      if (StripeKey.Length != 0) hash ^= StripeKey.GetHashCode();
      if (SlackAccount.Length != 0) hash ^= SlackAccount.GetHashCode();
      if (SlackKey.Length != 0) hash ^= SlackKey.GetHashCode();
      if (GcpProject.Length != 0) hash ^= GcpProject.GetHashCode();
      if (GcpKey.Length != 0) hash ^= GcpKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Autom8TerAccount.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Autom8TerAccount);
      }
      if (Autom8TerKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Autom8TerKey);
      }
      if (TwilioAccount.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TwilioAccount);
      }
      if (TwilioKey.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TwilioKey);
      }
      if (SendgridAccount.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SendgridAccount);
      }
      if (SendgridKey.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SendgridKey);
      }
      if (StripeAccount.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(StripeAccount);
      }
      if (StripeKey.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(StripeKey);
      }
      if (SlackAccount.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(SlackAccount);
      }
      if (SlackKey.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(SlackKey);
      }
      if (GcpProject.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(GcpProject);
      }
      if (GcpKey.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(GcpKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Autom8TerAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Autom8TerAccount);
      }
      if (Autom8TerKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Autom8TerKey);
      }
      if (TwilioAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TwilioAccount);
      }
      if (TwilioKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TwilioKey);
      }
      if (SendgridAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SendgridAccount);
      }
      if (SendgridKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SendgridKey);
      }
      if (StripeAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StripeAccount);
      }
      if (StripeKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StripeKey);
      }
      if (SlackAccount.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SlackAccount);
      }
      if (SlackKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SlackKey);
      }
      if (GcpProject.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GcpProject);
      }
      if (GcpKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GcpKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Access other) {
      if (other == null) {
        return;
      }
      if (other.Autom8TerAccount.Length != 0) {
        Autom8TerAccount = other.Autom8TerAccount;
      }
      if (other.Autom8TerKey.Length != 0) {
        Autom8TerKey = other.Autom8TerKey;
      }
      if (other.TwilioAccount.Length != 0) {
        TwilioAccount = other.TwilioAccount;
      }
      if (other.TwilioKey.Length != 0) {
        TwilioKey = other.TwilioKey;
      }
      if (other.SendgridAccount.Length != 0) {
        SendgridAccount = other.SendgridAccount;
      }
      if (other.SendgridKey.Length != 0) {
        SendgridKey = other.SendgridKey;
      }
      if (other.StripeAccount.Length != 0) {
        StripeAccount = other.StripeAccount;
      }
      if (other.StripeKey.Length != 0) {
        StripeKey = other.StripeKey;
      }
      if (other.SlackAccount.Length != 0) {
        SlackAccount = other.SlackAccount;
      }
      if (other.SlackKey.Length != 0) {
        SlackKey = other.SlackKey;
      }
      if (other.GcpProject.Length != 0) {
        GcpProject = other.GcpProject;
      }
      if (other.GcpKey.Length != 0) {
        GcpKey = other.GcpKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Autom8TerAccount = input.ReadString();
            break;
          }
          case 18: {
            Autom8TerKey = input.ReadString();
            break;
          }
          case 26: {
            TwilioAccount = input.ReadString();
            break;
          }
          case 34: {
            TwilioKey = input.ReadString();
            break;
          }
          case 42: {
            SendgridAccount = input.ReadString();
            break;
          }
          case 50: {
            SendgridKey = input.ReadString();
            break;
          }
          case 58: {
            StripeAccount = input.ReadString();
            break;
          }
          case 66: {
            StripeKey = input.ReadString();
            break;
          }
          case 74: {
            SlackAccount = input.ReadString();
            break;
          }
          case 82: {
            SlackKey = input.ReadString();
            break;
          }
          case 90: {
            GcpProject = input.ReadString();
            break;
          }
          case 98: {
            GcpKey = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StandardClaims : pb::IMessage<StandardClaims> {
    private static readonly pb::MessageParser<StandardClaims> _parser = new pb::MessageParser<StandardClaims>(() => new StandardClaims());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StandardClaims> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardClaims() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardClaims(StandardClaims other) : this() {
      access_ = other.access_ != null ? other.access_.Clone() : null;
      audience_ = other.audience_;
      subject_ = other.subject_;
      expiresAt_ = other.expiresAt_;
      id_ = other.id_;
      issuedAt_ = other.issuedAt_;
      notBefore_ = other.notBefore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StandardClaims Clone() {
      return new StandardClaims(this);
    }

    /// <summary>Field number for the "access" field.</summary>
    public const int AccessFieldNumber = 1;
    private global::Api.Access access_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.Access Access {
      get { return access_; }
      set {
        access_ = value;
      }
    }

    /// <summary>Field number for the "audience" field.</summary>
    public const int AudienceFieldNumber = 2;
    private string audience_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Audience {
      get { return audience_; }
      set {
        audience_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 3;
    private string subject_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subject {
      get { return subject_; }
      set {
        subject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expires_at" field.</summary>
    public const int ExpiresAtFieldNumber = 4;
    private long expiresAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ExpiresAt {
      get { return expiresAt_; }
      set {
        expiresAt_ = value;
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 5;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "issued_at" field.</summary>
    public const int IssuedAtFieldNumber = 6;
    private long issuedAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long IssuedAt {
      get { return issuedAt_; }
      set {
        issuedAt_ = value;
      }
    }

    /// <summary>Field number for the "not_before" field.</summary>
    public const int NotBeforeFieldNumber = 7;
    private long notBefore_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NotBefore {
      get { return notBefore_; }
      set {
        notBefore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StandardClaims);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StandardClaims other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Access, other.Access)) return false;
      if (Audience != other.Audience) return false;
      if (Subject != other.Subject) return false;
      if (ExpiresAt != other.ExpiresAt) return false;
      if (Id != other.Id) return false;
      if (IssuedAt != other.IssuedAt) return false;
      if (NotBefore != other.NotBefore) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (access_ != null) hash ^= Access.GetHashCode();
      if (Audience.Length != 0) hash ^= Audience.GetHashCode();
      if (Subject.Length != 0) hash ^= Subject.GetHashCode();
      if (ExpiresAt != 0L) hash ^= ExpiresAt.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (IssuedAt != 0L) hash ^= IssuedAt.GetHashCode();
      if (NotBefore != 0L) hash ^= NotBefore.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (access_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Access);
      }
      if (Audience.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Audience);
      }
      if (Subject.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Subject);
      }
      if (ExpiresAt != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ExpiresAt);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Id);
      }
      if (IssuedAt != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(IssuedAt);
      }
      if (NotBefore != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(NotBefore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (access_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Access);
      }
      if (Audience.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Audience);
      }
      if (Subject.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
      }
      if (ExpiresAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpiresAt);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (IssuedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(IssuedAt);
      }
      if (NotBefore != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NotBefore);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StandardClaims other) {
      if (other == null) {
        return;
      }
      if (other.access_ != null) {
        if (access_ == null) {
          access_ = new global::Api.Access();
        }
        Access.MergeFrom(other.Access);
      }
      if (other.Audience.Length != 0) {
        Audience = other.Audience;
      }
      if (other.Subject.Length != 0) {
        Subject = other.Subject;
      }
      if (other.ExpiresAt != 0L) {
        ExpiresAt = other.ExpiresAt;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.IssuedAt != 0L) {
        IssuedAt = other.IssuedAt;
      }
      if (other.NotBefore != 0L) {
        NotBefore = other.NotBefore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (access_ == null) {
              access_ = new global::Api.Access();
            }
            input.ReadMessage(access_);
            break;
          }
          case 18: {
            Audience = input.ReadString();
            break;
          }
          case 26: {
            Subject = input.ReadString();
            break;
          }
          case 32: {
            ExpiresAt = input.ReadInt64();
            break;
          }
          case 42: {
            Id = input.ReadString();
            break;
          }
          case 48: {
            IssuedAt = input.ReadInt64();
            break;
          }
          case 56: {
            NotBefore = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LogConfig : pb::IMessage<LogConfig> {
    private static readonly pb::MessageParser<LogConfig> _parser = new pb::MessageParser<LogConfig>(() => new LogConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogConfig(LogConfig other) : this() {
      username_ = other.username_;
      channel_ = other.channel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogConfig Clone() {
      return new LogConfig(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 2;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Channel != other.Channel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Channel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogConfig other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Channel = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class EmailAddress : pb::IMessage<EmailAddress> {
    private static readonly pb::MessageParser<EmailAddress> _parser = new pb::MessageParser<EmailAddress>(() => new EmailAddress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmailAddress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailAddress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailAddress(EmailAddress other) : this() {
      name_ = other.name_;
      address_ = other.address_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmailAddress Clone() {
      return new EmailAddress(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 2;
    private string address_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmailAddress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmailAddress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Address != other.Address) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmailAddress other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Address = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Email : pb::IMessage<Email> {
    private static readonly pb::MessageParser<Email> _parser = new pb::MessageParser<Email>(() => new Email());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Email> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Email() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Email(Email other) : this() {
      from_ = other.from_ != null ? other.from_.Clone() : null;
      recipient_ = other.recipient_ != null ? other.recipient_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Email Clone() {
      return new Email(this);
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 1;
    private global::Api.EmailAddress from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.EmailAddress From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "recipient" field.</summary>
    public const int RecipientFieldNumber = 2;
    private global::Api.RecipientEmail recipient_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.RecipientEmail Recipient {
      get { return recipient_; }
      set {
        recipient_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Email);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Email other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(From, other.From)) return false;
      if (!object.Equals(Recipient, other.Recipient)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (from_ != null) hash ^= From.GetHashCode();
      if (recipient_ != null) hash ^= Recipient.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (from_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(From);
      }
      if (recipient_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Recipient);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (recipient_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Recipient);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Email other) {
      if (other == null) {
        return;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          from_ = new global::Api.EmailAddress();
        }
        From.MergeFrom(other.From);
      }
      if (other.recipient_ != null) {
        if (recipient_ == null) {
          recipient_ = new global::Api.RecipientEmail();
        }
        Recipient.MergeFrom(other.Recipient);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (from_ == null) {
              from_ = new global::Api.EmailAddress();
            }
            input.ReadMessage(from_);
            break;
          }
          case 18: {
            if (recipient_ == null) {
              recipient_ = new global::Api.RecipientEmail();
            }
            input.ReadMessage(recipient_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RecipientEmail : pb::IMessage<RecipientEmail> {
    private static readonly pb::MessageParser<RecipientEmail> _parser = new pb::MessageParser<RecipientEmail>(() => new RecipientEmail());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RecipientEmail> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipientEmail() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipientEmail(RecipientEmail other) : this() {
      to_ = other.to_ != null ? other.to_.Clone() : null;
      subject_ = other.subject_;
      plainText_ = other.plainText_;
      html_ = other.html_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RecipientEmail Clone() {
      return new RecipientEmail(this);
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 2;
    private global::Api.EmailAddress to_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.EmailAddress To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 3;
    private string subject_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Subject {
      get { return subject_; }
      set {
        subject_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "plain_text" field.</summary>
    public const int PlainTextFieldNumber = 4;
    private string plainText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlainText {
      get { return plainText_; }
      set {
        plainText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "html" field.</summary>
    public const int HtmlFieldNumber = 5;
    private string html_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Html {
      get { return html_; }
      set {
        html_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RecipientEmail);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RecipientEmail other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(To, other.To)) return false;
      if (Subject != other.Subject) return false;
      if (PlainText != other.PlainText) return false;
      if (Html != other.Html) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (to_ != null) hash ^= To.GetHashCode();
      if (Subject.Length != 0) hash ^= Subject.GetHashCode();
      if (PlainText.Length != 0) hash ^= PlainText.GetHashCode();
      if (Html.Length != 0) hash ^= Html.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (to_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(To);
      }
      if (Subject.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Subject);
      }
      if (PlainText.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PlainText);
      }
      if (Html.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Html);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (Subject.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Subject);
      }
      if (PlainText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlainText);
      }
      if (Html.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Html);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RecipientEmail other) {
      if (other == null) {
        return;
      }
      if (other.to_ != null) {
        if (to_ == null) {
          to_ = new global::Api.EmailAddress();
        }
        To.MergeFrom(other.To);
      }
      if (other.Subject.Length != 0) {
        Subject = other.Subject;
      }
      if (other.PlainText.Length != 0) {
        PlainText = other.PlainText;
      }
      if (other.Html.Length != 0) {
        Html = other.Html;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            if (to_ == null) {
              to_ = new global::Api.EmailAddress();
            }
            input.ReadMessage(to_);
            break;
          }
          case 26: {
            Subject = input.ReadString();
            break;
          }
          case 34: {
            PlainText = input.ReadString();
            break;
          }
          case 42: {
            Html = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SMS : pb::IMessage<SMS> {
    private static readonly pb::MessageParser<SMS> _parser = new pb::MessageParser<SMS>(() => new SMS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SMS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SMS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SMS(SMS other) : this() {
      to_ = other.to_;
      from_ = other.from_;
      body_ = other.body_;
      mediaUrl_ = other.mediaUrl_;
      callback_ = other.callback_;
      app_ = other.app_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SMS Clone() {
      return new SMS(this);
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 1;
    private string to_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string To {
      get { return to_; }
      set {
        to_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 2;
    private string from_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string From {
      get { return from_; }
      set {
        from_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "body" field.</summary>
    public const int BodyFieldNumber = 3;
    private string body_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "media_url" field.</summary>
    public const int MediaUrlFieldNumber = 4;
    private string mediaUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MediaUrl {
      get { return mediaUrl_; }
      set {
        mediaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "callback" field.</summary>
    public const int CallbackFieldNumber = 5;
    private string callback_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Callback {
      get { return callback_; }
      set {
        callback_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "app" field.</summary>
    public const int AppFieldNumber = 6;
    private string app_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string App {
      get { return app_; }
      set {
        app_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SMS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SMS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (To != other.To) return false;
      if (From != other.From) return false;
      if (Body != other.Body) return false;
      if (MediaUrl != other.MediaUrl) return false;
      if (Callback != other.Callback) return false;
      if (App != other.App) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (To.Length != 0) hash ^= To.GetHashCode();
      if (From.Length != 0) hash ^= From.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (MediaUrl.Length != 0) hash ^= MediaUrl.GetHashCode();
      if (Callback.Length != 0) hash ^= Callback.GetHashCode();
      if (App.Length != 0) hash ^= App.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (To.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(To);
      }
      if (From.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(From);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Body);
      }
      if (MediaUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MediaUrl);
      }
      if (Callback.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Callback);
      }
      if (App.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(App);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (To.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(To);
      }
      if (From.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(From);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Body);
      }
      if (MediaUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MediaUrl);
      }
      if (Callback.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Callback);
      }
      if (App.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(App);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SMS other) {
      if (other == null) {
        return;
      }
      if (other.To.Length != 0) {
        To = other.To;
      }
      if (other.From.Length != 0) {
        From = other.From;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      if (other.MediaUrl.Length != 0) {
        MediaUrl = other.MediaUrl;
      }
      if (other.Callback.Length != 0) {
        Callback = other.Callback;
      }
      if (other.App.Length != 0) {
        App = other.App;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            To = input.ReadString();
            break;
          }
          case 18: {
            From = input.ReadString();
            break;
          }
          case 26: {
            Body = input.ReadString();
            break;
          }
          case 34: {
            MediaUrl = input.ReadString();
            break;
          }
          case 42: {
            Callback = input.ReadString();
            break;
          }
          case 50: {
            App = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Call : pb::IMessage<Call> {
    private static readonly pb::MessageParser<Call> _parser = new pb::MessageParser<Call>(() => new Call());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Call> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Call() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Call(Call other) : this() {
      to_ = other.to_;
      from_ = other.from_;
      callback_ = other.callback_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Call Clone() {
      return new Call(this);
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 1;
    private string to_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string To {
      get { return to_; }
      set {
        to_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 2;
    private string from_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string From {
      get { return from_; }
      set {
        from_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "callback" field.</summary>
    public const int CallbackFieldNumber = 5;
    private string callback_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Callback {
      get { return callback_; }
      set {
        callback_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Call);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Call other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (To != other.To) return false;
      if (From != other.From) return false;
      if (Callback != other.Callback) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (To.Length != 0) hash ^= To.GetHashCode();
      if (From.Length != 0) hash ^= From.GetHashCode();
      if (Callback.Length != 0) hash ^= Callback.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (To.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(To);
      }
      if (From.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(From);
      }
      if (Callback.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Callback);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (To.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(To);
      }
      if (From.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(From);
      }
      if (Callback.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Callback);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Call other) {
      if (other == null) {
        return;
      }
      if (other.To.Length != 0) {
        To = other.To;
      }
      if (other.From.Length != 0) {
        From = other.From;
      }
      if (other.Callback.Length != 0) {
        Callback = other.Callback;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            To = input.ReadString();
            break;
          }
          case 18: {
            From = input.ReadString();
            break;
          }
          case 42: {
            Callback = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Fax : pb::IMessage<Fax> {
    private static readonly pb::MessageParser<Fax> _parser = new pb::MessageParser<Fax>(() => new Fax());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Fax> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fax() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fax(Fax other) : this() {
      to_ = other.to_;
      from_ = other.from_;
      mediaUrl_ = other.mediaUrl_;
      quality_ = other.quality_;
      callback_ = other.callback_;
      storeMedia_ = other.storeMedia_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Fax Clone() {
      return new Fax(this);
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 1;
    private string to_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string To {
      get { return to_; }
      set {
        to_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 2;
    private string from_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string From {
      get { return from_; }
      set {
        from_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "media_url" field.</summary>
    public const int MediaUrlFieldNumber = 3;
    private string mediaUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MediaUrl {
      get { return mediaUrl_; }
      set {
        mediaUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "quality" field.</summary>
    public const int QualityFieldNumber = 4;
    private string quality_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Quality {
      get { return quality_; }
      set {
        quality_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "callback" field.</summary>
    public const int CallbackFieldNumber = 5;
    private string callback_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Callback {
      get { return callback_; }
      set {
        callback_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "store_media" field.</summary>
    public const int StoreMediaFieldNumber = 6;
    private bool storeMedia_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool StoreMedia {
      get { return storeMedia_; }
      set {
        storeMedia_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Fax);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Fax other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (To != other.To) return false;
      if (From != other.From) return false;
      if (MediaUrl != other.MediaUrl) return false;
      if (Quality != other.Quality) return false;
      if (Callback != other.Callback) return false;
      if (StoreMedia != other.StoreMedia) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (To.Length != 0) hash ^= To.GetHashCode();
      if (From.Length != 0) hash ^= From.GetHashCode();
      if (MediaUrl.Length != 0) hash ^= MediaUrl.GetHashCode();
      if (Quality.Length != 0) hash ^= Quality.GetHashCode();
      if (Callback.Length != 0) hash ^= Callback.GetHashCode();
      if (StoreMedia != false) hash ^= StoreMedia.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (To.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(To);
      }
      if (From.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(From);
      }
      if (MediaUrl.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MediaUrl);
      }
      if (Quality.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Quality);
      }
      if (Callback.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Callback);
      }
      if (StoreMedia != false) {
        output.WriteRawTag(48);
        output.WriteBool(StoreMedia);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (To.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(To);
      }
      if (From.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(From);
      }
      if (MediaUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MediaUrl);
      }
      if (Quality.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Quality);
      }
      if (Callback.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Callback);
      }
      if (StoreMedia != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Fax other) {
      if (other == null) {
        return;
      }
      if (other.To.Length != 0) {
        To = other.To;
      }
      if (other.From.Length != 0) {
        From = other.From;
      }
      if (other.MediaUrl.Length != 0) {
        MediaUrl = other.MediaUrl;
      }
      if (other.Quality.Length != 0) {
        Quality = other.Quality;
      }
      if (other.Callback.Length != 0) {
        Callback = other.Callback;
      }
      if (other.StoreMedia != false) {
        StoreMedia = other.StoreMedia;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            To = input.ReadString();
            break;
          }
          case 18: {
            From = input.ReadString();
            break;
          }
          case 26: {
            MediaUrl = input.ReadString();
            break;
          }
          case 34: {
            Quality = input.ReadString();
            break;
          }
          case 42: {
            Callback = input.ReadString();
            break;
          }
          case 48: {
            StoreMedia = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SlashCommand : pb::IMessage<SlashCommand> {
    private static readonly pb::MessageParser<SlashCommand> _parser = new pb::MessageParser<SlashCommand>(() => new SlashCommand());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SlashCommand> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SlashCommand() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SlashCommand(SlashCommand other) : this() {
      token_ = other.token_;
      teamId_ = other.teamId_;
      teamDomain_ = other.teamDomain_;
      enterpriseId_ = other.enterpriseId_;
      enterpriseName_ = other.enterpriseName_;
      channelId_ = other.channelId_;
      channelName_ = other.channelName_;
      userId_ = other.userId_;
      userName_ = other.userName_;
      command_ = other.command_;
      text_ = other.text_;
      responseUrl_ = other.responseUrl_;
      triggerId_ = other.triggerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SlashCommand Clone() {
      return new SlashCommand(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private string token_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "team_id" field.</summary>
    public const int TeamIdFieldNumber = 2;
    private string teamId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TeamId {
      get { return teamId_; }
      set {
        teamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "team_domain" field.</summary>
    public const int TeamDomainFieldNumber = 3;
    private string teamDomain_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TeamDomain {
      get { return teamDomain_; }
      set {
        teamDomain_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enterprise_id" field.</summary>
    public const int EnterpriseIdFieldNumber = 4;
    private string enterpriseId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EnterpriseId {
      get { return enterpriseId_; }
      set {
        enterpriseId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enterprise_name" field.</summary>
    public const int EnterpriseNameFieldNumber = 6;
    private string enterpriseName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string EnterpriseName {
      get { return enterpriseName_; }
      set {
        enterpriseName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel_id" field.</summary>
    public const int ChannelIdFieldNumber = 7;
    private string channelId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChannelId {
      get { return channelId_; }
      set {
        channelId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel_name" field.</summary>
    public const int ChannelNameFieldNumber = 8;
    private string channelName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ChannelName {
      get { return channelName_; }
      set {
        channelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_id" field.</summary>
    public const int UserIdFieldNumber = 9;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "user_name" field.</summary>
    public const int UserNameFieldNumber = 10;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "command" field.</summary>
    public const int CommandFieldNumber = 11;
    private string command_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Command {
      get { return command_; }
      set {
        command_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 12;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "response_url" field.</summary>
    public const int ResponseUrlFieldNumber = 13;
    private string responseUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResponseUrl {
      get { return responseUrl_; }
      set {
        responseUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trigger_id" field.</summary>
    public const int TriggerIdFieldNumber = 14;
    private string triggerId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TriggerId {
      get { return triggerId_; }
      set {
        triggerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SlashCommand);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SlashCommand other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (TeamId != other.TeamId) return false;
      if (TeamDomain != other.TeamDomain) return false;
      if (EnterpriseId != other.EnterpriseId) return false;
      if (EnterpriseName != other.EnterpriseName) return false;
      if (ChannelId != other.ChannelId) return false;
      if (ChannelName != other.ChannelName) return false;
      if (UserId != other.UserId) return false;
      if (UserName != other.UserName) return false;
      if (Command != other.Command) return false;
      if (Text != other.Text) return false;
      if (ResponseUrl != other.ResponseUrl) return false;
      if (TriggerId != other.TriggerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (TeamId.Length != 0) hash ^= TeamId.GetHashCode();
      if (TeamDomain.Length != 0) hash ^= TeamDomain.GetHashCode();
      if (EnterpriseId.Length != 0) hash ^= EnterpriseId.GetHashCode();
      if (EnterpriseName.Length != 0) hash ^= EnterpriseName.GetHashCode();
      if (ChannelId.Length != 0) hash ^= ChannelId.GetHashCode();
      if (ChannelName.Length != 0) hash ^= ChannelName.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (Command.Length != 0) hash ^= Command.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (ResponseUrl.Length != 0) hash ^= ResponseUrl.GetHashCode();
      if (TriggerId.Length != 0) hash ^= TriggerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      if (TeamId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TeamId);
      }
      if (TeamDomain.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(TeamDomain);
      }
      if (EnterpriseId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(EnterpriseId);
      }
      if (EnterpriseName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(EnterpriseName);
      }
      if (ChannelId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ChannelId);
      }
      if (ChannelName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ChannelName);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(UserId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(UserName);
      }
      if (Command.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Command);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Text);
      }
      if (ResponseUrl.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ResponseUrl);
      }
      if (TriggerId.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(TriggerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      if (TeamId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamId);
      }
      if (TeamDomain.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TeamDomain);
      }
      if (EnterpriseId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EnterpriseId);
      }
      if (EnterpriseName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EnterpriseName);
      }
      if (ChannelId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelId);
      }
      if (ChannelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ChannelName);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (Command.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Command);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (ResponseUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResponseUrl);
      }
      if (TriggerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TriggerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SlashCommand other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.TeamId.Length != 0) {
        TeamId = other.TeamId;
      }
      if (other.TeamDomain.Length != 0) {
        TeamDomain = other.TeamDomain;
      }
      if (other.EnterpriseId.Length != 0) {
        EnterpriseId = other.EnterpriseId;
      }
      if (other.EnterpriseName.Length != 0) {
        EnterpriseName = other.EnterpriseName;
      }
      if (other.ChannelId.Length != 0) {
        ChannelId = other.ChannelId;
      }
      if (other.ChannelName.Length != 0) {
        ChannelName = other.ChannelName;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.Command.Length != 0) {
        Command = other.Command;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.ResponseUrl.Length != 0) {
        ResponseUrl = other.ResponseUrl;
      }
      if (other.TriggerId.Length != 0) {
        TriggerId = other.TriggerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            TeamId = input.ReadString();
            break;
          }
          case 26: {
            TeamDomain = input.ReadString();
            break;
          }
          case 34: {
            EnterpriseId = input.ReadString();
            break;
          }
          case 50: {
            EnterpriseName = input.ReadString();
            break;
          }
          case 58: {
            ChannelId = input.ReadString();
            break;
          }
          case 66: {
            ChannelName = input.ReadString();
            break;
          }
          case 74: {
            UserId = input.ReadString();
            break;
          }
          case 82: {
            UserName = input.ReadString();
            break;
          }
          case 90: {
            Command = input.ReadString();
            break;
          }
          case 98: {
            Text = input.ReadString();
            break;
          }
          case 106: {
            ResponseUrl = input.ReadString();
            break;
          }
          case 114: {
            TriggerId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LogHook : pb::IMessage<LogHook> {
    private static readonly pb::MessageParser<LogHook> _parser = new pb::MessageParser<LogHook>(() => new LogHook());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogHook> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogHook() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogHook(LogHook other) : this() {
      author_ = other.author_;
      icon_ = other.icon_;
      title_ = other.title_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogHook Clone() {
      return new LogHook(this);
    }

    /// <summary>Field number for the "author" field.</summary>
    public const int AuthorFieldNumber = 1;
    private string author_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Author {
      get { return author_; }
      set {
        author_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "icon" field.</summary>
    public const int IconFieldNumber = 2;
    private string icon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Icon {
      get { return icon_; }
      set {
        icon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogHook);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogHook other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Author != other.Author) return false;
      if (Icon != other.Icon) return false;
      if (Title != other.Title) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Author.Length != 0) hash ^= Author.GetHashCode();
      if (Icon.Length != 0) hash ^= Icon.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Author.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Author);
      }
      if (Icon.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Icon);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Author.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Author);
      }
      if (Icon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Icon);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogHook other) {
      if (other == null) {
        return;
      }
      if (other.Author.Length != 0) {
        Author = other.Author;
      }
      if (other.Icon.Length != 0) {
        Icon = other.Icon;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Author = input.ReadString();
            break;
          }
          case 18: {
            Icon = input.ReadString();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Attachment : pb::IMessage<Attachment> {
    private static readonly pb::MessageParser<Attachment> _parser = new pb::MessageParser<Attachment>(() => new Attachment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Attachment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attachment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attachment(Attachment other) : this() {
      color_ = other.color_;
      fallback_ = other.fallback_;
      callbackId_ = other.callbackId_;
      id_ = other.id_;
      authorId_ = other.authorId_;
      authorName_ = other.authorName_;
      authorLink_ = other.authorLink_;
      authorIcon_ = other.authorIcon_;
      title_ = other.title_;
      titlePrefix_ = other.titlePrefix_;
      pretext_ = other.pretext_;
      text_ = other.text_;
      imageUrl_ = other.imageUrl_;
      thumbUrl_ = other.thumbUrl_;
      fields_ = other.fields_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Attachment Clone() {
      return new Attachment(this);
    }

    /// <summary>Field number for the "color" field.</summary>
    public const int ColorFieldNumber = 1;
    private string color_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Color {
      get { return color_; }
      set {
        color_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fallback" field.</summary>
    public const int FallbackFieldNumber = 2;
    private string fallback_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fallback {
      get { return fallback_; }
      set {
        fallback_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "callback_id" field.</summary>
    public const int CallbackIdFieldNumber = 3;
    private string callbackId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CallbackId {
      get { return callbackId_; }
      set {
        callbackId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 4;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "author_id" field.</summary>
    public const int AuthorIdFieldNumber = 5;
    private string authorId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthorId {
      get { return authorId_; }
      set {
        authorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "author_name" field.</summary>
    public const int AuthorNameFieldNumber = 6;
    private string authorName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthorName {
      get { return authorName_; }
      set {
        authorName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "author_link" field.</summary>
    public const int AuthorLinkFieldNumber = 7;
    private string authorLink_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthorLink {
      get { return authorLink_; }
      set {
        authorLink_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "author_icon" field.</summary>
    public const int AuthorIconFieldNumber = 8;
    private string authorIcon_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthorIcon {
      get { return authorIcon_; }
      set {
        authorIcon_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 9;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "title_prefix" field.</summary>
    public const int TitlePrefixFieldNumber = 10;
    private string titlePrefix_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TitlePrefix {
      get { return titlePrefix_; }
      set {
        titlePrefix_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "pretext" field.</summary>
    public const int PretextFieldNumber = 11;
    private string pretext_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pretext {
      get { return pretext_; }
      set {
        pretext_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 12;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "image_url" field.</summary>
    public const int ImageUrlFieldNumber = 13;
    private string imageUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImageUrl {
      get { return imageUrl_; }
      set {
        imageUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "thumb_url" field.</summary>
    public const int ThumbUrlFieldNumber = 14;
    private string thumbUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ThumbUrl {
      get { return thumbUrl_; }
      set {
        thumbUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fields" field.</summary>
    public const int FieldsFieldNumber = 15;
    private static readonly pb::FieldCodec<global::Api.AttachmentField> _repeated_fields_codec
        = pb::FieldCodec.ForMessage(122, global::Api.AttachmentField.Parser);
    private readonly pbc::RepeatedField<global::Api.AttachmentField> fields_ = new pbc::RepeatedField<global::Api.AttachmentField>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.AttachmentField> Fields {
      get { return fields_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Attachment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Attachment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Color != other.Color) return false;
      if (Fallback != other.Fallback) return false;
      if (CallbackId != other.CallbackId) return false;
      if (Id != other.Id) return false;
      if (AuthorId != other.AuthorId) return false;
      if (AuthorName != other.AuthorName) return false;
      if (AuthorLink != other.AuthorLink) return false;
      if (AuthorIcon != other.AuthorIcon) return false;
      if (Title != other.Title) return false;
      if (TitlePrefix != other.TitlePrefix) return false;
      if (Pretext != other.Pretext) return false;
      if (Text != other.Text) return false;
      if (ImageUrl != other.ImageUrl) return false;
      if (ThumbUrl != other.ThumbUrl) return false;
      if(!fields_.Equals(other.fields_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Color.Length != 0) hash ^= Color.GetHashCode();
      if (Fallback.Length != 0) hash ^= Fallback.GetHashCode();
      if (CallbackId.Length != 0) hash ^= CallbackId.GetHashCode();
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (AuthorId.Length != 0) hash ^= AuthorId.GetHashCode();
      if (AuthorName.Length != 0) hash ^= AuthorName.GetHashCode();
      if (AuthorLink.Length != 0) hash ^= AuthorLink.GetHashCode();
      if (AuthorIcon.Length != 0) hash ^= AuthorIcon.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (TitlePrefix.Length != 0) hash ^= TitlePrefix.GetHashCode();
      if (Pretext.Length != 0) hash ^= Pretext.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (ImageUrl.Length != 0) hash ^= ImageUrl.GetHashCode();
      if (ThumbUrl.Length != 0) hash ^= ThumbUrl.GetHashCode();
      hash ^= fields_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Color.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Color);
      }
      if (Fallback.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Fallback);
      }
      if (CallbackId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(CallbackId);
      }
      if (Id != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Id);
      }
      if (AuthorId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(AuthorId);
      }
      if (AuthorName.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(AuthorName);
      }
      if (AuthorLink.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(AuthorLink);
      }
      if (AuthorIcon.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(AuthorIcon);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Title);
      }
      if (TitlePrefix.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(TitlePrefix);
      }
      if (Pretext.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Pretext);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Text);
      }
      if (ImageUrl.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(ImageUrl);
      }
      if (ThumbUrl.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(ThumbUrl);
      }
      fields_.WriteTo(output, _repeated_fields_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Color.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Color);
      }
      if (Fallback.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fallback);
      }
      if (CallbackId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CallbackId);
      }
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (AuthorId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthorId);
      }
      if (AuthorName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthorName);
      }
      if (AuthorLink.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthorLink);
      }
      if (AuthorIcon.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthorIcon);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (TitlePrefix.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TitlePrefix);
      }
      if (Pretext.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pretext);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (ImageUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImageUrl);
      }
      if (ThumbUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ThumbUrl);
      }
      size += fields_.CalculateSize(_repeated_fields_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Attachment other) {
      if (other == null) {
        return;
      }
      if (other.Color.Length != 0) {
        Color = other.Color;
      }
      if (other.Fallback.Length != 0) {
        Fallback = other.Fallback;
      }
      if (other.CallbackId.Length != 0) {
        CallbackId = other.CallbackId;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.AuthorId.Length != 0) {
        AuthorId = other.AuthorId;
      }
      if (other.AuthorName.Length != 0) {
        AuthorName = other.AuthorName;
      }
      if (other.AuthorLink.Length != 0) {
        AuthorLink = other.AuthorLink;
      }
      if (other.AuthorIcon.Length != 0) {
        AuthorIcon = other.AuthorIcon;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.TitlePrefix.Length != 0) {
        TitlePrefix = other.TitlePrefix;
      }
      if (other.Pretext.Length != 0) {
        Pretext = other.Pretext;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.ImageUrl.Length != 0) {
        ImageUrl = other.ImageUrl;
      }
      if (other.ThumbUrl.Length != 0) {
        ThumbUrl = other.ThumbUrl;
      }
      fields_.Add(other.fields_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Color = input.ReadString();
            break;
          }
          case 18: {
            Fallback = input.ReadString();
            break;
          }
          case 26: {
            CallbackId = input.ReadString();
            break;
          }
          case 32: {
            Id = input.ReadInt64();
            break;
          }
          case 42: {
            AuthorId = input.ReadString();
            break;
          }
          case 50: {
            AuthorName = input.ReadString();
            break;
          }
          case 58: {
            AuthorLink = input.ReadString();
            break;
          }
          case 66: {
            AuthorIcon = input.ReadString();
            break;
          }
          case 74: {
            Title = input.ReadString();
            break;
          }
          case 82: {
            TitlePrefix = input.ReadString();
            break;
          }
          case 90: {
            Pretext = input.ReadString();
            break;
          }
          case 98: {
            Text = input.ReadString();
            break;
          }
          case 106: {
            ImageUrl = input.ReadString();
            break;
          }
          case 114: {
            ThumbUrl = input.ReadString();
            break;
          }
          case 122: {
            fields_.AddEntriesFrom(input, _repeated_fields_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttachmentAction : pb::IMessage<AttachmentAction> {
    private static readonly pb::MessageParser<AttachmentAction> _parser = new pb::MessageParser<AttachmentAction>(() => new AttachmentAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttachmentAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentAction(AttachmentAction other) : this() {
      name_ = other.name_;
      text_ = other.text_;
      style_ = other.style_;
      type_ = other.type_;
      value_ = other.value_;
      dataSource_ = other.dataSource_;
      minQueryLength_ = other.minQueryLength_;
      options_ = other.options_.Clone();
      selectedOptions_ = other.selectedOptions_.Clone();
      optionGroups_ = other.optionGroups_.Clone();
      confirm_ = other.confirm_ != null ? other.confirm_.Clone() : null;
      url_ = other.url_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentAction Clone() {
      return new AttachmentAction(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "style" field.</summary>
    public const int StyleFieldNumber = 3;
    private string style_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Style {
      get { return style_; }
      set {
        style_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 5;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "data_source" field.</summary>
    public const int DataSourceFieldNumber = 6;
    private string dataSource_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DataSource {
      get { return dataSource_; }
      set {
        dataSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "min_query_length" field.</summary>
    public const int MinQueryLengthFieldNumber = 7;
    private long minQueryLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MinQueryLength {
      get { return minQueryLength_; }
      set {
        minQueryLength_ = value;
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Api.AttachmentActionOption> _repeated_options_codec
        = pb::FieldCodec.ForMessage(66, global::Api.AttachmentActionOption.Parser);
    private readonly pbc::RepeatedField<global::Api.AttachmentActionOption> options_ = new pbc::RepeatedField<global::Api.AttachmentActionOption>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.AttachmentActionOption> Options {
      get { return options_; }
    }

    /// <summary>Field number for the "selected_options" field.</summary>
    public const int SelectedOptionsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Api.AttachmentActionOption> _repeated_selectedOptions_codec
        = pb::FieldCodec.ForMessage(74, global::Api.AttachmentActionOption.Parser);
    private readonly pbc::RepeatedField<global::Api.AttachmentActionOption> selectedOptions_ = new pbc::RepeatedField<global::Api.AttachmentActionOption>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.AttachmentActionOption> SelectedOptions {
      get { return selectedOptions_; }
    }

    /// <summary>Field number for the "option_groups" field.</summary>
    public const int OptionGroupsFieldNumber = 10;
    private static readonly pb::FieldCodec<global::Api.AttachmentActionOptionGroup> _repeated_optionGroups_codec
        = pb::FieldCodec.ForMessage(82, global::Api.AttachmentActionOptionGroup.Parser);
    private readonly pbc::RepeatedField<global::Api.AttachmentActionOptionGroup> optionGroups_ = new pbc::RepeatedField<global::Api.AttachmentActionOptionGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.AttachmentActionOptionGroup> OptionGroups {
      get { return optionGroups_; }
    }

    /// <summary>Field number for the "confirm" field.</summary>
    public const int ConfirmFieldNumber = 11;
    private global::Api.AttachmentConfirmationField confirm_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Api.AttachmentConfirmationField Confirm {
      get { return confirm_; }
      set {
        confirm_ = value;
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 12;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttachmentAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttachmentAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Text != other.Text) return false;
      if (Style != other.Style) return false;
      if (Type != other.Type) return false;
      if (Value != other.Value) return false;
      if (DataSource != other.DataSource) return false;
      if (MinQueryLength != other.MinQueryLength) return false;
      if(!options_.Equals(other.options_)) return false;
      if(!selectedOptions_.Equals(other.selectedOptions_)) return false;
      if(!optionGroups_.Equals(other.optionGroups_)) return false;
      if (!object.Equals(Confirm, other.Confirm)) return false;
      if (Url != other.Url) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (Style.Length != 0) hash ^= Style.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (DataSource.Length != 0) hash ^= DataSource.GetHashCode();
      if (MinQueryLength != 0L) hash ^= MinQueryLength.GetHashCode();
      hash ^= options_.GetHashCode();
      hash ^= selectedOptions_.GetHashCode();
      hash ^= optionGroups_.GetHashCode();
      if (confirm_ != null) hash ^= Confirm.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (Style.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Style);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Type);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Value);
      }
      if (DataSource.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(DataSource);
      }
      if (MinQueryLength != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(MinQueryLength);
      }
      options_.WriteTo(output, _repeated_options_codec);
      selectedOptions_.WriteTo(output, _repeated_selectedOptions_codec);
      optionGroups_.WriteTo(output, _repeated_optionGroups_codec);
      if (confirm_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Confirm);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Url);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (Style.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Style);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (DataSource.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DataSource);
      }
      if (MinQueryLength != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MinQueryLength);
      }
      size += options_.CalculateSize(_repeated_options_codec);
      size += selectedOptions_.CalculateSize(_repeated_selectedOptions_codec);
      size += optionGroups_.CalculateSize(_repeated_optionGroups_codec);
      if (confirm_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Confirm);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttachmentAction other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.Style.Length != 0) {
        Style = other.Style;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.DataSource.Length != 0) {
        DataSource = other.DataSource;
      }
      if (other.MinQueryLength != 0L) {
        MinQueryLength = other.MinQueryLength;
      }
      options_.Add(other.options_);
      selectedOptions_.Add(other.selectedOptions_);
      optionGroups_.Add(other.optionGroups_);
      if (other.confirm_ != null) {
        if (confirm_ == null) {
          confirm_ = new global::Api.AttachmentConfirmationField();
        }
        Confirm.MergeFrom(other.Confirm);
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 26: {
            Style = input.ReadString();
            break;
          }
          case 34: {
            Type = input.ReadString();
            break;
          }
          case 42: {
            Value = input.ReadString();
            break;
          }
          case 50: {
            DataSource = input.ReadString();
            break;
          }
          case 56: {
            MinQueryLength = input.ReadInt64();
            break;
          }
          case 66: {
            options_.AddEntriesFrom(input, _repeated_options_codec);
            break;
          }
          case 74: {
            selectedOptions_.AddEntriesFrom(input, _repeated_selectedOptions_codec);
            break;
          }
          case 82: {
            optionGroups_.AddEntriesFrom(input, _repeated_optionGroups_codec);
            break;
          }
          case 90: {
            if (confirm_ == null) {
              confirm_ = new global::Api.AttachmentConfirmationField();
            }
            input.ReadMessage(confirm_);
            break;
          }
          case 98: {
            Url = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttachmentConfirmationField : pb::IMessage<AttachmentConfirmationField> {
    private static readonly pb::MessageParser<AttachmentConfirmationField> _parser = new pb::MessageParser<AttachmentConfirmationField>(() => new AttachmentConfirmationField());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttachmentConfirmationField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentConfirmationField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentConfirmationField(AttachmentConfirmationField other) : this() {
      title_ = other.title_;
      text_ = other.text_;
      okText_ = other.okText_;
      dismissText_ = other.dismissText_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentConfirmationField Clone() {
      return new AttachmentConfirmationField(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 2;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ok_text" field.</summary>
    public const int OkTextFieldNumber = 3;
    private string okText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OkText {
      get { return okText_; }
      set {
        okText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "dismiss_text" field.</summary>
    public const int DismissTextFieldNumber = 4;
    private string dismissText_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DismissText {
      get { return dismissText_; }
      set {
        dismissText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttachmentConfirmationField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttachmentConfirmationField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (Text != other.Text) return false;
      if (OkText != other.OkText) return false;
      if (DismissText != other.DismissText) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      if (OkText.Length != 0) hash ^= OkText.GetHashCode();
      if (DismissText.Length != 0) hash ^= DismissText.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (Text.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Text);
      }
      if (OkText.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OkText);
      }
      if (DismissText.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DismissText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      if (OkText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OkText);
      }
      if (DismissText.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DismissText);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttachmentConfirmationField other) {
      if (other == null) {
        return;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      if (other.OkText.Length != 0) {
        OkText = other.OkText;
      }
      if (other.DismissText.Length != 0) {
        DismissText = other.DismissText;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            Text = input.ReadString();
            break;
          }
          case 26: {
            OkText = input.ReadString();
            break;
          }
          case 34: {
            DismissText = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttachmentActionOptionGroup : pb::IMessage<AttachmentActionOptionGroup> {
    private static readonly pb::MessageParser<AttachmentActionOptionGroup> _parser = new pb::MessageParser<AttachmentActionOptionGroup>(() => new AttachmentActionOptionGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttachmentActionOptionGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentActionOptionGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentActionOptionGroup(AttachmentActionOptionGroup other) : this() {
      text_ = other.text_;
      options_ = other.options_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentActionOptionGroup Clone() {
      return new AttachmentActionOptionGroup(this);
    }

    /// <summary>Field number for the "text" field.</summary>
    public const int TextFieldNumber = 1;
    private string text_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Text {
      get { return text_; }
      set {
        text_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "options" field.</summary>
    public const int OptionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Api.AttachmentActionOption> _repeated_options_codec
        = pb::FieldCodec.ForMessage(18, global::Api.AttachmentActionOption.Parser);
    private readonly pbc::RepeatedField<global::Api.AttachmentActionOption> options_ = new pbc::RepeatedField<global::Api.AttachmentActionOption>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.AttachmentActionOption> Options {
      get { return options_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttachmentActionOptionGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttachmentActionOptionGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Text != other.Text) return false;
      if(!options_.Equals(other.options_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Text.Length != 0) hash ^= Text.GetHashCode();
      hash ^= options_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Text.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Text);
      }
      options_.WriteTo(output, _repeated_options_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Text.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Text);
      }
      size += options_.CalculateSize(_repeated_options_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttachmentActionOptionGroup other) {
      if (other == null) {
        return;
      }
      if (other.Text.Length != 0) {
        Text = other.Text;
      }
      options_.Add(other.options_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Text = input.ReadString();
            break;
          }
          case 18: {
            options_.AddEntriesFrom(input, _repeated_options_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttachmentActionOption : pb::IMessage<AttachmentActionOption> {
    private static readonly pb::MessageParser<AttachmentActionOption> _parser = new pb::MessageParser<AttachmentActionOption>(() => new AttachmentActionOption());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttachmentActionOption> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentActionOption() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentActionOption(AttachmentActionOption other) : this() {
      title_ = other.title_;
      value_ = other.value_;
      description_ = other.description_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentActionOption Clone() {
      return new AttachmentActionOption(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttachmentActionOption);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttachmentActionOption other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (Value != other.Value) return false;
      if (Description != other.Description) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttachmentActionOption other) {
      if (other == null) {
        return;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AttachmentField : pb::IMessage<AttachmentField> {
    private static readonly pb::MessageParser<AttachmentField> _parser = new pb::MessageParser<AttachmentField>(() => new AttachmentField());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttachmentField> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentField() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentField(AttachmentField other) : this() {
      title_ = other.title_;
      value_ = other.value_;
      short_ = other.short_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachmentField Clone() {
      return new AttachmentField(this);
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 1;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "short" field.</summary>
    public const int ShortFieldNumber = 3;
    private bool short_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Short {
      get { return short_; }
      set {
        short_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttachmentField);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttachmentField other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (Value != other.Value) return false;
      if (Short != other.Short) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (Short != false) hash ^= Short.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (Short != false) {
        output.WriteRawTag(24);
        output.WriteBool(Short);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (Short != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttachmentField other) {
      if (other == null) {
        return;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.Short != false) {
        Short = other.Short;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
          case 24: {
            Short = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class JSON : pb::IMessage<JSON> {
    private static readonly pb::MessageParser<JSON> _parser = new pb::MessageParser<JSON>(() => new JSON());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JSON> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JSON() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JSON(JSON other) : this() {
      data_ = other.data_;
      size_ = other.size_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JSON Clone() {
      return new JSON(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 2;
    private long size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JSON);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JSON other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      if (Size != other.Size) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (Size != 0L) hash ^= Size.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (Size != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Size);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (Size != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JSON other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.Size != 0L) {
        Size = other.Size;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
          case 16: {
            Size = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class File : pb::IMessage<File> {
    private static readonly pb::MessageParser<File> _parser = new pb::MessageParser<File>(() => new File());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<File> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public File() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public File(File other) : this() {
      data_ = other.data_;
      size_ = other.size_;
      name_ = other.name_;
      tags_ = other.tags_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public File Clone() {
      return new File(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "size" field.</summary>
    public const int SizeFieldNumber = 2;
    private long size_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Size {
      get { return size_; }
      set {
        size_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as File);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(File other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      if (Size != other.Size) return false;
      if (Name != other.Name) return false;
      if (!Tags.Equals(other.Tags)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (Size != 0L) hash ^= Size.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (Size != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Size);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      tags_.WriteTo(output, _map_tags_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (Size != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += tags_.CalculateSize(_map_tags_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(File other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.Size != 0L) {
        Size = other.Size;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      tags_.Add(other.tags_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
          case 16: {
            Size = input.ReadInt64();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SlackHook : pb::IMessage<SlackHook> {
    private static readonly pb::MessageParser<SlackHook> _parser = new pb::MessageParser<SlackHook>(() => new SlackHook());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SlackHook> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SlackHook() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SlackHook(SlackHook other) : this() {
      username_ = other.username_;
      channel_ = other.channel_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SlackHook Clone() {
      return new SlackHook(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "channel" field.</summary>
    public const int ChannelFieldNumber = 2;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SlackHook);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SlackHook other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Channel != other.Channel) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Channel);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SlackHook other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Channel = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Product : pb::IMessage<Product> {
    private static readonly pb::MessageParser<Product> _parser = new pb::MessageParser<Product>(() => new Product());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Product> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Product() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Product(Product other) : this() {
      name_ = other.name_;
      amount_ = other.amount_;
      description_ = other.description_;
      files_ = other.files_.Clone();
      tags_ = other.tags_.Clone();
      available_ = other.available_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Product Clone() {
      return new Product(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "amount" field.</summary>
    public const int AmountFieldNumber = 2;
    private long amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "files" field.</summary>
    public const int FilesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Api.File> _repeated_files_codec
        = pb::FieldCodec.ForMessage(34, global::Api.File.Parser);
    private readonly pbc::RepeatedField<global::Api.File> files_ = new pbc::RepeatedField<global::Api.File>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Api.File> Files {
      get { return files_; }
    }

    /// <summary>Field number for the "tags" field.</summary>
    public const int TagsFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_tags_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 42);
    private readonly pbc::MapField<string, string> tags_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Tags {
      get { return tags_; }
    }

    /// <summary>Field number for the "available" field.</summary>
    public const int AvailableFieldNumber = 6;
    private bool available_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Available {
      get { return available_; }
      set {
        available_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Product);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Product other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Amount != other.Amount) return false;
      if (Description != other.Description) return false;
      if(!files_.Equals(other.files_)) return false;
      if (!Tags.Equals(other.Tags)) return false;
      if (Available != other.Available) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Amount != 0L) hash ^= Amount.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= files_.GetHashCode();
      hash ^= Tags.GetHashCode();
      if (Available != false) hash ^= Available.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Amount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Amount);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      files_.WriteTo(output, _repeated_files_codec);
      tags_.WriteTo(output, _map_tags_codec);
      if (Available != false) {
        output.WriteRawTag(48);
        output.WriteBool(Available);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Amount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Amount);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += files_.CalculateSize(_repeated_files_codec);
      size += tags_.CalculateSize(_map_tags_codec);
      if (Available != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Product other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Amount != 0L) {
        Amount = other.Amount;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      files_.Add(other.files_);
      tags_.Add(other.tags_);
      if (other.Available != false) {
        Available = other.Available;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Amount = input.ReadInt64();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            files_.AddEntriesFrom(input, _repeated_files_codec);
            break;
          }
          case 42: {
            tags_.AddEntriesFrom(input, _map_tags_codec);
            break;
          }
          case 48: {
            Available = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class StringMapString : pb::IMessage<StringMapString> {
    private static readonly pb::MessageParser<StringMapString> _parser = new pb::MessageParser<StringMapString>(() => new StringMapString());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StringMapString> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Api.ApiReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringMapString() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringMapString(StringMapString other) : this() {
      map_ = other.map_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StringMapString Clone() {
      return new StringMapString(this);
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_map_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 10);
    private readonly pbc::MapField<string, string> map_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Map {
      get { return map_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StringMapString);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StringMapString other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Map.Equals(other.Map)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Map.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      map_.WriteTo(output, _map_map_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += map_.CalculateSize(_map_map_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StringMapString other) {
      if (other == null) {
        return;
      }
      map_.Add(other.map_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            map_.AddEntriesFrom(input, _map_map_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
