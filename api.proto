syntax="proto3";

package api;

import "google/protobuf/empty.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";

service UserService {
    rpc CreateCustomer(AddCustomerRequest) returns (Customer) {
        option (google.api.http) = {
            post: "/api/users"
            body: "*"
        };
    }
    rpc SubscribeCustomer(SubscribeCustomerRequest) returns (SubscribeCustomerResponse) {
        option (google.api.http) = {
            post: "/api/users/{email}"
            body: "*"
        };
    }
    rpc UnSubscribeCustomer(CancelSubscriptionRequest) returns (Empty) {
        option (google.api.http) = {
            post: "/api/users/{email}"
            body: "*"
        };
    }
    rpc CreateSubscriptionPlan(CreatePlanRequest) returns (CreatePlanResponse) {
        option (google.api.http) = {
            post: "/api/plans/{plan_id}"
            body: "*"
        };
    }
    rpc SMSCustomer(SMSRequest) returns (Empty) {
        option (google.api.http) = {
            post: "/api/customers/sms/{user_id}"
            body: "*"
        };
    }
    rpc CallCustomer(CallRequest) returns (Empty) {
        option (google.api.http) = {
            post: "/api/customers/call/{user_id}"
            body: "*"
        };
    }
    rpc MMSCustomer(MMSRequest) returns (Empty) {
        option (google.api.http) = {
            post: "/api/customers/mms/{user_id}"
            body: "*"
        };
    }
    rpc EmailCustomer(EmailRequest) returns (Empty) {
        option (google.api.http) = {
            post: "/api/customers/email/{user_id}"
            body: "*"
        };
    }
    rpc SMSUser(SMSRequest) returns (Empty) {
        option (google.api.http) = {
            post: "/api/users/sms/{user_id}"
            body: "*"
        };
    }
    rpc CallUser(CallRequest) returns (Empty) {
        option (google.api.http) = {
            post: "/api/users/call/{user_id}"
            body: "*"
        };
    }
    rpc MMSUser(MMSRequest) returns (Empty) {
        option (google.api.http) = {
            post: "/api/users/mms/{user_id}"
            body: "*"
        };
    }
    rpc EmailUser(EmailRequest) returns (Empty) {
        option (google.api.http) = {
            post: "/api/users/email/{user_id}"
            body: "*"
        };
    }
}

message Empty {}


// User is a user of the application
message Customer {
    string user_id = 1;
    string plan = 2;
    string name =3;
    string email=4;
    string description=5;
    string phone=6;
    Address address=8;
    map<string, string> metadata = 9;
    bool deleted=10;
    int64 create_date = 20;
}

message AddCustomerRequest {
    string email =1;
    string plan=2;
    string phone=3;
    string name=4;
    string password=5;
    int64 trial_end=6;
    string description=7;
    Address address=8;
}

message SubscribeCustomerRequest {
    string email =1;
    string plan=2;
    string card_number=3;
    string exp_month=4;
    string exp_year=5;
    string cvc=6;
}

message Address {
    string city=1;
    string country=2;
    string line1=3;
    string line2=4;
    string postal_code=5;
    string state=6;
}

message SubscribeCustomerResponse {
    string subscription_id=1;
}

message CreatePlanResponse {
    string plan_id=1;
}

message CancelSubscriptionRequest {
    string email=1;
}

message CreatePlanRequest {
    string plan_id=1;
    int64 amount =2;
    string service_id=3;
    string service_name=4;
    string friendly_name=5;
}

message SMSRequest {
    string user_id =1;
    string body=2;
}

message CallRequest {
    string user_id =1;
    string callback_url=2;
}

message MMSRequest {
    string user_id=1;
    string body=2;
    string media_url=3;
}

message EmailRequest {
    string user_id =1;
    string subject=2;
    string plain_text=3;
    string html_alt=4;
}

message ChannelReminder {
    string channel_id=1;
    string text=2;
    string time=3;
}

message UserReminder {
    string user_id=1;
    string text=2;
    string time=3;
    ItemRef item=4;
}

message ItemRef {
    string channel=1;
    string file=2;
    string comment=3;
}

message Star {
    string text=1;
    ItemRef item=4;
}

message Pin {
    string text=1;
    ItemRef item=4;
}

enum CustomerIndex {
    ID =0;
    EMAIL=1;
    PHONE=2;
}

message Config {
    bool debug=1;
    string twilio_account=2;
    string twilio_key=3;
    string sendgrid_key=4;
    string stripe_key=5;
    string slack_key=6;
    CustomerIndex customer_index=7;
    EmailAddress email_address=8;
    LogConfig log_config=9;
}

message LogConfig {
    string username=1;
    string channel=2;
}

message EmailAddress {
    string name =1;
    string address =2;
}

message Email {
    EmailAddress from=1;
    RecipientEmail recipient=2;
}

message RecipientEmail {
    EmailAddress to = 2;
    string subject = 3;
    string plain_text = 4;
    string html = 5;
}

message SMS {
    string to=1;
    string from=2;
    string body=3;
    string media_url=4;
    string callback=5;
    string app=6;
}

message Call {
    string to=1;
    string from=2;
    string callback=5;
}

message Fax {
    string to=1;
    string from=2;
    string media_url=3;
    string quality=4;
    string callback=5;
    bool store_media=6;
}

message LogHook {
    string author=1;
    string icon=2;
    string title=3;
}

message SlackAttachment {
    string color=1;
    string fallback=2;
    string callback_id=3;
    int64 id=4;
    string author_id=5;
    string author_name=6;
    string author_link=7;
    string author_icon=8;
    string title=9;
    string title_prefix=10;
    string pretext=11;
    string text=12;
    string image_url=13;
    string thumb_url=14;
   repeated  AttachmentField fields =15;

}
message AttachmentAction {
    string name=1;
    string text=2;
    string style=3;
    string type=4;
    string value=5;
    string data_source=6;
    int64 min_query_length=7;
    repeated AttachmentActionOption options=8;
    repeated AttachmentActionOption selected_options=9;
    repeated AttachmentActionOptionGroup option_groups=10;
    ConfirmationField confirm=11;
    string url=12;
}

message ConfirmationField {
    string title=1;
    string text=2;
    string ok_text=3;
    string dismiss_text=4;
}

message AttachmentActionOptionGroup {
    string text =1;
    repeated AttachmentActionOption options=2;
}

message AttachmentActionOption {
    string title=1;
    string value=2;
    string description =3;
}

message AttachmentField {
    string title=1;
    string value=2;
    bool short =3;
}