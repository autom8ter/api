/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('./google/api/annotations_pb.js');
var common_common_pb = require('./common/common_pb.js');
goog.exportSymbol('proto.api.AddUserRolesRequest', null, global);
goog.exportSymbol('proto.api.Address', null, global);
goog.exportSymbol('proto.api.AppMetadata', null, global);
goog.exportSymbol('proto.api.Card', null, global);
goog.exportSymbol('proto.api.ClientCredentials', null, global);
goog.exportSymbol('proto.api.DefaultGCPCredentials', null, global);
goog.exportSymbol('proto.api.Document', null, global);
goog.exportSymbol('proto.api.Event', null, global);
goog.exportSymbol('proto.api.EventQuery', null, global);
goog.exportSymbol('proto.api.Identity', null, global);
goog.exportSymbol('proto.api.JSONWebKeys', null, global);
goog.exportSymbol('proto.api.JWT', null, global);
goog.exportSymbol('proto.api.Jwks', null, global);
goog.exportSymbol('proto.api.OAuth2', null, global);
goog.exportSymbol('proto.api.Plan', null, global);
goog.exportSymbol('proto.api.Product', null, global);
goog.exportSymbol('proto.api.Query', null, global);
goog.exportSymbol('proto.api.Role', null, global);
goog.exportSymbol('proto.api.SubscribeRequest', null, global);
goog.exportSymbol('proto.api.UnSubscribeRequest', null, global);
goog.exportSymbol('proto.api.User', null, global);
goog.exportSymbol('proto.api.UserMetadata', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.AddUserRolesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.AddUserRolesRequest.repeatedFields_, null);
};
goog.inherits(proto.api.AddUserRolesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.AddUserRolesRequest.displayName = 'proto.api.AddUserRolesRequest';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.AddUserRolesRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.AddUserRolesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.AddUserRolesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.AddUserRolesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.AddUserRolesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: (f = msg.getEmail()) && common_common_pb.Identifier.toObject(includeInstance, f),
    rolesList: jspb.Message.toObjectList(msg.getRolesList(),
    proto.api.Role.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.AddUserRolesRequest}
 */
proto.api.AddUserRolesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.AddUserRolesRequest;
  return proto.api.AddUserRolesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.AddUserRolesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.AddUserRolesRequest}
 */
proto.api.AddUserRolesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.Identifier;
      reader.readMessage(value,common_common_pb.Identifier.deserializeBinaryFromReader);
      msg.setEmail(value);
      break;
    case 2:
      var value = new proto.api.Role;
      reader.readMessage(value,proto.api.Role.deserializeBinaryFromReader);
      msg.addRoles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.AddUserRolesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.AddUserRolesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.AddUserRolesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.AddUserRolesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.api.Role.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.Identifier email = 1;
 * @return {?proto.common.Identifier}
 */
proto.api.AddUserRolesRequest.prototype.getEmail = function() {
  return /** @type{?proto.common.Identifier} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Identifier, 1));
};


/** @param {?proto.common.Identifier|undefined} value */
proto.api.AddUserRolesRequest.prototype.setEmail = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.AddUserRolesRequest.prototype.clearEmail = function() {
  this.setEmail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.AddUserRolesRequest.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Role roles = 2;
 * @return {!Array<!proto.api.Role>}
 */
proto.api.AddUserRolesRequest.prototype.getRolesList = function() {
  return /** @type{!Array<!proto.api.Role>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.Role, 2));
};


/** @param {!Array<!proto.api.Role>} value */
proto.api.AddUserRolesRequest.prototype.setRolesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.api.Role=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.Role}
 */
proto.api.AddUserRolesRequest.prototype.addRoles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.api.Role, opt_index);
};


proto.api.AddUserRolesRequest.prototype.clearRolesList = function() {
  this.setRolesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.SubscribeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.SubscribeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.SubscribeRequest.displayName = 'proto.api.SubscribeRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.SubscribeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.SubscribeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.SubscribeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SubscribeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: (f = msg.getEmail()) && common_common_pb.Identifier.toObject(includeInstance, f),
    plan: (f = msg.getPlan()) && common_common_pb.Identifier.toObject(includeInstance, f),
    card: (f = msg.getCard()) && proto.api.Card.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.SubscribeRequest}
 */
proto.api.SubscribeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.SubscribeRequest;
  return proto.api.SubscribeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.SubscribeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.SubscribeRequest}
 */
proto.api.SubscribeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.Identifier;
      reader.readMessage(value,common_common_pb.Identifier.deserializeBinaryFromReader);
      msg.setEmail(value);
      break;
    case 2:
      var value = new common_common_pb.Identifier;
      reader.readMessage(value,common_common_pb.Identifier.deserializeBinaryFromReader);
      msg.setPlan(value);
      break;
    case 3:
      var value = new proto.api.Card;
      reader.readMessage(value,proto.api.Card.deserializeBinaryFromReader);
      msg.setCard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.SubscribeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.SubscribeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.SubscribeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.SubscribeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getPlan();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getCard();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.Card.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.Identifier email = 1;
 * @return {?proto.common.Identifier}
 */
proto.api.SubscribeRequest.prototype.getEmail = function() {
  return /** @type{?proto.common.Identifier} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Identifier, 1));
};


/** @param {?proto.common.Identifier|undefined} value */
proto.api.SubscribeRequest.prototype.setEmail = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.SubscribeRequest.prototype.clearEmail = function() {
  this.setEmail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SubscribeRequest.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.Identifier plan = 2;
 * @return {?proto.common.Identifier}
 */
proto.api.SubscribeRequest.prototype.getPlan = function() {
  return /** @type{?proto.common.Identifier} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Identifier, 2));
};


/** @param {?proto.common.Identifier|undefined} value */
proto.api.SubscribeRequest.prototype.setPlan = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.SubscribeRequest.prototype.clearPlan = function() {
  this.setPlan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SubscribeRequest.prototype.hasPlan = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Card card = 3;
 * @return {?proto.api.Card}
 */
proto.api.SubscribeRequest.prototype.getCard = function() {
  return /** @type{?proto.api.Card} */ (
    jspb.Message.getWrapperField(this, proto.api.Card, 3));
};


/** @param {?proto.api.Card|undefined} value */
proto.api.SubscribeRequest.prototype.setCard = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.SubscribeRequest.prototype.clearCard = function() {
  this.setCard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.SubscribeRequest.prototype.hasCard = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.UnSubscribeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.UnSubscribeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.UnSubscribeRequest.displayName = 'proto.api.UnSubscribeRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.UnSubscribeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.api.UnSubscribeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.UnSubscribeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.UnSubscribeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: (f = msg.getEmail()) && common_common_pb.Identifier.toObject(includeInstance, f),
    plan: (f = msg.getPlan()) && common_common_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.UnSubscribeRequest}
 */
proto.api.UnSubscribeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.UnSubscribeRequest;
  return proto.api.UnSubscribeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.UnSubscribeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.UnSubscribeRequest}
 */
proto.api.UnSubscribeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.Identifier;
      reader.readMessage(value,common_common_pb.Identifier.deserializeBinaryFromReader);
      msg.setEmail(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setPlan(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.UnSubscribeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.UnSubscribeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.UnSubscribeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.UnSubscribeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getPlan();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.Identifier email = 1;
 * @return {?proto.common.Identifier}
 */
proto.api.UnSubscribeRequest.prototype.getEmail = function() {
  return /** @type{?proto.common.Identifier} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Identifier, 1));
};


/** @param {?proto.common.Identifier|undefined} value */
proto.api.UnSubscribeRequest.prototype.setEmail = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.UnSubscribeRequest.prototype.clearEmail = function() {
  this.setEmail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.UnSubscribeRequest.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String plan = 2;
 * @return {?proto.common.String}
 */
proto.api.UnSubscribeRequest.prototype.getPlan = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.UnSubscribeRequest.prototype.setPlan = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.UnSubscribeRequest.prototype.clearPlan = function() {
  this.setPlan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.UnSubscribeRequest.prototype.hasPlan = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Card = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Card, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Card.displayName = 'proto.api.Card';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Card.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Card.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Card} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Card.toObject = function(includeInstance, msg) {
  var f, obj = {
    number: (f = msg.getNumber()) && common_common_pb.Identifier.toObject(includeInstance, f),
    expMonth: (f = msg.getExpMonth()) && common_common_pb.String.toObject(includeInstance, f),
    expYear: (f = msg.getExpYear()) && common_common_pb.String.toObject(includeInstance, f),
    cvc: (f = msg.getCvc()) && common_common_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Card}
 */
proto.api.Card.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Card;
  return proto.api.Card.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Card} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Card}
 */
proto.api.Card.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.Identifier;
      reader.readMessage(value,common_common_pb.Identifier.deserializeBinaryFromReader);
      msg.setNumber(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setExpMonth(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setExpYear(value);
      break;
    case 4:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setCvc(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Card.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Card.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Card} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Card.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getNumber();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getExpMonth();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExpYear();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getCvc();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.Identifier number = 1;
 * @return {?proto.common.Identifier}
 */
proto.api.Card.prototype.getNumber = function() {
  return /** @type{?proto.common.Identifier} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Identifier, 1));
};


/** @param {?proto.common.Identifier|undefined} value */
proto.api.Card.prototype.setNumber = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.Card.prototype.clearNumber = function() {
  this.setNumber(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Card.prototype.hasNumber = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String exp_month = 2;
 * @return {?proto.common.String}
 */
proto.api.Card.prototype.getExpMonth = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Card.prototype.setExpMonth = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Card.prototype.clearExpMonth = function() {
  this.setExpMonth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Card.prototype.hasExpMonth = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String exp_year = 3;
 * @return {?proto.common.String}
 */
proto.api.Card.prototype.getExpYear = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Card.prototype.setExpYear = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.Card.prototype.clearExpYear = function() {
  this.setExpYear(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Card.prototype.hasExpYear = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.String cvc = 4;
 * @return {?proto.common.String}
 */
proto.api.Card.prototype.getCvc = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 4));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Card.prototype.setCvc = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.Card.prototype.clearCvc = function() {
  this.setCvc(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Card.prototype.hasCvc = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.User.repeatedFields_, null);
};
goog.inherits(proto.api.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.User.displayName = 'proto.api.User';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.User.repeatedFields_ = [22];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.User.prototype.toObject = function(opt_includeInstance) {
  return proto.api.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: (f = msg.getUserId()) && common_common_pb.Identifier.toObject(includeInstance, f),
    name: (f = msg.getName()) && common_common_pb.String.toObject(includeInstance, f),
    givenName: (f = msg.getGivenName()) && common_common_pb.String.toObject(includeInstance, f),
    familyName: (f = msg.getFamilyName()) && common_common_pb.String.toObject(includeInstance, f),
    gender: (f = msg.getGender()) && common_common_pb.String.toObject(includeInstance, f),
    birthdate: (f = msg.getBirthdate()) && common_common_pb.String.toObject(includeInstance, f),
    email: (f = msg.getEmail()) && common_common_pb.Identifier.toObject(includeInstance, f),
    phoneNumber: (f = msg.getPhoneNumber()) && common_common_pb.Identifier.toObject(includeInstance, f),
    picture: (f = msg.getPicture()) && common_common_pb.String.toObject(includeInstance, f),
    nickname: (f = msg.getNickname()) && common_common_pb.String.toObject(includeInstance, f),
    userMetadata: (f = msg.getUserMetadata()) && common_common_pb.StringMap.toObject(includeInstance, f),
    appMetadata: (f = msg.getAppMetadata()) && common_common_pb.StringMap.toObject(includeInstance, f),
    lastIp: (f = msg.getLastIp()) && common_common_pb.String.toObject(includeInstance, f),
    blocked: (f = msg.getBlocked()) && common_common_pb.Bool.toObject(includeInstance, f),
    multifactor: (f = msg.getMultifactor()) && common_common_pb.StringArray.toObject(includeInstance, f),
    createdAt: (f = msg.getCreatedAt()) && common_common_pb.String.toObject(includeInstance, f),
    updatedAt: (f = msg.getUpdatedAt()) && common_common_pb.String.toObject(includeInstance, f),
    phoneVerified: (f = msg.getPhoneVerified()) && common_common_pb.Bool.toObject(includeInstance, f),
    emailVerified: (f = msg.getEmailVerified()) && common_common_pb.Bool.toObject(includeInstance, f),
    password: (f = msg.getPassword()) && common_common_pb.String.toObject(includeInstance, f),
    identitiesList: jspb.Message.toObjectList(msg.getIdentitiesList(),
    proto.api.Identity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.User}
 */
proto.api.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.User;
  return proto.api.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.User}
 */
proto.api.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.Identifier;
      reader.readMessage(value,common_common_pb.Identifier.deserializeBinaryFromReader);
      msg.setUserId(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setGivenName(value);
      break;
    case 4:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setFamilyName(value);
      break;
    case 5:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setGender(value);
      break;
    case 6:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setBirthdate(value);
      break;
    case 7:
      var value = new common_common_pb.Identifier;
      reader.readMessage(value,common_common_pb.Identifier.deserializeBinaryFromReader);
      msg.setEmail(value);
      break;
    case 8:
      var value = new common_common_pb.Identifier;
      reader.readMessage(value,common_common_pb.Identifier.deserializeBinaryFromReader);
      msg.setPhoneNumber(value);
      break;
    case 9:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setPicture(value);
      break;
    case 14:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setNickname(value);
      break;
    case 10:
      var value = new common_common_pb.StringMap;
      reader.readMessage(value,common_common_pb.StringMap.deserializeBinaryFromReader);
      msg.setUserMetadata(value);
      break;
    case 11:
      var value = new common_common_pb.StringMap;
      reader.readMessage(value,common_common_pb.StringMap.deserializeBinaryFromReader);
      msg.setAppMetadata(value);
      break;
    case 12:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setLastIp(value);
      break;
    case 13:
      var value = new common_common_pb.Bool;
      reader.readMessage(value,common_common_pb.Bool.deserializeBinaryFromReader);
      msg.setBlocked(value);
      break;
    case 15:
      var value = new common_common_pb.StringArray;
      reader.readMessage(value,common_common_pb.StringArray.deserializeBinaryFromReader);
      msg.setMultifactor(value);
      break;
    case 17:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setCreatedAt(value);
      break;
    case 18:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setUpdatedAt(value);
      break;
    case 19:
      var value = new common_common_pb.Bool;
      reader.readMessage(value,common_common_pb.Bool.deserializeBinaryFromReader);
      msg.setPhoneVerified(value);
      break;
    case 20:
      var value = new common_common_pb.Bool;
      reader.readMessage(value,common_common_pb.Bool.deserializeBinaryFromReader);
      msg.setEmailVerified(value);
      break;
    case 21:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setPassword(value);
      break;
    case 22:
      var value = new proto.api.Identity;
      reader.readMessage(value,proto.api.Identity.deserializeBinaryFromReader);
      msg.addIdentities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getGivenName();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getFamilyName();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getGender();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getBirthdate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getEmail();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      common_common_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getPhoneNumber();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      common_common_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getPicture();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getNickname();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getUserMetadata();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      common_common_pb.StringMap.serializeBinaryToWriter
    );
  }
  f = message.getAppMetadata();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      common_common_pb.StringMap.serializeBinaryToWriter
    );
  }
  f = message.getLastIp();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getBlocked();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      common_common_pb.Bool.serializeBinaryToWriter
    );
  }
  f = message.getMultifactor();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      common_common_pb.StringArray.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getPhoneVerified();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      common_common_pb.Bool.serializeBinaryToWriter
    );
  }
  f = message.getEmailVerified();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      common_common_pb.Bool.serializeBinaryToWriter
    );
  }
  f = message.getPassword();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getIdentitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      22,
      f,
      proto.api.Identity.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.Identifier user_id = 1;
 * @return {?proto.common.Identifier}
 */
proto.api.User.prototype.getUserId = function() {
  return /** @type{?proto.common.Identifier} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Identifier, 1));
};


/** @param {?proto.common.Identifier|undefined} value */
proto.api.User.prototype.setUserId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.User.prototype.clearUserId = function() {
  this.setUserId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String name = 2;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getName = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setName = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.User.prototype.clearName = function() {
  this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String given_name = 3;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getGivenName = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setGivenName = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.User.prototype.clearGivenName = function() {
  this.setGivenName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasGivenName = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.String family_name = 4;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getFamilyName = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 4));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setFamilyName = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.User.prototype.clearFamilyName = function() {
  this.setFamilyName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasFamilyName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional common.String gender = 5;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getGender = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 5));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setGender = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.User.prototype.clearGender = function() {
  this.setGender(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasGender = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional common.String birthdate = 6;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getBirthdate = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 6));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setBirthdate = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.api.User.prototype.clearBirthdate = function() {
  this.setBirthdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasBirthdate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional common.Identifier email = 7;
 * @return {?proto.common.Identifier}
 */
proto.api.User.prototype.getEmail = function() {
  return /** @type{?proto.common.Identifier} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Identifier, 7));
};


/** @param {?proto.common.Identifier|undefined} value */
proto.api.User.prototype.setEmail = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.api.User.prototype.clearEmail = function() {
  this.setEmail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional common.Identifier phone_number = 8;
 * @return {?proto.common.Identifier}
 */
proto.api.User.prototype.getPhoneNumber = function() {
  return /** @type{?proto.common.Identifier} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Identifier, 8));
};


/** @param {?proto.common.Identifier|undefined} value */
proto.api.User.prototype.setPhoneNumber = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.api.User.prototype.clearPhoneNumber = function() {
  this.setPhoneNumber(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasPhoneNumber = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional common.String picture = 9;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getPicture = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 9));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setPicture = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.api.User.prototype.clearPicture = function() {
  this.setPicture(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasPicture = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional common.String nickname = 14;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getNickname = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 14));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setNickname = function(value) {
  jspb.Message.setWrapperField(this, 14, value);
};


proto.api.User.prototype.clearNickname = function() {
  this.setNickname(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasNickname = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional common.StringMap user_metadata = 10;
 * @return {?proto.common.StringMap}
 */
proto.api.User.prototype.getUserMetadata = function() {
  return /** @type{?proto.common.StringMap} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringMap, 10));
};


/** @param {?proto.common.StringMap|undefined} value */
proto.api.User.prototype.setUserMetadata = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.api.User.prototype.clearUserMetadata = function() {
  this.setUserMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasUserMetadata = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional common.StringMap app_metadata = 11;
 * @return {?proto.common.StringMap}
 */
proto.api.User.prototype.getAppMetadata = function() {
  return /** @type{?proto.common.StringMap} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringMap, 11));
};


/** @param {?proto.common.StringMap|undefined} value */
proto.api.User.prototype.setAppMetadata = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


proto.api.User.prototype.clearAppMetadata = function() {
  this.setAppMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasAppMetadata = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional common.String last_ip = 12;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getLastIp = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 12));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setLastIp = function(value) {
  jspb.Message.setWrapperField(this, 12, value);
};


proto.api.User.prototype.clearLastIp = function() {
  this.setLastIp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasLastIp = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional common.Bool blocked = 13;
 * @return {?proto.common.Bool}
 */
proto.api.User.prototype.getBlocked = function() {
  return /** @type{?proto.common.Bool} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Bool, 13));
};


/** @param {?proto.common.Bool|undefined} value */
proto.api.User.prototype.setBlocked = function(value) {
  jspb.Message.setWrapperField(this, 13, value);
};


proto.api.User.prototype.clearBlocked = function() {
  this.setBlocked(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasBlocked = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional common.StringArray multifactor = 15;
 * @return {?proto.common.StringArray}
 */
proto.api.User.prototype.getMultifactor = function() {
  return /** @type{?proto.common.StringArray} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringArray, 15));
};


/** @param {?proto.common.StringArray|undefined} value */
proto.api.User.prototype.setMultifactor = function(value) {
  jspb.Message.setWrapperField(this, 15, value);
};


proto.api.User.prototype.clearMultifactor = function() {
  this.setMultifactor(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasMultifactor = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional common.String created_at = 17;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getCreatedAt = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 17));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setCreatedAt = function(value) {
  jspb.Message.setWrapperField(this, 17, value);
};


proto.api.User.prototype.clearCreatedAt = function() {
  this.setCreatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasCreatedAt = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional common.String updated_at = 18;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getUpdatedAt = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 18));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setUpdatedAt = function(value) {
  jspb.Message.setWrapperField(this, 18, value);
};


proto.api.User.prototype.clearUpdatedAt = function() {
  this.setUpdatedAt(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasUpdatedAt = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional common.Bool phone_verified = 19;
 * @return {?proto.common.Bool}
 */
proto.api.User.prototype.getPhoneVerified = function() {
  return /** @type{?proto.common.Bool} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Bool, 19));
};


/** @param {?proto.common.Bool|undefined} value */
proto.api.User.prototype.setPhoneVerified = function(value) {
  jspb.Message.setWrapperField(this, 19, value);
};


proto.api.User.prototype.clearPhoneVerified = function() {
  this.setPhoneVerified(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasPhoneVerified = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional common.Bool email_verified = 20;
 * @return {?proto.common.Bool}
 */
proto.api.User.prototype.getEmailVerified = function() {
  return /** @type{?proto.common.Bool} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Bool, 20));
};


/** @param {?proto.common.Bool|undefined} value */
proto.api.User.prototype.setEmailVerified = function(value) {
  jspb.Message.setWrapperField(this, 20, value);
};


proto.api.User.prototype.clearEmailVerified = function() {
  this.setEmailVerified(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasEmailVerified = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional common.String password = 21;
 * @return {?proto.common.String}
 */
proto.api.User.prototype.getPassword = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 21));
};


/** @param {?proto.common.String|undefined} value */
proto.api.User.prototype.setPassword = function(value) {
  jspb.Message.setWrapperField(this, 21, value);
};


proto.api.User.prototype.clearPassword = function() {
  this.setPassword(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.User.prototype.hasPassword = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * repeated Identity identities = 22;
 * @return {!Array<!proto.api.Identity>}
 */
proto.api.User.prototype.getIdentitiesList = function() {
  return /** @type{!Array<!proto.api.Identity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.Identity, 22));
};


/** @param {!Array<!proto.api.Identity>} value */
proto.api.User.prototype.setIdentitiesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 22, value);
};


/**
 * @param {!proto.api.Identity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.Identity}
 */
proto.api.User.prototype.addIdentities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 22, opt_value, proto.api.Identity, opt_index);
};


proto.api.User.prototype.clearIdentitiesList = function() {
  this.setIdentitiesList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.UserMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.UserMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.UserMetadata.displayName = 'proto.api.UserMetadata';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.UserMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.api.UserMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.UserMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.UserMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    status: (f = msg.getStatus()) && common_common_pb.String.toObject(includeInstance, f),
    bio: (f = msg.getBio()) && common_common_pb.StringMap.toObject(includeInstance, f),
    address: (f = msg.getAddress()) && proto.api.Address.toObject(includeInstance, f),
    tags: (f = msg.getTags()) && common_common_pb.StringMap.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.UserMetadata}
 */
proto.api.UserMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.UserMetadata;
  return proto.api.UserMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.UserMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.UserMetadata}
 */
proto.api.UserMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 2:
      var value = new common_common_pb.StringMap;
      reader.readMessage(value,common_common_pb.StringMap.deserializeBinaryFromReader);
      msg.setBio(value);
      break;
    case 3:
      var value = new proto.api.Address;
      reader.readMessage(value,proto.api.Address.deserializeBinaryFromReader);
      msg.setAddress(value);
      break;
    case 4:
      var value = new common_common_pb.StringMap;
      reader.readMessage(value,common_common_pb.StringMap.deserializeBinaryFromReader);
      msg.setTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.UserMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.UserMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.UserMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.UserMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getBio();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.StringMap.serializeBinaryToWriter
    );
  }
  f = message.getAddress();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.Address.serializeBinaryToWriter
    );
  }
  f = message.getTags();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.StringMap.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String status = 1;
 * @return {?proto.common.String}
 */
proto.api.UserMetadata.prototype.getStatus = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.UserMetadata.prototype.setStatus = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.UserMetadata.prototype.clearStatus = function() {
  this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.UserMetadata.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.StringMap bio = 2;
 * @return {?proto.common.StringMap}
 */
proto.api.UserMetadata.prototype.getBio = function() {
  return /** @type{?proto.common.StringMap} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringMap, 2));
};


/** @param {?proto.common.StringMap|undefined} value */
proto.api.UserMetadata.prototype.setBio = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.UserMetadata.prototype.clearBio = function() {
  this.setBio(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.UserMetadata.prototype.hasBio = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Address address = 3;
 * @return {?proto.api.Address}
 */
proto.api.UserMetadata.prototype.getAddress = function() {
  return /** @type{?proto.api.Address} */ (
    jspb.Message.getWrapperField(this, proto.api.Address, 3));
};


/** @param {?proto.api.Address|undefined} value */
proto.api.UserMetadata.prototype.setAddress = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.UserMetadata.prototype.clearAddress = function() {
  this.setAddress(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.UserMetadata.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.StringMap tags = 4;
 * @return {?proto.common.StringMap}
 */
proto.api.UserMetadata.prototype.getTags = function() {
  return /** @type{?proto.common.StringMap} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringMap, 4));
};


/** @param {?proto.common.StringMap|undefined} value */
proto.api.UserMetadata.prototype.setTags = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.UserMetadata.prototype.clearTags = function() {
  this.setTags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.UserMetadata.prototype.hasTags = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Address = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Address, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Address.displayName = 'proto.api.Address';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Address.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Address.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Address} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Address.toObject = function(includeInstance, msg) {
  var f, obj = {
    city: (f = msg.getCity()) && common_common_pb.String.toObject(includeInstance, f),
    state: (f = msg.getState()) && common_common_pb.String.toObject(includeInstance, f),
    line1: (f = msg.getLine1()) && common_common_pb.String.toObject(includeInstance, f),
    line2: (f = msg.getLine2()) && common_common_pb.String.toObject(includeInstance, f),
    zip: (f = msg.getZip()) && common_common_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Address}
 */
proto.api.Address.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Address;
  return proto.api.Address.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Address} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Address}
 */
proto.api.Address.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setCity(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setLine1(value);
      break;
    case 4:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setLine2(value);
      break;
    case 5:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setZip(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Address.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Address.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Address} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Address.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCity();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getLine1();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getLine2();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getZip();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String city = 1;
 * @return {?proto.common.String}
 */
proto.api.Address.prototype.getCity = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Address.prototype.setCity = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.Address.prototype.clearCity = function() {
  this.setCity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Address.prototype.hasCity = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String state = 2;
 * @return {?proto.common.String}
 */
proto.api.Address.prototype.getState = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Address.prototype.setState = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Address.prototype.clearState = function() {
  this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Address.prototype.hasState = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String line1 = 3;
 * @return {?proto.common.String}
 */
proto.api.Address.prototype.getLine1 = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Address.prototype.setLine1 = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.Address.prototype.clearLine1 = function() {
  this.setLine1(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Address.prototype.hasLine1 = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.String line2 = 4;
 * @return {?proto.common.String}
 */
proto.api.Address.prototype.getLine2 = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 4));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Address.prototype.setLine2 = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.Address.prototype.clearLine2 = function() {
  this.setLine2(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Address.prototype.hasLine2 = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional common.String zip = 5;
 * @return {?proto.common.String}
 */
proto.api.Address.prototype.getZip = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 5));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Address.prototype.setZip = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.Address.prototype.clearZip = function() {
  this.setZip(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Address.prototype.hasZip = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.AppMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.AppMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.AppMetadata.displayName = 'proto.api.AppMetadata';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.AppMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.api.AppMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.AppMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.AppMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    description: (f = msg.getDescription()) && common_common_pb.String.toObject(includeInstance, f),
    accountBalance: (f = msg.getAccountBalance()) && common_common_pb.String.toObject(includeInstance, f),
    plan: (f = msg.getPlan()) && proto.api.Plan.toObject(includeInstance, f),
    tags: (f = msg.getTags()) && common_common_pb.StringMap.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.AppMetadata}
 */
proto.api.AppMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.AppMetadata;
  return proto.api.AppMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.AppMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.AppMetadata}
 */
proto.api.AppMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setDescription(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setAccountBalance(value);
      break;
    case 3:
      var value = new proto.api.Plan;
      reader.readMessage(value,proto.api.Plan.deserializeBinaryFromReader);
      msg.setPlan(value);
      break;
    case 4:
      var value = new common_common_pb.StringMap;
      reader.readMessage(value,common_common_pb.StringMap.deserializeBinaryFromReader);
      msg.setTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.AppMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.AppMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.AppMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.AppMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDescription();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getAccountBalance();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getPlan();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.api.Plan.serializeBinaryToWriter
    );
  }
  f = message.getTags();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.StringMap.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String description = 1;
 * @return {?proto.common.String}
 */
proto.api.AppMetadata.prototype.getDescription = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.AppMetadata.prototype.setDescription = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.AppMetadata.prototype.clearDescription = function() {
  this.setDescription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.AppMetadata.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String account_balance = 2;
 * @return {?proto.common.String}
 */
proto.api.AppMetadata.prototype.getAccountBalance = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.AppMetadata.prototype.setAccountBalance = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.AppMetadata.prototype.clearAccountBalance = function() {
  this.setAccountBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.AppMetadata.prototype.hasAccountBalance = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Plan plan = 3;
 * @return {?proto.api.Plan}
 */
proto.api.AppMetadata.prototype.getPlan = function() {
  return /** @type{?proto.api.Plan} */ (
    jspb.Message.getWrapperField(this, proto.api.Plan, 3));
};


/** @param {?proto.api.Plan|undefined} value */
proto.api.AppMetadata.prototype.setPlan = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.AppMetadata.prototype.clearPlan = function() {
  this.setPlan(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.AppMetadata.prototype.hasPlan = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.StringMap tags = 4;
 * @return {?proto.common.StringMap}
 */
proto.api.AppMetadata.prototype.getTags = function() {
  return /** @type{?proto.common.StringMap} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringMap, 4));
};


/** @param {?proto.common.StringMap|undefined} value */
proto.api.AppMetadata.prototype.setTags = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.AppMetadata.prototype.clearTags = function() {
  this.setTags(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.AppMetadata.prototype.hasTags = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Plan = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Plan, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Plan.displayName = 'proto.api.Plan';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Plan.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Plan.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Plan} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Plan.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && common_common_pb.Identifier.toObject(includeInstance, f),
    active: (f = msg.getActive()) && common_common_pb.Bool.toObject(includeInstance, f),
    amount: (f = msg.getAmount()) && common_common_pb.Int64.toObject(includeInstance, f),
    interval: (f = msg.getInterval()) && common_common_pb.String.toObject(includeInstance, f),
    nickname: (f = msg.getNickname()) && common_common_pb.String.toObject(includeInstance, f),
    product: (f = msg.getProduct()) && proto.api.Product.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Plan}
 */
proto.api.Plan.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Plan;
  return proto.api.Plan.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Plan} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Plan}
 */
proto.api.Plan.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.Identifier;
      reader.readMessage(value,common_common_pb.Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new common_common_pb.Bool;
      reader.readMessage(value,common_common_pb.Bool.deserializeBinaryFromReader);
      msg.setActive(value);
      break;
    case 3:
      var value = new common_common_pb.Int64;
      reader.readMessage(value,common_common_pb.Int64.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    case 4:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setInterval(value);
      break;
    case 5:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setNickname(value);
      break;
    case 6:
      var value = new proto.api.Product;
      reader.readMessage(value,proto.api.Product.deserializeBinaryFromReader);
      msg.setProduct(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Plan.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Plan.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Plan} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Plan.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getActive();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.Bool.serializeBinaryToWriter
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.Int64.serializeBinaryToWriter
    );
  }
  f = message.getInterval();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getNickname();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getProduct();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.api.Product.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.Identifier id = 1;
 * @return {?proto.common.Identifier}
 */
proto.api.Plan.prototype.getId = function() {
  return /** @type{?proto.common.Identifier} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Identifier, 1));
};


/** @param {?proto.common.Identifier|undefined} value */
proto.api.Plan.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.Plan.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Plan.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.Bool active = 2;
 * @return {?proto.common.Bool}
 */
proto.api.Plan.prototype.getActive = function() {
  return /** @type{?proto.common.Bool} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Bool, 2));
};


/** @param {?proto.common.Bool|undefined} value */
proto.api.Plan.prototype.setActive = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Plan.prototype.clearActive = function() {
  this.setActive(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Plan.prototype.hasActive = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.Int64 amount = 3;
 * @return {?proto.common.Int64}
 */
proto.api.Plan.prototype.getAmount = function() {
  return /** @type{?proto.common.Int64} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Int64, 3));
};


/** @param {?proto.common.Int64|undefined} value */
proto.api.Plan.prototype.setAmount = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.Plan.prototype.clearAmount = function() {
  this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Plan.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.String interval = 4;
 * @return {?proto.common.String}
 */
proto.api.Plan.prototype.getInterval = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 4));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Plan.prototype.setInterval = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.Plan.prototype.clearInterval = function() {
  this.setInterval(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Plan.prototype.hasInterval = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional common.String nickname = 5;
 * @return {?proto.common.String}
 */
proto.api.Plan.prototype.getNickname = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 5));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Plan.prototype.setNickname = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.Plan.prototype.clearNickname = function() {
  this.setNickname(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Plan.prototype.hasNickname = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Product product = 6;
 * @return {?proto.api.Product}
 */
proto.api.Plan.prototype.getProduct = function() {
  return /** @type{?proto.api.Product} */ (
    jspb.Message.getWrapperField(this, proto.api.Product, 6));
};


/** @param {?proto.api.Product|undefined} value */
proto.api.Plan.prototype.setProduct = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.api.Plan.prototype.clearProduct = function() {
  this.setProduct(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Plan.prototype.hasProduct = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Product = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Product, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Product.displayName = 'proto.api.Product';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Product.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Product.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Product} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Product.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && common_common_pb.Identifier.toObject(includeInstance, f),
    description: (f = msg.getDescription()) && common_common_pb.String.toObject(includeInstance, f),
    url: (f = msg.getUrl()) && common_common_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Product}
 */
proto.api.Product.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Product;
  return proto.api.Product.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Product} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Product}
 */
proto.api.Product.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.Identifier;
      reader.readMessage(value,common_common_pb.Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setDescription(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Product.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Product.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Product} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Product.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getUrl();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.Identifier id = 1;
 * @return {?proto.common.Identifier}
 */
proto.api.Product.prototype.getId = function() {
  return /** @type{?proto.common.Identifier} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Identifier, 1));
};


/** @param {?proto.common.Identifier|undefined} value */
proto.api.Product.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.Product.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Product.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String description = 2;
 * @return {?proto.common.String}
 */
proto.api.Product.prototype.getDescription = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Product.prototype.setDescription = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Product.prototype.clearDescription = function() {
  this.setDescription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Product.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String url = 3;
 * @return {?proto.common.String}
 */
proto.api.Product.prototype.getUrl = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Product.prototype.setUrl = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.Product.prototype.clearUrl = function() {
  this.setUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Product.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Identity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Identity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Identity.displayName = 'proto.api.Identity';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Identity.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Identity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Identity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Identity.toObject = function(includeInstance, msg) {
  var f, obj = {
    connection: (f = msg.getConnection()) && common_common_pb.String.toObject(includeInstance, f),
    userId: (f = msg.getUserId()) && common_common_pb.Identifier.toObject(includeInstance, f),
    provider: (f = msg.getProvider()) && common_common_pb.String.toObject(includeInstance, f),
    issocial: (f = msg.getIssocial()) && common_common_pb.Bool.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Identity}
 */
proto.api.Identity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Identity;
  return proto.api.Identity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Identity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Identity}
 */
proto.api.Identity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setConnection(value);
      break;
    case 2:
      var value = new common_common_pb.Identifier;
      reader.readMessage(value,common_common_pb.Identifier.deserializeBinaryFromReader);
      msg.setUserId(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setProvider(value);
      break;
    case 4:
      var value = new common_common_pb.Bool;
      reader.readMessage(value,common_common_pb.Bool.deserializeBinaryFromReader);
      msg.setIssocial(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Identity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Identity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Identity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Identity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConnection();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getUserId();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getProvider();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getIssocial();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.Bool.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String connection = 1;
 * @return {?proto.common.String}
 */
proto.api.Identity.prototype.getConnection = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Identity.prototype.setConnection = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.Identity.prototype.clearConnection = function() {
  this.setConnection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Identity.prototype.hasConnection = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.Identifier user_id = 2;
 * @return {?proto.common.Identifier}
 */
proto.api.Identity.prototype.getUserId = function() {
  return /** @type{?proto.common.Identifier} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Identifier, 2));
};


/** @param {?proto.common.Identifier|undefined} value */
proto.api.Identity.prototype.setUserId = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Identity.prototype.clearUserId = function() {
  this.setUserId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Identity.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String provider = 3;
 * @return {?proto.common.String}
 */
proto.api.Identity.prototype.getProvider = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Identity.prototype.setProvider = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.Identity.prototype.clearProvider = function() {
  this.setProvider(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Identity.prototype.hasProvider = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.Bool isSocial = 4;
 * @return {?proto.common.Bool}
 */
proto.api.Identity.prototype.getIssocial = function() {
  return /** @type{?proto.common.Bool} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Bool, 4));
};


/** @param {?proto.common.Bool|undefined} value */
proto.api.Identity.prototype.setIssocial = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.Identity.prototype.clearIssocial = function() {
  this.setIssocial(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Identity.prototype.hasIssocial = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Role = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Role, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Role.displayName = 'proto.api.Role';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Role.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Role.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Role} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Role.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: (f = msg.getId()) && common_common_pb.Identifier.toObject(includeInstance, f),
    name: (f = msg.getName()) && common_common_pb.String.toObject(includeInstance, f),
    description: (f = msg.getDescription()) && common_common_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Role}
 */
proto.api.Role.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Role;
  return proto.api.Role.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Role} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Role}
 */
proto.api.Role.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.Identifier;
      reader.readMessage(value,common_common_pb.Identifier.deserializeBinaryFromReader);
      msg.setId(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Role.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Role.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Role} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Role.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getDescription();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.Identifier id = 1;
 * @return {?proto.common.Identifier}
 */
proto.api.Role.prototype.getId = function() {
  return /** @type{?proto.common.Identifier} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Identifier, 1));
};


/** @param {?proto.common.Identifier|undefined} value */
proto.api.Role.prototype.setId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.Role.prototype.clearId = function() {
  this.setId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Role.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String name = 2;
 * @return {?proto.common.String}
 */
proto.api.Role.prototype.getName = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Role.prototype.setName = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Role.prototype.clearName = function() {
  this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Role.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String description = 3;
 * @return {?proto.common.String}
 */
proto.api.Role.prototype.getDescription = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Role.prototype.setDescription = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.Role.prototype.clearDescription = function() {
  this.setDescription(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Role.prototype.hasDescription = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.OAuth2 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.OAuth2, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.OAuth2.displayName = 'proto.api.OAuth2';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.OAuth2.prototype.toObject = function(opt_includeInstance) {
  return proto.api.OAuth2.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.OAuth2} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.OAuth2.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: (f = msg.getClientId()) && common_common_pb.String.toObject(includeInstance, f),
    clientSecret: (f = msg.getClientSecret()) && common_common_pb.String.toObject(includeInstance, f),
    tokenUrl: (f = msg.getTokenUrl()) && common_common_pb.String.toObject(includeInstance, f),
    authUrl: (f = msg.getAuthUrl()) && common_common_pb.String.toObject(includeInstance, f),
    scopes: (f = msg.getScopes()) && common_common_pb.StringArray.toObject(includeInstance, f),
    redirect: (f = msg.getRedirect()) && common_common_pb.String.toObject(includeInstance, f),
    code: (f = msg.getCode()) && common_common_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.OAuth2}
 */
proto.api.OAuth2.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.OAuth2;
  return proto.api.OAuth2.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.OAuth2} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.OAuth2}
 */
proto.api.OAuth2.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setClientId(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setClientSecret(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setTokenUrl(value);
      break;
    case 4:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setAuthUrl(value);
      break;
    case 5:
      var value = new common_common_pb.StringArray;
      reader.readMessage(value,common_common_pb.StringArray.deserializeBinaryFromReader);
      msg.setScopes(value);
      break;
    case 6:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setRedirect(value);
      break;
    case 7:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.OAuth2.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.OAuth2.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.OAuth2} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.OAuth2.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getClientSecret();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getTokenUrl();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getAuthUrl();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getScopes();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_common_pb.StringArray.serializeBinaryToWriter
    );
  }
  f = message.getRedirect();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getCode();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String client_id = 1;
 * @return {?proto.common.String}
 */
proto.api.OAuth2.prototype.getClientId = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.OAuth2.prototype.setClientId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.OAuth2.prototype.clearClientId = function() {
  this.setClientId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.OAuth2.prototype.hasClientId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String client_secret = 2;
 * @return {?proto.common.String}
 */
proto.api.OAuth2.prototype.getClientSecret = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.OAuth2.prototype.setClientSecret = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.OAuth2.prototype.clearClientSecret = function() {
  this.setClientSecret(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.OAuth2.prototype.hasClientSecret = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String token_url = 3;
 * @return {?proto.common.String}
 */
proto.api.OAuth2.prototype.getTokenUrl = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.OAuth2.prototype.setTokenUrl = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.OAuth2.prototype.clearTokenUrl = function() {
  this.setTokenUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.OAuth2.prototype.hasTokenUrl = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.String auth_url = 4;
 * @return {?proto.common.String}
 */
proto.api.OAuth2.prototype.getAuthUrl = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 4));
};


/** @param {?proto.common.String|undefined} value */
proto.api.OAuth2.prototype.setAuthUrl = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.OAuth2.prototype.clearAuthUrl = function() {
  this.setAuthUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.OAuth2.prototype.hasAuthUrl = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional common.StringArray scopes = 5;
 * @return {?proto.common.StringArray}
 */
proto.api.OAuth2.prototype.getScopes = function() {
  return /** @type{?proto.common.StringArray} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringArray, 5));
};


/** @param {?proto.common.StringArray|undefined} value */
proto.api.OAuth2.prototype.setScopes = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.OAuth2.prototype.clearScopes = function() {
  this.setScopes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.OAuth2.prototype.hasScopes = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional common.String redirect = 6;
 * @return {?proto.common.String}
 */
proto.api.OAuth2.prototype.getRedirect = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 6));
};


/** @param {?proto.common.String|undefined} value */
proto.api.OAuth2.prototype.setRedirect = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.api.OAuth2.prototype.clearRedirect = function() {
  this.setRedirect(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.OAuth2.prototype.hasRedirect = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional common.String code = 7;
 * @return {?proto.common.String}
 */
proto.api.OAuth2.prototype.getCode = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 7));
};


/** @param {?proto.common.String|undefined} value */
proto.api.OAuth2.prototype.setCode = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.api.OAuth2.prototype.clearCode = function() {
  this.setCode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.OAuth2.prototype.hasCode = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.ClientCredentials = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.ClientCredentials, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.ClientCredentials.displayName = 'proto.api.ClientCredentials';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.ClientCredentials.prototype.toObject = function(opt_includeInstance) {
  return proto.api.ClientCredentials.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.ClientCredentials} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ClientCredentials.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: (f = msg.getClientId()) && common_common_pb.String.toObject(includeInstance, f),
    clientSecret: (f = msg.getClientSecret()) && common_common_pb.String.toObject(includeInstance, f),
    tokenUrl: (f = msg.getTokenUrl()) && common_common_pb.String.toObject(includeInstance, f),
    scopes: (f = msg.getScopes()) && common_common_pb.StringArray.toObject(includeInstance, f),
    endpointParams: (f = msg.getEndpointParams()) && common_common_pb.StringMap.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.ClientCredentials}
 */
proto.api.ClientCredentials.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.ClientCredentials;
  return proto.api.ClientCredentials.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.ClientCredentials} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.ClientCredentials}
 */
proto.api.ClientCredentials.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setClientId(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setClientSecret(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setTokenUrl(value);
      break;
    case 4:
      var value = new common_common_pb.StringArray;
      reader.readMessage(value,common_common_pb.StringArray.deserializeBinaryFromReader);
      msg.setScopes(value);
      break;
    case 5:
      var value = new common_common_pb.StringMap;
      reader.readMessage(value,common_common_pb.StringMap.deserializeBinaryFromReader);
      msg.setEndpointParams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.ClientCredentials.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.ClientCredentials.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.ClientCredentials} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.ClientCredentials.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getClientSecret();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getTokenUrl();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getScopes();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.StringArray.serializeBinaryToWriter
    );
  }
  f = message.getEndpointParams();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_common_pb.StringMap.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String client_id = 1;
 * @return {?proto.common.String}
 */
proto.api.ClientCredentials.prototype.getClientId = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.ClientCredentials.prototype.setClientId = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.ClientCredentials.prototype.clearClientId = function() {
  this.setClientId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ClientCredentials.prototype.hasClientId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String client_secret = 2;
 * @return {?proto.common.String}
 */
proto.api.ClientCredentials.prototype.getClientSecret = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.ClientCredentials.prototype.setClientSecret = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.ClientCredentials.prototype.clearClientSecret = function() {
  this.setClientSecret(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ClientCredentials.prototype.hasClientSecret = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String token_url = 3;
 * @return {?proto.common.String}
 */
proto.api.ClientCredentials.prototype.getTokenUrl = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.ClientCredentials.prototype.setTokenUrl = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.ClientCredentials.prototype.clearTokenUrl = function() {
  this.setTokenUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ClientCredentials.prototype.hasTokenUrl = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.StringArray scopes = 4;
 * @return {?proto.common.StringArray}
 */
proto.api.ClientCredentials.prototype.getScopes = function() {
  return /** @type{?proto.common.StringArray} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringArray, 4));
};


/** @param {?proto.common.StringArray|undefined} value */
proto.api.ClientCredentials.prototype.setScopes = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.ClientCredentials.prototype.clearScopes = function() {
  this.setScopes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ClientCredentials.prototype.hasScopes = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional common.StringMap endpoint_params = 5;
 * @return {?proto.common.StringMap}
 */
proto.api.ClientCredentials.prototype.getEndpointParams = function() {
  return /** @type{?proto.common.StringMap} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringMap, 5));
};


/** @param {?proto.common.StringMap|undefined} value */
proto.api.ClientCredentials.prototype.setEndpointParams = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.ClientCredentials.prototype.clearEndpointParams = function() {
  this.setEndpointParams(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.ClientCredentials.prototype.hasEndpointParams = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.JWT = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.JWT, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.JWT.displayName = 'proto.api.JWT';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.JWT.prototype.toObject = function(opt_includeInstance) {
  return proto.api.JWT.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.JWT} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.JWT.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: (f = msg.getEmail()) && common_common_pb.String.toObject(includeInstance, f),
    privateKey: msg.getPrivateKey_asB64(),
    priveKeyId: (f = msg.getPriveKeyId()) && common_common_pb.String.toObject(includeInstance, f),
    subject: (f = msg.getSubject()) && common_common_pb.String.toObject(includeInstance, f),
    scopes: (f = msg.getScopes()) && common_common_pb.StringArray.toObject(includeInstance, f),
    tokenUrl: (f = msg.getTokenUrl()) && common_common_pb.String.toObject(includeInstance, f),
    expires: (f = msg.getExpires()) && common_common_pb.String.toObject(includeInstance, f),
    audience: (f = msg.getAudience()) && common_common_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.JWT}
 */
proto.api.JWT.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.JWT;
  return proto.api.JWT.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.JWT} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.JWT}
 */
proto.api.JWT.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setEmail(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPrivateKey(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setPriveKeyId(value);
      break;
    case 4:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setSubject(value);
      break;
    case 5:
      var value = new common_common_pb.StringArray;
      reader.readMessage(value,common_common_pb.StringArray.deserializeBinaryFromReader);
      msg.setScopes(value);
      break;
    case 6:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setTokenUrl(value);
      break;
    case 7:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setExpires(value);
      break;
    case 8:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setAudience(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.JWT.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.JWT.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.JWT} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.JWT.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getPrivateKey_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getPriveKeyId();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getSubject();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getScopes();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_common_pb.StringArray.serializeBinaryToWriter
    );
  }
  f = message.getTokenUrl();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getExpires();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getAudience();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String email = 1;
 * @return {?proto.common.String}
 */
proto.api.JWT.prototype.getEmail = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.JWT.prototype.setEmail = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.JWT.prototype.clearEmail = function() {
  this.setEmail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.JWT.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes private_key = 2;
 * @return {!(string|Uint8Array)}
 */
proto.api.JWT.prototype.getPrivateKey = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes private_key = 2;
 * This is a type-conversion wrapper around `getPrivateKey()`
 * @return {string}
 */
proto.api.JWT.prototype.getPrivateKey_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPrivateKey()));
};


/**
 * optional bytes private_key = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPrivateKey()`
 * @return {!Uint8Array}
 */
proto.api.JWT.prototype.getPrivateKey_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPrivateKey()));
};


/** @param {!(string|Uint8Array)} value */
proto.api.JWT.prototype.setPrivateKey = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional common.String prive_key_id = 3;
 * @return {?proto.common.String}
 */
proto.api.JWT.prototype.getPriveKeyId = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.JWT.prototype.setPriveKeyId = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.JWT.prototype.clearPriveKeyId = function() {
  this.setPriveKeyId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.JWT.prototype.hasPriveKeyId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.String subject = 4;
 * @return {?proto.common.String}
 */
proto.api.JWT.prototype.getSubject = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 4));
};


/** @param {?proto.common.String|undefined} value */
proto.api.JWT.prototype.setSubject = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.JWT.prototype.clearSubject = function() {
  this.setSubject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.JWT.prototype.hasSubject = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional common.StringArray scopes = 5;
 * @return {?proto.common.StringArray}
 */
proto.api.JWT.prototype.getScopes = function() {
  return /** @type{?proto.common.StringArray} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringArray, 5));
};


/** @param {?proto.common.StringArray|undefined} value */
proto.api.JWT.prototype.setScopes = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.JWT.prototype.clearScopes = function() {
  this.setScopes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.JWT.prototype.hasScopes = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional common.String token_url = 6;
 * @return {?proto.common.String}
 */
proto.api.JWT.prototype.getTokenUrl = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 6));
};


/** @param {?proto.common.String|undefined} value */
proto.api.JWT.prototype.setTokenUrl = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.api.JWT.prototype.clearTokenUrl = function() {
  this.setTokenUrl(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.JWT.prototype.hasTokenUrl = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional common.String expires = 7;
 * @return {?proto.common.String}
 */
proto.api.JWT.prototype.getExpires = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 7));
};


/** @param {?proto.common.String|undefined} value */
proto.api.JWT.prototype.setExpires = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.api.JWT.prototype.clearExpires = function() {
  this.setExpires(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.JWT.prototype.hasExpires = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional common.String audience = 8;
 * @return {?proto.common.String}
 */
proto.api.JWT.prototype.getAudience = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 8));
};


/** @param {?proto.common.String|undefined} value */
proto.api.JWT.prototype.setAudience = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.api.JWT.prototype.clearAudience = function() {
  this.setAudience(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.JWT.prototype.hasAudience = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.DefaultGCPCredentials = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.DefaultGCPCredentials, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.DefaultGCPCredentials.displayName = 'proto.api.DefaultGCPCredentials';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.DefaultGCPCredentials.prototype.toObject = function(opt_includeInstance) {
  return proto.api.DefaultGCPCredentials.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.DefaultGCPCredentials} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DefaultGCPCredentials.toObject = function(includeInstance, msg) {
  var f, obj = {
    scopes: (f = msg.getScopes()) && common_common_pb.StringArray.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.DefaultGCPCredentials}
 */
proto.api.DefaultGCPCredentials.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.DefaultGCPCredentials;
  return proto.api.DefaultGCPCredentials.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.DefaultGCPCredentials} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.DefaultGCPCredentials}
 */
proto.api.DefaultGCPCredentials.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.StringArray;
      reader.readMessage(value,common_common_pb.StringArray.deserializeBinaryFromReader);
      msg.setScopes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.DefaultGCPCredentials.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.DefaultGCPCredentials.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.DefaultGCPCredentials} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.DefaultGCPCredentials.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScopes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.StringArray.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.StringArray scopes = 1;
 * @return {?proto.common.StringArray}
 */
proto.api.DefaultGCPCredentials.prototype.getScopes = function() {
  return /** @type{?proto.common.StringArray} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringArray, 1));
};


/** @param {?proto.common.StringArray|undefined} value */
proto.api.DefaultGCPCredentials.prototype.setScopes = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.DefaultGCPCredentials.prototype.clearScopes = function() {
  this.setScopes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.DefaultGCPCredentials.prototype.hasScopes = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Query = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Query, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Query.displayName = 'proto.api.Query';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Query.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Query.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Query} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Query.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: (f = msg.getQuery()) && common_common_pb.String.toObject(includeInstance, f),
    fields: (f = msg.getFields()) && common_common_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Query}
 */
proto.api.Query.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Query;
  return proto.api.Query.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Query} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Query}
 */
proto.api.Query.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    case 5:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setFields(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Query.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Query.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Query} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Query.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getFields();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String query = 4;
 * @return {?proto.common.String}
 */
proto.api.Query.prototype.getQuery = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 4));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Query.prototype.setQuery = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.Query.prototype.clearQuery = function() {
  this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Query.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional common.String fields = 5;
 * @return {?proto.common.String}
 */
proto.api.Query.prototype.getFields = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 5));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Query.prototype.setFields = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.Query.prototype.clearFields = function() {
  this.setFields(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Query.prototype.hasFields = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Event.displayName = 'proto.api.Event';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: (f = msg.getDate()) && common_common_pb.String.toObject(includeInstance, f),
    type: (f = msg.getType()) && common_common_pb.String.toObject(includeInstance, f),
    clientId: (f = msg.getClientId()) && common_common_pb.String.toObject(includeInstance, f),
    clientName: (f = msg.getClientName()) && common_common_pb.String.toObject(includeInstance, f),
    ip: (f = msg.getIp()) && common_common_pb.String.toObject(includeInstance, f),
    locationInfo: (f = msg.getLocationInfo()) && common_common_pb.String.toObject(includeInstance, f),
    details: (f = msg.getDetails()) && common_common_pb.String.toObject(includeInstance, f),
    userId: (f = msg.getUserId()) && common_common_pb.String.toObject(includeInstance, f),
    annotations: (f = msg.getAnnotations()) && common_common_pb.StringMap.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Event}
 */
proto.api.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Event;
  return proto.api.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Event}
 */
proto.api.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setClientId(value);
      break;
    case 4:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setClientName(value);
      break;
    case 5:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setIp(value);
      break;
    case 6:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setLocationInfo(value);
      break;
    case 7:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setDetails(value);
      break;
    case 8:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setUserId(value);
      break;
    case 9:
      var value = new common_common_pb.StringMap;
      reader.readMessage(value,common_common_pb.StringMap.deserializeBinaryFromReader);
      msg.setAnnotations(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getClientId();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getClientName();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getIp();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getLocationInfo();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getDetails();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getUserId();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getAnnotations();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      common_common_pb.StringMap.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String date = 1;
 * @return {?proto.common.String}
 */
proto.api.Event.prototype.getDate = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Event.prototype.setDate = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.Event.prototype.clearDate = function() {
  this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Event.prototype.hasDate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String type = 2;
 * @return {?proto.common.String}
 */
proto.api.Event.prototype.getType = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Event.prototype.setType = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Event.prototype.clearType = function() {
  this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Event.prototype.hasType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String client_id = 3;
 * @return {?proto.common.String}
 */
proto.api.Event.prototype.getClientId = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Event.prototype.setClientId = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.Event.prototype.clearClientId = function() {
  this.setClientId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Event.prototype.hasClientId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.String client_name = 4;
 * @return {?proto.common.String}
 */
proto.api.Event.prototype.getClientName = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 4));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Event.prototype.setClientName = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.Event.prototype.clearClientName = function() {
  this.setClientName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Event.prototype.hasClientName = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional common.String ip = 5;
 * @return {?proto.common.String}
 */
proto.api.Event.prototype.getIp = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 5));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Event.prototype.setIp = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.Event.prototype.clearIp = function() {
  this.setIp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Event.prototype.hasIp = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional common.String location_info = 6;
 * @return {?proto.common.String}
 */
proto.api.Event.prototype.getLocationInfo = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 6));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Event.prototype.setLocationInfo = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.api.Event.prototype.clearLocationInfo = function() {
  this.setLocationInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Event.prototype.hasLocationInfo = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional common.String details = 7;
 * @return {?proto.common.String}
 */
proto.api.Event.prototype.getDetails = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 7));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Event.prototype.setDetails = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.api.Event.prototype.clearDetails = function() {
  this.setDetails(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Event.prototype.hasDetails = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional common.String user_id = 8;
 * @return {?proto.common.String}
 */
proto.api.Event.prototype.getUserId = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 8));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Event.prototype.setUserId = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.api.Event.prototype.clearUserId = function() {
  this.setUserId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Event.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional common.StringMap annotations = 9;
 * @return {?proto.common.StringMap}
 */
proto.api.Event.prototype.getAnnotations = function() {
  return /** @type{?proto.common.StringMap} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringMap, 9));
};


/** @param {?proto.common.StringMap|undefined} value */
proto.api.Event.prototype.setAnnotations = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.api.Event.prototype.clearAnnotations = function() {
  this.setAnnotations(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Event.prototype.hasAnnotations = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.EventQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.EventQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.EventQuery.displayName = 'proto.api.EventQuery';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.EventQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.api.EventQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.EventQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.EventQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    date: (f = msg.getDate()) && common_common_pb.String.toObject(includeInstance, f),
    type: (f = msg.getType()) && common_common_pb.String.toObject(includeInstance, f),
    clientId: (f = msg.getClientId()) && common_common_pb.String.toObject(includeInstance, f),
    userId: (f = msg.getUserId()) && common_common_pb.String.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.EventQuery}
 */
proto.api.EventQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.EventQuery;
  return proto.api.EventQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.EventQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.EventQuery}
 */
proto.api.EventQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setDate(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setType(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setClientId(value);
      break;
    case 4:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.EventQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.EventQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.EventQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.EventQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDate();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getClientId();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getUserId();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String date = 1;
 * @return {?proto.common.String}
 */
proto.api.EventQuery.prototype.getDate = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.EventQuery.prototype.setDate = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.EventQuery.prototype.clearDate = function() {
  this.setDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.EventQuery.prototype.hasDate = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String type = 2;
 * @return {?proto.common.String}
 */
proto.api.EventQuery.prototype.getType = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.EventQuery.prototype.setType = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.EventQuery.prototype.clearType = function() {
  this.setType(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.EventQuery.prototype.hasType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String client_id = 3;
 * @return {?proto.common.String}
 */
proto.api.EventQuery.prototype.getClientId = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.EventQuery.prototype.setClientId = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.EventQuery.prototype.clearClientId = function() {
  this.setClientId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.EventQuery.prototype.hasClientId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.String user_id = 4;
 * @return {?proto.common.String}
 */
proto.api.EventQuery.prototype.getUserId = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 4));
};


/** @param {?proto.common.String|undefined} value */
proto.api.EventQuery.prototype.setUserId = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.EventQuery.prototype.clearUserId = function() {
  this.setUserId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.EventQuery.prototype.hasUserId = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.JSONWebKeys = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.JSONWebKeys, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.JSONWebKeys.displayName = 'proto.api.JSONWebKeys';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.JSONWebKeys.prototype.toObject = function(opt_includeInstance) {
  return proto.api.JSONWebKeys.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.JSONWebKeys} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.JSONWebKeys.toObject = function(includeInstance, msg) {
  var f, obj = {
    kty: (f = msg.getKty()) && common_common_pb.String.toObject(includeInstance, f),
    kid: (f = msg.getKid()) && common_common_pb.Identifier.toObject(includeInstance, f),
    use: (f = msg.getUse()) && common_common_pb.String.toObject(includeInstance, f),
    n: (f = msg.getN()) && common_common_pb.String.toObject(includeInstance, f),
    e: (f = msg.getE()) && common_common_pb.String.toObject(includeInstance, f),
    x5c: (f = msg.getX5c()) && common_common_pb.StringArray.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.JSONWebKeys}
 */
proto.api.JSONWebKeys.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.JSONWebKeys;
  return proto.api.JSONWebKeys.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.JSONWebKeys} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.JSONWebKeys}
 */
proto.api.JSONWebKeys.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setKty(value);
      break;
    case 2:
      var value = new common_common_pb.Identifier;
      reader.readMessage(value,common_common_pb.Identifier.deserializeBinaryFromReader);
      msg.setKid(value);
      break;
    case 3:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setUse(value);
      break;
    case 4:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setN(value);
      break;
    case 5:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setE(value);
      break;
    case 6:
      var value = new common_common_pb.StringArray;
      reader.readMessage(value,common_common_pb.StringArray.deserializeBinaryFromReader);
      msg.setX5c(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.JSONWebKeys.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.JSONWebKeys.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.JSONWebKeys} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.JSONWebKeys.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKty();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getKid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.Identifier.serializeBinaryToWriter
    );
  }
  f = message.getUse();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getN();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getE();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getX5c();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_common_pb.StringArray.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String kty = 1;
 * @return {?proto.common.String}
 */
proto.api.JSONWebKeys.prototype.getKty = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.JSONWebKeys.prototype.setKty = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.JSONWebKeys.prototype.clearKty = function() {
  this.setKty(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.JSONWebKeys.prototype.hasKty = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.Identifier kid = 2;
 * @return {?proto.common.Identifier}
 */
proto.api.JSONWebKeys.prototype.getKid = function() {
  return /** @type{?proto.common.Identifier} */ (
    jspb.Message.getWrapperField(this, common_common_pb.Identifier, 2));
};


/** @param {?proto.common.Identifier|undefined} value */
proto.api.JSONWebKeys.prototype.setKid = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.JSONWebKeys.prototype.clearKid = function() {
  this.setKid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.JSONWebKeys.prototype.hasKid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.String use = 3;
 * @return {?proto.common.String}
 */
proto.api.JSONWebKeys.prototype.getUse = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 3));
};


/** @param {?proto.common.String|undefined} value */
proto.api.JSONWebKeys.prototype.setUse = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.JSONWebKeys.prototype.clearUse = function() {
  this.setUse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.JSONWebKeys.prototype.hasUse = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.String n = 4;
 * @return {?proto.common.String}
 */
proto.api.JSONWebKeys.prototype.getN = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 4));
};


/** @param {?proto.common.String|undefined} value */
proto.api.JSONWebKeys.prototype.setN = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.api.JSONWebKeys.prototype.clearN = function() {
  this.setN(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.JSONWebKeys.prototype.hasN = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional common.String e = 5;
 * @return {?proto.common.String}
 */
proto.api.JSONWebKeys.prototype.getE = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 5));
};


/** @param {?proto.common.String|undefined} value */
proto.api.JSONWebKeys.prototype.setE = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.api.JSONWebKeys.prototype.clearE = function() {
  this.setE(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.JSONWebKeys.prototype.hasE = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional common.StringArray x5c = 6;
 * @return {?proto.common.StringArray}
 */
proto.api.JSONWebKeys.prototype.getX5c = function() {
  return /** @type{?proto.common.StringArray} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringArray, 6));
};


/** @param {?proto.common.StringArray|undefined} value */
proto.api.JSONWebKeys.prototype.setX5c = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.api.JSONWebKeys.prototype.clearX5c = function() {
  this.setX5c(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.JSONWebKeys.prototype.hasX5c = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Jwks = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.api.Jwks.repeatedFields_, null);
};
goog.inherits(proto.api.Jwks, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Jwks.displayName = 'proto.api.Jwks';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.api.Jwks.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Jwks.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Jwks.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Jwks} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Jwks.toObject = function(includeInstance, msg) {
  var f, obj = {
    keysList: jspb.Message.toObjectList(msg.getKeysList(),
    proto.api.JSONWebKeys.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Jwks}
 */
proto.api.Jwks.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Jwks;
  return proto.api.Jwks.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Jwks} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Jwks}
 */
proto.api.Jwks.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.api.JSONWebKeys;
      reader.readMessage(value,proto.api.JSONWebKeys.deserializeBinaryFromReader);
      msg.addKeys(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Jwks.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Jwks.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Jwks} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Jwks.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeysList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.api.JSONWebKeys.serializeBinaryToWriter
    );
  }
};


/**
 * repeated JSONWebKeys keys = 1;
 * @return {!Array<!proto.api.JSONWebKeys>}
 */
proto.api.Jwks.prototype.getKeysList = function() {
  return /** @type{!Array<!proto.api.JSONWebKeys>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.api.JSONWebKeys, 1));
};


/** @param {!Array<!proto.api.JSONWebKeys>} value */
proto.api.Jwks.prototype.setKeysList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.api.JSONWebKeys=} opt_value
 * @param {number=} opt_index
 * @return {!proto.api.JSONWebKeys}
 */
proto.api.Jwks.prototype.addKeys = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.api.JSONWebKeys, opt_index);
};


proto.api.Jwks.prototype.clearKeysList = function() {
  this.setKeysList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.api.Document = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.api.Document, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.api.Document.displayName = 'proto.api.Document';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.api.Document.prototype.toObject = function(opt_includeInstance) {
  return proto.api.Document.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.api.Document} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Document.toObject = function(includeInstance, msg) {
  var f, obj = {
    category: (f = msg.getCategory()) && common_common_pb.String.toObject(includeInstance, f),
    name: (f = msg.getName()) && common_common_pb.String.toObject(includeInstance, f),
    data: (f = msg.getData()) && common_common_pb.StringMap.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.api.Document}
 */
proto.api.Document.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.api.Document;
  return proto.api.Document.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.api.Document} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.api.Document}
 */
proto.api.Document.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setCategory(value);
      break;
    case 2:
      var value = new common_common_pb.String;
      reader.readMessage(value,common_common_pb.String.deserializeBinaryFromReader);
      msg.setName(value);
      break;
    case 3:
      var value = new common_common_pb.StringMap;
      reader.readMessage(value,common_common_pb.StringMap.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.api.Document.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.api.Document.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.api.Document} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.api.Document.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCategory();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_common_pb.String.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_common_pb.StringMap.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.String category = 1;
 * @return {?proto.common.String}
 */
proto.api.Document.prototype.getCategory = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 1));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Document.prototype.setCategory = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.api.Document.prototype.clearCategory = function() {
  this.setCategory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Document.prototype.hasCategory = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.String name = 2;
 * @return {?proto.common.String}
 */
proto.api.Document.prototype.getName = function() {
  return /** @type{?proto.common.String} */ (
    jspb.Message.getWrapperField(this, common_common_pb.String, 2));
};


/** @param {?proto.common.String|undefined} value */
proto.api.Document.prototype.setName = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.api.Document.prototype.clearName = function() {
  this.setName(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Document.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.StringMap data = 3;
 * @return {?proto.common.StringMap}
 */
proto.api.Document.prototype.getData = function() {
  return /** @type{?proto.common.StringMap} */ (
    jspb.Message.getWrapperField(this, common_common_pb.StringMap, 3));
};


/** @param {?proto.common.StringMap|undefined} value */
proto.api.Document.prototype.setData = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.api.Document.prototype.clearData = function() {
  this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.api.Document.prototype.hasData = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.api);
