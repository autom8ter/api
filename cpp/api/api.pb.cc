// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api.proto

#include "api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_api_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_NumberCapabilities;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Card;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Email;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_EmailBlast;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_Identity;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_PhoneNumber;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_JSONWebKeys;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_api_2eproto ::google::protobuf::internal::SCCInfo<5> scc_info_User;
}  // namespace protobuf_api_2eproto
namespace protobuf_common_2fcommon_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Bytes;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Int64;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_String;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Identifier;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StringArray;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_StringMap;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_common_2fcommon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Token;
}  // namespace protobuf_common_2fcommon_2eproto
namespace api {
class FaxRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FaxRequest>
      _instance;
} _FaxRequest_default_instance_;
class SubscribeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubscribeRequest>
      _instance;
} _SubscribeRequest_default_instance_;
class UnSubscribeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UnSubscribeRequest>
      _instance;
} _UnSubscribeRequest_default_instance_;
class CardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Card>
      _instance;
} _Card_default_instance_;
class SMSDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SMS>
      _instance;
} _SMS_default_instance_;
class SMSBlastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SMSBlast>
      _instance;
} _SMSBlast_default_instance_;
class EmailRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmailRequest>
      _instance;
} _EmailRequest_default_instance_;
class EmailBlastRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmailBlastRequest>
      _instance;
} _EmailBlastRequest_default_instance_;
class EmailBlastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EmailBlast>
      _instance;
} _EmailBlast_default_instance_;
class EmailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Email>
      _instance;
} _Email_default_instance_;
class CallDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Call>
      _instance;
} _Call_default_instance_;
class CallBlastDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CallBlast>
      _instance;
} _CallBlast_default_instance_;
class UserDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<User>
      _instance;
} _User_default_instance_;
class IdentityDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Identity>
      _instance;
} _Identity_default_instance_;
class AuthDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Auth>
      _instance;
} _Auth_default_instance_;
class JSONWebKeysDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<JSONWebKeys>
      _instance;
} _JSONWebKeys_default_instance_;
class JwksDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Jwks>
      _instance;
} _Jwks_default_instance_;
class RenderRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RenderRequest>
      _instance;
} _RenderRequest_default_instance_;
class SearchPhoneNumberRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SearchPhoneNumberRequest>
      _instance;
} _SearchPhoneNumberRequest_default_instance_;
class PhoneNumberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhoneNumber>
      _instance;
} _PhoneNumber_default_instance_;
class NumberCapabilitiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NumberCapabilities>
      _instance;
} _NumberCapabilities_default_instance_;
class PhoneNumberResourceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PhoneNumberResource>
      _instance;
} _PhoneNumberResource_default_instance_;
class TokenQueryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TokenQuery>
      _instance;
} _TokenQuery_default_instance_;
class IDBodyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IDBody>
      _instance;
} _IDBody_default_instance_;
class IDStringsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IDStrings>
      _instance;
} _IDStrings_default_instance_;
class RoleDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Role>
      _instance;
} _Role_default_instance_;
class CallResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CallResponse>
      _instance;
} _CallResponse_default_instance_;
class SMSResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SMSResponse>
      _instance;
} _SMSResponse_default_instance_;
class SubscriptionResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SubscriptionResponse>
      _instance;
} _SubscriptionResponse_default_instance_;
class FaxResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FaxResponse>
      _instance;
} _FaxResponse_default_instance_;
}  // namespace api
namespace protobuf_api_2eproto {
static void InitDefaultsFaxRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_FaxRequest_default_instance_;
    new (ptr) ::api::FaxRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::FaxRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_FaxRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsFaxRequest}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsSubscribeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_SubscribeRequest_default_instance_;
    new (ptr) ::api::SubscribeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::SubscribeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SubscribeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSubscribeRequest}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_api_2eproto::scc_info_Card.base,}};

static void InitDefaultsUnSubscribeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_UnSubscribeRequest_default_instance_;
    new (ptr) ::api::UnSubscribeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::UnSubscribeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_UnSubscribeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsUnSubscribeRequest}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsCard() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Card_default_instance_;
    new (ptr) ::api::Card();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Card::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Card =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCard}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsSMS() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_SMS_default_instance_;
    new (ptr) ::api::SMS();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::SMS::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_SMS =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsSMS}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsSMSBlast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_SMSBlast_default_instance_;
    new (ptr) ::api::SMSBlast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::SMSBlast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_SMSBlast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsSMSBlast}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringArray.base,}};

static void InitDefaultsEmailRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_EmailRequest_default_instance_;
    new (ptr) ::api::EmailRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::EmailRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_EmailRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsEmailRequest}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_api_2eproto::scc_info_Email.base,}};

static void InitDefaultsEmailBlastRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_EmailBlastRequest_default_instance_;
    new (ptr) ::api::EmailBlastRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::EmailBlastRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_EmailBlastRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsEmailBlastRequest}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_api_2eproto::scc_info_EmailBlast.base,}};

static void InitDefaultsEmailBlast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_EmailBlast_default_instance_;
    new (ptr) ::api::EmailBlast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::EmailBlast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_EmailBlast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsEmailBlast}, {
      &protobuf_common_2fcommon_2eproto::scc_info_StringMap.base,
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsEmail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Email_default_instance_;
    new (ptr) ::api::Email();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Email::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Email =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsEmail}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsCall() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Call_default_instance_;
    new (ptr) ::api::Call();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Call::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Call =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsCall}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsCallBlast() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_CallBlast_default_instance_;
    new (ptr) ::api::CallBlast();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::CallBlast::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_CallBlast =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsCallBlast}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringArray.base,}};

static void InitDefaultsUser() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_User_default_instance_;
    new (ptr) ::api::User();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::User::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_User =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsUser}, {
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringMap.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringArray.base,
      &protobuf_api_2eproto::scc_info_Identity.base,}};

static void InitDefaultsIdentity() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Identity_default_instance_;
    new (ptr) ::api::Identity();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Identity::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Identity =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsIdentity}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,}};

static void InitDefaultsAuth() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Auth_default_instance_;
    new (ptr) ::api::Auth();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Auth::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Auth =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAuth}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsJSONWebKeys() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_JSONWebKeys_default_instance_;
    new (ptr) ::api::JSONWebKeys();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::JSONWebKeys::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_JSONWebKeys =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsJSONWebKeys}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringArray.base,}};

static void InitDefaultsJwks() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Jwks_default_instance_;
    new (ptr) ::api::Jwks();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Jwks::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Jwks =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsJwks}, {
      &protobuf_api_2eproto::scc_info_JSONWebKeys.base,}};

static void InitDefaultsRenderRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_RenderRequest_default_instance_;
    new (ptr) ::api::RenderRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::RenderRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_RenderRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRenderRequest}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_common_2fcommon_2eproto::scc_info_Bytes.base,}};

static void InitDefaultsSearchPhoneNumberRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_SearchPhoneNumberRequest_default_instance_;
    new (ptr) ::api::SearchPhoneNumberRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::SearchPhoneNumberRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_SearchPhoneNumberRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsSearchPhoneNumberRequest}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_api_2eproto::scc_info_NumberCapabilities.base,
      &protobuf_common_2fcommon_2eproto::scc_info_Int64.base,}};

static void InitDefaultsPhoneNumber() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_PhoneNumber_default_instance_;
    new (ptr) ::api::PhoneNumber();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::PhoneNumber::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_PhoneNumber =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPhoneNumber}, {
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_api_2eproto::scc_info_NumberCapabilities.base,}};

static void InitDefaultsNumberCapabilities() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_NumberCapabilities_default_instance_;
    new (ptr) ::api::NumberCapabilities();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::NumberCapabilities::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_NumberCapabilities =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsNumberCapabilities}, {}};

static void InitDefaultsPhoneNumberResource() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_PhoneNumberResource_default_instance_;
    new (ptr) ::api::PhoneNumberResource();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::PhoneNumberResource::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_PhoneNumberResource =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsPhoneNumberResource}, {
      &protobuf_api_2eproto::scc_info_PhoneNumber.base,
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsTokenQuery() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_TokenQuery_default_instance_;
    new (ptr) ::api::TokenQuery();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::TokenQuery::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_TokenQuery =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsTokenQuery}, {
      &protobuf_common_2fcommon_2eproto::scc_info_Token.base,
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsIDBody() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_IDBody_default_instance_;
    new (ptr) ::api::IDBody();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::IDBody::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_IDBody =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsIDBody}, {
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,
      &protobuf_common_2fcommon_2eproto::scc_info_Bytes.base,}};

static void InitDefaultsIDStrings() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_IDStrings_default_instance_;
    new (ptr) ::api::IDStrings();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::IDStrings::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_IDStrings =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsIDStrings}, {
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringArray.base,}};

static void InitDefaultsRole() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_Role_default_instance_;
    new (ptr) ::api::Role();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::Role::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_Role =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsRole}, {
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,}};

static void InitDefaultsCallResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_CallResponse_default_instance_;
    new (ptr) ::api::CallResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::CallResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_CallResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsCallResponse}, {
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringMap.base,}};

static void InitDefaultsSMSResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_SMSResponse_default_instance_;
    new (ptr) ::api::SMSResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::SMSResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_SMSResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsSMSResponse}, {
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringMap.base,}};

static void InitDefaultsSubscriptionResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_SubscriptionResponse_default_instance_;
    new (ptr) ::api::SubscriptionResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::SubscriptionResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<5> scc_info_SubscriptionResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 5, InitDefaultsSubscriptionResponse}, {
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,
      &protobuf_common_2fcommon_2eproto::scc_info_Int64.base,
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringMap.base,
      &protobuf_api_2eproto::scc_info_User.base,}};

static void InitDefaultsFaxResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::api::_FaxResponse_default_instance_;
    new (ptr) ::api::FaxResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::api::FaxResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_FaxResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsFaxResponse}, {
      &protobuf_common_2fcommon_2eproto::scc_info_Identifier.base,
      &protobuf_common_2fcommon_2eproto::scc_info_String.base,
      &protobuf_common_2fcommon_2eproto::scc_info_StringMap.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_FaxRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SubscribeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_UnSubscribeRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Card.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SMS.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SMSBlast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmailRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmailBlastRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_EmailBlast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Email.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Call.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CallBlast.base);
  ::google::protobuf::internal::InitSCC(&scc_info_User.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Identity.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Auth.base);
  ::google::protobuf::internal::InitSCC(&scc_info_JSONWebKeys.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Jwks.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RenderRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SearchPhoneNumberRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PhoneNumber.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NumberCapabilities.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PhoneNumberResource.base);
  ::google::protobuf::internal::InitSCC(&scc_info_TokenQuery.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IDBody.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IDStrings.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Role.base);
  ::google::protobuf::internal::InitSCC(&scc_info_CallResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SMSResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_SubscriptionResponse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FaxResponse.base);
}

::google::protobuf::Metadata file_level_metadata[30];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::FaxRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::FaxRequest, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::FaxRequest, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::FaxRequest, media_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::FaxRequest, quality_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::FaxRequest, callback_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::FaxRequest, store_media_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscribeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscribeRequest, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscribeRequest, plan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscribeRequest, card_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UnSubscribeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UnSubscribeRequest, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::UnSubscribeRequest, plan_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, exp_month_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, exp_year_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Card, cvc_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, mediaurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, callback_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMS, app_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSBlast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSBlast, service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSBlast, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSBlast, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSBlast, mediaurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSBlast, callback_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSBlast, app_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailRequest, from_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailRequest, from_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailRequest, email_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlastRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlastRequest, from_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlastRequest, from_email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlastRequest, blast_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlast, name_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlast, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlast, plain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::EmailBlast, html_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Email, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Email, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Email, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Email, subject_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Email, plain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Email, html_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Call, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Call, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Call, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Call, app_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CallBlast, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CallBlast, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CallBlast, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CallBlast, app_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, given_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, family_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, gender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, birthdate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, phone_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, picture_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, user_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, app_metadata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, last_ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, blocked_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, multifactor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, created_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, updated_at_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, phone_verified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, email_verified_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::User, identities_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Identity, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Identity, connection_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Identity, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Identity, provider_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Identity, issocial_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Auth, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Auth, domain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Auth, client_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Auth, client_secret_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Auth, redirect_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Auth, scopes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, kty_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, kid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, use_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, n_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, e_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::JSONWebKeys, x5c_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Jwks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Jwks, keys_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RenderRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RenderRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RenderRequest, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::RenderRequest, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SearchPhoneNumberRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SearchPhoneNumberRequest, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SearchPhoneNumberRequest, capabilities_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SearchPhoneNumberRequest, total_results_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::PhoneNumber, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::PhoneNumber, friendly_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::PhoneNumber, phone_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::PhoneNumber, region_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::PhoneNumber, capabilities_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::NumberCapabilities, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::NumberCapabilities, voice_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::NumberCapabilities, sms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::NumberCapabilities, mms_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::PhoneNumberResource, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::PhoneNumberResource, number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::PhoneNumberResource, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::PhoneNumberResource, uri_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::TokenQuery, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::TokenQuery, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::TokenQuery, query_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::IDBody, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::IDBody, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::IDBody, body_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::IDStrings, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::IDStrings, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::IDStrings, strings_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Role, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Role, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Role, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::Role, description_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CallResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CallResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CallResponse, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CallResponse, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CallResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CallResponse, answered_by_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CallResponse, forwarded_from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CallResponse, caller_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::CallResponse, annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSResponse, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSResponse, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSResponse, media_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSResponse, body_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SMSResponse, annotations_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscriptionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscriptionResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscriptionResponse, monthly_charge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscriptionResponse, next_charge_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscriptionResponse, annotations_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscriptionResponse, plan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::SubscriptionResponse, user_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::FaxResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::FaxResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::FaxResponse, media_url_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::FaxResponse, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::FaxResponse, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::FaxResponse, status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::api::FaxResponse, annotations_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::api::FaxRequest)},
  { 11, -1, sizeof(::api::SubscribeRequest)},
  { 19, -1, sizeof(::api::UnSubscribeRequest)},
  { 26, -1, sizeof(::api::Card)},
  { 35, -1, sizeof(::api::SMS)},
  { 46, -1, sizeof(::api::SMSBlast)},
  { 57, -1, sizeof(::api::EmailRequest)},
  { 65, -1, sizeof(::api::EmailBlastRequest)},
  { 73, -1, sizeof(::api::EmailBlast)},
  { 82, -1, sizeof(::api::Email)},
  { 92, -1, sizeof(::api::Call)},
  { 100, -1, sizeof(::api::CallBlast)},
  { 108, -1, sizeof(::api::User)},
  { 134, -1, sizeof(::api::Identity)},
  { 143, -1, sizeof(::api::Auth)},
  { 153, -1, sizeof(::api::JSONWebKeys)},
  { 164, -1, sizeof(::api::Jwks)},
  { 170, -1, sizeof(::api::RenderRequest)},
  { 178, -1, sizeof(::api::SearchPhoneNumberRequest)},
  { 186, -1, sizeof(::api::PhoneNumber)},
  { 195, -1, sizeof(::api::NumberCapabilities)},
  { 203, -1, sizeof(::api::PhoneNumberResource)},
  { 211, -1, sizeof(::api::TokenQuery)},
  { 218, -1, sizeof(::api::IDBody)},
  { 225, -1, sizeof(::api::IDStrings)},
  { 232, -1, sizeof(::api::Role)},
  { 240, -1, sizeof(::api::CallResponse)},
  { 253, -1, sizeof(::api::SMSResponse)},
  { 265, -1, sizeof(::api::SubscriptionResponse)},
  { 276, -1, sizeof(::api::FaxResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_FaxRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_SubscribeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_UnSubscribeRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Card_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_SMS_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_SMSBlast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_EmailRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_EmailBlastRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_EmailBlast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Email_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Call_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_CallBlast_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_User_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Identity_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Auth_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_JSONWebKeys_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Jwks_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_RenderRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_SearchPhoneNumberRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_PhoneNumber_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_NumberCapabilities_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_PhoneNumberResource_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_TokenQuery_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_IDBody_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_IDStrings_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_Role_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_CallResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_SMSResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_SubscriptionResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::api::_FaxResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "api.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 30);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\tapi.proto\022\003api\032\034google/api/annotations"
      ".proto\032\023common/common.proto\"\301\001\n\nFaxReque"
      "st\022\032\n\002to\030\001 \001(\0132\016.common.String\022\034\n\004from\030\002"
      " \001(\0132\016.common.String\022!\n\tmedia_url\030\003 \001(\0132"
      "\016.common.String\022\037\n\007quality\030\004 \001(\0132\016.commo"
      "n.String\022 \n\010callback\030\005 \001(\0132\016.common.Stri"
      "ng\022\023\n\013store_media\030\006 \001(\010\"c\n\020SubscribeRequ"
      "est\022\035\n\005email\030\001 \001(\0132\016.common.String\022\027\n\004pl"
      "an\030\002 \001(\0162\t.api.Plan\022\027\n\004card\030\003 \001(\0132\t.api."
      "Card\"L\n\022UnSubscribeRequest\022\035\n\005email\030\001 \001("
      "\0132\016.common.String\022\027\n\004plan\030\002 \001(\0162\t.api.Pl"
      "an\"\210\001\n\004Card\022\036\n\006number\030\001 \001(\0132\016.common.Str"
      "ing\022!\n\texp_month\030\002 \001(\0132\016.common.String\022 "
      "\n\010exp_year\030\003 \001(\0132\016.common.String\022\033\n\003cvc\030"
      "\004 \001(\0132\016.common.String\"\304\001\n\003SMS\022\037\n\007service"
      "\030\001 \001(\0132\016.common.String\022\032\n\002to\030\002 \001(\0132\016.com"
      "mon.String\022\037\n\007message\030\003 \001(\0132\016.common.Str"
      "ing\022 \n\010mediaURL\030\004 \001(\0132\016.common.String\022 \n"
      "\010callback\030\005 \001(\0132\016.common.String\022\033\n\003app\030\006"
      " \001(\0132\016.common.String\"\316\001\n\010SMSBlast\022\037\n\007ser"
      "vice\030\001 \001(\0132\016.common.String\022\037\n\002to\030\002 \001(\0132\023"
      ".common.StringArray\022\037\n\007message\030\003 \001(\0132\016.c"
      "ommon.String\022 \n\010mediaURL\030\004 \001(\0132\016.common."
      "String\022 \n\010callback\030\005 \001(\0132\016.common.String"
      "\022\033\n\003app\030\006 \001(\0132\016.common.String\"p\n\014EmailRe"
      "quest\022!\n\tfrom_name\030\001 \001(\0132\016.common.String"
      "\022\"\n\nfrom_email\030\002 \001(\0132\016.common.String\022\031\n\005"
      "email\030\003 \001(\0132\n.api.Email\"z\n\021EmailBlastReq"
      "uest\022!\n\tfrom_name\030\001 \001(\0132\016.common.String\022"
      "\"\n\nfrom_email\030\002 \001(\0132\016.common.String\022\036\n\005b"
      "last\030\003 \001(\0132\017.api.EmailBlast\"\223\001\n\nEmailBla"
      "st\022\'\n\014name_address\030\001 \001(\0132\021.common.String"
      "Map\022\037\n\007subject\030\002 \001(\0132\016.common.String\022\035\n\005"
      "plain\030\003 \001(\0132\016.common.String\022\034\n\004html\030\004 \001("
      "\0132\016.common.String\"\244\001\n\005Email\022\034\n\004name\030\001 \001("
      "\0132\016.common.String\022\037\n\007address\030\002 \001(\0132\016.com"
      "mon.String\022\037\n\007subject\030\003 \001(\0132\016.common.Str"
      "ing\022\035\n\005plain\030\004 \001(\0132\016.common.String\022\034\n\004ht"
      "ml\030\005 \001(\0132\016.common.String\"]\n\004Call\022\034\n\004from"
      "\030\001 \001(\0132\016.common.String\022\032\n\002to\030\002 \001(\0132\016.com"
      "mon.String\022\033\n\003app\030\003 \001(\0132\016.common.String\""
      "g\n\tCallBlast\022\034\n\004from\030\001 \001(\0132\016.common.Stri"
      "ng\022\037\n\002to\030\002 \001(\0132\023.common.StringArray\022\033\n\003a"
      "pp\030\003 \001(\0132\016.common.String\"\321\005\n\004User\022#\n\007use"
      "r_id\030\001 \001(\0132\022.common.Identifier\022\034\n\004name\030\002"
      " \001(\0132\016.common.String\022\"\n\ngiven_name\030\003 \001(\013"
      "2\016.common.String\022#\n\013family_name\030\004 \001(\0132\016."
      "common.String\022\036\n\006gender\030\005 \001(\0132\016.common.S"
      "tring\022!\n\tbirthdate\030\006 \001(\0132\016.common.String"
      "\022!\n\005email\030\007 \001(\0132\022.common.Identifier\022(\n\014p"
      "hone_number\030\010 \001(\0132\022.common.Identifier\022\037\n"
      "\007picture\030\t \001(\0132\016.common.String\022(\n\ruser_m"
      "etadata\030\n \001(\0132\021.common.StringMap\022\'\n\014app_"
      "metadata\030\013 \001(\0132\021.common.StringMap\022\037\n\007las"
      "t_ip\030\014 \001(\0132\016.common.String\022\017\n\007blocked\030\r "
      "\001(\010\022 \n\010nickname\030\016 \001(\0132\016.common.String\022(\n"
      "\013multifactor\030\017 \001(\0132\023.common.StringArray\022"
      "\"\n\ncreated_at\030\021 \001(\0132\016.common.String\022\"\n\nu"
      "pdated_at\030\022 \001(\0132\016.common.String\022\026\n\016phone"
      "_verified\030\023 \001(\010\022\026\n\016email_verified\030\024 \001(\010\022"
      " \n\010password\030\025 \001(\0132\016.common.String\022!\n\nide"
      "ntities\030\026 \003(\0132\r.api.Identity\"\207\001\n\010Identit"
      "y\022\"\n\nconnection\030\001 \001(\0132\016.common.String\022#\n"
      "\007user_id\030\002 \001(\0132\022.common.Identifier\022 \n\010pr"
      "ovider\030\003 \001(\0132\016.common.String\022\020\n\010isSocial"
      "\030\004 \001(\010\"\256\001\n\004Auth\022\036\n\006domain\030\001 \001(\0132\016.common"
      ".String\022!\n\tclient_id\030\002 \001(\0132\016.common.Stri"
      "ng\022%\n\rclient_secret\030\003 \001(\0132\016.common.Strin"
      "g\022 \n\010redirect\030\004 \001(\0132\016.common.String\022\032\n\006s"
      "copes\030\005 \003(\0162\n.api.Scope\"\300\001\n\013JSONWebKeys\022"
      "\033\n\003kty\030\001 \001(\0132\016.common.String\022\037\n\003kid\030\002 \001("
      "\0132\022.common.Identifier\022\033\n\003use\030\003 \001(\0132\016.com"
      "mon.String\022\031\n\001n\030\004 \001(\0132\016.common.String\022\031\n"
      "\001e\030\005 \001(\0132\016.common.String\022 \n\003x5c\030\006 \001(\0132\023."
      "common.StringArray\"&\n\004Jwks\022\036\n\004keys\030\001 \003(\013"
      "2\020.api.JSONWebKeys\"h\n\rRenderRequest\022\034\n\004n"
      "ame\030\001 \001(\0132\016.common.String\022\034\n\004text\030\002 \001(\0132"
      "\016.common.String\022\033\n\004data\030\003 \001(\0132\r.common.B"
      "ytes\"\216\001\n\030SearchPhoneNumberRequest\022\035\n\005sta"
      "te\030\001 \001(\0132\016.common.String\022-\n\014capabilities"
      "\030\002 \001(\0132\027.api.NumberCapabilities\022$\n\rtotal"
      "_results\030\003 \001(\0132\r.common.Int64\"\251\001\n\013PhoneN"
      "umber\022%\n\rfriendly_name\030\001 \001(\0132\016.common.St"
      "ring\022$\n\014phone_number\030\002 \001(\0132\016.common.Stri"
      "ng\022\036\n\006region\030\003 \001(\0132\016.common.String\022-\n\014ca"
      "pabilities\030\004 \001(\0132\027.api.NumberCapabilitie"
      "s\"=\n\022NumberCapabilities\022\r\n\005voice\030\001 \001(\010\022\013"
      "\n\003sms\030\002 \001(\010\022\013\n\003mms\030\003 \001(\010\"t\n\023PhoneNumberR"
      "esource\022 \n\006number\030\001 \001(\0132\020.api.PhoneNumbe"
      "r\022\036\n\002id\030\002 \001(\0132\022.common.Identifier\022\033\n\003uri"
      "\030\003 \001(\0132\016.common.String\"I\n\nTokenQuery\022\034\n\005"
      "token\030\001 \001(\0132\r.common.Token\022\035\n\005query\030\002 \001("
      "\0132\016.common.String\"E\n\006IDBody\022\036\n\002id\030\001 \001(\0132"
      "\022.common.Identifier\022\033\n\004body\030\002 \001(\0132\r.comm"
      "on.Bytes\"Q\n\tIDStrings\022\036\n\002id\030\001 \001(\0132\022.comm"
      "on.Identifier\022$\n\007strings\030\002 \001(\0132\023.common."
      "StringArray\"i\n\004Role\022\036\n\002id\030\001 \001(\0132\022.common"
      ".Identifier\022\034\n\004name\030\002 \001(\0132\016.common.Strin"
      "g\022#\n\013description\030\003 \001(\0132\016.common.String\"\242"
      "\002\n\014CallResponse\022\036\n\002id\030\001 \001(\0132\022.common.Ide"
      "ntifier\022\032\n\002to\030\005 \001(\0132\016.common.String\022\034\n\004f"
      "rom\030\006 \001(\0132\016.common.String\022\036\n\006status\030\t \001("
      "\0132\016.common.String\022#\n\013answered_by\030\n \001(\0132\016"
      ".common.String\022&\n\016forwarded_from\030\013 \001(\0132\016"
      ".common.String\022#\n\013caller_name\030\014 \001(\0132\016.co"
      "mmon.String\022&\n\013annotations\030\r \001(\0132\021.commo"
      "n.StringMap\"\360\001\n\013SMSResponse\022\036\n\002id\030\001 \001(\0132"
      "\022.common.Identifier\022\032\n\002to\030\005 \001(\0132\016.common"
      ".String\022\034\n\004from\030\006 \001(\0132\016.common.String\022!\n"
      "\tmedia_url\030\007 \001(\0132\016.common.String\022\034\n\004body"
      "\030\010 \001(\0132\016.common.String\022\036\n\006status\030\t \001(\0132\016"
      ".common.String\022&\n\013annotations\030\n \001(\0132\021.co"
      "mmon.StringMap\"\334\001\n\024SubscriptionResponse\022"
      "\036\n\002id\030\001 \001(\0132\022.common.Identifier\022%\n\016month"
      "ly_charge\030\002 \001(\0132\r.common.Int64\022#\n\013next_c"
      "harge\030\003 \001(\0132\016.common.String\022&\n\013annotatio"
      "ns\030\n \001(\0132\021.common.StringMap\022\027\n\004plan\030\004 \001("
      "\0162\t.api.Plan\022\027\n\004user\030\005 \001(\0132\t.api.User\"\322\001"
      "\n\013FaxResponse\022\036\n\002id\030\001 \001(\0132\022.common.Ident"
      "ifier\022!\n\tmedia_url\030\003 \001(\0132\016.common.String"
      "\022\032\n\002to\030\004 \001(\0132\016.common.String\022\034\n\004from\030\005 \001"
      "(\0132\016.common.String\022\036\n\006status\030\006 \001(\0132\016.com"
      "mon.String\022&\n\013annotations\030\n \001(\0132\021.common"
      ".StringMap*\344\002\n\005Scope\022\n\n\006OPENID\020\000\022\013\n\007PROF"
      "ILE\020\001\022\t\n\005EMAIL\020\002\022\016\n\nREAD_USERS\020\003\022\030\n\024READ"
      "_USER_IDP_TOKENS\020\004\022\020\n\014CREATE_USERS\020\005\022\016\n\n"
      "READ_STATS\020\006\022\030\n\024READ_EMAIL_TEMPLATES\020\007\022\032"
      "\n\026UPDATE_EMAIL_TEMPLATES\020\010\022\032\n\026CREATE_EMA"
      "IL_TEMPLATES\020\t\022\016\n\nREAD_RULES\020\n\022\020\n\014UPDATE"
      "_RULES\020\013\022\020\n\014CREATE_RULES\020\014\022\020\n\014DELETE_RUL"
      "ES\020\r\022\016\n\nREAD_ROLES\020\016\022\020\n\014UPDATE_ROLES\020\017\022\020"
      "\n\014CREATE_ROLES\020\020\022\020\n\014DELETE_ROLES\020\021\022\r\n\tRE"
      "AD_LOGS\020\022*\253\002\n\003URL\022\020\n\014USER_INFOURL\020\000\022\014\n\010T"
      "OKENURL\020\001\022\020\n\014AUTHORIZEURL\020\002\022\014\n\010USERSURL\020"
      "\003\022\016\n\nCLIENTSURL\020\004\022\r\n\tGRANTSURL\020\005\022\014\n\010RULE"
      "SURL\020\006\022\014\n\010ROLESURL\020\007\022\013\n\007LOGSURL\020\010\022\014\n\010STA"
      "TSURL\020\t\022\022\n\016CONNECTIONSURL\020\n\022\016\n\nTENANTSUR"
      "L\020\013\022\025\n\021EMAIL_TEMPLATEURL\020\014\022\014\n\010EMAILURL\020\r"
      "\022\023\n\017SEARCH_USERSURL\020\016\022\r\n\tDEVICEURL\020\022\022\013\n\007"
      "JWKSURL\020\023\022\024\n\020CLIENT_GRANTSURL\020\024*(\n\004Plan\022"
      "\010\n\004FREE\020\000\022\t\n\005BASIC\020\001\022\013\n\007PREMIUM\020\0022\341\003\n\016Ut"
      "ilityService\022@\n\004Echo\022\016.common.String\032\016.c"
      "ommon.String\"\030\202\323\344\223\002\022\"\r/utility/echo:\001*\022O"
      "\n\013EchoSpanish\022\016.common.String\032\016.common.S"
      "tring\" \202\323\344\223\002\032\"\025/utility/echo/spanish:\001*\022"
      "O\n\013EchoChinese\022\016.common.String\032\016.common."
      "String\" \202\323\344\223\002\032\"\025/utility/echo/chinese:\001*"
      "\022O\n\013EchoEnglish\022\016.common.String\032\016.common"
      ".String\" \202\323\344\223\002\032\"\025/utility/echo/english:\001"
      "*\022K\n\tEchoHindi\022\016.common.String\032\016.common."
      "String\"\036\202\323\344\223\002\030\"\023/utility/echo/hindi:\001*\022M"
      "\n\nEchoArabic\022\016.common.String\032\016.common.St"
      "ring\"\037\202\323\344\223\002\031\"\024/utility/echo/arabic:\001*2\214\005"
      "\n\016ContactService\022C\n\007SendSMS\022\010.api.SMS\032\020."
      "api.SMSResponse\"\034\202\323\344\223\002\026\"\021/contact/sms/se"
      "nd:\001*\022P\n\014SendSMSBlast\022\r.api.SMSBlast\032\020.a"
      "pi.SMSResponse\"\035\202\323\344\223\002\027\"\022/contact/sms/bla"
      "st:\001*0\001\022K\n\006GetSMS\022\022.common.Identifier\032\020."
      "api.SMSResponse\"\033\202\323\344\223\002\025\"\020/contact/sms/ge"
      "t:\001*\022N\n\tSendEmail\022\021.api.EmailRequest\032\016.c"
      "ommon.String\"\036\202\323\344\223\002\030\"\023/contact/email/sen"
      "d:\001*\022[\n\016SendEmailBlast\022\026.api.EmailBlastR"
      "equest\032\016.common.String\"\037\202\323\344\223\002\031\"\024/contact"
      "/email/blast:\001*0\001\022G\n\010SendCall\022\t.api.Call"
      "\032\021.api.CallResponse\"\035\202\323\344\223\002\027\"\022/contact/ca"
      "ll/send:\001*\022T\n\rSendCallBlast\022\016.api.CallBl"
      "ast\032\021.api.CallResponse\"\036\202\323\344\223\002\030\"\023/contact"
      "/call/blast:\001*0\001\022J\n\007SendFax\022\017.api.FaxReq"
      "uest\032\020.api.FaxResponse\"\034\202\323\344\223\002\026\"\021/contact"
      "/fax/send:\001*2\235\003\n\016PaymentService\022\\\n\tSubsc"
      "ribe\022\025.api.SubscribeRequest\032\031.api.Subscr"
      "iptionResponse\"\035\202\323\344\223\002\027\"\022/payment/subscri"
      "be:\001*\022b\n\013Unsubscribe\022\027.api.UnSubscribeRe"
      "quest\032\031.api.SubscriptionResponse\"\037\202\323\344\223\002\031"
      "\"\024/payment/unsubscribe:\001*\022]\n\023PurchasePho"
      "neNumber\022\020.api.PhoneNumber\032\030.api.PhoneNu"
      "mberResource\"\032\202\323\344\223\002\024\"\017/payment/number:\001*"
      "\022j\n\021SearchPhoneNumber\022\035.api.SearchPhoneN"
      "umberRequest\032\020.api.PhoneNumber\"\"\202\323\344\223\002\034\"\027"
      "/payment/numbers/search:\001*0\0012\320\003\n\013UserSer"
      "vice\022K\n\nQueryUsers\022\017.api.TokenQuery\032\t.ap"
      "i.User\"\037\202\323\344\223\002\031\"\024/resource/user/query:\001*0"
      "\001\022H\n\nCreateUser\022\r.common.Bytes\032\t.api.Use"
      "r\" \202\323\344\223\002\032\"\025/resource/user/create:\001*\022G\n\007G"
      "etUser\022\022.common.Identifier\032\t.api.User\"\035\202"
      "\323\344\223\002\027\"\022/resource/user/get:\001*\022J\n\nDeleteUs"
      "er\022\022.common.Identifier\032\t.api.User\"\035\202\323\344\223\002"
      "\027\"\022/resource/user/get:\001*\022F\n\nUpdateUser\022\013"
      ".api.IDBody\032\t.api.User\" \202\323\344\223\002\032\"\025/resourc"
      "e/user/update:\001*\022M\n\tUserRoles\022\022.common.I"
      "dentifier\032\t.api.Role\"\037\202\323\344\223\002\031\"\024/resource/"
      "user/roles:\001*0\0012S\n\014AdminService\022C\n\nStart"
      "Cache\022\r.common.Empty\032\r.common.Empty\"\027\202\323\344"
      "\223\002\021\"\014/admin/start:\001*b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7748);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "api.proto", &protobuf_RegisterTypes);
  ::protobuf_google_2fapi_2fannotations_2eproto::AddDescriptors();
  ::protobuf_common_2fcommon_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_api_2eproto
namespace api {
const ::google::protobuf::EnumDescriptor* Scope_descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_enum_descriptors[0];
}
bool Scope_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* URL_descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_enum_descriptors[1];
}
bool URL_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 18:
    case 19:
    case 20:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Plan_descriptor() {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_api_2eproto::file_level_enum_descriptors[2];
}
bool Plan_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void FaxRequest::InitAsDefaultInstance() {
  ::api::_FaxRequest_default_instance_._instance.get_mutable()->to_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_FaxRequest_default_instance_._instance.get_mutable()->from_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_FaxRequest_default_instance_._instance.get_mutable()->media_url_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_FaxRequest_default_instance_._instance.get_mutable()->quality_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_FaxRequest_default_instance_._instance.get_mutable()->callback_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void FaxRequest::clear_to() {
  if (GetArenaNoVirtual() == NULL && to_ != NULL) {
    delete to_;
  }
  to_ = NULL;
}
void FaxRequest::clear_from() {
  if (GetArenaNoVirtual() == NULL && from_ != NULL) {
    delete from_;
  }
  from_ = NULL;
}
void FaxRequest::clear_media_url() {
  if (GetArenaNoVirtual() == NULL && media_url_ != NULL) {
    delete media_url_;
  }
  media_url_ = NULL;
}
void FaxRequest::clear_quality() {
  if (GetArenaNoVirtual() == NULL && quality_ != NULL) {
    delete quality_;
  }
  quality_ = NULL;
}
void FaxRequest::clear_callback() {
  if (GetArenaNoVirtual() == NULL && callback_ != NULL) {
    delete callback_;
  }
  callback_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaxRequest::kToFieldNumber;
const int FaxRequest::kFromFieldNumber;
const int FaxRequest::kMediaUrlFieldNumber;
const int FaxRequest::kQualityFieldNumber;
const int FaxRequest::kCallbackFieldNumber;
const int FaxRequest::kStoreMediaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaxRequest::FaxRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_FaxRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.FaxRequest)
}
FaxRequest::FaxRequest(const FaxRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_to()) {
    to_ = new ::common::String(*from.to_);
  } else {
    to_ = NULL;
  }
  if (from.has_from()) {
    from_ = new ::common::String(*from.from_);
  } else {
    from_ = NULL;
  }
  if (from.has_media_url()) {
    media_url_ = new ::common::String(*from.media_url_);
  } else {
    media_url_ = NULL;
  }
  if (from.has_quality()) {
    quality_ = new ::common::String(*from.quality_);
  } else {
    quality_ = NULL;
  }
  if (from.has_callback()) {
    callback_ = new ::common::String(*from.callback_);
  } else {
    callback_ = NULL;
  }
  store_media_ = from.store_media_;
  // @@protoc_insertion_point(copy_constructor:api.FaxRequest)
}

void FaxRequest::SharedCtor() {
  ::memset(&to_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&store_media_) -
      reinterpret_cast<char*>(&to_)) + sizeof(store_media_));
}

FaxRequest::~FaxRequest() {
  // @@protoc_insertion_point(destructor:api.FaxRequest)
  SharedDtor();
}

void FaxRequest::SharedDtor() {
  if (this != internal_default_instance()) delete to_;
  if (this != internal_default_instance()) delete from_;
  if (this != internal_default_instance()) delete media_url_;
  if (this != internal_default_instance()) delete quality_;
  if (this != internal_default_instance()) delete callback_;
}

void FaxRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FaxRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FaxRequest& FaxRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_FaxRequest.base);
  return *internal_default_instance();
}


void FaxRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.FaxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && to_ != NULL) {
    delete to_;
  }
  to_ = NULL;
  if (GetArenaNoVirtual() == NULL && from_ != NULL) {
    delete from_;
  }
  from_ = NULL;
  if (GetArenaNoVirtual() == NULL && media_url_ != NULL) {
    delete media_url_;
  }
  media_url_ = NULL;
  if (GetArenaNoVirtual() == NULL && quality_ != NULL) {
    delete quality_;
  }
  quality_ = NULL;
  if (GetArenaNoVirtual() == NULL && callback_ != NULL) {
    delete callback_;
  }
  callback_ = NULL;
  store_media_ = false;
  _internal_metadata_.Clear();
}

bool FaxRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.FaxRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String to = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String from = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String media_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_media_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String quality = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_quality()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String callback = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_callback()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool store_media = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &store_media_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.FaxRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.FaxRequest)
  return false;
#undef DO_
}

void FaxRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.FaxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String to = 1;
  if (this->has_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_to(), output);
  }

  // .common.String from = 2;
  if (this->has_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_from(), output);
  }

  // .common.String media_url = 3;
  if (this->has_media_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_media_url(), output);
  }

  // .common.String quality = 4;
  if (this->has_quality()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_quality(), output);
  }

  // .common.String callback = 5;
  if (this->has_callback()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_callback(), output);
  }

  // bool store_media = 6;
  if (this->store_media() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->store_media(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.FaxRequest)
}

::google::protobuf::uint8* FaxRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.FaxRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String to = 1;
  if (this->has_to()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_to(), deterministic, target);
  }

  // .common.String from = 2;
  if (this->has_from()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_from(), deterministic, target);
  }

  // .common.String media_url = 3;
  if (this->has_media_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_media_url(), deterministic, target);
  }

  // .common.String quality = 4;
  if (this->has_quality()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_quality(), deterministic, target);
  }

  // .common.String callback = 5;
  if (this->has_callback()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_callback(), deterministic, target);
  }

  // bool store_media = 6;
  if (this->store_media() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->store_media(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.FaxRequest)
  return target;
}

size_t FaxRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.FaxRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String to = 1;
  if (this->has_to()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *to_);
  }

  // .common.String from = 2;
  if (this->has_from()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *from_);
  }

  // .common.String media_url = 3;
  if (this->has_media_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *media_url_);
  }

  // .common.String quality = 4;
  if (this->has_quality()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *quality_);
  }

  // .common.String callback = 5;
  if (this->has_callback()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *callback_);
  }

  // bool store_media = 6;
  if (this->store_media() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FaxRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.FaxRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FaxRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FaxRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.FaxRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.FaxRequest)
    MergeFrom(*source);
  }
}

void FaxRequest::MergeFrom(const FaxRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.FaxRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_to()) {
    mutable_to()->::common::String::MergeFrom(from.to());
  }
  if (from.has_from()) {
    mutable_from()->::common::String::MergeFrom(from.from());
  }
  if (from.has_media_url()) {
    mutable_media_url()->::common::String::MergeFrom(from.media_url());
  }
  if (from.has_quality()) {
    mutable_quality()->::common::String::MergeFrom(from.quality());
  }
  if (from.has_callback()) {
    mutable_callback()->::common::String::MergeFrom(from.callback());
  }
  if (from.store_media() != 0) {
    set_store_media(from.store_media());
  }
}

void FaxRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.FaxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaxRequest::CopyFrom(const FaxRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.FaxRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaxRequest::IsInitialized() const {
  return true;
}

void FaxRequest::Swap(FaxRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FaxRequest::InternalSwap(FaxRequest* other) {
  using std::swap;
  swap(to_, other->to_);
  swap(from_, other->from_);
  swap(media_url_, other->media_url_);
  swap(quality_, other->quality_);
  swap(callback_, other->callback_);
  swap(store_media_, other->store_media_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FaxRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubscribeRequest::InitAsDefaultInstance() {
  ::api::_SubscribeRequest_default_instance_._instance.get_mutable()->email_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_SubscribeRequest_default_instance_._instance.get_mutable()->card_ = const_cast< ::api::Card*>(
      ::api::Card::internal_default_instance());
}
void SubscribeRequest::clear_email() {
  if (GetArenaNoVirtual() == NULL && email_ != NULL) {
    delete email_;
  }
  email_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscribeRequest::kEmailFieldNumber;
const int SubscribeRequest::kPlanFieldNumber;
const int SubscribeRequest::kCardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscribeRequest::SubscribeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_SubscribeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.SubscribeRequest)
}
SubscribeRequest::SubscribeRequest(const SubscribeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_email()) {
    email_ = new ::common::String(*from.email_);
  } else {
    email_ = NULL;
  }
  if (from.has_card()) {
    card_ = new ::api::Card(*from.card_);
  } else {
    card_ = NULL;
  }
  plan_ = from.plan_;
  // @@protoc_insertion_point(copy_constructor:api.SubscribeRequest)
}

void SubscribeRequest::SharedCtor() {
  ::memset(&email_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&plan_) -
      reinterpret_cast<char*>(&email_)) + sizeof(plan_));
}

SubscribeRequest::~SubscribeRequest() {
  // @@protoc_insertion_point(destructor:api.SubscribeRequest)
  SharedDtor();
}

void SubscribeRequest::SharedDtor() {
  if (this != internal_default_instance()) delete email_;
  if (this != internal_default_instance()) delete card_;
}

void SubscribeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SubscribeRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscribeRequest& SubscribeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_SubscribeRequest.base);
  return *internal_default_instance();
}


void SubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && email_ != NULL) {
    delete email_;
  }
  email_ = NULL;
  if (GetArenaNoVirtual() == NULL && card_ != NULL) {
    delete card_;
  }
  card_ = NULL;
  plan_ = 0;
  _internal_metadata_.Clear();
}

bool SubscribeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.SubscribeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.Plan plan = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_plan(static_cast< ::api::Plan >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.Card card = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_card()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.SubscribeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.SubscribeRequest)
  return false;
#undef DO_
}

void SubscribeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String email = 1;
  if (this->has_email()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_email(), output);
  }

  // .api.Plan plan = 2;
  if (this->plan() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->plan(), output);
  }

  // .api.Card card = 3;
  if (this->has_card()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_card(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.SubscribeRequest)
}

::google::protobuf::uint8* SubscribeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.SubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String email = 1;
  if (this->has_email()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_email(), deterministic, target);
  }

  // .api.Plan plan = 2;
  if (this->plan() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->plan(), target);
  }

  // .api.Card card = 3;
  if (this->has_card()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_card(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.SubscribeRequest)
  return target;
}

size_t SubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.SubscribeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String email = 1;
  if (this->has_email()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *email_);
  }

  // .api.Card card = 3;
  if (this->has_card()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *card_);
  }

  // .api.Plan plan = 2;
  if (this->plan() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->plan());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscribeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.SubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscribeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscribeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.SubscribeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.SubscribeRequest)
    MergeFrom(*source);
  }
}

void SubscribeRequest::MergeFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.SubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_email()) {
    mutable_email()->::common::String::MergeFrom(from.email());
  }
  if (from.has_card()) {
    mutable_card()->::api::Card::MergeFrom(from.card());
  }
  if (from.plan() != 0) {
    set_plan(from.plan());
  }
}

void SubscribeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscribeRequest::CopyFrom(const SubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.SubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscribeRequest::IsInitialized() const {
  return true;
}

void SubscribeRequest::Swap(SubscribeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscribeRequest::InternalSwap(SubscribeRequest* other) {
  using std::swap;
  swap(email_, other->email_);
  swap(card_, other->card_);
  swap(plan_, other->plan_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SubscribeRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UnSubscribeRequest::InitAsDefaultInstance() {
  ::api::_UnSubscribeRequest_default_instance_._instance.get_mutable()->email_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void UnSubscribeRequest::clear_email() {
  if (GetArenaNoVirtual() == NULL && email_ != NULL) {
    delete email_;
  }
  email_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnSubscribeRequest::kEmailFieldNumber;
const int UnSubscribeRequest::kPlanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnSubscribeRequest::UnSubscribeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_UnSubscribeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.UnSubscribeRequest)
}
UnSubscribeRequest::UnSubscribeRequest(const UnSubscribeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_email()) {
    email_ = new ::common::String(*from.email_);
  } else {
    email_ = NULL;
  }
  plan_ = from.plan_;
  // @@protoc_insertion_point(copy_constructor:api.UnSubscribeRequest)
}

void UnSubscribeRequest::SharedCtor() {
  ::memset(&email_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&plan_) -
      reinterpret_cast<char*>(&email_)) + sizeof(plan_));
}

UnSubscribeRequest::~UnSubscribeRequest() {
  // @@protoc_insertion_point(destructor:api.UnSubscribeRequest)
  SharedDtor();
}

void UnSubscribeRequest::SharedDtor() {
  if (this != internal_default_instance()) delete email_;
}

void UnSubscribeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* UnSubscribeRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnSubscribeRequest& UnSubscribeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_UnSubscribeRequest.base);
  return *internal_default_instance();
}


void UnSubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.UnSubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && email_ != NULL) {
    delete email_;
  }
  email_ = NULL;
  plan_ = 0;
  _internal_metadata_.Clear();
}

bool UnSubscribeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.UnSubscribeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String email = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.Plan plan = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_plan(static_cast< ::api::Plan >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.UnSubscribeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.UnSubscribeRequest)
  return false;
#undef DO_
}

void UnSubscribeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.UnSubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String email = 1;
  if (this->has_email()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_email(), output);
  }

  // .api.Plan plan = 2;
  if (this->plan() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->plan(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.UnSubscribeRequest)
}

::google::protobuf::uint8* UnSubscribeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.UnSubscribeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String email = 1;
  if (this->has_email()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_email(), deterministic, target);
  }

  // .api.Plan plan = 2;
  if (this->plan() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->plan(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.UnSubscribeRequest)
  return target;
}

size_t UnSubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.UnSubscribeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String email = 1;
  if (this->has_email()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *email_);
  }

  // .api.Plan plan = 2;
  if (this->plan() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->plan());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnSubscribeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.UnSubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const UnSubscribeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnSubscribeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.UnSubscribeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.UnSubscribeRequest)
    MergeFrom(*source);
  }
}

void UnSubscribeRequest::MergeFrom(const UnSubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.UnSubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_email()) {
    mutable_email()->::common::String::MergeFrom(from.email());
  }
  if (from.plan() != 0) {
    set_plan(from.plan());
  }
}

void UnSubscribeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.UnSubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnSubscribeRequest::CopyFrom(const UnSubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.UnSubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnSubscribeRequest::IsInitialized() const {
  return true;
}

void UnSubscribeRequest::Swap(UnSubscribeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnSubscribeRequest::InternalSwap(UnSubscribeRequest* other) {
  using std::swap;
  swap(email_, other->email_);
  swap(plan_, other->plan_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata UnSubscribeRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Card::InitAsDefaultInstance() {
  ::api::_Card_default_instance_._instance.get_mutable()->number_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Card_default_instance_._instance.get_mutable()->exp_month_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Card_default_instance_._instance.get_mutable()->exp_year_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Card_default_instance_._instance.get_mutable()->cvc_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void Card::clear_number() {
  if (GetArenaNoVirtual() == NULL && number_ != NULL) {
    delete number_;
  }
  number_ = NULL;
}
void Card::clear_exp_month() {
  if (GetArenaNoVirtual() == NULL && exp_month_ != NULL) {
    delete exp_month_;
  }
  exp_month_ = NULL;
}
void Card::clear_exp_year() {
  if (GetArenaNoVirtual() == NULL && exp_year_ != NULL) {
    delete exp_year_;
  }
  exp_year_ = NULL;
}
void Card::clear_cvc() {
  if (GetArenaNoVirtual() == NULL && cvc_ != NULL) {
    delete cvc_;
  }
  cvc_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Card::kNumberFieldNumber;
const int Card::kExpMonthFieldNumber;
const int Card::kExpYearFieldNumber;
const int Card::kCvcFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Card::Card()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Card.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Card)
}
Card::Card(const Card& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_number()) {
    number_ = new ::common::String(*from.number_);
  } else {
    number_ = NULL;
  }
  if (from.has_exp_month()) {
    exp_month_ = new ::common::String(*from.exp_month_);
  } else {
    exp_month_ = NULL;
  }
  if (from.has_exp_year()) {
    exp_year_ = new ::common::String(*from.exp_year_);
  } else {
    exp_year_ = NULL;
  }
  if (from.has_cvc()) {
    cvc_ = new ::common::String(*from.cvc_);
  } else {
    cvc_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.Card)
}

void Card::SharedCtor() {
  ::memset(&number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cvc_) -
      reinterpret_cast<char*>(&number_)) + sizeof(cvc_));
}

Card::~Card() {
  // @@protoc_insertion_point(destructor:api.Card)
  SharedDtor();
}

void Card::SharedDtor() {
  if (this != internal_default_instance()) delete number_;
  if (this != internal_default_instance()) delete exp_month_;
  if (this != internal_default_instance()) delete exp_year_;
  if (this != internal_default_instance()) delete cvc_;
}

void Card::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Card::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Card& Card::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Card.base);
  return *internal_default_instance();
}


void Card::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && number_ != NULL) {
    delete number_;
  }
  number_ = NULL;
  if (GetArenaNoVirtual() == NULL && exp_month_ != NULL) {
    delete exp_month_;
  }
  exp_month_ = NULL;
  if (GetArenaNoVirtual() == NULL && exp_year_ != NULL) {
    delete exp_year_;
  }
  exp_year_ = NULL;
  if (GetArenaNoVirtual() == NULL && cvc_ != NULL) {
    delete cvc_;
  }
  cvc_ = NULL;
  _internal_metadata_.Clear();
}

bool Card::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Card)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_number()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String exp_month = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exp_month()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String exp_year = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exp_year()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String cvc = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cvc()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Card)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Card)
  return false;
#undef DO_
}

void Card::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String number = 1;
  if (this->has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_number(), output);
  }

  // .common.String exp_month = 2;
  if (this->has_exp_month()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_exp_month(), output);
  }

  // .common.String exp_year = 3;
  if (this->has_exp_year()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_exp_year(), output);
  }

  // .common.String cvc = 4;
  if (this->has_cvc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_cvc(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Card)
}

::google::protobuf::uint8* Card::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Card)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String number = 1;
  if (this->has_number()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_number(), deterministic, target);
  }

  // .common.String exp_month = 2;
  if (this->has_exp_month()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_exp_month(), deterministic, target);
  }

  // .common.String exp_year = 3;
  if (this->has_exp_year()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_exp_year(), deterministic, target);
  }

  // .common.String cvc = 4;
  if (this->has_cvc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_cvc(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Card)
  return target;
}

size_t Card::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Card)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String number = 1;
  if (this->has_number()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *number_);
  }

  // .common.String exp_month = 2;
  if (this->has_exp_month()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *exp_month_);
  }

  // .common.String exp_year = 3;
  if (this->has_exp_year()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *exp_year_);
  }

  // .common.String cvc = 4;
  if (this->has_cvc()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cvc_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Card::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Card)
  GOOGLE_DCHECK_NE(&from, this);
  const Card* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Card>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Card)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Card)
    MergeFrom(*source);
  }
}

void Card::MergeFrom(const Card& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Card)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_number()) {
    mutable_number()->::common::String::MergeFrom(from.number());
  }
  if (from.has_exp_month()) {
    mutable_exp_month()->::common::String::MergeFrom(from.exp_month());
  }
  if (from.has_exp_year()) {
    mutable_exp_year()->::common::String::MergeFrom(from.exp_year());
  }
  if (from.has_cvc()) {
    mutable_cvc()->::common::String::MergeFrom(from.cvc());
  }
}

void Card::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Card::CopyFrom(const Card& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Card)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Card::IsInitialized() const {
  return true;
}

void Card::Swap(Card* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Card::InternalSwap(Card* other) {
  using std::swap;
  swap(number_, other->number_);
  swap(exp_month_, other->exp_month_);
  swap(exp_year_, other->exp_year_);
  swap(cvc_, other->cvc_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Card::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SMS::InitAsDefaultInstance() {
  ::api::_SMS_default_instance_._instance.get_mutable()->service_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_SMS_default_instance_._instance.get_mutable()->to_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_SMS_default_instance_._instance.get_mutable()->message_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_SMS_default_instance_._instance.get_mutable()->mediaurl_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_SMS_default_instance_._instance.get_mutable()->callback_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_SMS_default_instance_._instance.get_mutable()->app_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void SMS::clear_service() {
  if (GetArenaNoVirtual() == NULL && service_ != NULL) {
    delete service_;
  }
  service_ = NULL;
}
void SMS::clear_to() {
  if (GetArenaNoVirtual() == NULL && to_ != NULL) {
    delete to_;
  }
  to_ = NULL;
}
void SMS::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
}
void SMS::clear_mediaurl() {
  if (GetArenaNoVirtual() == NULL && mediaurl_ != NULL) {
    delete mediaurl_;
  }
  mediaurl_ = NULL;
}
void SMS::clear_callback() {
  if (GetArenaNoVirtual() == NULL && callback_ != NULL) {
    delete callback_;
  }
  callback_ = NULL;
}
void SMS::clear_app() {
  if (GetArenaNoVirtual() == NULL && app_ != NULL) {
    delete app_;
  }
  app_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SMS::kServiceFieldNumber;
const int SMS::kToFieldNumber;
const int SMS::kMessageFieldNumber;
const int SMS::kMediaURLFieldNumber;
const int SMS::kCallbackFieldNumber;
const int SMS::kAppFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SMS::SMS()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_SMS.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.SMS)
}
SMS::SMS(const SMS& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_service()) {
    service_ = new ::common::String(*from.service_);
  } else {
    service_ = NULL;
  }
  if (from.has_to()) {
    to_ = new ::common::String(*from.to_);
  } else {
    to_ = NULL;
  }
  if (from.has_message()) {
    message_ = new ::common::String(*from.message_);
  } else {
    message_ = NULL;
  }
  if (from.has_mediaurl()) {
    mediaurl_ = new ::common::String(*from.mediaurl_);
  } else {
    mediaurl_ = NULL;
  }
  if (from.has_callback()) {
    callback_ = new ::common::String(*from.callback_);
  } else {
    callback_ = NULL;
  }
  if (from.has_app()) {
    app_ = new ::common::String(*from.app_);
  } else {
    app_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.SMS)
}

void SMS::SharedCtor() {
  ::memset(&service_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_) -
      reinterpret_cast<char*>(&service_)) + sizeof(app_));
}

SMS::~SMS() {
  // @@protoc_insertion_point(destructor:api.SMS)
  SharedDtor();
}

void SMS::SharedDtor() {
  if (this != internal_default_instance()) delete service_;
  if (this != internal_default_instance()) delete to_;
  if (this != internal_default_instance()) delete message_;
  if (this != internal_default_instance()) delete mediaurl_;
  if (this != internal_default_instance()) delete callback_;
  if (this != internal_default_instance()) delete app_;
}

void SMS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SMS::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SMS& SMS::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_SMS.base);
  return *internal_default_instance();
}


void SMS::Clear() {
// @@protoc_insertion_point(message_clear_start:api.SMS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && service_ != NULL) {
    delete service_;
  }
  service_ = NULL;
  if (GetArenaNoVirtual() == NULL && to_ != NULL) {
    delete to_;
  }
  to_ = NULL;
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  if (GetArenaNoVirtual() == NULL && mediaurl_ != NULL) {
    delete mediaurl_;
  }
  mediaurl_ = NULL;
  if (GetArenaNoVirtual() == NULL && callback_ != NULL) {
    delete callback_;
  }
  callback_ = NULL;
  if (GetArenaNoVirtual() == NULL && app_ != NULL) {
    delete app_;
  }
  app_ = NULL;
  _internal_metadata_.Clear();
}

bool SMS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.SMS)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String service = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_service()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String mediaURL = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mediaurl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String callback = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_callback()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String app = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_app()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.SMS)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.SMS)
  return false;
#undef DO_
}

void SMS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.SMS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String service = 1;
  if (this->has_service()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_service(), output);
  }

  // .common.String to = 2;
  if (this->has_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_to(), output);
  }

  // .common.String message = 3;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_message(), output);
  }

  // .common.String mediaURL = 4;
  if (this->has_mediaurl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_mediaurl(), output);
  }

  // .common.String callback = 5;
  if (this->has_callback()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_callback(), output);
  }

  // .common.String app = 6;
  if (this->has_app()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_app(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.SMS)
}

::google::protobuf::uint8* SMS::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.SMS)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String service = 1;
  if (this->has_service()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_service(), deterministic, target);
  }

  // .common.String to = 2;
  if (this->has_to()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_to(), deterministic, target);
  }

  // .common.String message = 3;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_message(), deterministic, target);
  }

  // .common.String mediaURL = 4;
  if (this->has_mediaurl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_mediaurl(), deterministic, target);
  }

  // .common.String callback = 5;
  if (this->has_callback()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_callback(), deterministic, target);
  }

  // .common.String app = 6;
  if (this->has_app()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_app(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.SMS)
  return target;
}

size_t SMS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.SMS)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String service = 1;
  if (this->has_service()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *service_);
  }

  // .common.String to = 2;
  if (this->has_to()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *to_);
  }

  // .common.String message = 3;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *message_);
  }

  // .common.String mediaURL = 4;
  if (this->has_mediaurl()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mediaurl_);
  }

  // .common.String callback = 5;
  if (this->has_callback()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *callback_);
  }

  // .common.String app = 6;
  if (this->has_app()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *app_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SMS::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.SMS)
  GOOGLE_DCHECK_NE(&from, this);
  const SMS* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SMS>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.SMS)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.SMS)
    MergeFrom(*source);
  }
}

void SMS::MergeFrom(const SMS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.SMS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_service()) {
    mutable_service()->::common::String::MergeFrom(from.service());
  }
  if (from.has_to()) {
    mutable_to()->::common::String::MergeFrom(from.to());
  }
  if (from.has_message()) {
    mutable_message()->::common::String::MergeFrom(from.message());
  }
  if (from.has_mediaurl()) {
    mutable_mediaurl()->::common::String::MergeFrom(from.mediaurl());
  }
  if (from.has_callback()) {
    mutable_callback()->::common::String::MergeFrom(from.callback());
  }
  if (from.has_app()) {
    mutable_app()->::common::String::MergeFrom(from.app());
  }
}

void SMS::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.SMS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SMS::CopyFrom(const SMS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.SMS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SMS::IsInitialized() const {
  return true;
}

void SMS::Swap(SMS* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SMS::InternalSwap(SMS* other) {
  using std::swap;
  swap(service_, other->service_);
  swap(to_, other->to_);
  swap(message_, other->message_);
  swap(mediaurl_, other->mediaurl_);
  swap(callback_, other->callback_);
  swap(app_, other->app_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SMS::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SMSBlast::InitAsDefaultInstance() {
  ::api::_SMSBlast_default_instance_._instance.get_mutable()->service_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_SMSBlast_default_instance_._instance.get_mutable()->to_ = const_cast< ::common::StringArray*>(
      ::common::StringArray::internal_default_instance());
  ::api::_SMSBlast_default_instance_._instance.get_mutable()->message_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_SMSBlast_default_instance_._instance.get_mutable()->mediaurl_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_SMSBlast_default_instance_._instance.get_mutable()->callback_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_SMSBlast_default_instance_._instance.get_mutable()->app_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void SMSBlast::clear_service() {
  if (GetArenaNoVirtual() == NULL && service_ != NULL) {
    delete service_;
  }
  service_ = NULL;
}
void SMSBlast::clear_to() {
  if (GetArenaNoVirtual() == NULL && to_ != NULL) {
    delete to_;
  }
  to_ = NULL;
}
void SMSBlast::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
}
void SMSBlast::clear_mediaurl() {
  if (GetArenaNoVirtual() == NULL && mediaurl_ != NULL) {
    delete mediaurl_;
  }
  mediaurl_ = NULL;
}
void SMSBlast::clear_callback() {
  if (GetArenaNoVirtual() == NULL && callback_ != NULL) {
    delete callback_;
  }
  callback_ = NULL;
}
void SMSBlast::clear_app() {
  if (GetArenaNoVirtual() == NULL && app_ != NULL) {
    delete app_;
  }
  app_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SMSBlast::kServiceFieldNumber;
const int SMSBlast::kToFieldNumber;
const int SMSBlast::kMessageFieldNumber;
const int SMSBlast::kMediaURLFieldNumber;
const int SMSBlast::kCallbackFieldNumber;
const int SMSBlast::kAppFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SMSBlast::SMSBlast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_SMSBlast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.SMSBlast)
}
SMSBlast::SMSBlast(const SMSBlast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_service()) {
    service_ = new ::common::String(*from.service_);
  } else {
    service_ = NULL;
  }
  if (from.has_to()) {
    to_ = new ::common::StringArray(*from.to_);
  } else {
    to_ = NULL;
  }
  if (from.has_message()) {
    message_ = new ::common::String(*from.message_);
  } else {
    message_ = NULL;
  }
  if (from.has_mediaurl()) {
    mediaurl_ = new ::common::String(*from.mediaurl_);
  } else {
    mediaurl_ = NULL;
  }
  if (from.has_callback()) {
    callback_ = new ::common::String(*from.callback_);
  } else {
    callback_ = NULL;
  }
  if (from.has_app()) {
    app_ = new ::common::String(*from.app_);
  } else {
    app_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.SMSBlast)
}

void SMSBlast::SharedCtor() {
  ::memset(&service_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_) -
      reinterpret_cast<char*>(&service_)) + sizeof(app_));
}

SMSBlast::~SMSBlast() {
  // @@protoc_insertion_point(destructor:api.SMSBlast)
  SharedDtor();
}

void SMSBlast::SharedDtor() {
  if (this != internal_default_instance()) delete service_;
  if (this != internal_default_instance()) delete to_;
  if (this != internal_default_instance()) delete message_;
  if (this != internal_default_instance()) delete mediaurl_;
  if (this != internal_default_instance()) delete callback_;
  if (this != internal_default_instance()) delete app_;
}

void SMSBlast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SMSBlast::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SMSBlast& SMSBlast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_SMSBlast.base);
  return *internal_default_instance();
}


void SMSBlast::Clear() {
// @@protoc_insertion_point(message_clear_start:api.SMSBlast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && service_ != NULL) {
    delete service_;
  }
  service_ = NULL;
  if (GetArenaNoVirtual() == NULL && to_ != NULL) {
    delete to_;
  }
  to_ = NULL;
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  if (GetArenaNoVirtual() == NULL && mediaurl_ != NULL) {
    delete mediaurl_;
  }
  mediaurl_ = NULL;
  if (GetArenaNoVirtual() == NULL && callback_ != NULL) {
    delete callback_;
  }
  callback_ = NULL;
  if (GetArenaNoVirtual() == NULL && app_ != NULL) {
    delete app_;
  }
  app_ = NULL;
  _internal_metadata_.Clear();
}

bool SMSBlast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.SMSBlast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String service = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_service()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringArray to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String mediaURL = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mediaurl()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String callback = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_callback()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String app = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_app()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.SMSBlast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.SMSBlast)
  return false;
#undef DO_
}

void SMSBlast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.SMSBlast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String service = 1;
  if (this->has_service()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_service(), output);
  }

  // .common.StringArray to = 2;
  if (this->has_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_to(), output);
  }

  // .common.String message = 3;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_message(), output);
  }

  // .common.String mediaURL = 4;
  if (this->has_mediaurl()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_mediaurl(), output);
  }

  // .common.String callback = 5;
  if (this->has_callback()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_callback(), output);
  }

  // .common.String app = 6;
  if (this->has_app()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_app(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.SMSBlast)
}

::google::protobuf::uint8* SMSBlast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.SMSBlast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String service = 1;
  if (this->has_service()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_service(), deterministic, target);
  }

  // .common.StringArray to = 2;
  if (this->has_to()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_to(), deterministic, target);
  }

  // .common.String message = 3;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_message(), deterministic, target);
  }

  // .common.String mediaURL = 4;
  if (this->has_mediaurl()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_mediaurl(), deterministic, target);
  }

  // .common.String callback = 5;
  if (this->has_callback()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_callback(), deterministic, target);
  }

  // .common.String app = 6;
  if (this->has_app()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_app(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.SMSBlast)
  return target;
}

size_t SMSBlast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.SMSBlast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String service = 1;
  if (this->has_service()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *service_);
  }

  // .common.StringArray to = 2;
  if (this->has_to()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *to_);
  }

  // .common.String message = 3;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *message_);
  }

  // .common.String mediaURL = 4;
  if (this->has_mediaurl()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *mediaurl_);
  }

  // .common.String callback = 5;
  if (this->has_callback()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *callback_);
  }

  // .common.String app = 6;
  if (this->has_app()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *app_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SMSBlast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.SMSBlast)
  GOOGLE_DCHECK_NE(&from, this);
  const SMSBlast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SMSBlast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.SMSBlast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.SMSBlast)
    MergeFrom(*source);
  }
}

void SMSBlast::MergeFrom(const SMSBlast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.SMSBlast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_service()) {
    mutable_service()->::common::String::MergeFrom(from.service());
  }
  if (from.has_to()) {
    mutable_to()->::common::StringArray::MergeFrom(from.to());
  }
  if (from.has_message()) {
    mutable_message()->::common::String::MergeFrom(from.message());
  }
  if (from.has_mediaurl()) {
    mutable_mediaurl()->::common::String::MergeFrom(from.mediaurl());
  }
  if (from.has_callback()) {
    mutable_callback()->::common::String::MergeFrom(from.callback());
  }
  if (from.has_app()) {
    mutable_app()->::common::String::MergeFrom(from.app());
  }
}

void SMSBlast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.SMSBlast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SMSBlast::CopyFrom(const SMSBlast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.SMSBlast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SMSBlast::IsInitialized() const {
  return true;
}

void SMSBlast::Swap(SMSBlast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SMSBlast::InternalSwap(SMSBlast* other) {
  using std::swap;
  swap(service_, other->service_);
  swap(to_, other->to_);
  swap(message_, other->message_);
  swap(mediaurl_, other->mediaurl_);
  swap(callback_, other->callback_);
  swap(app_, other->app_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SMSBlast::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EmailRequest::InitAsDefaultInstance() {
  ::api::_EmailRequest_default_instance_._instance.get_mutable()->from_name_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_EmailRequest_default_instance_._instance.get_mutable()->from_email_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_EmailRequest_default_instance_._instance.get_mutable()->email_ = const_cast< ::api::Email*>(
      ::api::Email::internal_default_instance());
}
void EmailRequest::clear_from_name() {
  if (GetArenaNoVirtual() == NULL && from_name_ != NULL) {
    delete from_name_;
  }
  from_name_ = NULL;
}
void EmailRequest::clear_from_email() {
  if (GetArenaNoVirtual() == NULL && from_email_ != NULL) {
    delete from_email_;
  }
  from_email_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmailRequest::kFromNameFieldNumber;
const int EmailRequest::kFromEmailFieldNumber;
const int EmailRequest::kEmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmailRequest::EmailRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_EmailRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.EmailRequest)
}
EmailRequest::EmailRequest(const EmailRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_from_name()) {
    from_name_ = new ::common::String(*from.from_name_);
  } else {
    from_name_ = NULL;
  }
  if (from.has_from_email()) {
    from_email_ = new ::common::String(*from.from_email_);
  } else {
    from_email_ = NULL;
  }
  if (from.has_email()) {
    email_ = new ::api::Email(*from.email_);
  } else {
    email_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.EmailRequest)
}

void EmailRequest::SharedCtor() {
  ::memset(&from_name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&email_) -
      reinterpret_cast<char*>(&from_name_)) + sizeof(email_));
}

EmailRequest::~EmailRequest() {
  // @@protoc_insertion_point(destructor:api.EmailRequest)
  SharedDtor();
}

void EmailRequest::SharedDtor() {
  if (this != internal_default_instance()) delete from_name_;
  if (this != internal_default_instance()) delete from_email_;
  if (this != internal_default_instance()) delete email_;
}

void EmailRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EmailRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmailRequest& EmailRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_EmailRequest.base);
  return *internal_default_instance();
}


void EmailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.EmailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && from_name_ != NULL) {
    delete from_name_;
  }
  from_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && from_email_ != NULL) {
    delete from_email_;
  }
  from_email_ = NULL;
  if (GetArenaNoVirtual() == NULL && email_ != NULL) {
    delete email_;
  }
  email_ = NULL;
  _internal_metadata_.Clear();
}

bool EmailRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.EmailRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String from_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_from_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String from_email = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_from_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.Email email = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.EmailRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.EmailRequest)
  return false;
#undef DO_
}

void EmailRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.EmailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String from_name = 1;
  if (this->has_from_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_from_name(), output);
  }

  // .common.String from_email = 2;
  if (this->has_from_email()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_from_email(), output);
  }

  // .api.Email email = 3;
  if (this->has_email()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_email(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.EmailRequest)
}

::google::protobuf::uint8* EmailRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.EmailRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String from_name = 1;
  if (this->has_from_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_from_name(), deterministic, target);
  }

  // .common.String from_email = 2;
  if (this->has_from_email()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_from_email(), deterministic, target);
  }

  // .api.Email email = 3;
  if (this->has_email()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_email(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.EmailRequest)
  return target;
}

size_t EmailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.EmailRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String from_name = 1;
  if (this->has_from_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *from_name_);
  }

  // .common.String from_email = 2;
  if (this->has_from_email()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *from_email_);
  }

  // .api.Email email = 3;
  if (this->has_email()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *email_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmailRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.EmailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EmailRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmailRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.EmailRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.EmailRequest)
    MergeFrom(*source);
  }
}

void EmailRequest::MergeFrom(const EmailRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.EmailRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_from_name()) {
    mutable_from_name()->::common::String::MergeFrom(from.from_name());
  }
  if (from.has_from_email()) {
    mutable_from_email()->::common::String::MergeFrom(from.from_email());
  }
  if (from.has_email()) {
    mutable_email()->::api::Email::MergeFrom(from.email());
  }
}

void EmailRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.EmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmailRequest::CopyFrom(const EmailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.EmailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmailRequest::IsInitialized() const {
  return true;
}

void EmailRequest::Swap(EmailRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmailRequest::InternalSwap(EmailRequest* other) {
  using std::swap;
  swap(from_name_, other->from_name_);
  swap(from_email_, other->from_email_);
  swap(email_, other->email_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmailRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EmailBlastRequest::InitAsDefaultInstance() {
  ::api::_EmailBlastRequest_default_instance_._instance.get_mutable()->from_name_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_EmailBlastRequest_default_instance_._instance.get_mutable()->from_email_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_EmailBlastRequest_default_instance_._instance.get_mutable()->blast_ = const_cast< ::api::EmailBlast*>(
      ::api::EmailBlast::internal_default_instance());
}
void EmailBlastRequest::clear_from_name() {
  if (GetArenaNoVirtual() == NULL && from_name_ != NULL) {
    delete from_name_;
  }
  from_name_ = NULL;
}
void EmailBlastRequest::clear_from_email() {
  if (GetArenaNoVirtual() == NULL && from_email_ != NULL) {
    delete from_email_;
  }
  from_email_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmailBlastRequest::kFromNameFieldNumber;
const int EmailBlastRequest::kFromEmailFieldNumber;
const int EmailBlastRequest::kBlastFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmailBlastRequest::EmailBlastRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_EmailBlastRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.EmailBlastRequest)
}
EmailBlastRequest::EmailBlastRequest(const EmailBlastRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_from_name()) {
    from_name_ = new ::common::String(*from.from_name_);
  } else {
    from_name_ = NULL;
  }
  if (from.has_from_email()) {
    from_email_ = new ::common::String(*from.from_email_);
  } else {
    from_email_ = NULL;
  }
  if (from.has_blast()) {
    blast_ = new ::api::EmailBlast(*from.blast_);
  } else {
    blast_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.EmailBlastRequest)
}

void EmailBlastRequest::SharedCtor() {
  ::memset(&from_name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blast_) -
      reinterpret_cast<char*>(&from_name_)) + sizeof(blast_));
}

EmailBlastRequest::~EmailBlastRequest() {
  // @@protoc_insertion_point(destructor:api.EmailBlastRequest)
  SharedDtor();
}

void EmailBlastRequest::SharedDtor() {
  if (this != internal_default_instance()) delete from_name_;
  if (this != internal_default_instance()) delete from_email_;
  if (this != internal_default_instance()) delete blast_;
}

void EmailBlastRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EmailBlastRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmailBlastRequest& EmailBlastRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_EmailBlastRequest.base);
  return *internal_default_instance();
}


void EmailBlastRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.EmailBlastRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && from_name_ != NULL) {
    delete from_name_;
  }
  from_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && from_email_ != NULL) {
    delete from_email_;
  }
  from_email_ = NULL;
  if (GetArenaNoVirtual() == NULL && blast_ != NULL) {
    delete blast_;
  }
  blast_ = NULL;
  _internal_metadata_.Clear();
}

bool EmailBlastRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.EmailBlastRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String from_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_from_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String from_email = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_from_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.EmailBlast blast = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_blast()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.EmailBlastRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.EmailBlastRequest)
  return false;
#undef DO_
}

void EmailBlastRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.EmailBlastRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String from_name = 1;
  if (this->has_from_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_from_name(), output);
  }

  // .common.String from_email = 2;
  if (this->has_from_email()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_from_email(), output);
  }

  // .api.EmailBlast blast = 3;
  if (this->has_blast()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_blast(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.EmailBlastRequest)
}

::google::protobuf::uint8* EmailBlastRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.EmailBlastRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String from_name = 1;
  if (this->has_from_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_from_name(), deterministic, target);
  }

  // .common.String from_email = 2;
  if (this->has_from_email()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_from_email(), deterministic, target);
  }

  // .api.EmailBlast blast = 3;
  if (this->has_blast()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_blast(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.EmailBlastRequest)
  return target;
}

size_t EmailBlastRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.EmailBlastRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String from_name = 1;
  if (this->has_from_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *from_name_);
  }

  // .common.String from_email = 2;
  if (this->has_from_email()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *from_email_);
  }

  // .api.EmailBlast blast = 3;
  if (this->has_blast()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *blast_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmailBlastRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.EmailBlastRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EmailBlastRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmailBlastRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.EmailBlastRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.EmailBlastRequest)
    MergeFrom(*source);
  }
}

void EmailBlastRequest::MergeFrom(const EmailBlastRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.EmailBlastRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_from_name()) {
    mutable_from_name()->::common::String::MergeFrom(from.from_name());
  }
  if (from.has_from_email()) {
    mutable_from_email()->::common::String::MergeFrom(from.from_email());
  }
  if (from.has_blast()) {
    mutable_blast()->::api::EmailBlast::MergeFrom(from.blast());
  }
}

void EmailBlastRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.EmailBlastRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmailBlastRequest::CopyFrom(const EmailBlastRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.EmailBlastRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmailBlastRequest::IsInitialized() const {
  return true;
}

void EmailBlastRequest::Swap(EmailBlastRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmailBlastRequest::InternalSwap(EmailBlastRequest* other) {
  using std::swap;
  swap(from_name_, other->from_name_);
  swap(from_email_, other->from_email_);
  swap(blast_, other->blast_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmailBlastRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EmailBlast::InitAsDefaultInstance() {
  ::api::_EmailBlast_default_instance_._instance.get_mutable()->name_address_ = const_cast< ::common::StringMap*>(
      ::common::StringMap::internal_default_instance());
  ::api::_EmailBlast_default_instance_._instance.get_mutable()->subject_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_EmailBlast_default_instance_._instance.get_mutable()->plain_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_EmailBlast_default_instance_._instance.get_mutable()->html_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void EmailBlast::clear_name_address() {
  if (GetArenaNoVirtual() == NULL && name_address_ != NULL) {
    delete name_address_;
  }
  name_address_ = NULL;
}
void EmailBlast::clear_subject() {
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
}
void EmailBlast::clear_plain() {
  if (GetArenaNoVirtual() == NULL && plain_ != NULL) {
    delete plain_;
  }
  plain_ = NULL;
}
void EmailBlast::clear_html() {
  if (GetArenaNoVirtual() == NULL && html_ != NULL) {
    delete html_;
  }
  html_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EmailBlast::kNameAddressFieldNumber;
const int EmailBlast::kSubjectFieldNumber;
const int EmailBlast::kPlainFieldNumber;
const int EmailBlast::kHtmlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EmailBlast::EmailBlast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_EmailBlast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.EmailBlast)
}
EmailBlast::EmailBlast(const EmailBlast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name_address()) {
    name_address_ = new ::common::StringMap(*from.name_address_);
  } else {
    name_address_ = NULL;
  }
  if (from.has_subject()) {
    subject_ = new ::common::String(*from.subject_);
  } else {
    subject_ = NULL;
  }
  if (from.has_plain()) {
    plain_ = new ::common::String(*from.plain_);
  } else {
    plain_ = NULL;
  }
  if (from.has_html()) {
    html_ = new ::common::String(*from.html_);
  } else {
    html_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.EmailBlast)
}

void EmailBlast::SharedCtor() {
  ::memset(&name_address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&html_) -
      reinterpret_cast<char*>(&name_address_)) + sizeof(html_));
}

EmailBlast::~EmailBlast() {
  // @@protoc_insertion_point(destructor:api.EmailBlast)
  SharedDtor();
}

void EmailBlast::SharedDtor() {
  if (this != internal_default_instance()) delete name_address_;
  if (this != internal_default_instance()) delete subject_;
  if (this != internal_default_instance()) delete plain_;
  if (this != internal_default_instance()) delete html_;
}

void EmailBlast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* EmailBlast::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EmailBlast& EmailBlast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_EmailBlast.base);
  return *internal_default_instance();
}


void EmailBlast::Clear() {
// @@protoc_insertion_point(message_clear_start:api.EmailBlast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && name_address_ != NULL) {
    delete name_address_;
  }
  name_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
  if (GetArenaNoVirtual() == NULL && plain_ != NULL) {
    delete plain_;
  }
  plain_ = NULL;
  if (GetArenaNoVirtual() == NULL && html_ != NULL) {
    delete html_;
  }
  html_ = NULL;
  _internal_metadata_.Clear();
}

bool EmailBlast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.EmailBlast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.StringMap name_address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String subject = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String plain = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_plain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String html = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_html()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.EmailBlast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.EmailBlast)
  return false;
#undef DO_
}

void EmailBlast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.EmailBlast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.StringMap name_address = 1;
  if (this->has_name_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_name_address(), output);
  }

  // .common.String subject = 2;
  if (this->has_subject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_subject(), output);
  }

  // .common.String plain = 3;
  if (this->has_plain()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_plain(), output);
  }

  // .common.String html = 4;
  if (this->has_html()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_html(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.EmailBlast)
}

::google::protobuf::uint8* EmailBlast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.EmailBlast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.StringMap name_address = 1;
  if (this->has_name_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_name_address(), deterministic, target);
  }

  // .common.String subject = 2;
  if (this->has_subject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_subject(), deterministic, target);
  }

  // .common.String plain = 3;
  if (this->has_plain()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_plain(), deterministic, target);
  }

  // .common.String html = 4;
  if (this->has_html()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_html(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.EmailBlast)
  return target;
}

size_t EmailBlast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.EmailBlast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.StringMap name_address = 1;
  if (this->has_name_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_address_);
  }

  // .common.String subject = 2;
  if (this->has_subject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *subject_);
  }

  // .common.String plain = 3;
  if (this->has_plain()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *plain_);
  }

  // .common.String html = 4;
  if (this->has_html()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *html_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EmailBlast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.EmailBlast)
  GOOGLE_DCHECK_NE(&from, this);
  const EmailBlast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EmailBlast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.EmailBlast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.EmailBlast)
    MergeFrom(*source);
  }
}

void EmailBlast::MergeFrom(const EmailBlast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.EmailBlast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name_address()) {
    mutable_name_address()->::common::StringMap::MergeFrom(from.name_address());
  }
  if (from.has_subject()) {
    mutable_subject()->::common::String::MergeFrom(from.subject());
  }
  if (from.has_plain()) {
    mutable_plain()->::common::String::MergeFrom(from.plain());
  }
  if (from.has_html()) {
    mutable_html()->::common::String::MergeFrom(from.html());
  }
}

void EmailBlast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.EmailBlast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmailBlast::CopyFrom(const EmailBlast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.EmailBlast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmailBlast::IsInitialized() const {
  return true;
}

void EmailBlast::Swap(EmailBlast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EmailBlast::InternalSwap(EmailBlast* other) {
  using std::swap;
  swap(name_address_, other->name_address_);
  swap(subject_, other->subject_);
  swap(plain_, other->plain_);
  swap(html_, other->html_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata EmailBlast::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Email::InitAsDefaultInstance() {
  ::api::_Email_default_instance_._instance.get_mutable()->name_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Email_default_instance_._instance.get_mutable()->address_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Email_default_instance_._instance.get_mutable()->subject_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Email_default_instance_._instance.get_mutable()->plain_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Email_default_instance_._instance.get_mutable()->html_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void Email::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void Email::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
}
void Email::clear_subject() {
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
}
void Email::clear_plain() {
  if (GetArenaNoVirtual() == NULL && plain_ != NULL) {
    delete plain_;
  }
  plain_ = NULL;
}
void Email::clear_html() {
  if (GetArenaNoVirtual() == NULL && html_ != NULL) {
    delete html_;
  }
  html_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Email::kNameFieldNumber;
const int Email::kAddressFieldNumber;
const int Email::kSubjectFieldNumber;
const int Email::kPlainFieldNumber;
const int Email::kHtmlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Email::Email()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Email.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Email)
}
Email::Email(const Email& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::common::String(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_address()) {
    address_ = new ::common::String(*from.address_);
  } else {
    address_ = NULL;
  }
  if (from.has_subject()) {
    subject_ = new ::common::String(*from.subject_);
  } else {
    subject_ = NULL;
  }
  if (from.has_plain()) {
    plain_ = new ::common::String(*from.plain_);
  } else {
    plain_ = NULL;
  }
  if (from.has_html()) {
    html_ = new ::common::String(*from.html_);
  } else {
    html_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.Email)
}

void Email::SharedCtor() {
  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&html_) -
      reinterpret_cast<char*>(&name_)) + sizeof(html_));
}

Email::~Email() {
  // @@protoc_insertion_point(destructor:api.Email)
  SharedDtor();
}

void Email::SharedDtor() {
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete address_;
  if (this != internal_default_instance()) delete subject_;
  if (this != internal_default_instance()) delete plain_;
  if (this != internal_default_instance()) delete html_;
}

void Email::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Email::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Email& Email::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Email.base);
  return *internal_default_instance();
}


void Email::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Email)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  if (GetArenaNoVirtual() == NULL && subject_ != NULL) {
    delete subject_;
  }
  subject_ = NULL;
  if (GetArenaNoVirtual() == NULL && plain_ != NULL) {
    delete plain_;
  }
  plain_ = NULL;
  if (GetArenaNoVirtual() == NULL && html_ != NULL) {
    delete html_;
  }
  html_ = NULL;
  _internal_metadata_.Clear();
}

bool Email::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Email)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String address = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String subject = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subject()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String plain = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_plain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String html = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_html()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Email)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Email)
  return false;
#undef DO_
}

void Email::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Email)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_name(), output);
  }

  // .common.String address = 2;
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_address(), output);
  }

  // .common.String subject = 3;
  if (this->has_subject()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_subject(), output);
  }

  // .common.String plain = 4;
  if (this->has_plain()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_plain(), output);
  }

  // .common.String html = 5;
  if (this->has_html()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_html(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Email)
}

::google::protobuf::uint8* Email::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Email)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_name(), deterministic, target);
  }

  // .common.String address = 2;
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_address(), deterministic, target);
  }

  // .common.String subject = 3;
  if (this->has_subject()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_subject(), deterministic, target);
  }

  // .common.String plain = 4;
  if (this->has_plain()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_plain(), deterministic, target);
  }

  // .common.String html = 5;
  if (this->has_html()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_html(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Email)
  return target;
}

size_t Email::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Email)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .common.String address = 2;
  if (this->has_address()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *address_);
  }

  // .common.String subject = 3;
  if (this->has_subject()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *subject_);
  }

  // .common.String plain = 4;
  if (this->has_plain()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *plain_);
  }

  // .common.String html = 5;
  if (this->has_html()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *html_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Email::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Email)
  GOOGLE_DCHECK_NE(&from, this);
  const Email* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Email>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Email)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Email)
    MergeFrom(*source);
  }
}

void Email::MergeFrom(const Email& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Email)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    mutable_name()->::common::String::MergeFrom(from.name());
  }
  if (from.has_address()) {
    mutable_address()->::common::String::MergeFrom(from.address());
  }
  if (from.has_subject()) {
    mutable_subject()->::common::String::MergeFrom(from.subject());
  }
  if (from.has_plain()) {
    mutable_plain()->::common::String::MergeFrom(from.plain());
  }
  if (from.has_html()) {
    mutable_html()->::common::String::MergeFrom(from.html());
  }
}

void Email::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Email)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Email::CopyFrom(const Email& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Email)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Email::IsInitialized() const {
  return true;
}

void Email::Swap(Email* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Email::InternalSwap(Email* other) {
  using std::swap;
  swap(name_, other->name_);
  swap(address_, other->address_);
  swap(subject_, other->subject_);
  swap(plain_, other->plain_);
  swap(html_, other->html_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Email::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Call::InitAsDefaultInstance() {
  ::api::_Call_default_instance_._instance.get_mutable()->from_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Call_default_instance_._instance.get_mutable()->to_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Call_default_instance_._instance.get_mutable()->app_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void Call::clear_from() {
  if (GetArenaNoVirtual() == NULL && from_ != NULL) {
    delete from_;
  }
  from_ = NULL;
}
void Call::clear_to() {
  if (GetArenaNoVirtual() == NULL && to_ != NULL) {
    delete to_;
  }
  to_ = NULL;
}
void Call::clear_app() {
  if (GetArenaNoVirtual() == NULL && app_ != NULL) {
    delete app_;
  }
  app_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Call::kFromFieldNumber;
const int Call::kToFieldNumber;
const int Call::kAppFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Call::Call()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Call.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Call)
}
Call::Call(const Call& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_from()) {
    from_ = new ::common::String(*from.from_);
  } else {
    from_ = NULL;
  }
  if (from.has_to()) {
    to_ = new ::common::String(*from.to_);
  } else {
    to_ = NULL;
  }
  if (from.has_app()) {
    app_ = new ::common::String(*from.app_);
  } else {
    app_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.Call)
}

void Call::SharedCtor() {
  ::memset(&from_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_) -
      reinterpret_cast<char*>(&from_)) + sizeof(app_));
}

Call::~Call() {
  // @@protoc_insertion_point(destructor:api.Call)
  SharedDtor();
}

void Call::SharedDtor() {
  if (this != internal_default_instance()) delete from_;
  if (this != internal_default_instance()) delete to_;
  if (this != internal_default_instance()) delete app_;
}

void Call::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Call::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Call& Call::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Call.base);
  return *internal_default_instance();
}


void Call::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && from_ != NULL) {
    delete from_;
  }
  from_ = NULL;
  if (GetArenaNoVirtual() == NULL && to_ != NULL) {
    delete to_;
  }
  to_ = NULL;
  if (GetArenaNoVirtual() == NULL && app_ != NULL) {
    delete app_;
  }
  app_ = NULL;
  _internal_metadata_.Clear();
}

bool Call::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Call)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String app = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_app()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Call)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Call)
  return false;
#undef DO_
}

void Call::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String from = 1;
  if (this->has_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_from(), output);
  }

  // .common.String to = 2;
  if (this->has_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_to(), output);
  }

  // .common.String app = 3;
  if (this->has_app()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_app(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Call)
}

::google::protobuf::uint8* Call::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Call)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String from = 1;
  if (this->has_from()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_from(), deterministic, target);
  }

  // .common.String to = 2;
  if (this->has_to()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_to(), deterministic, target);
  }

  // .common.String app = 3;
  if (this->has_app()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_app(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Call)
  return target;
}

size_t Call::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Call)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String from = 1;
  if (this->has_from()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *from_);
  }

  // .common.String to = 2;
  if (this->has_to()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *to_);
  }

  // .common.String app = 3;
  if (this->has_app()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *app_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Call::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Call)
  GOOGLE_DCHECK_NE(&from, this);
  const Call* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Call>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Call)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Call)
    MergeFrom(*source);
  }
}

void Call::MergeFrom(const Call& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Call)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_from()) {
    mutable_from()->::common::String::MergeFrom(from.from());
  }
  if (from.has_to()) {
    mutable_to()->::common::String::MergeFrom(from.to());
  }
  if (from.has_app()) {
    mutable_app()->::common::String::MergeFrom(from.app());
  }
}

void Call::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Call::CopyFrom(const Call& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Call)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Call::IsInitialized() const {
  return true;
}

void Call::Swap(Call* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Call::InternalSwap(Call* other) {
  using std::swap;
  swap(from_, other->from_);
  swap(to_, other->to_);
  swap(app_, other->app_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Call::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CallBlast::InitAsDefaultInstance() {
  ::api::_CallBlast_default_instance_._instance.get_mutable()->from_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_CallBlast_default_instance_._instance.get_mutable()->to_ = const_cast< ::common::StringArray*>(
      ::common::StringArray::internal_default_instance());
  ::api::_CallBlast_default_instance_._instance.get_mutable()->app_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void CallBlast::clear_from() {
  if (GetArenaNoVirtual() == NULL && from_ != NULL) {
    delete from_;
  }
  from_ = NULL;
}
void CallBlast::clear_to() {
  if (GetArenaNoVirtual() == NULL && to_ != NULL) {
    delete to_;
  }
  to_ = NULL;
}
void CallBlast::clear_app() {
  if (GetArenaNoVirtual() == NULL && app_ != NULL) {
    delete app_;
  }
  app_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallBlast::kFromFieldNumber;
const int CallBlast::kToFieldNumber;
const int CallBlast::kAppFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallBlast::CallBlast()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_CallBlast.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.CallBlast)
}
CallBlast::CallBlast(const CallBlast& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_from()) {
    from_ = new ::common::String(*from.from_);
  } else {
    from_ = NULL;
  }
  if (from.has_to()) {
    to_ = new ::common::StringArray(*from.to_);
  } else {
    to_ = NULL;
  }
  if (from.has_app()) {
    app_ = new ::common::String(*from.app_);
  } else {
    app_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.CallBlast)
}

void CallBlast::SharedCtor() {
  ::memset(&from_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&app_) -
      reinterpret_cast<char*>(&from_)) + sizeof(app_));
}

CallBlast::~CallBlast() {
  // @@protoc_insertion_point(destructor:api.CallBlast)
  SharedDtor();
}

void CallBlast::SharedDtor() {
  if (this != internal_default_instance()) delete from_;
  if (this != internal_default_instance()) delete to_;
  if (this != internal_default_instance()) delete app_;
}

void CallBlast::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CallBlast::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallBlast& CallBlast::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_CallBlast.base);
  return *internal_default_instance();
}


void CallBlast::Clear() {
// @@protoc_insertion_point(message_clear_start:api.CallBlast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && from_ != NULL) {
    delete from_;
  }
  from_ = NULL;
  if (GetArenaNoVirtual() == NULL && to_ != NULL) {
    delete to_;
  }
  to_ = NULL;
  if (GetArenaNoVirtual() == NULL && app_ != NULL) {
    delete app_;
  }
  app_ = NULL;
  _internal_metadata_.Clear();
}

bool CallBlast::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.CallBlast)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringArray to = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String app = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_app()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.CallBlast)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.CallBlast)
  return false;
#undef DO_
}

void CallBlast::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.CallBlast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String from = 1;
  if (this->has_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_from(), output);
  }

  // .common.StringArray to = 2;
  if (this->has_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_to(), output);
  }

  // .common.String app = 3;
  if (this->has_app()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_app(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.CallBlast)
}

::google::protobuf::uint8* CallBlast::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.CallBlast)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String from = 1;
  if (this->has_from()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_from(), deterministic, target);
  }

  // .common.StringArray to = 2;
  if (this->has_to()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_to(), deterministic, target);
  }

  // .common.String app = 3;
  if (this->has_app()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_app(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.CallBlast)
  return target;
}

size_t CallBlast::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.CallBlast)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String from = 1;
  if (this->has_from()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *from_);
  }

  // .common.StringArray to = 2;
  if (this->has_to()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *to_);
  }

  // .common.String app = 3;
  if (this->has_app()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *app_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CallBlast::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.CallBlast)
  GOOGLE_DCHECK_NE(&from, this);
  const CallBlast* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallBlast>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.CallBlast)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.CallBlast)
    MergeFrom(*source);
  }
}

void CallBlast::MergeFrom(const CallBlast& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.CallBlast)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_from()) {
    mutable_from()->::common::String::MergeFrom(from.from());
  }
  if (from.has_to()) {
    mutable_to()->::common::StringArray::MergeFrom(from.to());
  }
  if (from.has_app()) {
    mutable_app()->::common::String::MergeFrom(from.app());
  }
}

void CallBlast::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.CallBlast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallBlast::CopyFrom(const CallBlast& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.CallBlast)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallBlast::IsInitialized() const {
  return true;
}

void CallBlast::Swap(CallBlast* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallBlast::InternalSwap(CallBlast* other) {
  using std::swap;
  swap(from_, other->from_);
  swap(to_, other->to_);
  swap(app_, other->app_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CallBlast::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void User::InitAsDefaultInstance() {
  ::api::_User_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->name_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->given_name_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->family_name_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->gender_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->birthdate_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->email_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->phone_number_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->picture_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->user_metadata_ = const_cast< ::common::StringMap*>(
      ::common::StringMap::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->app_metadata_ = const_cast< ::common::StringMap*>(
      ::common::StringMap::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->last_ip_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->nickname_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->multifactor_ = const_cast< ::common::StringArray*>(
      ::common::StringArray::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->created_at_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->updated_at_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_User_default_instance_._instance.get_mutable()->password_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void User::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) {
    delete user_id_;
  }
  user_id_ = NULL;
}
void User::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void User::clear_given_name() {
  if (GetArenaNoVirtual() == NULL && given_name_ != NULL) {
    delete given_name_;
  }
  given_name_ = NULL;
}
void User::clear_family_name() {
  if (GetArenaNoVirtual() == NULL && family_name_ != NULL) {
    delete family_name_;
  }
  family_name_ = NULL;
}
void User::clear_gender() {
  if (GetArenaNoVirtual() == NULL && gender_ != NULL) {
    delete gender_;
  }
  gender_ = NULL;
}
void User::clear_birthdate() {
  if (GetArenaNoVirtual() == NULL && birthdate_ != NULL) {
    delete birthdate_;
  }
  birthdate_ = NULL;
}
void User::clear_email() {
  if (GetArenaNoVirtual() == NULL && email_ != NULL) {
    delete email_;
  }
  email_ = NULL;
}
void User::clear_phone_number() {
  if (GetArenaNoVirtual() == NULL && phone_number_ != NULL) {
    delete phone_number_;
  }
  phone_number_ = NULL;
}
void User::clear_picture() {
  if (GetArenaNoVirtual() == NULL && picture_ != NULL) {
    delete picture_;
  }
  picture_ = NULL;
}
void User::clear_user_metadata() {
  if (GetArenaNoVirtual() == NULL && user_metadata_ != NULL) {
    delete user_metadata_;
  }
  user_metadata_ = NULL;
}
void User::clear_app_metadata() {
  if (GetArenaNoVirtual() == NULL && app_metadata_ != NULL) {
    delete app_metadata_;
  }
  app_metadata_ = NULL;
}
void User::clear_last_ip() {
  if (GetArenaNoVirtual() == NULL && last_ip_ != NULL) {
    delete last_ip_;
  }
  last_ip_ = NULL;
}
void User::clear_nickname() {
  if (GetArenaNoVirtual() == NULL && nickname_ != NULL) {
    delete nickname_;
  }
  nickname_ = NULL;
}
void User::clear_multifactor() {
  if (GetArenaNoVirtual() == NULL && multifactor_ != NULL) {
    delete multifactor_;
  }
  multifactor_ = NULL;
}
void User::clear_created_at() {
  if (GetArenaNoVirtual() == NULL && created_at_ != NULL) {
    delete created_at_;
  }
  created_at_ = NULL;
}
void User::clear_updated_at() {
  if (GetArenaNoVirtual() == NULL && updated_at_ != NULL) {
    delete updated_at_;
  }
  updated_at_ = NULL;
}
void User::clear_password() {
  if (GetArenaNoVirtual() == NULL && password_ != NULL) {
    delete password_;
  }
  password_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int User::kUserIdFieldNumber;
const int User::kNameFieldNumber;
const int User::kGivenNameFieldNumber;
const int User::kFamilyNameFieldNumber;
const int User::kGenderFieldNumber;
const int User::kBirthdateFieldNumber;
const int User::kEmailFieldNumber;
const int User::kPhoneNumberFieldNumber;
const int User::kPictureFieldNumber;
const int User::kUserMetadataFieldNumber;
const int User::kAppMetadataFieldNumber;
const int User::kLastIpFieldNumber;
const int User::kBlockedFieldNumber;
const int User::kNicknameFieldNumber;
const int User::kMultifactorFieldNumber;
const int User::kCreatedAtFieldNumber;
const int User::kUpdatedAtFieldNumber;
const int User::kPhoneVerifiedFieldNumber;
const int User::kEmailVerifiedFieldNumber;
const int User::kPasswordFieldNumber;
const int User::kIdentitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

User::User()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_User.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.User)
}
User::User(const User& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      identities_(from.identities_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_user_id()) {
    user_id_ = new ::common::Identifier(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::common::String(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_given_name()) {
    given_name_ = new ::common::String(*from.given_name_);
  } else {
    given_name_ = NULL;
  }
  if (from.has_family_name()) {
    family_name_ = new ::common::String(*from.family_name_);
  } else {
    family_name_ = NULL;
  }
  if (from.has_gender()) {
    gender_ = new ::common::String(*from.gender_);
  } else {
    gender_ = NULL;
  }
  if (from.has_birthdate()) {
    birthdate_ = new ::common::String(*from.birthdate_);
  } else {
    birthdate_ = NULL;
  }
  if (from.has_email()) {
    email_ = new ::common::Identifier(*from.email_);
  } else {
    email_ = NULL;
  }
  if (from.has_phone_number()) {
    phone_number_ = new ::common::Identifier(*from.phone_number_);
  } else {
    phone_number_ = NULL;
  }
  if (from.has_picture()) {
    picture_ = new ::common::String(*from.picture_);
  } else {
    picture_ = NULL;
  }
  if (from.has_user_metadata()) {
    user_metadata_ = new ::common::StringMap(*from.user_metadata_);
  } else {
    user_metadata_ = NULL;
  }
  if (from.has_app_metadata()) {
    app_metadata_ = new ::common::StringMap(*from.app_metadata_);
  } else {
    app_metadata_ = NULL;
  }
  if (from.has_last_ip()) {
    last_ip_ = new ::common::String(*from.last_ip_);
  } else {
    last_ip_ = NULL;
  }
  if (from.has_nickname()) {
    nickname_ = new ::common::String(*from.nickname_);
  } else {
    nickname_ = NULL;
  }
  if (from.has_multifactor()) {
    multifactor_ = new ::common::StringArray(*from.multifactor_);
  } else {
    multifactor_ = NULL;
  }
  if (from.has_created_at()) {
    created_at_ = new ::common::String(*from.created_at_);
  } else {
    created_at_ = NULL;
  }
  if (from.has_updated_at()) {
    updated_at_ = new ::common::String(*from.updated_at_);
  } else {
    updated_at_ = NULL;
  }
  if (from.has_password()) {
    password_ = new ::common::String(*from.password_);
  } else {
    password_ = NULL;
  }
  ::memcpy(&blocked_, &from.blocked_,
    static_cast<size_t>(reinterpret_cast<char*>(&email_verified_) -
    reinterpret_cast<char*>(&blocked_)) + sizeof(email_verified_));
  // @@protoc_insertion_point(copy_constructor:api.User)
}

void User::SharedCtor() {
  ::memset(&user_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&email_verified_) -
      reinterpret_cast<char*>(&user_id_)) + sizeof(email_verified_));
}

User::~User() {
  // @@protoc_insertion_point(destructor:api.User)
  SharedDtor();
}

void User::SharedDtor() {
  if (this != internal_default_instance()) delete user_id_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete given_name_;
  if (this != internal_default_instance()) delete family_name_;
  if (this != internal_default_instance()) delete gender_;
  if (this != internal_default_instance()) delete birthdate_;
  if (this != internal_default_instance()) delete email_;
  if (this != internal_default_instance()) delete phone_number_;
  if (this != internal_default_instance()) delete picture_;
  if (this != internal_default_instance()) delete user_metadata_;
  if (this != internal_default_instance()) delete app_metadata_;
  if (this != internal_default_instance()) delete last_ip_;
  if (this != internal_default_instance()) delete nickname_;
  if (this != internal_default_instance()) delete multifactor_;
  if (this != internal_default_instance()) delete created_at_;
  if (this != internal_default_instance()) delete updated_at_;
  if (this != internal_default_instance()) delete password_;
}

void User::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* User::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const User& User::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_User.base);
  return *internal_default_instance();
}


void User::Clear() {
// @@protoc_insertion_point(message_clear_start:api.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  identities_.Clear();
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) {
    delete user_id_;
  }
  user_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && given_name_ != NULL) {
    delete given_name_;
  }
  given_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && family_name_ != NULL) {
    delete family_name_;
  }
  family_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && gender_ != NULL) {
    delete gender_;
  }
  gender_ = NULL;
  if (GetArenaNoVirtual() == NULL && birthdate_ != NULL) {
    delete birthdate_;
  }
  birthdate_ = NULL;
  if (GetArenaNoVirtual() == NULL && email_ != NULL) {
    delete email_;
  }
  email_ = NULL;
  if (GetArenaNoVirtual() == NULL && phone_number_ != NULL) {
    delete phone_number_;
  }
  phone_number_ = NULL;
  if (GetArenaNoVirtual() == NULL && picture_ != NULL) {
    delete picture_;
  }
  picture_ = NULL;
  if (GetArenaNoVirtual() == NULL && user_metadata_ != NULL) {
    delete user_metadata_;
  }
  user_metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && app_metadata_ != NULL) {
    delete app_metadata_;
  }
  app_metadata_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_ip_ != NULL) {
    delete last_ip_;
  }
  last_ip_ = NULL;
  if (GetArenaNoVirtual() == NULL && nickname_ != NULL) {
    delete nickname_;
  }
  nickname_ = NULL;
  if (GetArenaNoVirtual() == NULL && multifactor_ != NULL) {
    delete multifactor_;
  }
  multifactor_ = NULL;
  if (GetArenaNoVirtual() == NULL && created_at_ != NULL) {
    delete created_at_;
  }
  created_at_ = NULL;
  if (GetArenaNoVirtual() == NULL && updated_at_ != NULL) {
    delete updated_at_;
  }
  updated_at_ = NULL;
  if (GetArenaNoVirtual() == NULL && password_ != NULL) {
    delete password_;
  }
  password_ = NULL;
  ::memset(&blocked_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&email_verified_) -
      reinterpret_cast<char*>(&blocked_)) + sizeof(email_verified_));
  _internal_metadata_.Clear();
}

bool User::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.User)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Identifier user_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String given_name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_given_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String family_name = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_family_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String gender = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_gender()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String birthdate = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_birthdate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Identifier email = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_email()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Identifier phone_number = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phone_number()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String picture = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_picture()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringMap user_metadata = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringMap app_metadata = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_app_metadata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String last_ip = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool blocked = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &blocked_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String nickname = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_nickname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringArray multifactor = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_multifactor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String created_at = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_created_at()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String updated_at = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_updated_at()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool phone_verified = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 152 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &phone_verified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool email_verified = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &email_verified_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String password = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_password()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .api.Identity identities = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_identities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.User)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.User)
  return false;
#undef DO_
}

void User::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier user_id = 1;
  if (this->has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_user_id(), output);
  }

  // .common.String name = 2;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_name(), output);
  }

  // .common.String given_name = 3;
  if (this->has_given_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_given_name(), output);
  }

  // .common.String family_name = 4;
  if (this->has_family_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_family_name(), output);
  }

  // .common.String gender = 5;
  if (this->has_gender()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_gender(), output);
  }

  // .common.String birthdate = 6;
  if (this->has_birthdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_birthdate(), output);
  }

  // .common.Identifier email = 7;
  if (this->has_email()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_email(), output);
  }

  // .common.Identifier phone_number = 8;
  if (this->has_phone_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_phone_number(), output);
  }

  // .common.String picture = 9;
  if (this->has_picture()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_picture(), output);
  }

  // .common.StringMap user_metadata = 10;
  if (this->has_user_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_user_metadata(), output);
  }

  // .common.StringMap app_metadata = 11;
  if (this->has_app_metadata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_app_metadata(), output);
  }

  // .common.String last_ip = 12;
  if (this->has_last_ip()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_last_ip(), output);
  }

  // bool blocked = 13;
  if (this->blocked() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->blocked(), output);
  }

  // .common.String nickname = 14;
  if (this->has_nickname()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_internal_nickname(), output);
  }

  // .common.StringArray multifactor = 15;
  if (this->has_multifactor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_internal_multifactor(), output);
  }

  // .common.String created_at = 17;
  if (this->has_created_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, this->_internal_created_at(), output);
  }

  // .common.String updated_at = 18;
  if (this->has_updated_at()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, this->_internal_updated_at(), output);
  }

  // bool phone_verified = 19;
  if (this->phone_verified() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(19, this->phone_verified(), output);
  }

  // bool email_verified = 20;
  if (this->email_verified() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(20, this->email_verified(), output);
  }

  // .common.String password = 21;
  if (this->has_password()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, this->_internal_password(), output);
  }

  // repeated .api.Identity identities = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identities_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22,
      this->identities(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.User)
}

::google::protobuf::uint8* User::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.User)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier user_id = 1;
  if (this->has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_user_id(), deterministic, target);
  }

  // .common.String name = 2;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_name(), deterministic, target);
  }

  // .common.String given_name = 3;
  if (this->has_given_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_given_name(), deterministic, target);
  }

  // .common.String family_name = 4;
  if (this->has_family_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_family_name(), deterministic, target);
  }

  // .common.String gender = 5;
  if (this->has_gender()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_gender(), deterministic, target);
  }

  // .common.String birthdate = 6;
  if (this->has_birthdate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_birthdate(), deterministic, target);
  }

  // .common.Identifier email = 7;
  if (this->has_email()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_email(), deterministic, target);
  }

  // .common.Identifier phone_number = 8;
  if (this->has_phone_number()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_phone_number(), deterministic, target);
  }

  // .common.String picture = 9;
  if (this->has_picture()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_picture(), deterministic, target);
  }

  // .common.StringMap user_metadata = 10;
  if (this->has_user_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_user_metadata(), deterministic, target);
  }

  // .common.StringMap app_metadata = 11;
  if (this->has_app_metadata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_app_metadata(), deterministic, target);
  }

  // .common.String last_ip = 12;
  if (this->has_last_ip()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_last_ip(), deterministic, target);
  }

  // bool blocked = 13;
  if (this->blocked() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->blocked(), target);
  }

  // .common.String nickname = 14;
  if (this->has_nickname()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, this->_internal_nickname(), deterministic, target);
  }

  // .common.StringArray multifactor = 15;
  if (this->has_multifactor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, this->_internal_multifactor(), deterministic, target);
  }

  // .common.String created_at = 17;
  if (this->has_created_at()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17, this->_internal_created_at(), deterministic, target);
  }

  // .common.String updated_at = 18;
  if (this->has_updated_at()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18, this->_internal_updated_at(), deterministic, target);
  }

  // bool phone_verified = 19;
  if (this->phone_verified() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(19, this->phone_verified(), target);
  }

  // bool email_verified = 20;
  if (this->email_verified() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(20, this->email_verified(), target);
  }

  // .common.String password = 21;
  if (this->has_password()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, this->_internal_password(), deterministic, target);
  }

  // repeated .api.Identity identities = 22;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->identities_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22, this->identities(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.User)
  return target;
}

size_t User::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.User)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .api.Identity identities = 22;
  {
    unsigned int count = static_cast<unsigned int>(this->identities_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->identities(static_cast<int>(i)));
    }
  }

  // .common.Identifier user_id = 1;
  if (this->has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_id_);
  }

  // .common.String name = 2;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .common.String given_name = 3;
  if (this->has_given_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *given_name_);
  }

  // .common.String family_name = 4;
  if (this->has_family_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *family_name_);
  }

  // .common.String gender = 5;
  if (this->has_gender()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *gender_);
  }

  // .common.String birthdate = 6;
  if (this->has_birthdate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *birthdate_);
  }

  // .common.Identifier email = 7;
  if (this->has_email()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *email_);
  }

  // .common.Identifier phone_number = 8;
  if (this->has_phone_number()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phone_number_);
  }

  // .common.String picture = 9;
  if (this->has_picture()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *picture_);
  }

  // .common.StringMap user_metadata = 10;
  if (this->has_user_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_metadata_);
  }

  // .common.StringMap app_metadata = 11;
  if (this->has_app_metadata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *app_metadata_);
  }

  // .common.String last_ip = 12;
  if (this->has_last_ip()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *last_ip_);
  }

  // .common.String nickname = 14;
  if (this->has_nickname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *nickname_);
  }

  // .common.StringArray multifactor = 15;
  if (this->has_multifactor()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *multifactor_);
  }

  // .common.String created_at = 17;
  if (this->has_created_at()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *created_at_);
  }

  // .common.String updated_at = 18;
  if (this->has_updated_at()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *updated_at_);
  }

  // .common.String password = 21;
  if (this->has_password()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *password_);
  }

  // bool blocked = 13;
  if (this->blocked() != 0) {
    total_size += 1 + 1;
  }

  // bool phone_verified = 19;
  if (this->phone_verified() != 0) {
    total_size += 2 + 1;
  }

  // bool email_verified = 20;
  if (this->email_verified() != 0) {
    total_size += 2 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void User::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.User)
  GOOGLE_DCHECK_NE(&from, this);
  const User* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const User>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.User)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.User)
    MergeFrom(*source);
  }
}

void User::MergeFrom(const User& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.User)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  identities_.MergeFrom(from.identities_);
  if (from.has_user_id()) {
    mutable_user_id()->::common::Identifier::MergeFrom(from.user_id());
  }
  if (from.has_name()) {
    mutable_name()->::common::String::MergeFrom(from.name());
  }
  if (from.has_given_name()) {
    mutable_given_name()->::common::String::MergeFrom(from.given_name());
  }
  if (from.has_family_name()) {
    mutable_family_name()->::common::String::MergeFrom(from.family_name());
  }
  if (from.has_gender()) {
    mutable_gender()->::common::String::MergeFrom(from.gender());
  }
  if (from.has_birthdate()) {
    mutable_birthdate()->::common::String::MergeFrom(from.birthdate());
  }
  if (from.has_email()) {
    mutable_email()->::common::Identifier::MergeFrom(from.email());
  }
  if (from.has_phone_number()) {
    mutable_phone_number()->::common::Identifier::MergeFrom(from.phone_number());
  }
  if (from.has_picture()) {
    mutable_picture()->::common::String::MergeFrom(from.picture());
  }
  if (from.has_user_metadata()) {
    mutable_user_metadata()->::common::StringMap::MergeFrom(from.user_metadata());
  }
  if (from.has_app_metadata()) {
    mutable_app_metadata()->::common::StringMap::MergeFrom(from.app_metadata());
  }
  if (from.has_last_ip()) {
    mutable_last_ip()->::common::String::MergeFrom(from.last_ip());
  }
  if (from.has_nickname()) {
    mutable_nickname()->::common::String::MergeFrom(from.nickname());
  }
  if (from.has_multifactor()) {
    mutable_multifactor()->::common::StringArray::MergeFrom(from.multifactor());
  }
  if (from.has_created_at()) {
    mutable_created_at()->::common::String::MergeFrom(from.created_at());
  }
  if (from.has_updated_at()) {
    mutable_updated_at()->::common::String::MergeFrom(from.updated_at());
  }
  if (from.has_password()) {
    mutable_password()->::common::String::MergeFrom(from.password());
  }
  if (from.blocked() != 0) {
    set_blocked(from.blocked());
  }
  if (from.phone_verified() != 0) {
    set_phone_verified(from.phone_verified());
  }
  if (from.email_verified() != 0) {
    set_email_verified(from.email_verified());
  }
}

void User::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void User::CopyFrom(const User& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.User)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool User::IsInitialized() const {
  return true;
}

void User::Swap(User* other) {
  if (other == this) return;
  InternalSwap(other);
}
void User::InternalSwap(User* other) {
  using std::swap;
  CastToBase(&identities_)->InternalSwap(CastToBase(&other->identities_));
  swap(user_id_, other->user_id_);
  swap(name_, other->name_);
  swap(given_name_, other->given_name_);
  swap(family_name_, other->family_name_);
  swap(gender_, other->gender_);
  swap(birthdate_, other->birthdate_);
  swap(email_, other->email_);
  swap(phone_number_, other->phone_number_);
  swap(picture_, other->picture_);
  swap(user_metadata_, other->user_metadata_);
  swap(app_metadata_, other->app_metadata_);
  swap(last_ip_, other->last_ip_);
  swap(nickname_, other->nickname_);
  swap(multifactor_, other->multifactor_);
  swap(created_at_, other->created_at_);
  swap(updated_at_, other->updated_at_);
  swap(password_, other->password_);
  swap(blocked_, other->blocked_);
  swap(phone_verified_, other->phone_verified_);
  swap(email_verified_, other->email_verified_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata User::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Identity::InitAsDefaultInstance() {
  ::api::_Identity_default_instance_._instance.get_mutable()->connection_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Identity_default_instance_._instance.get_mutable()->user_id_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_Identity_default_instance_._instance.get_mutable()->provider_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void Identity::clear_connection() {
  if (GetArenaNoVirtual() == NULL && connection_ != NULL) {
    delete connection_;
  }
  connection_ = NULL;
}
void Identity::clear_user_id() {
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) {
    delete user_id_;
  }
  user_id_ = NULL;
}
void Identity::clear_provider() {
  if (GetArenaNoVirtual() == NULL && provider_ != NULL) {
    delete provider_;
  }
  provider_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Identity::kConnectionFieldNumber;
const int Identity::kUserIdFieldNumber;
const int Identity::kProviderFieldNumber;
const int Identity::kIsSocialFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Identity::Identity()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Identity.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Identity)
}
Identity::Identity(const Identity& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_connection()) {
    connection_ = new ::common::String(*from.connection_);
  } else {
    connection_ = NULL;
  }
  if (from.has_user_id()) {
    user_id_ = new ::common::Identifier(*from.user_id_);
  } else {
    user_id_ = NULL;
  }
  if (from.has_provider()) {
    provider_ = new ::common::String(*from.provider_);
  } else {
    provider_ = NULL;
  }
  issocial_ = from.issocial_;
  // @@protoc_insertion_point(copy_constructor:api.Identity)
}

void Identity::SharedCtor() {
  ::memset(&connection_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&issocial_) -
      reinterpret_cast<char*>(&connection_)) + sizeof(issocial_));
}

Identity::~Identity() {
  // @@protoc_insertion_point(destructor:api.Identity)
  SharedDtor();
}

void Identity::SharedDtor() {
  if (this != internal_default_instance()) delete connection_;
  if (this != internal_default_instance()) delete user_id_;
  if (this != internal_default_instance()) delete provider_;
}

void Identity::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Identity::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Identity& Identity::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Identity.base);
  return *internal_default_instance();
}


void Identity::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Identity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && connection_ != NULL) {
    delete connection_;
  }
  connection_ = NULL;
  if (GetArenaNoVirtual() == NULL && user_id_ != NULL) {
    delete user_id_;
  }
  user_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && provider_ != NULL) {
    delete provider_;
  }
  provider_ = NULL;
  issocial_ = false;
  _internal_metadata_.Clear();
}

bool Identity::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Identity)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String connection = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_connection()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Identifier user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String provider = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_provider()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool isSocial = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issocial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Identity)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Identity)
  return false;
#undef DO_
}

void Identity::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Identity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String connection = 1;
  if (this->has_connection()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_connection(), output);
  }

  // .common.Identifier user_id = 2;
  if (this->has_user_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_user_id(), output);
  }

  // .common.String provider = 3;
  if (this->has_provider()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_provider(), output);
  }

  // bool isSocial = 4;
  if (this->issocial() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->issocial(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Identity)
}

::google::protobuf::uint8* Identity::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Identity)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String connection = 1;
  if (this->has_connection()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_connection(), deterministic, target);
  }

  // .common.Identifier user_id = 2;
  if (this->has_user_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_user_id(), deterministic, target);
  }

  // .common.String provider = 3;
  if (this->has_provider()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_provider(), deterministic, target);
  }

  // bool isSocial = 4;
  if (this->issocial() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->issocial(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Identity)
  return target;
}

size_t Identity::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Identity)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String connection = 1;
  if (this->has_connection()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *connection_);
  }

  // .common.Identifier user_id = 2;
  if (this->has_user_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_id_);
  }

  // .common.String provider = 3;
  if (this->has_provider()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *provider_);
  }

  // bool isSocial = 4;
  if (this->issocial() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Identity::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Identity)
  GOOGLE_DCHECK_NE(&from, this);
  const Identity* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Identity>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Identity)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Identity)
    MergeFrom(*source);
  }
}

void Identity::MergeFrom(const Identity& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Identity)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_connection()) {
    mutable_connection()->::common::String::MergeFrom(from.connection());
  }
  if (from.has_user_id()) {
    mutable_user_id()->::common::Identifier::MergeFrom(from.user_id());
  }
  if (from.has_provider()) {
    mutable_provider()->::common::String::MergeFrom(from.provider());
  }
  if (from.issocial() != 0) {
    set_issocial(from.issocial());
  }
}

void Identity::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Identity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Identity::CopyFrom(const Identity& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Identity)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Identity::IsInitialized() const {
  return true;
}

void Identity::Swap(Identity* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Identity::InternalSwap(Identity* other) {
  using std::swap;
  swap(connection_, other->connection_);
  swap(user_id_, other->user_id_);
  swap(provider_, other->provider_);
  swap(issocial_, other->issocial_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Identity::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Auth::InitAsDefaultInstance() {
  ::api::_Auth_default_instance_._instance.get_mutable()->domain_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Auth_default_instance_._instance.get_mutable()->client_id_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Auth_default_instance_._instance.get_mutable()->client_secret_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Auth_default_instance_._instance.get_mutable()->redirect_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void Auth::clear_domain() {
  if (GetArenaNoVirtual() == NULL && domain_ != NULL) {
    delete domain_;
  }
  domain_ = NULL;
}
void Auth::clear_client_id() {
  if (GetArenaNoVirtual() == NULL && client_id_ != NULL) {
    delete client_id_;
  }
  client_id_ = NULL;
}
void Auth::clear_client_secret() {
  if (GetArenaNoVirtual() == NULL && client_secret_ != NULL) {
    delete client_secret_;
  }
  client_secret_ = NULL;
}
void Auth::clear_redirect() {
  if (GetArenaNoVirtual() == NULL && redirect_ != NULL) {
    delete redirect_;
  }
  redirect_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Auth::kDomainFieldNumber;
const int Auth::kClientIdFieldNumber;
const int Auth::kClientSecretFieldNumber;
const int Auth::kRedirectFieldNumber;
const int Auth::kScopesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Auth::Auth()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Auth.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Auth)
}
Auth::Auth(const Auth& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      scopes_(from.scopes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_domain()) {
    domain_ = new ::common::String(*from.domain_);
  } else {
    domain_ = NULL;
  }
  if (from.has_client_id()) {
    client_id_ = new ::common::String(*from.client_id_);
  } else {
    client_id_ = NULL;
  }
  if (from.has_client_secret()) {
    client_secret_ = new ::common::String(*from.client_secret_);
  } else {
    client_secret_ = NULL;
  }
  if (from.has_redirect()) {
    redirect_ = new ::common::String(*from.redirect_);
  } else {
    redirect_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.Auth)
}

void Auth::SharedCtor() {
  ::memset(&domain_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&redirect_) -
      reinterpret_cast<char*>(&domain_)) + sizeof(redirect_));
}

Auth::~Auth() {
  // @@protoc_insertion_point(destructor:api.Auth)
  SharedDtor();
}

void Auth::SharedDtor() {
  if (this != internal_default_instance()) delete domain_;
  if (this != internal_default_instance()) delete client_id_;
  if (this != internal_default_instance()) delete client_secret_;
  if (this != internal_default_instance()) delete redirect_;
}

void Auth::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Auth::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Auth& Auth::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Auth.base);
  return *internal_default_instance();
}


void Auth::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  scopes_.Clear();
  if (GetArenaNoVirtual() == NULL && domain_ != NULL) {
    delete domain_;
  }
  domain_ = NULL;
  if (GetArenaNoVirtual() == NULL && client_id_ != NULL) {
    delete client_id_;
  }
  client_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && client_secret_ != NULL) {
    delete client_secret_;
  }
  client_secret_ = NULL;
  if (GetArenaNoVirtual() == NULL && redirect_ != NULL) {
    delete redirect_;
  }
  redirect_ = NULL;
  _internal_metadata_.Clear();
}

bool Auth::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Auth)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String domain = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_domain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String client_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String client_secret = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_client_secret()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String redirect = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_redirect()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .api.Scope scopes = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_scopes(static_cast< ::api::Scope >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_scopes(static_cast< ::api::Scope >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Auth)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Auth)
  return false;
#undef DO_
}

void Auth::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String domain = 1;
  if (this->has_domain()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_domain(), output);
  }

  // .common.String client_id = 2;
  if (this->has_client_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_client_id(), output);
  }

  // .common.String client_secret = 3;
  if (this->has_client_secret()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_client_secret(), output);
  }

  // .common.String redirect = 4;
  if (this->has_redirect()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_redirect(), output);
  }

  // repeated .api.Scope scopes = 5;
  if (this->scopes_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_scopes_cached_byte_size_));
  }
  for (int i = 0, n = this->scopes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->scopes(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Auth)
}

::google::protobuf::uint8* Auth::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Auth)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String domain = 1;
  if (this->has_domain()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_domain(), deterministic, target);
  }

  // .common.String client_id = 2;
  if (this->has_client_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_client_id(), deterministic, target);
  }

  // .common.String client_secret = 3;
  if (this->has_client_secret()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_client_secret(), deterministic, target);
  }

  // .common.String redirect = 4;
  if (this->has_redirect()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_redirect(), deterministic, target);
  }

  // repeated .api.Scope scopes = 5;
  if (this->scopes_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _scopes_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->scopes_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Auth)
  return target;
}

size_t Auth::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Auth)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .api.Scope scopes = 5;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->scopes_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->scopes(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _scopes_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .common.String domain = 1;
  if (this->has_domain()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *domain_);
  }

  // .common.String client_id = 2;
  if (this->has_client_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *client_id_);
  }

  // .common.String client_secret = 3;
  if (this->has_client_secret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *client_secret_);
  }

  // .common.String redirect = 4;
  if (this->has_redirect()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *redirect_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Auth::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Auth)
  GOOGLE_DCHECK_NE(&from, this);
  const Auth* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Auth>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Auth)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Auth)
    MergeFrom(*source);
  }
}

void Auth::MergeFrom(const Auth& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Auth)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  scopes_.MergeFrom(from.scopes_);
  if (from.has_domain()) {
    mutable_domain()->::common::String::MergeFrom(from.domain());
  }
  if (from.has_client_id()) {
    mutable_client_id()->::common::String::MergeFrom(from.client_id());
  }
  if (from.has_client_secret()) {
    mutable_client_secret()->::common::String::MergeFrom(from.client_secret());
  }
  if (from.has_redirect()) {
    mutable_redirect()->::common::String::MergeFrom(from.redirect());
  }
}

void Auth::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Auth::CopyFrom(const Auth& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Auth)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Auth::IsInitialized() const {
  return true;
}

void Auth::Swap(Auth* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Auth::InternalSwap(Auth* other) {
  using std::swap;
  scopes_.InternalSwap(&other->scopes_);
  swap(domain_, other->domain_);
  swap(client_id_, other->client_id_);
  swap(client_secret_, other->client_secret_);
  swap(redirect_, other->redirect_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Auth::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void JSONWebKeys::InitAsDefaultInstance() {
  ::api::_JSONWebKeys_default_instance_._instance.get_mutable()->kty_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_JSONWebKeys_default_instance_._instance.get_mutable()->kid_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_JSONWebKeys_default_instance_._instance.get_mutable()->use_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_JSONWebKeys_default_instance_._instance.get_mutable()->n_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_JSONWebKeys_default_instance_._instance.get_mutable()->e_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_JSONWebKeys_default_instance_._instance.get_mutable()->x5c_ = const_cast< ::common::StringArray*>(
      ::common::StringArray::internal_default_instance());
}
void JSONWebKeys::clear_kty() {
  if (GetArenaNoVirtual() == NULL && kty_ != NULL) {
    delete kty_;
  }
  kty_ = NULL;
}
void JSONWebKeys::clear_kid() {
  if (GetArenaNoVirtual() == NULL && kid_ != NULL) {
    delete kid_;
  }
  kid_ = NULL;
}
void JSONWebKeys::clear_use() {
  if (GetArenaNoVirtual() == NULL && use_ != NULL) {
    delete use_;
  }
  use_ = NULL;
}
void JSONWebKeys::clear_n() {
  if (GetArenaNoVirtual() == NULL && n_ != NULL) {
    delete n_;
  }
  n_ = NULL;
}
void JSONWebKeys::clear_e() {
  if (GetArenaNoVirtual() == NULL && e_ != NULL) {
    delete e_;
  }
  e_ = NULL;
}
void JSONWebKeys::clear_x5c() {
  if (GetArenaNoVirtual() == NULL && x5c_ != NULL) {
    delete x5c_;
  }
  x5c_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JSONWebKeys::kKtyFieldNumber;
const int JSONWebKeys::kKidFieldNumber;
const int JSONWebKeys::kUseFieldNumber;
const int JSONWebKeys::kNFieldNumber;
const int JSONWebKeys::kEFieldNumber;
const int JSONWebKeys::kX5CFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JSONWebKeys::JSONWebKeys()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_JSONWebKeys.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.JSONWebKeys)
}
JSONWebKeys::JSONWebKeys(const JSONWebKeys& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_kty()) {
    kty_ = new ::common::String(*from.kty_);
  } else {
    kty_ = NULL;
  }
  if (from.has_kid()) {
    kid_ = new ::common::Identifier(*from.kid_);
  } else {
    kid_ = NULL;
  }
  if (from.has_use()) {
    use_ = new ::common::String(*from.use_);
  } else {
    use_ = NULL;
  }
  if (from.has_n()) {
    n_ = new ::common::String(*from.n_);
  } else {
    n_ = NULL;
  }
  if (from.has_e()) {
    e_ = new ::common::String(*from.e_);
  } else {
    e_ = NULL;
  }
  if (from.has_x5c()) {
    x5c_ = new ::common::StringArray(*from.x5c_);
  } else {
    x5c_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.JSONWebKeys)
}

void JSONWebKeys::SharedCtor() {
  ::memset(&kty_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&x5c_) -
      reinterpret_cast<char*>(&kty_)) + sizeof(x5c_));
}

JSONWebKeys::~JSONWebKeys() {
  // @@protoc_insertion_point(destructor:api.JSONWebKeys)
  SharedDtor();
}

void JSONWebKeys::SharedDtor() {
  if (this != internal_default_instance()) delete kty_;
  if (this != internal_default_instance()) delete kid_;
  if (this != internal_default_instance()) delete use_;
  if (this != internal_default_instance()) delete n_;
  if (this != internal_default_instance()) delete e_;
  if (this != internal_default_instance()) delete x5c_;
}

void JSONWebKeys::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* JSONWebKeys::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const JSONWebKeys& JSONWebKeys::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_JSONWebKeys.base);
  return *internal_default_instance();
}


void JSONWebKeys::Clear() {
// @@protoc_insertion_point(message_clear_start:api.JSONWebKeys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && kty_ != NULL) {
    delete kty_;
  }
  kty_ = NULL;
  if (GetArenaNoVirtual() == NULL && kid_ != NULL) {
    delete kid_;
  }
  kid_ = NULL;
  if (GetArenaNoVirtual() == NULL && use_ != NULL) {
    delete use_;
  }
  use_ = NULL;
  if (GetArenaNoVirtual() == NULL && n_ != NULL) {
    delete n_;
  }
  n_ = NULL;
  if (GetArenaNoVirtual() == NULL && e_ != NULL) {
    delete e_;
  }
  e_ = NULL;
  if (GetArenaNoVirtual() == NULL && x5c_ != NULL) {
    delete x5c_;
  }
  x5c_ = NULL;
  _internal_metadata_.Clear();
}

bool JSONWebKeys::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.JSONWebKeys)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String kty = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kty()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Identifier kid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_kid()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String use = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_use()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String n = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_n()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String e = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_e()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringArray x5c = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_x5c()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.JSONWebKeys)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.JSONWebKeys)
  return false;
#undef DO_
}

void JSONWebKeys::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.JSONWebKeys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String kty = 1;
  if (this->has_kty()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_kty(), output);
  }

  // .common.Identifier kid = 2;
  if (this->has_kid()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_kid(), output);
  }

  // .common.String use = 3;
  if (this->has_use()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_use(), output);
  }

  // .common.String n = 4;
  if (this->has_n()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_n(), output);
  }

  // .common.String e = 5;
  if (this->has_e()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_e(), output);
  }

  // .common.StringArray x5c = 6;
  if (this->has_x5c()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_x5c(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.JSONWebKeys)
}

::google::protobuf::uint8* JSONWebKeys::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.JSONWebKeys)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String kty = 1;
  if (this->has_kty()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_kty(), deterministic, target);
  }

  // .common.Identifier kid = 2;
  if (this->has_kid()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_kid(), deterministic, target);
  }

  // .common.String use = 3;
  if (this->has_use()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_use(), deterministic, target);
  }

  // .common.String n = 4;
  if (this->has_n()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_n(), deterministic, target);
  }

  // .common.String e = 5;
  if (this->has_e()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_e(), deterministic, target);
  }

  // .common.StringArray x5c = 6;
  if (this->has_x5c()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_x5c(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.JSONWebKeys)
  return target;
}

size_t JSONWebKeys::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.JSONWebKeys)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String kty = 1;
  if (this->has_kty()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *kty_);
  }

  // .common.Identifier kid = 2;
  if (this->has_kid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *kid_);
  }

  // .common.String use = 3;
  if (this->has_use()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *use_);
  }

  // .common.String n = 4;
  if (this->has_n()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *n_);
  }

  // .common.String e = 5;
  if (this->has_e()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *e_);
  }

  // .common.StringArray x5c = 6;
  if (this->has_x5c()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *x5c_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JSONWebKeys::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.JSONWebKeys)
  GOOGLE_DCHECK_NE(&from, this);
  const JSONWebKeys* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const JSONWebKeys>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.JSONWebKeys)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.JSONWebKeys)
    MergeFrom(*source);
  }
}

void JSONWebKeys::MergeFrom(const JSONWebKeys& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.JSONWebKeys)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_kty()) {
    mutable_kty()->::common::String::MergeFrom(from.kty());
  }
  if (from.has_kid()) {
    mutable_kid()->::common::Identifier::MergeFrom(from.kid());
  }
  if (from.has_use()) {
    mutable_use()->::common::String::MergeFrom(from.use());
  }
  if (from.has_n()) {
    mutable_n()->::common::String::MergeFrom(from.n());
  }
  if (from.has_e()) {
    mutable_e()->::common::String::MergeFrom(from.e());
  }
  if (from.has_x5c()) {
    mutable_x5c()->::common::StringArray::MergeFrom(from.x5c());
  }
}

void JSONWebKeys::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.JSONWebKeys)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JSONWebKeys::CopyFrom(const JSONWebKeys& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.JSONWebKeys)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JSONWebKeys::IsInitialized() const {
  return true;
}

void JSONWebKeys::Swap(JSONWebKeys* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JSONWebKeys::InternalSwap(JSONWebKeys* other) {
  using std::swap;
  swap(kty_, other->kty_);
  swap(kid_, other->kid_);
  swap(use_, other->use_);
  swap(n_, other->n_);
  swap(e_, other->e_);
  swap(x5c_, other->x5c_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata JSONWebKeys::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Jwks::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Jwks::kKeysFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Jwks::Jwks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Jwks.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Jwks)
}
Jwks::Jwks(const Jwks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      keys_(from.keys_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:api.Jwks)
}

void Jwks::SharedCtor() {
}

Jwks::~Jwks() {
  // @@protoc_insertion_point(destructor:api.Jwks)
  SharedDtor();
}

void Jwks::SharedDtor() {
}

void Jwks::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Jwks::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Jwks& Jwks::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Jwks.base);
  return *internal_default_instance();
}


void Jwks::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Jwks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  keys_.Clear();
  _internal_metadata_.Clear();
}

bool Jwks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Jwks)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .api.JSONWebKeys keys = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_keys()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Jwks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Jwks)
  return false;
#undef DO_
}

void Jwks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Jwks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .api.JSONWebKeys keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->keys(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Jwks)
}

::google::protobuf::uint8* Jwks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Jwks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .api.JSONWebKeys keys = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->keys_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->keys(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Jwks)
  return target;
}

size_t Jwks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Jwks)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .api.JSONWebKeys keys = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->keys_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->keys(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Jwks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Jwks)
  GOOGLE_DCHECK_NE(&from, this);
  const Jwks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Jwks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Jwks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Jwks)
    MergeFrom(*source);
  }
}

void Jwks::MergeFrom(const Jwks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Jwks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  keys_.MergeFrom(from.keys_);
}

void Jwks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Jwks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Jwks::CopyFrom(const Jwks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Jwks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Jwks::IsInitialized() const {
  return true;
}

void Jwks::Swap(Jwks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Jwks::InternalSwap(Jwks* other) {
  using std::swap;
  CastToBase(&keys_)->InternalSwap(CastToBase(&other->keys_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Jwks::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RenderRequest::InitAsDefaultInstance() {
  ::api::_RenderRequest_default_instance_._instance.get_mutable()->name_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_RenderRequest_default_instance_._instance.get_mutable()->text_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_RenderRequest_default_instance_._instance.get_mutable()->data_ = const_cast< ::common::Bytes*>(
      ::common::Bytes::internal_default_instance());
}
void RenderRequest::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void RenderRequest::clear_text() {
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
}
void RenderRequest::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RenderRequest::kNameFieldNumber;
const int RenderRequest::kTextFieldNumber;
const int RenderRequest::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RenderRequest::RenderRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_RenderRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.RenderRequest)
}
RenderRequest::RenderRequest(const RenderRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::common::String(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_text()) {
    text_ = new ::common::String(*from.text_);
  } else {
    text_ = NULL;
  }
  if (from.has_data()) {
    data_ = new ::common::Bytes(*from.data_);
  } else {
    data_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.RenderRequest)
}

void RenderRequest::SharedCtor() {
  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&data_) -
      reinterpret_cast<char*>(&name_)) + sizeof(data_));
}

RenderRequest::~RenderRequest() {
  // @@protoc_insertion_point(destructor:api.RenderRequest)
  SharedDtor();
}

void RenderRequest::SharedDtor() {
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete text_;
  if (this != internal_default_instance()) delete data_;
}

void RenderRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RenderRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RenderRequest& RenderRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_RenderRequest.base);
  return *internal_default_instance();
}


void RenderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.RenderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && text_ != NULL) {
    delete text_;
  }
  text_ = NULL;
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  _internal_metadata_.Clear();
}

bool RenderRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.RenderRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String text = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Bytes data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.RenderRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.RenderRequest)
  return false;
#undef DO_
}

void RenderRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.RenderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String name = 1;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_name(), output);
  }

  // .common.String text = 2;
  if (this->has_text()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_text(), output);
  }

  // .common.Bytes data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.RenderRequest)
}

::google::protobuf::uint8* RenderRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.RenderRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String name = 1;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_name(), deterministic, target);
  }

  // .common.String text = 2;
  if (this->has_text()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_text(), deterministic, target);
  }

  // .common.Bytes data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.RenderRequest)
  return target;
}

size_t RenderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.RenderRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String name = 1;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .common.String text = 2;
  if (this->has_text()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *text_);
  }

  // .common.Bytes data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RenderRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.RenderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RenderRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RenderRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.RenderRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.RenderRequest)
    MergeFrom(*source);
  }
}

void RenderRequest::MergeFrom(const RenderRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.RenderRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    mutable_name()->::common::String::MergeFrom(from.name());
  }
  if (from.has_text()) {
    mutable_text()->::common::String::MergeFrom(from.text());
  }
  if (from.has_data()) {
    mutable_data()->::common::Bytes::MergeFrom(from.data());
  }
}

void RenderRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.RenderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RenderRequest::CopyFrom(const RenderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.RenderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RenderRequest::IsInitialized() const {
  return true;
}

void RenderRequest::Swap(RenderRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RenderRequest::InternalSwap(RenderRequest* other) {
  using std::swap;
  swap(name_, other->name_);
  swap(text_, other->text_);
  swap(data_, other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RenderRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SearchPhoneNumberRequest::InitAsDefaultInstance() {
  ::api::_SearchPhoneNumberRequest_default_instance_._instance.get_mutable()->state_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_SearchPhoneNumberRequest_default_instance_._instance.get_mutable()->capabilities_ = const_cast< ::api::NumberCapabilities*>(
      ::api::NumberCapabilities::internal_default_instance());
  ::api::_SearchPhoneNumberRequest_default_instance_._instance.get_mutable()->total_results_ = const_cast< ::common::Int64*>(
      ::common::Int64::internal_default_instance());
}
void SearchPhoneNumberRequest::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
void SearchPhoneNumberRequest::clear_total_results() {
  if (GetArenaNoVirtual() == NULL && total_results_ != NULL) {
    delete total_results_;
  }
  total_results_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SearchPhoneNumberRequest::kStateFieldNumber;
const int SearchPhoneNumberRequest::kCapabilitiesFieldNumber;
const int SearchPhoneNumberRequest::kTotalResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SearchPhoneNumberRequest::SearchPhoneNumberRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_SearchPhoneNumberRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.SearchPhoneNumberRequest)
}
SearchPhoneNumberRequest::SearchPhoneNumberRequest(const SearchPhoneNumberRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::common::String(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_capabilities()) {
    capabilities_ = new ::api::NumberCapabilities(*from.capabilities_);
  } else {
    capabilities_ = NULL;
  }
  if (from.has_total_results()) {
    total_results_ = new ::common::Int64(*from.total_results_);
  } else {
    total_results_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.SearchPhoneNumberRequest)
}

void SearchPhoneNumberRequest::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&total_results_) -
      reinterpret_cast<char*>(&state_)) + sizeof(total_results_));
}

SearchPhoneNumberRequest::~SearchPhoneNumberRequest() {
  // @@protoc_insertion_point(destructor:api.SearchPhoneNumberRequest)
  SharedDtor();
}

void SearchPhoneNumberRequest::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete capabilities_;
  if (this != internal_default_instance()) delete total_results_;
}

void SearchPhoneNumberRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SearchPhoneNumberRequest::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SearchPhoneNumberRequest& SearchPhoneNumberRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_SearchPhoneNumberRequest.base);
  return *internal_default_instance();
}


void SearchPhoneNumberRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:api.SearchPhoneNumberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && capabilities_ != NULL) {
    delete capabilities_;
  }
  capabilities_ = NULL;
  if (GetArenaNoVirtual() == NULL && total_results_ != NULL) {
    delete total_results_;
  }
  total_results_ = NULL;
  _internal_metadata_.Clear();
}

bool SearchPhoneNumberRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.SearchPhoneNumberRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String state = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.NumberCapabilities capabilities = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_capabilities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Int64 total_results = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_total_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.SearchPhoneNumberRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.SearchPhoneNumberRequest)
  return false;
#undef DO_
}

void SearchPhoneNumberRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.SearchPhoneNumberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String state = 1;
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_state(), output);
  }

  // .api.NumberCapabilities capabilities = 2;
  if (this->has_capabilities()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_capabilities(), output);
  }

  // .common.Int64 total_results = 3;
  if (this->has_total_results()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_total_results(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.SearchPhoneNumberRequest)
}

::google::protobuf::uint8* SearchPhoneNumberRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.SearchPhoneNumberRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String state = 1;
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_state(), deterministic, target);
  }

  // .api.NumberCapabilities capabilities = 2;
  if (this->has_capabilities()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_capabilities(), deterministic, target);
  }

  // .common.Int64 total_results = 3;
  if (this->has_total_results()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_total_results(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.SearchPhoneNumberRequest)
  return target;
}

size_t SearchPhoneNumberRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.SearchPhoneNumberRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String state = 1;
  if (this->has_state()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *state_);
  }

  // .api.NumberCapabilities capabilities = 2;
  if (this->has_capabilities()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *capabilities_);
  }

  // .common.Int64 total_results = 3;
  if (this->has_total_results()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *total_results_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchPhoneNumberRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.SearchPhoneNumberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchPhoneNumberRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SearchPhoneNumberRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.SearchPhoneNumberRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.SearchPhoneNumberRequest)
    MergeFrom(*source);
  }
}

void SearchPhoneNumberRequest::MergeFrom(const SearchPhoneNumberRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.SearchPhoneNumberRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::common::String::MergeFrom(from.state());
  }
  if (from.has_capabilities()) {
    mutable_capabilities()->::api::NumberCapabilities::MergeFrom(from.capabilities());
  }
  if (from.has_total_results()) {
    mutable_total_results()->::common::Int64::MergeFrom(from.total_results());
  }
}

void SearchPhoneNumberRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.SearchPhoneNumberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchPhoneNumberRequest::CopyFrom(const SearchPhoneNumberRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.SearchPhoneNumberRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchPhoneNumberRequest::IsInitialized() const {
  return true;
}

void SearchPhoneNumberRequest::Swap(SearchPhoneNumberRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SearchPhoneNumberRequest::InternalSwap(SearchPhoneNumberRequest* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(capabilities_, other->capabilities_);
  swap(total_results_, other->total_results_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SearchPhoneNumberRequest::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PhoneNumber::InitAsDefaultInstance() {
  ::api::_PhoneNumber_default_instance_._instance.get_mutable()->friendly_name_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_PhoneNumber_default_instance_._instance.get_mutable()->phone_number_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_PhoneNumber_default_instance_._instance.get_mutable()->region_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_PhoneNumber_default_instance_._instance.get_mutable()->capabilities_ = const_cast< ::api::NumberCapabilities*>(
      ::api::NumberCapabilities::internal_default_instance());
}
void PhoneNumber::clear_friendly_name() {
  if (GetArenaNoVirtual() == NULL && friendly_name_ != NULL) {
    delete friendly_name_;
  }
  friendly_name_ = NULL;
}
void PhoneNumber::clear_phone_number() {
  if (GetArenaNoVirtual() == NULL && phone_number_ != NULL) {
    delete phone_number_;
  }
  phone_number_ = NULL;
}
void PhoneNumber::clear_region() {
  if (GetArenaNoVirtual() == NULL && region_ != NULL) {
    delete region_;
  }
  region_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhoneNumber::kFriendlyNameFieldNumber;
const int PhoneNumber::kPhoneNumberFieldNumber;
const int PhoneNumber::kRegionFieldNumber;
const int PhoneNumber::kCapabilitiesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhoneNumber::PhoneNumber()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_PhoneNumber.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.PhoneNumber)
}
PhoneNumber::PhoneNumber(const PhoneNumber& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_friendly_name()) {
    friendly_name_ = new ::common::String(*from.friendly_name_);
  } else {
    friendly_name_ = NULL;
  }
  if (from.has_phone_number()) {
    phone_number_ = new ::common::String(*from.phone_number_);
  } else {
    phone_number_ = NULL;
  }
  if (from.has_region()) {
    region_ = new ::common::String(*from.region_);
  } else {
    region_ = NULL;
  }
  if (from.has_capabilities()) {
    capabilities_ = new ::api::NumberCapabilities(*from.capabilities_);
  } else {
    capabilities_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.PhoneNumber)
}

void PhoneNumber::SharedCtor() {
  ::memset(&friendly_name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&capabilities_) -
      reinterpret_cast<char*>(&friendly_name_)) + sizeof(capabilities_));
}

PhoneNumber::~PhoneNumber() {
  // @@protoc_insertion_point(destructor:api.PhoneNumber)
  SharedDtor();
}

void PhoneNumber::SharedDtor() {
  if (this != internal_default_instance()) delete friendly_name_;
  if (this != internal_default_instance()) delete phone_number_;
  if (this != internal_default_instance()) delete region_;
  if (this != internal_default_instance()) delete capabilities_;
}

void PhoneNumber::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PhoneNumber::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhoneNumber& PhoneNumber::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_PhoneNumber.base);
  return *internal_default_instance();
}


void PhoneNumber::Clear() {
// @@protoc_insertion_point(message_clear_start:api.PhoneNumber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && friendly_name_ != NULL) {
    delete friendly_name_;
  }
  friendly_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && phone_number_ != NULL) {
    delete phone_number_;
  }
  phone_number_ = NULL;
  if (GetArenaNoVirtual() == NULL && region_ != NULL) {
    delete region_;
  }
  region_ = NULL;
  if (GetArenaNoVirtual() == NULL && capabilities_ != NULL) {
    delete capabilities_;
  }
  capabilities_ = NULL;
  _internal_metadata_.Clear();
}

bool PhoneNumber::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.PhoneNumber)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.String friendly_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_friendly_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String phone_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_phone_number()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String region = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_region()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.NumberCapabilities capabilities = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_capabilities()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.PhoneNumber)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.PhoneNumber)
  return false;
#undef DO_
}

void PhoneNumber::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.PhoneNumber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String friendly_name = 1;
  if (this->has_friendly_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_friendly_name(), output);
  }

  // .common.String phone_number = 2;
  if (this->has_phone_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_phone_number(), output);
  }

  // .common.String region = 3;
  if (this->has_region()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_region(), output);
  }

  // .api.NumberCapabilities capabilities = 4;
  if (this->has_capabilities()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_capabilities(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.PhoneNumber)
}

::google::protobuf::uint8* PhoneNumber::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.PhoneNumber)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.String friendly_name = 1;
  if (this->has_friendly_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_friendly_name(), deterministic, target);
  }

  // .common.String phone_number = 2;
  if (this->has_phone_number()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_phone_number(), deterministic, target);
  }

  // .common.String region = 3;
  if (this->has_region()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_region(), deterministic, target);
  }

  // .api.NumberCapabilities capabilities = 4;
  if (this->has_capabilities()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_capabilities(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.PhoneNumber)
  return target;
}

size_t PhoneNumber::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.PhoneNumber)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.String friendly_name = 1;
  if (this->has_friendly_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *friendly_name_);
  }

  // .common.String phone_number = 2;
  if (this->has_phone_number()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *phone_number_);
  }

  // .common.String region = 3;
  if (this->has_region()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *region_);
  }

  // .api.NumberCapabilities capabilities = 4;
  if (this->has_capabilities()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *capabilities_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PhoneNumber::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.PhoneNumber)
  GOOGLE_DCHECK_NE(&from, this);
  const PhoneNumber* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhoneNumber>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.PhoneNumber)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.PhoneNumber)
    MergeFrom(*source);
  }
}

void PhoneNumber::MergeFrom(const PhoneNumber& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.PhoneNumber)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_friendly_name()) {
    mutable_friendly_name()->::common::String::MergeFrom(from.friendly_name());
  }
  if (from.has_phone_number()) {
    mutable_phone_number()->::common::String::MergeFrom(from.phone_number());
  }
  if (from.has_region()) {
    mutable_region()->::common::String::MergeFrom(from.region());
  }
  if (from.has_capabilities()) {
    mutable_capabilities()->::api::NumberCapabilities::MergeFrom(from.capabilities());
  }
}

void PhoneNumber::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.PhoneNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhoneNumber::CopyFrom(const PhoneNumber& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.PhoneNumber)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhoneNumber::IsInitialized() const {
  return true;
}

void PhoneNumber::Swap(PhoneNumber* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhoneNumber::InternalSwap(PhoneNumber* other) {
  using std::swap;
  swap(friendly_name_, other->friendly_name_);
  swap(phone_number_, other->phone_number_);
  swap(region_, other->region_);
  swap(capabilities_, other->capabilities_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PhoneNumber::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NumberCapabilities::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NumberCapabilities::kVoiceFieldNumber;
const int NumberCapabilities::kSmsFieldNumber;
const int NumberCapabilities::kMmsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NumberCapabilities::NumberCapabilities()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_NumberCapabilities.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.NumberCapabilities)
}
NumberCapabilities::NumberCapabilities(const NumberCapabilities& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&voice_, &from.voice_,
    static_cast<size_t>(reinterpret_cast<char*>(&mms_) -
    reinterpret_cast<char*>(&voice_)) + sizeof(mms_));
  // @@protoc_insertion_point(copy_constructor:api.NumberCapabilities)
}

void NumberCapabilities::SharedCtor() {
  ::memset(&voice_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mms_) -
      reinterpret_cast<char*>(&voice_)) + sizeof(mms_));
}

NumberCapabilities::~NumberCapabilities() {
  // @@protoc_insertion_point(destructor:api.NumberCapabilities)
  SharedDtor();
}

void NumberCapabilities::SharedDtor() {
}

void NumberCapabilities::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NumberCapabilities::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NumberCapabilities& NumberCapabilities::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_NumberCapabilities.base);
  return *internal_default_instance();
}


void NumberCapabilities::Clear() {
// @@protoc_insertion_point(message_clear_start:api.NumberCapabilities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&voice_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mms_) -
      reinterpret_cast<char*>(&voice_)) + sizeof(mms_));
  _internal_metadata_.Clear();
}

bool NumberCapabilities::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.NumberCapabilities)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool voice = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &voice_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool sms = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &sms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool mms = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &mms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.NumberCapabilities)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.NumberCapabilities)
  return false;
#undef DO_
}

void NumberCapabilities::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.NumberCapabilities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool voice = 1;
  if (this->voice() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->voice(), output);
  }

  // bool sms = 2;
  if (this->sms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->sms(), output);
  }

  // bool mms = 3;
  if (this->mms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->mms(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.NumberCapabilities)
}

::google::protobuf::uint8* NumberCapabilities::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.NumberCapabilities)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool voice = 1;
  if (this->voice() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->voice(), target);
  }

  // bool sms = 2;
  if (this->sms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->sms(), target);
  }

  // bool mms = 3;
  if (this->mms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->mms(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.NumberCapabilities)
  return target;
}

size_t NumberCapabilities::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.NumberCapabilities)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool voice = 1;
  if (this->voice() != 0) {
    total_size += 1 + 1;
  }

  // bool sms = 2;
  if (this->sms() != 0) {
    total_size += 1 + 1;
  }

  // bool mms = 3;
  if (this->mms() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NumberCapabilities::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.NumberCapabilities)
  GOOGLE_DCHECK_NE(&from, this);
  const NumberCapabilities* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NumberCapabilities>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.NumberCapabilities)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.NumberCapabilities)
    MergeFrom(*source);
  }
}

void NumberCapabilities::MergeFrom(const NumberCapabilities& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.NumberCapabilities)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.voice() != 0) {
    set_voice(from.voice());
  }
  if (from.sms() != 0) {
    set_sms(from.sms());
  }
  if (from.mms() != 0) {
    set_mms(from.mms());
  }
}

void NumberCapabilities::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.NumberCapabilities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NumberCapabilities::CopyFrom(const NumberCapabilities& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.NumberCapabilities)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NumberCapabilities::IsInitialized() const {
  return true;
}

void NumberCapabilities::Swap(NumberCapabilities* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NumberCapabilities::InternalSwap(NumberCapabilities* other) {
  using std::swap;
  swap(voice_, other->voice_);
  swap(sms_, other->sms_);
  swap(mms_, other->mms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NumberCapabilities::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PhoneNumberResource::InitAsDefaultInstance() {
  ::api::_PhoneNumberResource_default_instance_._instance.get_mutable()->number_ = const_cast< ::api::PhoneNumber*>(
      ::api::PhoneNumber::internal_default_instance());
  ::api::_PhoneNumberResource_default_instance_._instance.get_mutable()->id_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_PhoneNumberResource_default_instance_._instance.get_mutable()->uri_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void PhoneNumberResource::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void PhoneNumberResource::clear_uri() {
  if (GetArenaNoVirtual() == NULL && uri_ != NULL) {
    delete uri_;
  }
  uri_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PhoneNumberResource::kNumberFieldNumber;
const int PhoneNumberResource::kIdFieldNumber;
const int PhoneNumberResource::kUriFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PhoneNumberResource::PhoneNumberResource()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_PhoneNumberResource.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.PhoneNumberResource)
}
PhoneNumberResource::PhoneNumberResource(const PhoneNumberResource& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_number()) {
    number_ = new ::api::PhoneNumber(*from.number_);
  } else {
    number_ = NULL;
  }
  if (from.has_id()) {
    id_ = new ::common::Identifier(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_uri()) {
    uri_ = new ::common::String(*from.uri_);
  } else {
    uri_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.PhoneNumberResource)
}

void PhoneNumberResource::SharedCtor() {
  ::memset(&number_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&uri_) -
      reinterpret_cast<char*>(&number_)) + sizeof(uri_));
}

PhoneNumberResource::~PhoneNumberResource() {
  // @@protoc_insertion_point(destructor:api.PhoneNumberResource)
  SharedDtor();
}

void PhoneNumberResource::SharedDtor() {
  if (this != internal_default_instance()) delete number_;
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete uri_;
}

void PhoneNumberResource::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PhoneNumberResource::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PhoneNumberResource& PhoneNumberResource::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_PhoneNumberResource.base);
  return *internal_default_instance();
}


void PhoneNumberResource::Clear() {
// @@protoc_insertion_point(message_clear_start:api.PhoneNumberResource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && number_ != NULL) {
    delete number_;
  }
  number_ = NULL;
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && uri_ != NULL) {
    delete uri_;
  }
  uri_ = NULL;
  _internal_metadata_.Clear();
}

bool PhoneNumberResource::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.PhoneNumberResource)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .api.PhoneNumber number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_number()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Identifier id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String uri = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_uri()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.PhoneNumberResource)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.PhoneNumberResource)
  return false;
#undef DO_
}

void PhoneNumberResource::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.PhoneNumberResource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.PhoneNumber number = 1;
  if (this->has_number()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_number(), output);
  }

  // .common.Identifier id = 2;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_id(), output);
  }

  // .common.String uri = 3;
  if (this->has_uri()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_uri(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.PhoneNumberResource)
}

::google::protobuf::uint8* PhoneNumberResource::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.PhoneNumberResource)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .api.PhoneNumber number = 1;
  if (this->has_number()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_number(), deterministic, target);
  }

  // .common.Identifier id = 2;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_id(), deterministic, target);
  }

  // .common.String uri = 3;
  if (this->has_uri()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_uri(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.PhoneNumberResource)
  return target;
}

size_t PhoneNumberResource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.PhoneNumberResource)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .api.PhoneNumber number = 1;
  if (this->has_number()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *number_);
  }

  // .common.Identifier id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .common.String uri = 3;
  if (this->has_uri()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *uri_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PhoneNumberResource::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.PhoneNumberResource)
  GOOGLE_DCHECK_NE(&from, this);
  const PhoneNumberResource* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PhoneNumberResource>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.PhoneNumberResource)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.PhoneNumberResource)
    MergeFrom(*source);
  }
}

void PhoneNumberResource::MergeFrom(const PhoneNumberResource& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.PhoneNumberResource)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_number()) {
    mutable_number()->::api::PhoneNumber::MergeFrom(from.number());
  }
  if (from.has_id()) {
    mutable_id()->::common::Identifier::MergeFrom(from.id());
  }
  if (from.has_uri()) {
    mutable_uri()->::common::String::MergeFrom(from.uri());
  }
}

void PhoneNumberResource::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.PhoneNumberResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PhoneNumberResource::CopyFrom(const PhoneNumberResource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.PhoneNumberResource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PhoneNumberResource::IsInitialized() const {
  return true;
}

void PhoneNumberResource::Swap(PhoneNumberResource* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PhoneNumberResource::InternalSwap(PhoneNumberResource* other) {
  using std::swap;
  swap(number_, other->number_);
  swap(id_, other->id_);
  swap(uri_, other->uri_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PhoneNumberResource::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TokenQuery::InitAsDefaultInstance() {
  ::api::_TokenQuery_default_instance_._instance.get_mutable()->token_ = const_cast< ::common::Token*>(
      ::common::Token::internal_default_instance());
  ::api::_TokenQuery_default_instance_._instance.get_mutable()->query_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void TokenQuery::clear_token() {
  if (GetArenaNoVirtual() == NULL && token_ != NULL) {
    delete token_;
  }
  token_ = NULL;
}
void TokenQuery::clear_query() {
  if (GetArenaNoVirtual() == NULL && query_ != NULL) {
    delete query_;
  }
  query_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TokenQuery::kTokenFieldNumber;
const int TokenQuery::kQueryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TokenQuery::TokenQuery()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_TokenQuery.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.TokenQuery)
}
TokenQuery::TokenQuery(const TokenQuery& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_token()) {
    token_ = new ::common::Token(*from.token_);
  } else {
    token_ = NULL;
  }
  if (from.has_query()) {
    query_ = new ::common::String(*from.query_);
  } else {
    query_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.TokenQuery)
}

void TokenQuery::SharedCtor() {
  ::memset(&token_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&query_) -
      reinterpret_cast<char*>(&token_)) + sizeof(query_));
}

TokenQuery::~TokenQuery() {
  // @@protoc_insertion_point(destructor:api.TokenQuery)
  SharedDtor();
}

void TokenQuery::SharedDtor() {
  if (this != internal_default_instance()) delete token_;
  if (this != internal_default_instance()) delete query_;
}

void TokenQuery::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TokenQuery::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TokenQuery& TokenQuery::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_TokenQuery.base);
  return *internal_default_instance();
}


void TokenQuery::Clear() {
// @@protoc_insertion_point(message_clear_start:api.TokenQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && token_ != NULL) {
    delete token_;
  }
  token_ = NULL;
  if (GetArenaNoVirtual() == NULL && query_ != NULL) {
    delete query_;
  }
  query_ = NULL;
  _internal_metadata_.Clear();
}

bool TokenQuery::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.TokenQuery)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Token token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String query = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_query()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.TokenQuery)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.TokenQuery)
  return false;
#undef DO_
}

void TokenQuery::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.TokenQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Token token = 1;
  if (this->has_token()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_token(), output);
  }

  // .common.String query = 2;
  if (this->has_query()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_query(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.TokenQuery)
}

::google::protobuf::uint8* TokenQuery::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.TokenQuery)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Token token = 1;
  if (this->has_token()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_token(), deterministic, target);
  }

  // .common.String query = 2;
  if (this->has_query()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_query(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.TokenQuery)
  return target;
}

size_t TokenQuery::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.TokenQuery)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.Token token = 1;
  if (this->has_token()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *token_);
  }

  // .common.String query = 2;
  if (this->has_query()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *query_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TokenQuery::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.TokenQuery)
  GOOGLE_DCHECK_NE(&from, this);
  const TokenQuery* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TokenQuery>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.TokenQuery)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.TokenQuery)
    MergeFrom(*source);
  }
}

void TokenQuery::MergeFrom(const TokenQuery& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.TokenQuery)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_token()) {
    mutable_token()->::common::Token::MergeFrom(from.token());
  }
  if (from.has_query()) {
    mutable_query()->::common::String::MergeFrom(from.query());
  }
}

void TokenQuery::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.TokenQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TokenQuery::CopyFrom(const TokenQuery& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.TokenQuery)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TokenQuery::IsInitialized() const {
  return true;
}

void TokenQuery::Swap(TokenQuery* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TokenQuery::InternalSwap(TokenQuery* other) {
  using std::swap;
  swap(token_, other->token_);
  swap(query_, other->query_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TokenQuery::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IDBody::InitAsDefaultInstance() {
  ::api::_IDBody_default_instance_._instance.get_mutable()->id_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_IDBody_default_instance_._instance.get_mutable()->body_ = const_cast< ::common::Bytes*>(
      ::common::Bytes::internal_default_instance());
}
void IDBody::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void IDBody::clear_body() {
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IDBody::kIdFieldNumber;
const int IDBody::kBodyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IDBody::IDBody()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_IDBody.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.IDBody)
}
IDBody::IDBody(const IDBody& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::common::Identifier(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_body()) {
    body_ = new ::common::Bytes(*from.body_);
  } else {
    body_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.IDBody)
}

void IDBody::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&body_) -
      reinterpret_cast<char*>(&id_)) + sizeof(body_));
}

IDBody::~IDBody() {
  // @@protoc_insertion_point(destructor:api.IDBody)
  SharedDtor();
}

void IDBody::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete body_;
}

void IDBody::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IDBody::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IDBody& IDBody::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_IDBody.base);
  return *internal_default_instance();
}


void IDBody::Clear() {
// @@protoc_insertion_point(message_clear_start:api.IDBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
  _internal_metadata_.Clear();
}

bool IDBody::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.IDBody)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Identifier id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Bytes body = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.IDBody)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.IDBody)
  return false;
#undef DO_
}

void IDBody::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.IDBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .common.Bytes body = 2;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_body(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.IDBody)
}

::google::protobuf::uint8* IDBody::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.IDBody)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .common.Bytes body = 2;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_body(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.IDBody)
  return target;
}

size_t IDBody::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.IDBody)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.Identifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .common.Bytes body = 2;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *body_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDBody::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.IDBody)
  GOOGLE_DCHECK_NE(&from, this);
  const IDBody* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IDBody>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.IDBody)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.IDBody)
    MergeFrom(*source);
  }
}

void IDBody::MergeFrom(const IDBody& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.IDBody)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::common::Identifier::MergeFrom(from.id());
  }
  if (from.has_body()) {
    mutable_body()->::common::Bytes::MergeFrom(from.body());
  }
}

void IDBody::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.IDBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDBody::CopyFrom(const IDBody& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.IDBody)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDBody::IsInitialized() const {
  return true;
}

void IDBody::Swap(IDBody* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IDBody::InternalSwap(IDBody* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(body_, other->body_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IDBody::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IDStrings::InitAsDefaultInstance() {
  ::api::_IDStrings_default_instance_._instance.get_mutable()->id_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_IDStrings_default_instance_._instance.get_mutable()->strings_ = const_cast< ::common::StringArray*>(
      ::common::StringArray::internal_default_instance());
}
void IDStrings::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void IDStrings::clear_strings() {
  if (GetArenaNoVirtual() == NULL && strings_ != NULL) {
    delete strings_;
  }
  strings_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IDStrings::kIdFieldNumber;
const int IDStrings::kStringsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IDStrings::IDStrings()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_IDStrings.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.IDStrings)
}
IDStrings::IDStrings(const IDStrings& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::common::Identifier(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_strings()) {
    strings_ = new ::common::StringArray(*from.strings_);
  } else {
    strings_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.IDStrings)
}

void IDStrings::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&strings_) -
      reinterpret_cast<char*>(&id_)) + sizeof(strings_));
}

IDStrings::~IDStrings() {
  // @@protoc_insertion_point(destructor:api.IDStrings)
  SharedDtor();
}

void IDStrings::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete strings_;
}

void IDStrings::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IDStrings::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IDStrings& IDStrings::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_IDStrings.base);
  return *internal_default_instance();
}


void IDStrings::Clear() {
// @@protoc_insertion_point(message_clear_start:api.IDStrings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && strings_ != NULL) {
    delete strings_;
  }
  strings_ = NULL;
  _internal_metadata_.Clear();
}

bool IDStrings::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.IDStrings)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Identifier id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringArray strings = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_strings()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.IDStrings)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.IDStrings)
  return false;
#undef DO_
}

void IDStrings::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.IDStrings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .common.StringArray strings = 2;
  if (this->has_strings()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_strings(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.IDStrings)
}

::google::protobuf::uint8* IDStrings::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.IDStrings)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .common.StringArray strings = 2;
  if (this->has_strings()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_strings(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.IDStrings)
  return target;
}

size_t IDStrings::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.IDStrings)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.Identifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .common.StringArray strings = 2;
  if (this->has_strings()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *strings_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDStrings::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.IDStrings)
  GOOGLE_DCHECK_NE(&from, this);
  const IDStrings* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IDStrings>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.IDStrings)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.IDStrings)
    MergeFrom(*source);
  }
}

void IDStrings::MergeFrom(const IDStrings& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.IDStrings)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::common::Identifier::MergeFrom(from.id());
  }
  if (from.has_strings()) {
    mutable_strings()->::common::StringArray::MergeFrom(from.strings());
  }
}

void IDStrings::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.IDStrings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDStrings::CopyFrom(const IDStrings& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.IDStrings)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDStrings::IsInitialized() const {
  return true;
}

void IDStrings::Swap(IDStrings* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IDStrings::InternalSwap(IDStrings* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(strings_, other->strings_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IDStrings::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Role::InitAsDefaultInstance() {
  ::api::_Role_default_instance_._instance.get_mutable()->id_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_Role_default_instance_._instance.get_mutable()->name_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_Role_default_instance_._instance.get_mutable()->description_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
}
void Role::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void Role::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void Role::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Role::kIdFieldNumber;
const int Role::kNameFieldNumber;
const int Role::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Role::Role()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_Role.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.Role)
}
Role::Role(const Role& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::common::Identifier(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::common::String(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::common::String(*from.description_);
  } else {
    description_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.Role)
}

void Role::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&description_) -
      reinterpret_cast<char*>(&id_)) + sizeof(description_));
}

Role::~Role() {
  // @@protoc_insertion_point(destructor:api.Role)
  SharedDtor();
}

void Role::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete description_;
}

void Role::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Role::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Role& Role::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_Role.base);
  return *internal_default_instance();
}


void Role::Clear() {
// @@protoc_insertion_point(message_clear_start:api.Role)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  _internal_metadata_.Clear();
}

bool Role::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.Role)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Identifier id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String description = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.Role)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.Role)
  return false;
#undef DO_
}

void Role::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.Role)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .common.String name = 2;
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_name(), output);
  }

  // .common.String description = 3;
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_description(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.Role)
}

::google::protobuf::uint8* Role::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.Role)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .common.String name = 2;
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_name(), deterministic, target);
  }

  // .common.String description = 3;
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_description(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.Role)
  return target;
}

size_t Role::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.Role)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.Identifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .common.String name = 2;
  if (this->has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *name_);
  }

  // .common.String description = 3;
  if (this->has_description()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *description_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Role::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.Role)
  GOOGLE_DCHECK_NE(&from, this);
  const Role* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Role>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.Role)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.Role)
    MergeFrom(*source);
  }
}

void Role::MergeFrom(const Role& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.Role)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::common::Identifier::MergeFrom(from.id());
  }
  if (from.has_name()) {
    mutable_name()->::common::String::MergeFrom(from.name());
  }
  if (from.has_description()) {
    mutable_description()->::common::String::MergeFrom(from.description());
  }
}

void Role::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.Role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Role::CopyFrom(const Role& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.Role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Role::IsInitialized() const {
  return true;
}

void Role::Swap(Role* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Role::InternalSwap(Role* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(name_, other->name_);
  swap(description_, other->description_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Role::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CallResponse::InitAsDefaultInstance() {
  ::api::_CallResponse_default_instance_._instance.get_mutable()->id_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_CallResponse_default_instance_._instance.get_mutable()->to_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_CallResponse_default_instance_._instance.get_mutable()->from_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_CallResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_CallResponse_default_instance_._instance.get_mutable()->answered_by_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_CallResponse_default_instance_._instance.get_mutable()->forwarded_from_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_CallResponse_default_instance_._instance.get_mutable()->caller_name_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_CallResponse_default_instance_._instance.get_mutable()->annotations_ = const_cast< ::common::StringMap*>(
      ::common::StringMap::internal_default_instance());
}
void CallResponse::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void CallResponse::clear_to() {
  if (GetArenaNoVirtual() == NULL && to_ != NULL) {
    delete to_;
  }
  to_ = NULL;
}
void CallResponse::clear_from() {
  if (GetArenaNoVirtual() == NULL && from_ != NULL) {
    delete from_;
  }
  from_ = NULL;
}
void CallResponse::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void CallResponse::clear_answered_by() {
  if (GetArenaNoVirtual() == NULL && answered_by_ != NULL) {
    delete answered_by_;
  }
  answered_by_ = NULL;
}
void CallResponse::clear_forwarded_from() {
  if (GetArenaNoVirtual() == NULL && forwarded_from_ != NULL) {
    delete forwarded_from_;
  }
  forwarded_from_ = NULL;
}
void CallResponse::clear_caller_name() {
  if (GetArenaNoVirtual() == NULL && caller_name_ != NULL) {
    delete caller_name_;
  }
  caller_name_ = NULL;
}
void CallResponse::clear_annotations() {
  if (GetArenaNoVirtual() == NULL && annotations_ != NULL) {
    delete annotations_;
  }
  annotations_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CallResponse::kIdFieldNumber;
const int CallResponse::kToFieldNumber;
const int CallResponse::kFromFieldNumber;
const int CallResponse::kStatusFieldNumber;
const int CallResponse::kAnsweredByFieldNumber;
const int CallResponse::kForwardedFromFieldNumber;
const int CallResponse::kCallerNameFieldNumber;
const int CallResponse::kAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CallResponse::CallResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_CallResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.CallResponse)
}
CallResponse::CallResponse(const CallResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::common::Identifier(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_to()) {
    to_ = new ::common::String(*from.to_);
  } else {
    to_ = NULL;
  }
  if (from.has_from()) {
    from_ = new ::common::String(*from.from_);
  } else {
    from_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::common::String(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_answered_by()) {
    answered_by_ = new ::common::String(*from.answered_by_);
  } else {
    answered_by_ = NULL;
  }
  if (from.has_forwarded_from()) {
    forwarded_from_ = new ::common::String(*from.forwarded_from_);
  } else {
    forwarded_from_ = NULL;
  }
  if (from.has_caller_name()) {
    caller_name_ = new ::common::String(*from.caller_name_);
  } else {
    caller_name_ = NULL;
  }
  if (from.has_annotations()) {
    annotations_ = new ::common::StringMap(*from.annotations_);
  } else {
    annotations_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.CallResponse)
}

void CallResponse::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&annotations_) -
      reinterpret_cast<char*>(&id_)) + sizeof(annotations_));
}

CallResponse::~CallResponse() {
  // @@protoc_insertion_point(destructor:api.CallResponse)
  SharedDtor();
}

void CallResponse::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete to_;
  if (this != internal_default_instance()) delete from_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete answered_by_;
  if (this != internal_default_instance()) delete forwarded_from_;
  if (this != internal_default_instance()) delete caller_name_;
  if (this != internal_default_instance()) delete annotations_;
}

void CallResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* CallResponse::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CallResponse& CallResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_CallResponse.base);
  return *internal_default_instance();
}


void CallResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.CallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && to_ != NULL) {
    delete to_;
  }
  to_ = NULL;
  if (GetArenaNoVirtual() == NULL && from_ != NULL) {
    delete from_;
  }
  from_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && answered_by_ != NULL) {
    delete answered_by_;
  }
  answered_by_ = NULL;
  if (GetArenaNoVirtual() == NULL && forwarded_from_ != NULL) {
    delete forwarded_from_;
  }
  forwarded_from_ = NULL;
  if (GetArenaNoVirtual() == NULL && caller_name_ != NULL) {
    delete caller_name_;
  }
  caller_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && annotations_ != NULL) {
    delete annotations_;
  }
  annotations_ = NULL;
  _internal_metadata_.Clear();
}

bool CallResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.CallResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Identifier id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String to = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String from = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String status = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String answered_by = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_answered_by()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String forwarded_from = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_forwarded_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String caller_name = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_caller_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringMap annotations = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.CallResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.CallResponse)
  return false;
#undef DO_
}

void CallResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.CallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .common.String to = 5;
  if (this->has_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_to(), output);
  }

  // .common.String from = 6;
  if (this->has_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_from(), output);
  }

  // .common.String status = 9;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_status(), output);
  }

  // .common.String answered_by = 10;
  if (this->has_answered_by()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_answered_by(), output);
  }

  // .common.String forwarded_from = 11;
  if (this->has_forwarded_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_internal_forwarded_from(), output);
  }

  // .common.String caller_name = 12;
  if (this->has_caller_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_caller_name(), output);
  }

  // .common.StringMap annotations = 13;
  if (this->has_annotations()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_annotations(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.CallResponse)
}

::google::protobuf::uint8* CallResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.CallResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .common.String to = 5;
  if (this->has_to()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_to(), deterministic, target);
  }

  // .common.String from = 6;
  if (this->has_from()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_from(), deterministic, target);
  }

  // .common.String status = 9;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_status(), deterministic, target);
  }

  // .common.String answered_by = 10;
  if (this->has_answered_by()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_answered_by(), deterministic, target);
  }

  // .common.String forwarded_from = 11;
  if (this->has_forwarded_from()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, this->_internal_forwarded_from(), deterministic, target);
  }

  // .common.String caller_name = 12;
  if (this->has_caller_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_caller_name(), deterministic, target);
  }

  // .common.StringMap annotations = 13;
  if (this->has_annotations()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_annotations(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.CallResponse)
  return target;
}

size_t CallResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.CallResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.Identifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .common.String to = 5;
  if (this->has_to()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *to_);
  }

  // .common.String from = 6;
  if (this->has_from()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *from_);
  }

  // .common.String status = 9;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .common.String answered_by = 10;
  if (this->has_answered_by()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *answered_by_);
  }

  // .common.String forwarded_from = 11;
  if (this->has_forwarded_from()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *forwarded_from_);
  }

  // .common.String caller_name = 12;
  if (this->has_caller_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *caller_name_);
  }

  // .common.StringMap annotations = 13;
  if (this->has_annotations()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *annotations_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CallResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.CallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CallResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CallResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.CallResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.CallResponse)
    MergeFrom(*source);
  }
}

void CallResponse::MergeFrom(const CallResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.CallResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::common::Identifier::MergeFrom(from.id());
  }
  if (from.has_to()) {
    mutable_to()->::common::String::MergeFrom(from.to());
  }
  if (from.has_from()) {
    mutable_from()->::common::String::MergeFrom(from.from());
  }
  if (from.has_status()) {
    mutable_status()->::common::String::MergeFrom(from.status());
  }
  if (from.has_answered_by()) {
    mutable_answered_by()->::common::String::MergeFrom(from.answered_by());
  }
  if (from.has_forwarded_from()) {
    mutable_forwarded_from()->::common::String::MergeFrom(from.forwarded_from());
  }
  if (from.has_caller_name()) {
    mutable_caller_name()->::common::String::MergeFrom(from.caller_name());
  }
  if (from.has_annotations()) {
    mutable_annotations()->::common::StringMap::MergeFrom(from.annotations());
  }
}

void CallResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.CallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CallResponse::CopyFrom(const CallResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.CallResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CallResponse::IsInitialized() const {
  return true;
}

void CallResponse::Swap(CallResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CallResponse::InternalSwap(CallResponse* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(to_, other->to_);
  swap(from_, other->from_);
  swap(status_, other->status_);
  swap(answered_by_, other->answered_by_);
  swap(forwarded_from_, other->forwarded_from_);
  swap(caller_name_, other->caller_name_);
  swap(annotations_, other->annotations_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata CallResponse::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SMSResponse::InitAsDefaultInstance() {
  ::api::_SMSResponse_default_instance_._instance.get_mutable()->id_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_SMSResponse_default_instance_._instance.get_mutable()->to_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_SMSResponse_default_instance_._instance.get_mutable()->from_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_SMSResponse_default_instance_._instance.get_mutable()->media_url_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_SMSResponse_default_instance_._instance.get_mutable()->body_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_SMSResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_SMSResponse_default_instance_._instance.get_mutable()->annotations_ = const_cast< ::common::StringMap*>(
      ::common::StringMap::internal_default_instance());
}
void SMSResponse::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void SMSResponse::clear_to() {
  if (GetArenaNoVirtual() == NULL && to_ != NULL) {
    delete to_;
  }
  to_ = NULL;
}
void SMSResponse::clear_from() {
  if (GetArenaNoVirtual() == NULL && from_ != NULL) {
    delete from_;
  }
  from_ = NULL;
}
void SMSResponse::clear_media_url() {
  if (GetArenaNoVirtual() == NULL && media_url_ != NULL) {
    delete media_url_;
  }
  media_url_ = NULL;
}
void SMSResponse::clear_body() {
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
}
void SMSResponse::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void SMSResponse::clear_annotations() {
  if (GetArenaNoVirtual() == NULL && annotations_ != NULL) {
    delete annotations_;
  }
  annotations_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SMSResponse::kIdFieldNumber;
const int SMSResponse::kToFieldNumber;
const int SMSResponse::kFromFieldNumber;
const int SMSResponse::kMediaUrlFieldNumber;
const int SMSResponse::kBodyFieldNumber;
const int SMSResponse::kStatusFieldNumber;
const int SMSResponse::kAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SMSResponse::SMSResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_SMSResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.SMSResponse)
}
SMSResponse::SMSResponse(const SMSResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::common::Identifier(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_to()) {
    to_ = new ::common::String(*from.to_);
  } else {
    to_ = NULL;
  }
  if (from.has_from()) {
    from_ = new ::common::String(*from.from_);
  } else {
    from_ = NULL;
  }
  if (from.has_media_url()) {
    media_url_ = new ::common::String(*from.media_url_);
  } else {
    media_url_ = NULL;
  }
  if (from.has_body()) {
    body_ = new ::common::String(*from.body_);
  } else {
    body_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::common::String(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_annotations()) {
    annotations_ = new ::common::StringMap(*from.annotations_);
  } else {
    annotations_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.SMSResponse)
}

void SMSResponse::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&annotations_) -
      reinterpret_cast<char*>(&id_)) + sizeof(annotations_));
}

SMSResponse::~SMSResponse() {
  // @@protoc_insertion_point(destructor:api.SMSResponse)
  SharedDtor();
}

void SMSResponse::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete to_;
  if (this != internal_default_instance()) delete from_;
  if (this != internal_default_instance()) delete media_url_;
  if (this != internal_default_instance()) delete body_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete annotations_;
}

void SMSResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SMSResponse::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SMSResponse& SMSResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_SMSResponse.base);
  return *internal_default_instance();
}


void SMSResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.SMSResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && to_ != NULL) {
    delete to_;
  }
  to_ = NULL;
  if (GetArenaNoVirtual() == NULL && from_ != NULL) {
    delete from_;
  }
  from_ = NULL;
  if (GetArenaNoVirtual() == NULL && media_url_ != NULL) {
    delete media_url_;
  }
  media_url_ = NULL;
  if (GetArenaNoVirtual() == NULL && body_ != NULL) {
    delete body_;
  }
  body_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && annotations_ != NULL) {
    delete annotations_;
  }
  annotations_ = NULL;
  _internal_metadata_.Clear();
}

bool SMSResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.SMSResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Identifier id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String to = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String from = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String media_url = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_media_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String body = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_body()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String status = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringMap annotations = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.SMSResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.SMSResponse)
  return false;
#undef DO_
}

void SMSResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.SMSResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .common.String to = 5;
  if (this->has_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_to(), output);
  }

  // .common.String from = 6;
  if (this->has_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_from(), output);
  }

  // .common.String media_url = 7;
  if (this->has_media_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_media_url(), output);
  }

  // .common.String body = 8;
  if (this->has_body()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_body(), output);
  }

  // .common.String status = 9;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_internal_status(), output);
  }

  // .common.StringMap annotations = 10;
  if (this->has_annotations()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_annotations(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.SMSResponse)
}

::google::protobuf::uint8* SMSResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.SMSResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .common.String to = 5;
  if (this->has_to()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_to(), deterministic, target);
  }

  // .common.String from = 6;
  if (this->has_from()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_from(), deterministic, target);
  }

  // .common.String media_url = 7;
  if (this->has_media_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_media_url(), deterministic, target);
  }

  // .common.String body = 8;
  if (this->has_body()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_body(), deterministic, target);
  }

  // .common.String status = 9;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->_internal_status(), deterministic, target);
  }

  // .common.StringMap annotations = 10;
  if (this->has_annotations()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_annotations(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.SMSResponse)
  return target;
}

size_t SMSResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.SMSResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.Identifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .common.String to = 5;
  if (this->has_to()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *to_);
  }

  // .common.String from = 6;
  if (this->has_from()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *from_);
  }

  // .common.String media_url = 7;
  if (this->has_media_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *media_url_);
  }

  // .common.String body = 8;
  if (this->has_body()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *body_);
  }

  // .common.String status = 9;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .common.StringMap annotations = 10;
  if (this->has_annotations()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *annotations_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SMSResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.SMSResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SMSResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SMSResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.SMSResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.SMSResponse)
    MergeFrom(*source);
  }
}

void SMSResponse::MergeFrom(const SMSResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.SMSResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::common::Identifier::MergeFrom(from.id());
  }
  if (from.has_to()) {
    mutable_to()->::common::String::MergeFrom(from.to());
  }
  if (from.has_from()) {
    mutable_from()->::common::String::MergeFrom(from.from());
  }
  if (from.has_media_url()) {
    mutable_media_url()->::common::String::MergeFrom(from.media_url());
  }
  if (from.has_body()) {
    mutable_body()->::common::String::MergeFrom(from.body());
  }
  if (from.has_status()) {
    mutable_status()->::common::String::MergeFrom(from.status());
  }
  if (from.has_annotations()) {
    mutable_annotations()->::common::StringMap::MergeFrom(from.annotations());
  }
}

void SMSResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.SMSResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SMSResponse::CopyFrom(const SMSResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.SMSResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SMSResponse::IsInitialized() const {
  return true;
}

void SMSResponse::Swap(SMSResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SMSResponse::InternalSwap(SMSResponse* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(to_, other->to_);
  swap(from_, other->from_);
  swap(media_url_, other->media_url_);
  swap(body_, other->body_);
  swap(status_, other->status_);
  swap(annotations_, other->annotations_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SMSResponse::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SubscriptionResponse::InitAsDefaultInstance() {
  ::api::_SubscriptionResponse_default_instance_._instance.get_mutable()->id_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_SubscriptionResponse_default_instance_._instance.get_mutable()->monthly_charge_ = const_cast< ::common::Int64*>(
      ::common::Int64::internal_default_instance());
  ::api::_SubscriptionResponse_default_instance_._instance.get_mutable()->next_charge_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_SubscriptionResponse_default_instance_._instance.get_mutable()->annotations_ = const_cast< ::common::StringMap*>(
      ::common::StringMap::internal_default_instance());
  ::api::_SubscriptionResponse_default_instance_._instance.get_mutable()->user_ = const_cast< ::api::User*>(
      ::api::User::internal_default_instance());
}
void SubscriptionResponse::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void SubscriptionResponse::clear_monthly_charge() {
  if (GetArenaNoVirtual() == NULL && monthly_charge_ != NULL) {
    delete monthly_charge_;
  }
  monthly_charge_ = NULL;
}
void SubscriptionResponse::clear_next_charge() {
  if (GetArenaNoVirtual() == NULL && next_charge_ != NULL) {
    delete next_charge_;
  }
  next_charge_ = NULL;
}
void SubscriptionResponse::clear_annotations() {
  if (GetArenaNoVirtual() == NULL && annotations_ != NULL) {
    delete annotations_;
  }
  annotations_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SubscriptionResponse::kIdFieldNumber;
const int SubscriptionResponse::kMonthlyChargeFieldNumber;
const int SubscriptionResponse::kNextChargeFieldNumber;
const int SubscriptionResponse::kAnnotationsFieldNumber;
const int SubscriptionResponse::kPlanFieldNumber;
const int SubscriptionResponse::kUserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SubscriptionResponse::SubscriptionResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_SubscriptionResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.SubscriptionResponse)
}
SubscriptionResponse::SubscriptionResponse(const SubscriptionResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::common::Identifier(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_monthly_charge()) {
    monthly_charge_ = new ::common::Int64(*from.monthly_charge_);
  } else {
    monthly_charge_ = NULL;
  }
  if (from.has_next_charge()) {
    next_charge_ = new ::common::String(*from.next_charge_);
  } else {
    next_charge_ = NULL;
  }
  if (from.has_user()) {
    user_ = new ::api::User(*from.user_);
  } else {
    user_ = NULL;
  }
  if (from.has_annotations()) {
    annotations_ = new ::common::StringMap(*from.annotations_);
  } else {
    annotations_ = NULL;
  }
  plan_ = from.plan_;
  // @@protoc_insertion_point(copy_constructor:api.SubscriptionResponse)
}

void SubscriptionResponse::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&plan_) -
      reinterpret_cast<char*>(&id_)) + sizeof(plan_));
}

SubscriptionResponse::~SubscriptionResponse() {
  // @@protoc_insertion_point(destructor:api.SubscriptionResponse)
  SharedDtor();
}

void SubscriptionResponse::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete monthly_charge_;
  if (this != internal_default_instance()) delete next_charge_;
  if (this != internal_default_instance()) delete user_;
  if (this != internal_default_instance()) delete annotations_;
}

void SubscriptionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* SubscriptionResponse::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SubscriptionResponse& SubscriptionResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_SubscriptionResponse.base);
  return *internal_default_instance();
}


void SubscriptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.SubscriptionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && monthly_charge_ != NULL) {
    delete monthly_charge_;
  }
  monthly_charge_ = NULL;
  if (GetArenaNoVirtual() == NULL && next_charge_ != NULL) {
    delete next_charge_;
  }
  next_charge_ = NULL;
  if (GetArenaNoVirtual() == NULL && user_ != NULL) {
    delete user_;
  }
  user_ = NULL;
  if (GetArenaNoVirtual() == NULL && annotations_ != NULL) {
    delete annotations_;
  }
  annotations_ = NULL;
  plan_ = 0;
  _internal_metadata_.Clear();
}

bool SubscriptionResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.SubscriptionResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Identifier id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.Int64 monthly_charge = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_monthly_charge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String next_charge = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_next_charge()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.Plan plan = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_plan(static_cast< ::api::Plan >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .api.User user = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_user()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringMap annotations = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.SubscriptionResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.SubscriptionResponse)
  return false;
#undef DO_
}

void SubscriptionResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.SubscriptionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .common.Int64 monthly_charge = 2;
  if (this->has_monthly_charge()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_monthly_charge(), output);
  }

  // .common.String next_charge = 3;
  if (this->has_next_charge()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_next_charge(), output);
  }

  // .api.Plan plan = 4;
  if (this->plan() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->plan(), output);
  }

  // .api.User user = 5;
  if (this->has_user()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_user(), output);
  }

  // .common.StringMap annotations = 10;
  if (this->has_annotations()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_annotations(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.SubscriptionResponse)
}

::google::protobuf::uint8* SubscriptionResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.SubscriptionResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .common.Int64 monthly_charge = 2;
  if (this->has_monthly_charge()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_monthly_charge(), deterministic, target);
  }

  // .common.String next_charge = 3;
  if (this->has_next_charge()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_next_charge(), deterministic, target);
  }

  // .api.Plan plan = 4;
  if (this->plan() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->plan(), target);
  }

  // .api.User user = 5;
  if (this->has_user()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_user(), deterministic, target);
  }

  // .common.StringMap annotations = 10;
  if (this->has_annotations()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_annotations(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.SubscriptionResponse)
  return target;
}

size_t SubscriptionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.SubscriptionResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.Identifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .common.Int64 monthly_charge = 2;
  if (this->has_monthly_charge()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *monthly_charge_);
  }

  // .common.String next_charge = 3;
  if (this->has_next_charge()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *next_charge_);
  }

  // .api.User user = 5;
  if (this->has_user()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *user_);
  }

  // .common.StringMap annotations = 10;
  if (this->has_annotations()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *annotations_);
  }

  // .api.Plan plan = 4;
  if (this->plan() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->plan());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SubscriptionResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.SubscriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SubscriptionResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SubscriptionResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.SubscriptionResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.SubscriptionResponse)
    MergeFrom(*source);
  }
}

void SubscriptionResponse::MergeFrom(const SubscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.SubscriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::common::Identifier::MergeFrom(from.id());
  }
  if (from.has_monthly_charge()) {
    mutable_monthly_charge()->::common::Int64::MergeFrom(from.monthly_charge());
  }
  if (from.has_next_charge()) {
    mutable_next_charge()->::common::String::MergeFrom(from.next_charge());
  }
  if (from.has_user()) {
    mutable_user()->::api::User::MergeFrom(from.user());
  }
  if (from.has_annotations()) {
    mutable_annotations()->::common::StringMap::MergeFrom(from.annotations());
  }
  if (from.plan() != 0) {
    set_plan(from.plan());
  }
}

void SubscriptionResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.SubscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SubscriptionResponse::CopyFrom(const SubscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.SubscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SubscriptionResponse::IsInitialized() const {
  return true;
}

void SubscriptionResponse::Swap(SubscriptionResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SubscriptionResponse::InternalSwap(SubscriptionResponse* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(monthly_charge_, other->monthly_charge_);
  swap(next_charge_, other->next_charge_);
  swap(user_, other->user_);
  swap(annotations_, other->annotations_);
  swap(plan_, other->plan_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata SubscriptionResponse::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FaxResponse::InitAsDefaultInstance() {
  ::api::_FaxResponse_default_instance_._instance.get_mutable()->id_ = const_cast< ::common::Identifier*>(
      ::common::Identifier::internal_default_instance());
  ::api::_FaxResponse_default_instance_._instance.get_mutable()->media_url_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_FaxResponse_default_instance_._instance.get_mutable()->to_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_FaxResponse_default_instance_._instance.get_mutable()->from_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_FaxResponse_default_instance_._instance.get_mutable()->status_ = const_cast< ::common::String*>(
      ::common::String::internal_default_instance());
  ::api::_FaxResponse_default_instance_._instance.get_mutable()->annotations_ = const_cast< ::common::StringMap*>(
      ::common::StringMap::internal_default_instance());
}
void FaxResponse::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void FaxResponse::clear_media_url() {
  if (GetArenaNoVirtual() == NULL && media_url_ != NULL) {
    delete media_url_;
  }
  media_url_ = NULL;
}
void FaxResponse::clear_to() {
  if (GetArenaNoVirtual() == NULL && to_ != NULL) {
    delete to_;
  }
  to_ = NULL;
}
void FaxResponse::clear_from() {
  if (GetArenaNoVirtual() == NULL && from_ != NULL) {
    delete from_;
  }
  from_ = NULL;
}
void FaxResponse::clear_status() {
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
}
void FaxResponse::clear_annotations() {
  if (GetArenaNoVirtual() == NULL && annotations_ != NULL) {
    delete annotations_;
  }
  annotations_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FaxResponse::kIdFieldNumber;
const int FaxResponse::kMediaUrlFieldNumber;
const int FaxResponse::kToFieldNumber;
const int FaxResponse::kFromFieldNumber;
const int FaxResponse::kStatusFieldNumber;
const int FaxResponse::kAnnotationsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FaxResponse::FaxResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_api_2eproto::scc_info_FaxResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:api.FaxResponse)
}
FaxResponse::FaxResponse(const FaxResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::common::Identifier(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_media_url()) {
    media_url_ = new ::common::String(*from.media_url_);
  } else {
    media_url_ = NULL;
  }
  if (from.has_to()) {
    to_ = new ::common::String(*from.to_);
  } else {
    to_ = NULL;
  }
  if (from.has_from()) {
    from_ = new ::common::String(*from.from_);
  } else {
    from_ = NULL;
  }
  if (from.has_status()) {
    status_ = new ::common::String(*from.status_);
  } else {
    status_ = NULL;
  }
  if (from.has_annotations()) {
    annotations_ = new ::common::StringMap(*from.annotations_);
  } else {
    annotations_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:api.FaxResponse)
}

void FaxResponse::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&annotations_) -
      reinterpret_cast<char*>(&id_)) + sizeof(annotations_));
}

FaxResponse::~FaxResponse() {
  // @@protoc_insertion_point(destructor:api.FaxResponse)
  SharedDtor();
}

void FaxResponse::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete media_url_;
  if (this != internal_default_instance()) delete to_;
  if (this != internal_default_instance()) delete from_;
  if (this != internal_default_instance()) delete status_;
  if (this != internal_default_instance()) delete annotations_;
}

void FaxResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FaxResponse::descriptor() {
  ::protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FaxResponse& FaxResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_api_2eproto::scc_info_FaxResponse.base);
  return *internal_default_instance();
}


void FaxResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:api.FaxResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && media_url_ != NULL) {
    delete media_url_;
  }
  media_url_ = NULL;
  if (GetArenaNoVirtual() == NULL && to_ != NULL) {
    delete to_;
  }
  to_ = NULL;
  if (GetArenaNoVirtual() == NULL && from_ != NULL) {
    delete from_;
  }
  from_ = NULL;
  if (GetArenaNoVirtual() == NULL && status_ != NULL) {
    delete status_;
  }
  status_ = NULL;
  if (GetArenaNoVirtual() == NULL && annotations_ != NULL) {
    delete annotations_;
  }
  annotations_ = NULL;
  _internal_metadata_.Clear();
}

bool FaxResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:api.FaxResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .common.Identifier id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String media_url = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_media_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String to = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String from = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.String status = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .common.StringMap annotations = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_annotations()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:api.FaxResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:api.FaxResponse)
  return false;
#undef DO_
}

void FaxResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:api.FaxResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // .common.String media_url = 3;
  if (this->has_media_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_media_url(), output);
  }

  // .common.String to = 4;
  if (this->has_to()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_to(), output);
  }

  // .common.String from = 5;
  if (this->has_from()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_from(), output);
  }

  // .common.String status = 6;
  if (this->has_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_status(), output);
  }

  // .common.StringMap annotations = 10;
  if (this->has_annotations()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_internal_annotations(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:api.FaxResponse)
}

::google::protobuf::uint8* FaxResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:api.FaxResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .common.Identifier id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // .common.String media_url = 3;
  if (this->has_media_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_media_url(), deterministic, target);
  }

  // .common.String to = 4;
  if (this->has_to()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_to(), deterministic, target);
  }

  // .common.String from = 5;
  if (this->has_from()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_from(), deterministic, target);
  }

  // .common.String status = 6;
  if (this->has_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_status(), deterministic, target);
  }

  // .common.StringMap annotations = 10;
  if (this->has_annotations()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, this->_internal_annotations(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:api.FaxResponse)
  return target;
}

size_t FaxResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:api.FaxResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .common.Identifier id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .common.String media_url = 3;
  if (this->has_media_url()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *media_url_);
  }

  // .common.String to = 4;
  if (this->has_to()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *to_);
  }

  // .common.String from = 5;
  if (this->has_from()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *from_);
  }

  // .common.String status = 6;
  if (this->has_status()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *status_);
  }

  // .common.StringMap annotations = 10;
  if (this->has_annotations()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *annotations_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FaxResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:api.FaxResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FaxResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FaxResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:api.FaxResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:api.FaxResponse)
    MergeFrom(*source);
  }
}

void FaxResponse::MergeFrom(const FaxResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:api.FaxResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::common::Identifier::MergeFrom(from.id());
  }
  if (from.has_media_url()) {
    mutable_media_url()->::common::String::MergeFrom(from.media_url());
  }
  if (from.has_to()) {
    mutable_to()->::common::String::MergeFrom(from.to());
  }
  if (from.has_from()) {
    mutable_from()->::common::String::MergeFrom(from.from());
  }
  if (from.has_status()) {
    mutable_status()->::common::String::MergeFrom(from.status());
  }
  if (from.has_annotations()) {
    mutable_annotations()->::common::StringMap::MergeFrom(from.annotations());
  }
}

void FaxResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:api.FaxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FaxResponse::CopyFrom(const FaxResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:api.FaxResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FaxResponse::IsInitialized() const {
  return true;
}

void FaxResponse::Swap(FaxResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FaxResponse::InternalSwap(FaxResponse* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(media_url_, other->media_url_);
  swap(to_, other->to_);
  swap(from_, other->from_);
  swap(status_, other->status_);
  swap(annotations_, other->annotations_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FaxResponse::GetMetadata() const {
  protobuf_api_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_api_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace api
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::FaxRequest* Arena::CreateMaybeMessage< ::api::FaxRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::FaxRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::SubscribeRequest* Arena::CreateMaybeMessage< ::api::SubscribeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::SubscribeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::UnSubscribeRequest* Arena::CreateMaybeMessage< ::api::UnSubscribeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::UnSubscribeRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Card* Arena::CreateMaybeMessage< ::api::Card >(Arena* arena) {
  return Arena::CreateInternal< ::api::Card >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::SMS* Arena::CreateMaybeMessage< ::api::SMS >(Arena* arena) {
  return Arena::CreateInternal< ::api::SMS >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::SMSBlast* Arena::CreateMaybeMessage< ::api::SMSBlast >(Arena* arena) {
  return Arena::CreateInternal< ::api::SMSBlast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::EmailRequest* Arena::CreateMaybeMessage< ::api::EmailRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::EmailRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::EmailBlastRequest* Arena::CreateMaybeMessage< ::api::EmailBlastRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::EmailBlastRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::EmailBlast* Arena::CreateMaybeMessage< ::api::EmailBlast >(Arena* arena) {
  return Arena::CreateInternal< ::api::EmailBlast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Email* Arena::CreateMaybeMessage< ::api::Email >(Arena* arena) {
  return Arena::CreateInternal< ::api::Email >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Call* Arena::CreateMaybeMessage< ::api::Call >(Arena* arena) {
  return Arena::CreateInternal< ::api::Call >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::CallBlast* Arena::CreateMaybeMessage< ::api::CallBlast >(Arena* arena) {
  return Arena::CreateInternal< ::api::CallBlast >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::User* Arena::CreateMaybeMessage< ::api::User >(Arena* arena) {
  return Arena::CreateInternal< ::api::User >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Identity* Arena::CreateMaybeMessage< ::api::Identity >(Arena* arena) {
  return Arena::CreateInternal< ::api::Identity >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Auth* Arena::CreateMaybeMessage< ::api::Auth >(Arena* arena) {
  return Arena::CreateInternal< ::api::Auth >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::JSONWebKeys* Arena::CreateMaybeMessage< ::api::JSONWebKeys >(Arena* arena) {
  return Arena::CreateInternal< ::api::JSONWebKeys >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Jwks* Arena::CreateMaybeMessage< ::api::Jwks >(Arena* arena) {
  return Arena::CreateInternal< ::api::Jwks >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::RenderRequest* Arena::CreateMaybeMessage< ::api::RenderRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::RenderRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::SearchPhoneNumberRequest* Arena::CreateMaybeMessage< ::api::SearchPhoneNumberRequest >(Arena* arena) {
  return Arena::CreateInternal< ::api::SearchPhoneNumberRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::PhoneNumber* Arena::CreateMaybeMessage< ::api::PhoneNumber >(Arena* arena) {
  return Arena::CreateInternal< ::api::PhoneNumber >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::NumberCapabilities* Arena::CreateMaybeMessage< ::api::NumberCapabilities >(Arena* arena) {
  return Arena::CreateInternal< ::api::NumberCapabilities >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::PhoneNumberResource* Arena::CreateMaybeMessage< ::api::PhoneNumberResource >(Arena* arena) {
  return Arena::CreateInternal< ::api::PhoneNumberResource >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::TokenQuery* Arena::CreateMaybeMessage< ::api::TokenQuery >(Arena* arena) {
  return Arena::CreateInternal< ::api::TokenQuery >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::IDBody* Arena::CreateMaybeMessage< ::api::IDBody >(Arena* arena) {
  return Arena::CreateInternal< ::api::IDBody >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::IDStrings* Arena::CreateMaybeMessage< ::api::IDStrings >(Arena* arena) {
  return Arena::CreateInternal< ::api::IDStrings >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::Role* Arena::CreateMaybeMessage< ::api::Role >(Arena* arena) {
  return Arena::CreateInternal< ::api::Role >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::CallResponse* Arena::CreateMaybeMessage< ::api::CallResponse >(Arena* arena) {
  return Arena::CreateInternal< ::api::CallResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::SMSResponse* Arena::CreateMaybeMessage< ::api::SMSResponse >(Arena* arena) {
  return Arena::CreateInternal< ::api::SMSResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::SubscriptionResponse* Arena::CreateMaybeMessage< ::api::SubscriptionResponse >(Arena* arena) {
  return Arena::CreateInternal< ::api::SubscriptionResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::api::FaxResponse* Arena::CreateMaybeMessage< ::api::FaxResponse >(Arena* arena) {
  return Arena::CreateInternal< ::api::FaxResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
