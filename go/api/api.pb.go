// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package api

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/duration"
	_ "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/serviceconfig"
	_ "google.golang.org/genproto/googleapis/pubsub/v1"
	_ "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CustomerIndex int32

const (
	CustomerIndex_ID    CustomerIndex = 0
	CustomerIndex_EMAIL CustomerIndex = 1
	CustomerIndex_PHONE CustomerIndex = 2
)

var CustomerIndex_name = map[int32]string{
	0: "ID",
	1: "EMAIL",
	2: "PHONE",
}

var CustomerIndex_value = map[string]int32{
	"ID":    0,
	"EMAIL": 1,
	"PHONE": 2,
}

func (x CustomerIndex) String() string {
	return proto.EnumName(CustomerIndex_name, int32(x))
}

func (CustomerIndex) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

type Claim int32

const (
	Claim_TWILIO    Claim = 0
	Claim_SENDGRID  Claim = 1
	Claim_STRIPE    Claim = 2
	Claim_SLACK     Claim = 3
	Claim_GCP       Claim = 4
	Claim_AUTOM8TER Claim = 5
)

var Claim_name = map[int32]string{
	0: "TWILIO",
	1: "SENDGRID",
	2: "STRIPE",
	3: "SLACK",
	4: "GCP",
	5: "AUTOM8TER",
}

var Claim_value = map[string]int32{
	"TWILIO":    0,
	"SENDGRID":  1,
	"STRIPE":    2,
	"SLACK":     3,
	"GCP":       4,
	"AUTOM8TER": 5,
}

func (x Claim) String() string {
	return proto.EnumName(Claim_name, int32(x))
}

func (Claim) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

type SigningMethod int32

const (
	SigningMethod_HMAC   SigningMethod = 0
	SigningMethod_ECDSA  SigningMethod = 1
	SigningMethod_RSA    SigningMethod = 2
	SigningMethod_RSAPPS SigningMethod = 3
)

var SigningMethod_name = map[int32]string{
	0: "HMAC",
	1: "ECDSA",
	2: "RSA",
	3: "RSAPPS",
}

var SigningMethod_value = map[string]int32{
	"HMAC":   0,
	"ECDSA":  1,
	"RSA":    2,
	"RSAPPS": 3,
}

func (x SigningMethod) String() string {
	return proto.EnumName(SigningMethod_name, int32(x))
}

func (SigningMethod) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

type CardType int32

const (
	CardType_VISA       CardType = 0
	CardType_MASTERCARD CardType = 1
	CardType_DISCOVER   CardType = 2
	CardType_AMEX       CardType = 3
)

var CardType_name = map[int32]string{
	0: "VISA",
	1: "MASTERCARD",
	2: "DISCOVER",
	3: "AMEX",
}

var CardType_value = map[string]int32{
	"VISA":       0,
	"MASTERCARD": 1,
	"DISCOVER":   2,
	"AMEX":       3,
}

func (x CardType) String() string {
	return proto.EnumName(CardType_name, int32(x))
}

func (CardType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

type Topic int32

const (
	Topic_USER     Topic = 0
	Topic_ACCOUNT  Topic = 1
	Topic_CUSTOMER Topic = 2
	Topic_OTHER    Topic = 3
)

var Topic_name = map[int32]string{
	0: "USER",
	1: "ACCOUNT",
	2: "CUSTOMER",
	3: "OTHER",
}

var Topic_value = map[string]int32{
	"USER":     0,
	"ACCOUNT":  1,
	"CUSTOMER": 2,
	"OTHER":    3,
}

func (x Topic) String() string {
	return proto.EnumName(Topic_name, int32(x))
}

func (Topic) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

type Id struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Id) Reset()         { *m = Id{} }
func (m *Id) String() string { return proto.CompactTextString(m) }
func (*Id) ProtoMessage()    {}
func (*Id) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *Id) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Id.Unmarshal(m, b)
}
func (m *Id) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Id.Marshal(b, m, deterministic)
}
func (m *Id) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Id.Merge(m, src)
}
func (m *Id) XXX_Size() int {
	return xxx_messageInfo_Id.Size(m)
}
func (m *Id) XXX_DiscardUnknown() {
	xxx_messageInfo_Id.DiscardUnknown(m)
}

var xxx_messageInfo_Id proto.InternalMessageInfo

func (m *Id) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ActionHookRequest struct {
	Attachment           *Attachment       `protobuf:"bytes,1,opt,name=attachment,proto3" json:"attachment,omitempty"`
	Actions              *AttachmentAction `protobuf:"bytes,2,opt,name=actions,proto3" json:"actions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ActionHookRequest) Reset()         { *m = ActionHookRequest{} }
func (m *ActionHookRequest) String() string { return proto.CompactTextString(m) }
func (*ActionHookRequest) ProtoMessage()    {}
func (*ActionHookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *ActionHookRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionHookRequest.Unmarshal(m, b)
}
func (m *ActionHookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionHookRequest.Marshal(b, m, deterministic)
}
func (m *ActionHookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionHookRequest.Merge(m, src)
}
func (m *ActionHookRequest) XXX_Size() int {
	return xxx_messageInfo_ActionHookRequest.Size(m)
}
func (m *ActionHookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionHookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ActionHookRequest proto.InternalMessageInfo

func (m *ActionHookRequest) GetAttachment() *Attachment {
	if m != nil {
		return m.Attachment
	}
	return nil
}

func (m *ActionHookRequest) GetActions() *AttachmentAction {
	if m != nil {
		return m.Actions
	}
	return nil
}

type MessageUserRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageUserRequest) Reset()         { *m = MessageUserRequest{} }
func (m *MessageUserRequest) String() string { return proto.CompactTextString(m) }
func (*MessageUserRequest) ProtoMessage()    {}
func (*MessageUserRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *MessageUserRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageUserRequest.Unmarshal(m, b)
}
func (m *MessageUserRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageUserRequest.Marshal(b, m, deterministic)
}
func (m *MessageUserRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageUserRequest.Merge(m, src)
}
func (m *MessageUserRequest) XXX_Size() int {
	return xxx_messageInfo_MessageUserRequest.Size(m)
}
func (m *MessageUserRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageUserRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MessageUserRequest proto.InternalMessageInfo

func (m *MessageUserRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MessageUserRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type RefundRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Reason               string   `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Amount               int64    `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	ReverseTransfer      bool     `protobuf:"varint,4,opt,name=reverse_transfer,json=reverseTransfer,proto3" json:"reverse_transfer,omitempty"`
	Status               string   `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefundRequest) Reset()         { *m = RefundRequest{} }
func (m *RefundRequest) String() string { return proto.CompactTextString(m) }
func (*RefundRequest) ProtoMessage()    {}
func (*RefundRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *RefundRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefundRequest.Unmarshal(m, b)
}
func (m *RefundRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefundRequest.Marshal(b, m, deterministic)
}
func (m *RefundRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefundRequest.Merge(m, src)
}
func (m *RefundRequest) XXX_Size() int {
	return xxx_messageInfo_RefundRequest.Size(m)
}
func (m *RefundRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RefundRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RefundRequest proto.InternalMessageInfo

func (m *RefundRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RefundRequest) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *RefundRequest) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *RefundRequest) GetReverseTransfer() bool {
	if m != nil {
		return m.ReverseTransfer
	}
	return false
}

func (m *RefundRequest) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type ChargeRequest struct {
	Product              *Product `protobuf:"bytes,1,opt,name=product,proto3" json:"product,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChargeRequest) Reset()         { *m = ChargeRequest{} }
func (m *ChargeRequest) String() string { return proto.CompactTextString(m) }
func (*ChargeRequest) ProtoMessage()    {}
func (*ChargeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *ChargeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChargeRequest.Unmarshal(m, b)
}
func (m *ChargeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChargeRequest.Marshal(b, m, deterministic)
}
func (m *ChargeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChargeRequest.Merge(m, src)
}
func (m *ChargeRequest) XXX_Size() int {
	return xxx_messageInfo_ChargeRequest.Size(m)
}
func (m *ChargeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChargeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChargeRequest proto.InternalMessageInfo

func (m *ChargeRequest) GetProduct() *Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *ChargeRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CancelSubscriptionRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CancelSubscriptionRequest) Reset()         { *m = CancelSubscriptionRequest{} }
func (m *CancelSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*CancelSubscriptionRequest) ProtoMessage()    {}
func (*CancelSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *CancelSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CancelSubscriptionRequest.Unmarshal(m, b)
}
func (m *CancelSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CancelSubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *CancelSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CancelSubscriptionRequest.Merge(m, src)
}
func (m *CancelSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_CancelSubscriptionRequest.Size(m)
}
func (m *CancelSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CancelSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CancelSubscriptionRequest proto.InternalMessageInfo

func (m *CancelSubscriptionRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type CreatePlanRequest struct {
	PlanId               string   `protobuf:"bytes,1,opt,name=plan_id,json=planId,proto3" json:"plan_id,omitempty"`
	Amount               int64    `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	ServiceId            string   `protobuf:"bytes,3,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	ServiceName          string   `protobuf:"bytes,4,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	FriendlyName         string   `protobuf:"bytes,5,opt,name=friendly_name,json=friendlyName,proto3" json:"friendly_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreatePlanRequest) Reset()         { *m = CreatePlanRequest{} }
func (m *CreatePlanRequest) String() string { return proto.CompactTextString(m) }
func (*CreatePlanRequest) ProtoMessage()    {}
func (*CreatePlanRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *CreatePlanRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreatePlanRequest.Unmarshal(m, b)
}
func (m *CreatePlanRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreatePlanRequest.Marshal(b, m, deterministic)
}
func (m *CreatePlanRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreatePlanRequest.Merge(m, src)
}
func (m *CreatePlanRequest) XXX_Size() int {
	return xxx_messageInfo_CreatePlanRequest.Size(m)
}
func (m *CreatePlanRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreatePlanRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreatePlanRequest proto.InternalMessageInfo

func (m *CreatePlanRequest) GetPlanId() string {
	if m != nil {
		return m.PlanId
	}
	return ""
}

func (m *CreatePlanRequest) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *CreatePlanRequest) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func (m *CreatePlanRequest) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *CreatePlanRequest) GetFriendlyName() string {
	if m != nil {
		return m.FriendlyName
	}
	return ""
}

type SMSRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Body                 string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SMSRequest) Reset()         { *m = SMSRequest{} }
func (m *SMSRequest) String() string { return proto.CompactTextString(m) }
func (*SMSRequest) ProtoMessage()    {}
func (*SMSRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *SMSRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMSRequest.Unmarshal(m, b)
}
func (m *SMSRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMSRequest.Marshal(b, m, deterministic)
}
func (m *SMSRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMSRequest.Merge(m, src)
}
func (m *SMSRequest) XXX_Size() int {
	return xxx_messageInfo_SMSRequest.Size(m)
}
func (m *SMSRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SMSRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SMSRequest proto.InternalMessageInfo

func (m *SMSRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SMSRequest) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type CallRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CallbackUrl          string   `protobuf:"bytes,2,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CallRequest) Reset()         { *m = CallRequest{} }
func (m *CallRequest) String() string { return proto.CompactTextString(m) }
func (*CallRequest) ProtoMessage()    {}
func (*CallRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *CallRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CallRequest.Unmarshal(m, b)
}
func (m *CallRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CallRequest.Marshal(b, m, deterministic)
}
func (m *CallRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CallRequest.Merge(m, src)
}
func (m *CallRequest) XXX_Size() int {
	return xxx_messageInfo_CallRequest.Size(m)
}
func (m *CallRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CallRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CallRequest proto.InternalMessageInfo

func (m *CallRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CallRequest) GetCallbackUrl() string {
	if m != nil {
		return m.CallbackUrl
	}
	return ""
}

type MMSRequest struct {
	Sms                  *SMSRequest `protobuf:"bytes,1,opt,name=sms,proto3" json:"sms,omitempty"`
	MediaUrl             string      `protobuf:"bytes,3,opt,name=media_url,json=mediaUrl,proto3" json:"media_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *MMSRequest) Reset()         { *m = MMSRequest{} }
func (m *MMSRequest) String() string { return proto.CompactTextString(m) }
func (*MMSRequest) ProtoMessage()    {}
func (*MMSRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

func (m *MMSRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MMSRequest.Unmarshal(m, b)
}
func (m *MMSRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MMSRequest.Marshal(b, m, deterministic)
}
func (m *MMSRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MMSRequest.Merge(m, src)
}
func (m *MMSRequest) XXX_Size() int {
	return xxx_messageInfo_MMSRequest.Size(m)
}
func (m *MMSRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MMSRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MMSRequest proto.InternalMessageInfo

func (m *MMSRequest) GetSms() *SMSRequest {
	if m != nil {
		return m.Sms
	}
	return nil
}

func (m *MMSRequest) GetMediaUrl() string {
	if m != nil {
		return m.MediaUrl
	}
	return ""
}

type EmailRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Subject              string   `protobuf:"bytes,2,opt,name=subject,proto3" json:"subject,omitempty"`
	PlainText            string   `protobuf:"bytes,3,opt,name=plain_text,json=plainText,proto3" json:"plain_text,omitempty"`
	HtmlAlt              string   `protobuf:"bytes,4,opt,name=html_alt,json=htmlAlt,proto3" json:"html_alt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmailRequest) Reset()         { *m = EmailRequest{} }
func (m *EmailRequest) String() string { return proto.CompactTextString(m) }
func (*EmailRequest) ProtoMessage()    {}
func (*EmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}

func (m *EmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailRequest.Unmarshal(m, b)
}
func (m *EmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailRequest.Marshal(b, m, deterministic)
}
func (m *EmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailRequest.Merge(m, src)
}
func (m *EmailRequest) XXX_Size() int {
	return xxx_messageInfo_EmailRequest.Size(m)
}
func (m *EmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EmailRequest proto.InternalMessageInfo

func (m *EmailRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *EmailRequest) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *EmailRequest) GetPlainText() string {
	if m != nil {
		return m.PlainText
	}
	return ""
}

func (m *EmailRequest) GetHtmlAlt() string {
	if m != nil {
		return m.HtmlAlt
	}
	return ""
}

type CustomerRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Plan                 string   `protobuf:"bytes,2,opt,name=plan,proto3" json:"plan,omitempty"`
	Phone                string   `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description          string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Address              *Address `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CustomerRequest) Reset()         { *m = CustomerRequest{} }
func (m *CustomerRequest) String() string { return proto.CompactTextString(m) }
func (*CustomerRequest) ProtoMessage()    {}
func (*CustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}

func (m *CustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CustomerRequest.Unmarshal(m, b)
}
func (m *CustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CustomerRequest.Marshal(b, m, deterministic)
}
func (m *CustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CustomerRequest.Merge(m, src)
}
func (m *CustomerRequest) XXX_Size() int {
	return xxx_messageInfo_CustomerRequest.Size(m)
}
func (m *CustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CustomerRequest proto.InternalMessageInfo

func (m *CustomerRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *CustomerRequest) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

func (m *CustomerRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *CustomerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CustomerRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CustomerRequest) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

type UpdateCustomerRequest struct {
	Id                   string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Customer             *CustomerRequest `protobuf:"bytes,2,opt,name=customer,proto3" json:"customer,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *UpdateCustomerRequest) Reset()         { *m = UpdateCustomerRequest{} }
func (m *UpdateCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCustomerRequest) ProtoMessage()    {}
func (*UpdateCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}

func (m *UpdateCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCustomerRequest.Unmarshal(m, b)
}
func (m *UpdateCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCustomerRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCustomerRequest.Merge(m, src)
}
func (m *UpdateCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCustomerRequest.Size(m)
}
func (m *UpdateCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCustomerRequest proto.InternalMessageInfo

func (m *UpdateCustomerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateCustomerRequest) GetCustomer() *CustomerRequest {
	if m != nil {
		return m.Customer
	}
	return nil
}

type SubscribeCustomerRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Plan                 string   `protobuf:"bytes,2,opt,name=plan,proto3" json:"plan,omitempty"`
	CardNumber           string   `protobuf:"bytes,3,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	ExpMonth             string   `protobuf:"bytes,4,opt,name=exp_month,json=expMonth,proto3" json:"exp_month,omitempty"`
	ExpYear              string   `protobuf:"bytes,5,opt,name=exp_year,json=expYear,proto3" json:"exp_year,omitempty"`
	Cvc                  string   `protobuf:"bytes,6,opt,name=cvc,proto3" json:"cvc,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeCustomerRequest) Reset()         { *m = SubscribeCustomerRequest{} }
func (m *SubscribeCustomerRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeCustomerRequest) ProtoMessage()    {}
func (*SubscribeCustomerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}

func (m *SubscribeCustomerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeCustomerRequest.Unmarshal(m, b)
}
func (m *SubscribeCustomerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeCustomerRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeCustomerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeCustomerRequest.Merge(m, src)
}
func (m *SubscribeCustomerRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeCustomerRequest.Size(m)
}
func (m *SubscribeCustomerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeCustomerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeCustomerRequest proto.InternalMessageInfo

func (m *SubscribeCustomerRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SubscribeCustomerRequest) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

func (m *SubscribeCustomerRequest) GetCardNumber() string {
	if m != nil {
		return m.CardNumber
	}
	return ""
}

func (m *SubscribeCustomerRequest) GetExpMonth() string {
	if m != nil {
		return m.ExpMonth
	}
	return ""
}

func (m *SubscribeCustomerRequest) GetExpYear() string {
	if m != nil {
		return m.ExpYear
	}
	return ""
}

func (m *SubscribeCustomerRequest) GetCvc() string {
	if m != nil {
		return m.Cvc
	}
	return ""
}

type CreateAccountRequest struct {
	Customer             *CustomerRequest `protobuf:"bytes,1,opt,name=customer,proto3" json:"customer,omitempty"`
	Access               *Access          `protobuf:"bytes,2,opt,name=access,proto3" json:"access,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreateAccountRequest) Reset()         { *m = CreateAccountRequest{} }
func (m *CreateAccountRequest) String() string { return proto.CompactTextString(m) }
func (*CreateAccountRequest) ProtoMessage()    {}
func (*CreateAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}

func (m *CreateAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateAccountRequest.Unmarshal(m, b)
}
func (m *CreateAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateAccountRequest.Marshal(b, m, deterministic)
}
func (m *CreateAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateAccountRequest.Merge(m, src)
}
func (m *CreateAccountRequest) XXX_Size() int {
	return xxx_messageInfo_CreateAccountRequest.Size(m)
}
func (m *CreateAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateAccountRequest proto.InternalMessageInfo

func (m *CreateAccountRequest) GetCustomer() *CustomerRequest {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (m *CreateAccountRequest) GetAccess() *Access {
	if m != nil {
		return m.Access
	}
	return nil
}

type Account struct {
	Customer             *Customer `protobuf:"bytes,1,opt,name=customer,proto3" json:"customer,omitempty"`
	Access               *Access   `protobuf:"bytes,2,opt,name=access,proto3" json:"access,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetCustomer() *Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (m *Account) GetAccess() *Access {
	if m != nil {
		return m.Access
	}
	return nil
}

type User struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TeamId               string   `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Phone                string   `protobuf:"bytes,4,opt,name=phone,proto3" json:"phone,omitempty"`
	Profile              *Profile `protobuf:"bytes,5,opt,name=profile,proto3" json:"profile,omitempty"`
	Deleted              bool     `protobuf:"varint,6,opt,name=deleted,proto3" json:"deleted,omitempty"`
	Admin                bool     `protobuf:"varint,7,opt,name=admin,proto3" json:"admin,omitempty"`
	Ownder               bool     `protobuf:"varint,8,opt,name=ownder,proto3" json:"ownder,omitempty"`
	PrimaryOwner         bool     `protobuf:"varint,9,opt,name=primary_owner,json=primaryOwner,proto3" json:"primary_owner,omitempty"`
	Restricted           bool     `protobuf:"varint,10,opt,name=restricted,proto3" json:"restricted,omitempty"`
	UltraRestricted      bool     `protobuf:"varint,11,opt,name=ultra_restricted,json=ultraRestricted,proto3" json:"ultra_restricted,omitempty"`
	Stranger             bool     `protobuf:"varint,12,opt,name=stranger,proto3" json:"stranger,omitempty"`
	Bot                  bool     `protobuf:"varint,13,opt,name=bot,proto3" json:"bot,omitempty"`
	Has2Fa               bool     `protobuf:"varint,14,opt,name=has2fa,proto3" json:"has2fa,omitempty"`
	Locale               string   `protobuf:"bytes,15,opt,name=locale,proto3" json:"locale,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{16}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *User) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *User) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *User) GetProfile() *Profile {
	if m != nil {
		return m.Profile
	}
	return nil
}

func (m *User) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *User) GetAdmin() bool {
	if m != nil {
		return m.Admin
	}
	return false
}

func (m *User) GetOwnder() bool {
	if m != nil {
		return m.Ownder
	}
	return false
}

func (m *User) GetPrimaryOwner() bool {
	if m != nil {
		return m.PrimaryOwner
	}
	return false
}

func (m *User) GetRestricted() bool {
	if m != nil {
		return m.Restricted
	}
	return false
}

func (m *User) GetUltraRestricted() bool {
	if m != nil {
		return m.UltraRestricted
	}
	return false
}

func (m *User) GetStranger() bool {
	if m != nil {
		return m.Stranger
	}
	return false
}

func (m *User) GetBot() bool {
	if m != nil {
		return m.Bot
	}
	return false
}

func (m *User) GetHas2Fa() bool {
	if m != nil {
		return m.Has2Fa
	}
	return false
}

func (m *User) GetLocale() string {
	if m != nil {
		return m.Locale
	}
	return ""
}

type Profile struct {
	AvatarHash           string   `protobuf:"bytes,1,opt,name=avatar_hash,json=avatarHash,proto3" json:"avatar_hash,omitempty"`
	Status               string   `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	StatusEmoji          string   `protobuf:"bytes,3,opt,name=status_emoji,json=statusEmoji,proto3" json:"status_emoji,omitempty"`
	DisplayName          string   `protobuf:"bytes,4,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Name                 string   `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Email                string   `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	ImageUrls            []string `protobuf:"bytes,7,rep,name=image_urls,json=imageUrls,proto3" json:"image_urls,omitempty"`
	Team                 string   `protobuf:"bytes,8,opt,name=team,proto3" json:"team,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Profile) Reset()         { *m = Profile{} }
func (m *Profile) String() string { return proto.CompactTextString(m) }
func (*Profile) ProtoMessage()    {}
func (*Profile) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{17}
}

func (m *Profile) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Profile.Unmarshal(m, b)
}
func (m *Profile) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Profile.Marshal(b, m, deterministic)
}
func (m *Profile) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Profile.Merge(m, src)
}
func (m *Profile) XXX_Size() int {
	return xxx_messageInfo_Profile.Size(m)
}
func (m *Profile) XXX_DiscardUnknown() {
	xxx_messageInfo_Profile.DiscardUnknown(m)
}

var xxx_messageInfo_Profile proto.InternalMessageInfo

func (m *Profile) GetAvatarHash() string {
	if m != nil {
		return m.AvatarHash
	}
	return ""
}

func (m *Profile) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Profile) GetStatusEmoji() string {
	if m != nil {
		return m.StatusEmoji
	}
	return ""
}

func (m *Profile) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Profile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Profile) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Profile) GetImageUrls() []string {
	if m != nil {
		return m.ImageUrls
	}
	return nil
}

func (m *Profile) GetTeam() string {
	if m != nil {
		return m.Team
	}
	return ""
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{18}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

// User is a user of the application
type Customer struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Plan                 string            `protobuf:"bytes,2,opt,name=plan,proto3" json:"plan,omitempty"`
	Name                 string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Email                string            `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	Description          string            `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Phone                string            `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Address              *Address          `protobuf:"bytes,8,opt,name=address,proto3" json:"address,omitempty"`
	Metadata             map[string]string `protobuf:"bytes,9,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Deleted              bool              `protobuf:"varint,10,opt,name=deleted,proto3" json:"deleted,omitempty"`
	CreateDate           int64             `protobuf:"varint,20,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Customer) Reset()         { *m = Customer{} }
func (m *Customer) String() string { return proto.CompactTextString(m) }
func (*Customer) ProtoMessage()    {}
func (*Customer) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{19}
}

func (m *Customer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Customer.Unmarshal(m, b)
}
func (m *Customer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Customer.Marshal(b, m, deterministic)
}
func (m *Customer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Customer.Merge(m, src)
}
func (m *Customer) XXX_Size() int {
	return xxx_messageInfo_Customer.Size(m)
}
func (m *Customer) XXX_DiscardUnknown() {
	xxx_messageInfo_Customer.DiscardUnknown(m)
}

var xxx_messageInfo_Customer proto.InternalMessageInfo

func (m *Customer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Customer) GetPlan() string {
	if m != nil {
		return m.Plan
	}
	return ""
}

func (m *Customer) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Customer) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Customer) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Customer) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Customer) GetAddress() *Address {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Customer) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Customer) GetDeleted() bool {
	if m != nil {
		return m.Deleted
	}
	return false
}

func (m *Customer) GetCreateDate() int64 {
	if m != nil {
		return m.CreateDate
	}
	return 0
}

type Card struct {
	CardType             CardType `protobuf:"varint,1,opt,name=card_type,json=cardType,proto3,enum=api.CardType" json:"card_type,omitempty"`
	CardNumber           string   `protobuf:"bytes,3,opt,name=card_number,json=cardNumber,proto3" json:"card_number,omitempty"`
	ExpMonth             string   `protobuf:"bytes,4,opt,name=exp_month,json=expMonth,proto3" json:"exp_month,omitempty"`
	ExpYear              string   `protobuf:"bytes,5,opt,name=exp_year,json=expYear,proto3" json:"exp_year,omitempty"`
	Cvc                  string   `protobuf:"bytes,6,opt,name=cvc,proto3" json:"cvc,omitempty"`
	Debit                bool     `protobuf:"varint,7,opt,name=debit,proto3" json:"debit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Card) Reset()         { *m = Card{} }
func (m *Card) String() string { return proto.CompactTextString(m) }
func (*Card) ProtoMessage()    {}
func (*Card) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{20}
}

func (m *Card) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Card.Unmarshal(m, b)
}
func (m *Card) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Card.Marshal(b, m, deterministic)
}
func (m *Card) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Card.Merge(m, src)
}
func (m *Card) XXX_Size() int {
	return xxx_messageInfo_Card.Size(m)
}
func (m *Card) XXX_DiscardUnknown() {
	xxx_messageInfo_Card.DiscardUnknown(m)
}

var xxx_messageInfo_Card proto.InternalMessageInfo

func (m *Card) GetCardType() CardType {
	if m != nil {
		return m.CardType
	}
	return CardType_VISA
}

func (m *Card) GetCardNumber() string {
	if m != nil {
		return m.CardNumber
	}
	return ""
}

func (m *Card) GetExpMonth() string {
	if m != nil {
		return m.ExpMonth
	}
	return ""
}

func (m *Card) GetExpYear() string {
	if m != nil {
		return m.ExpYear
	}
	return ""
}

func (m *Card) GetCvc() string {
	if m != nil {
		return m.Cvc
	}
	return ""
}

func (m *Card) GetDebit() bool {
	if m != nil {
		return m.Debit
	}
	return false
}

type BankAccount struct {
	AccountNumber        string   `protobuf:"bytes,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	RoutingNumber        string   `protobuf:"bytes,2,opt,name=routing_number,json=routingNumber,proto3" json:"routing_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BankAccount) Reset()         { *m = BankAccount{} }
func (m *BankAccount) String() string { return proto.CompactTextString(m) }
func (*BankAccount) ProtoMessage()    {}
func (*BankAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{21}
}

func (m *BankAccount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BankAccount.Unmarshal(m, b)
}
func (m *BankAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BankAccount.Marshal(b, m, deterministic)
}
func (m *BankAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BankAccount.Merge(m, src)
}
func (m *BankAccount) XXX_Size() int {
	return xxx_messageInfo_BankAccount.Size(m)
}
func (m *BankAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_BankAccount.DiscardUnknown(m)
}

var xxx_messageInfo_BankAccount proto.InternalMessageInfo

func (m *BankAccount) GetAccountNumber() string {
	if m != nil {
		return m.AccountNumber
	}
	return ""
}

func (m *BankAccount) GetRoutingNumber() string {
	if m != nil {
		return m.RoutingNumber
	}
	return ""
}

type Address struct {
	City                 string   `protobuf:"bytes,1,opt,name=city,proto3" json:"city,omitempty"`
	Country              string   `protobuf:"bytes,2,opt,name=country,proto3" json:"country,omitempty"`
	Line1                string   `protobuf:"bytes,3,opt,name=line1,proto3" json:"line1,omitempty"`
	Line2                string   `protobuf:"bytes,4,opt,name=line2,proto3" json:"line2,omitempty"`
	PostalCode           string   `protobuf:"bytes,5,opt,name=postal_code,json=postalCode,proto3" json:"postal_code,omitempty"`
	State                string   `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{22}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Address) GetLine1() string {
	if m != nil {
		return m.Line1
	}
	return ""
}

func (m *Address) GetLine2() string {
	if m != nil {
		return m.Line2
	}
	return ""
}

func (m *Address) GetPostalCode() string {
	if m != nil {
		return m.PostalCode
	}
	return ""
}

func (m *Address) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

type ChannelReminder struct {
	ChannelId            string   `protobuf:"bytes,1,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Time                 string   `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChannelReminder) Reset()         { *m = ChannelReminder{} }
func (m *ChannelReminder) String() string { return proto.CompactTextString(m) }
func (*ChannelReminder) ProtoMessage()    {}
func (*ChannelReminder) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{23}
}

func (m *ChannelReminder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelReminder.Unmarshal(m, b)
}
func (m *ChannelReminder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelReminder.Marshal(b, m, deterministic)
}
func (m *ChannelReminder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelReminder.Merge(m, src)
}
func (m *ChannelReminder) XXX_Size() int {
	return xxx_messageInfo_ChannelReminder.Size(m)
}
func (m *ChannelReminder) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelReminder.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelReminder proto.InternalMessageInfo

func (m *ChannelReminder) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *ChannelReminder) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *ChannelReminder) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

type UserReminder struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Time                 string   `protobuf:"bytes,3,opt,name=time,proto3" json:"time,omitempty"`
	Item                 *ItemRef `protobuf:"bytes,4,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserReminder) Reset()         { *m = UserReminder{} }
func (m *UserReminder) String() string { return proto.CompactTextString(m) }
func (*UserReminder) ProtoMessage()    {}
func (*UserReminder) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{24}
}

func (m *UserReminder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserReminder.Unmarshal(m, b)
}
func (m *UserReminder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserReminder.Marshal(b, m, deterministic)
}
func (m *UserReminder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserReminder.Merge(m, src)
}
func (m *UserReminder) XXX_Size() int {
	return xxx_messageInfo_UserReminder.Size(m)
}
func (m *UserReminder) XXX_DiscardUnknown() {
	xxx_messageInfo_UserReminder.DiscardUnknown(m)
}

var xxx_messageInfo_UserReminder proto.InternalMessageInfo

func (m *UserReminder) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserReminder) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *UserReminder) GetTime() string {
	if m != nil {
		return m.Time
	}
	return ""
}

func (m *UserReminder) GetItem() *ItemRef {
	if m != nil {
		return m.Item
	}
	return nil
}

type ItemRef struct {
	Channel              string   `protobuf:"bytes,1,opt,name=channel,proto3" json:"channel,omitempty"`
	File                 string   `protobuf:"bytes,2,opt,name=file,proto3" json:"file,omitempty"`
	Comment              string   `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ItemRef) Reset()         { *m = ItemRef{} }
func (m *ItemRef) String() string { return proto.CompactTextString(m) }
func (*ItemRef) ProtoMessage()    {}
func (*ItemRef) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{25}
}

func (m *ItemRef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ItemRef.Unmarshal(m, b)
}
func (m *ItemRef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ItemRef.Marshal(b, m, deterministic)
}
func (m *ItemRef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemRef.Merge(m, src)
}
func (m *ItemRef) XXX_Size() int {
	return xxx_messageInfo_ItemRef.Size(m)
}
func (m *ItemRef) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemRef.DiscardUnknown(m)
}

var xxx_messageInfo_ItemRef proto.InternalMessageInfo

func (m *ItemRef) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

func (m *ItemRef) GetFile() string {
	if m != nil {
		return m.File
	}
	return ""
}

func (m *ItemRef) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

type Star struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Item                 *ItemRef `protobuf:"bytes,4,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Star) Reset()         { *m = Star{} }
func (m *Star) String() string { return proto.CompactTextString(m) }
func (*Star) ProtoMessage()    {}
func (*Star) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{26}
}

func (m *Star) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Star.Unmarshal(m, b)
}
func (m *Star) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Star.Marshal(b, m, deterministic)
}
func (m *Star) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Star.Merge(m, src)
}
func (m *Star) XXX_Size() int {
	return xxx_messageInfo_Star.Size(m)
}
func (m *Star) XXX_DiscardUnknown() {
	xxx_messageInfo_Star.DiscardUnknown(m)
}

var xxx_messageInfo_Star proto.InternalMessageInfo

func (m *Star) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Star) GetItem() *ItemRef {
	if m != nil {
		return m.Item
	}
	return nil
}

type Pin struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Item                 *ItemRef `protobuf:"bytes,4,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Pin) Reset()         { *m = Pin{} }
func (m *Pin) String() string { return proto.CompactTextString(m) }
func (*Pin) ProtoMessage()    {}
func (*Pin) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{27}
}

func (m *Pin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Pin.Unmarshal(m, b)
}
func (m *Pin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Pin.Marshal(b, m, deterministic)
}
func (m *Pin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Pin.Merge(m, src)
}
func (m *Pin) XXX_Size() int {
	return xxx_messageInfo_Pin.Size(m)
}
func (m *Pin) XXX_DiscardUnknown() {
	xxx_messageInfo_Pin.DiscardUnknown(m)
}

var xxx_messageInfo_Pin proto.InternalMessageInfo

func (m *Pin) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Pin) GetItem() *ItemRef {
	if m != nil {
		return m.Item
	}
	return nil
}

type SignedKey struct {
	SignedKey            string   `protobuf:"bytes,1,opt,name=signed_key,json=signedKey,proto3" json:"signed_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignedKey) Reset()         { *m = SignedKey{} }
func (m *SignedKey) String() string { return proto.CompactTextString(m) }
func (*SignedKey) ProtoMessage()    {}
func (*SignedKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{28}
}

func (m *SignedKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignedKey.Unmarshal(m, b)
}
func (m *SignedKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignedKey.Marshal(b, m, deterministic)
}
func (m *SignedKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignedKey.Merge(m, src)
}
func (m *SignedKey) XXX_Size() int {
	return xxx_messageInfo_SignedKey.Size(m)
}
func (m *SignedKey) XXX_DiscardUnknown() {
	xxx_messageInfo_SignedKey.DiscardUnknown(m)
}

var xxx_messageInfo_SignedKey proto.InternalMessageInfo

func (m *SignedKey) GetSignedKey() string {
	if m != nil {
		return m.SignedKey
	}
	return ""
}

type Access struct {
	Autom8TerAccount     string   `protobuf:"bytes,1,opt,name=autom8ter_account,json=autom8terAccount,proto3" json:"autom8ter_account,omitempty"`
	Autom8TerKey         string   `protobuf:"bytes,2,opt,name=autom8ter_key,json=autom8terKey,proto3" json:"autom8ter_key,omitempty"`
	TwilioAccount        string   `protobuf:"bytes,3,opt,name=twilio_account,json=twilioAccount,proto3" json:"twilio_account,omitempty"`
	TwilioKey            string   `protobuf:"bytes,4,opt,name=twilio_key,json=twilioKey,proto3" json:"twilio_key,omitempty"`
	SendgridAccount      string   `protobuf:"bytes,5,opt,name=sendgrid_account,json=sendgridAccount,proto3" json:"sendgrid_account,omitempty"`
	SendgridKey          string   `protobuf:"bytes,6,opt,name=sendgrid_key,json=sendgridKey,proto3" json:"sendgrid_key,omitempty"`
	StripeAccount        string   `protobuf:"bytes,7,opt,name=stripe_account,json=stripeAccount,proto3" json:"stripe_account,omitempty"`
	StripeKey            string   `protobuf:"bytes,8,opt,name=stripe_key,json=stripeKey,proto3" json:"stripe_key,omitempty"`
	SlackAccount         string   `protobuf:"bytes,9,opt,name=slack_account,json=slackAccount,proto3" json:"slack_account,omitempty"`
	SlackKey             string   `protobuf:"bytes,10,opt,name=slack_key,json=slackKey,proto3" json:"slack_key,omitempty"`
	GcpProject           string   `protobuf:"bytes,11,opt,name=gcp_project,json=gcpProject,proto3" json:"gcp_project,omitempty"`
	GcpKey               string   `protobuf:"bytes,12,opt,name=gcp_key,json=gcpKey,proto3" json:"gcp_key,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Access) Reset()         { *m = Access{} }
func (m *Access) String() string { return proto.CompactTextString(m) }
func (*Access) ProtoMessage()    {}
func (*Access) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{29}
}

func (m *Access) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Access.Unmarshal(m, b)
}
func (m *Access) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Access.Marshal(b, m, deterministic)
}
func (m *Access) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Access.Merge(m, src)
}
func (m *Access) XXX_Size() int {
	return xxx_messageInfo_Access.Size(m)
}
func (m *Access) XXX_DiscardUnknown() {
	xxx_messageInfo_Access.DiscardUnknown(m)
}

var xxx_messageInfo_Access proto.InternalMessageInfo

func (m *Access) GetAutom8TerAccount() string {
	if m != nil {
		return m.Autom8TerAccount
	}
	return ""
}

func (m *Access) GetAutom8TerKey() string {
	if m != nil {
		return m.Autom8TerKey
	}
	return ""
}

func (m *Access) GetTwilioAccount() string {
	if m != nil {
		return m.TwilioAccount
	}
	return ""
}

func (m *Access) GetTwilioKey() string {
	if m != nil {
		return m.TwilioKey
	}
	return ""
}

func (m *Access) GetSendgridAccount() string {
	if m != nil {
		return m.SendgridAccount
	}
	return ""
}

func (m *Access) GetSendgridKey() string {
	if m != nil {
		return m.SendgridKey
	}
	return ""
}

func (m *Access) GetStripeAccount() string {
	if m != nil {
		return m.StripeAccount
	}
	return ""
}

func (m *Access) GetStripeKey() string {
	if m != nil {
		return m.StripeKey
	}
	return ""
}

func (m *Access) GetSlackAccount() string {
	if m != nil {
		return m.SlackAccount
	}
	return ""
}

func (m *Access) GetSlackKey() string {
	if m != nil {
		return m.SlackKey
	}
	return ""
}

func (m *Access) GetGcpProject() string {
	if m != nil {
		return m.GcpProject
	}
	return ""
}

func (m *Access) GetGcpKey() string {
	if m != nil {
		return m.GcpKey
	}
	return ""
}

type StandardClaims struct {
	Access               *Access  `protobuf:"bytes,1,opt,name=access,proto3" json:"access,omitempty"`
	Audience             string   `protobuf:"bytes,2,opt,name=audience,proto3" json:"audience,omitempty"`
	Subject              string   `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	ExpiresAt            int64    `protobuf:"varint,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Id                   string   `protobuf:"bytes,5,opt,name=id,proto3" json:"id,omitempty"`
	IssuedAt             int64    `protobuf:"varint,6,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	NotBefore            int64    `protobuf:"varint,7,opt,name=not_before,json=notBefore,proto3" json:"not_before,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StandardClaims) Reset()         { *m = StandardClaims{} }
func (m *StandardClaims) String() string { return proto.CompactTextString(m) }
func (*StandardClaims) ProtoMessage()    {}
func (*StandardClaims) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{30}
}

func (m *StandardClaims) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StandardClaims.Unmarshal(m, b)
}
func (m *StandardClaims) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StandardClaims.Marshal(b, m, deterministic)
}
func (m *StandardClaims) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StandardClaims.Merge(m, src)
}
func (m *StandardClaims) XXX_Size() int {
	return xxx_messageInfo_StandardClaims.Size(m)
}
func (m *StandardClaims) XXX_DiscardUnknown() {
	xxx_messageInfo_StandardClaims.DiscardUnknown(m)
}

var xxx_messageInfo_StandardClaims proto.InternalMessageInfo

func (m *StandardClaims) GetAccess() *Access {
	if m != nil {
		return m.Access
	}
	return nil
}

func (m *StandardClaims) GetAudience() string {
	if m != nil {
		return m.Audience
	}
	return ""
}

func (m *StandardClaims) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *StandardClaims) GetExpiresAt() int64 {
	if m != nil {
		return m.ExpiresAt
	}
	return 0
}

func (m *StandardClaims) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StandardClaims) GetIssuedAt() int64 {
	if m != nil {
		return m.IssuedAt
	}
	return 0
}

func (m *StandardClaims) GetNotBefore() int64 {
	if m != nil {
		return m.NotBefore
	}
	return 0
}

type LogConfig struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Channel              string   `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogConfig) Reset()         { *m = LogConfig{} }
func (m *LogConfig) String() string { return proto.CompactTextString(m) }
func (*LogConfig) ProtoMessage()    {}
func (*LogConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{31}
}

func (m *LogConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogConfig.Unmarshal(m, b)
}
func (m *LogConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogConfig.Marshal(b, m, deterministic)
}
func (m *LogConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogConfig.Merge(m, src)
}
func (m *LogConfig) XXX_Size() int {
	return xxx_messageInfo_LogConfig.Size(m)
}
func (m *LogConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_LogConfig.DiscardUnknown(m)
}

var xxx_messageInfo_LogConfig proto.InternalMessageInfo

func (m *LogConfig) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *LogConfig) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

type EmailAddress struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmailAddress) Reset()         { *m = EmailAddress{} }
func (m *EmailAddress) String() string { return proto.CompactTextString(m) }
func (*EmailAddress) ProtoMessage()    {}
func (*EmailAddress) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{32}
}

func (m *EmailAddress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmailAddress.Unmarshal(m, b)
}
func (m *EmailAddress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmailAddress.Marshal(b, m, deterministic)
}
func (m *EmailAddress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmailAddress.Merge(m, src)
}
func (m *EmailAddress) XXX_Size() int {
	return xxx_messageInfo_EmailAddress.Size(m)
}
func (m *EmailAddress) XXX_DiscardUnknown() {
	xxx_messageInfo_EmailAddress.DiscardUnknown(m)
}

var xxx_messageInfo_EmailAddress proto.InternalMessageInfo

func (m *EmailAddress) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EmailAddress) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type Email struct {
	From                 *EmailAddress   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Recipient            *RecipientEmail `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Email) Reset()         { *m = Email{} }
func (m *Email) String() string { return proto.CompactTextString(m) }
func (*Email) ProtoMessage()    {}
func (*Email) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{33}
}

func (m *Email) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Email.Unmarshal(m, b)
}
func (m *Email) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Email.Marshal(b, m, deterministic)
}
func (m *Email) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Email.Merge(m, src)
}
func (m *Email) XXX_Size() int {
	return xxx_messageInfo_Email.Size(m)
}
func (m *Email) XXX_DiscardUnknown() {
	xxx_messageInfo_Email.DiscardUnknown(m)
}

var xxx_messageInfo_Email proto.InternalMessageInfo

func (m *Email) GetFrom() *EmailAddress {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *Email) GetRecipient() *RecipientEmail {
	if m != nil {
		return m.Recipient
	}
	return nil
}

type RecipientEmail struct {
	To                   *EmailAddress `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Subject              string        `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	PlainText            string        `protobuf:"bytes,4,opt,name=plain_text,json=plainText,proto3" json:"plain_text,omitempty"`
	Html                 string        `protobuf:"bytes,5,opt,name=html,proto3" json:"html,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RecipientEmail) Reset()         { *m = RecipientEmail{} }
func (m *RecipientEmail) String() string { return proto.CompactTextString(m) }
func (*RecipientEmail) ProtoMessage()    {}
func (*RecipientEmail) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{34}
}

func (m *RecipientEmail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecipientEmail.Unmarshal(m, b)
}
func (m *RecipientEmail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecipientEmail.Marshal(b, m, deterministic)
}
func (m *RecipientEmail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecipientEmail.Merge(m, src)
}
func (m *RecipientEmail) XXX_Size() int {
	return xxx_messageInfo_RecipientEmail.Size(m)
}
func (m *RecipientEmail) XXX_DiscardUnknown() {
	xxx_messageInfo_RecipientEmail.DiscardUnknown(m)
}

var xxx_messageInfo_RecipientEmail proto.InternalMessageInfo

func (m *RecipientEmail) GetTo() *EmailAddress {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *RecipientEmail) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *RecipientEmail) GetPlainText() string {
	if m != nil {
		return m.PlainText
	}
	return ""
}

func (m *RecipientEmail) GetHtml() string {
	if m != nil {
		return m.Html
	}
	return ""
}

type SMS struct {
	To                   string   `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	From                 string   `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Body                 string   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	MediaUrl             string   `protobuf:"bytes,4,opt,name=media_url,json=mediaUrl,proto3" json:"media_url,omitempty"`
	Callback             string   `protobuf:"bytes,5,opt,name=callback,proto3" json:"callback,omitempty"`
	App                  string   `protobuf:"bytes,6,opt,name=app,proto3" json:"app,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SMS) Reset()         { *m = SMS{} }
func (m *SMS) String() string { return proto.CompactTextString(m) }
func (*SMS) ProtoMessage()    {}
func (*SMS) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{35}
}

func (m *SMS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SMS.Unmarshal(m, b)
}
func (m *SMS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SMS.Marshal(b, m, deterministic)
}
func (m *SMS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SMS.Merge(m, src)
}
func (m *SMS) XXX_Size() int {
	return xxx_messageInfo_SMS.Size(m)
}
func (m *SMS) XXX_DiscardUnknown() {
	xxx_messageInfo_SMS.DiscardUnknown(m)
}

var xxx_messageInfo_SMS proto.InternalMessageInfo

func (m *SMS) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *SMS) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *SMS) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *SMS) GetMediaUrl() string {
	if m != nil {
		return m.MediaUrl
	}
	return ""
}

func (m *SMS) GetCallback() string {
	if m != nil {
		return m.Callback
	}
	return ""
}

func (m *SMS) GetApp() string {
	if m != nil {
		return m.App
	}
	return ""
}

type Call struct {
	To                   string   `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	From                 string   `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	Callback             string   `protobuf:"bytes,5,opt,name=callback,proto3" json:"callback,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Call) Reset()         { *m = Call{} }
func (m *Call) String() string { return proto.CompactTextString(m) }
func (*Call) ProtoMessage()    {}
func (*Call) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{36}
}

func (m *Call) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Call.Unmarshal(m, b)
}
func (m *Call) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Call.Marshal(b, m, deterministic)
}
func (m *Call) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Call.Merge(m, src)
}
func (m *Call) XXX_Size() int {
	return xxx_messageInfo_Call.Size(m)
}
func (m *Call) XXX_DiscardUnknown() {
	xxx_messageInfo_Call.DiscardUnknown(m)
}

var xxx_messageInfo_Call proto.InternalMessageInfo

func (m *Call) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Call) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Call) GetCallback() string {
	if m != nil {
		return m.Callback
	}
	return ""
}

type Fax struct {
	To                   string   `protobuf:"bytes,1,opt,name=to,proto3" json:"to,omitempty"`
	From                 string   `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	MediaUrl             string   `protobuf:"bytes,3,opt,name=media_url,json=mediaUrl,proto3" json:"media_url,omitempty"`
	Quality              string   `protobuf:"bytes,4,opt,name=quality,proto3" json:"quality,omitempty"`
	Callback             string   `protobuf:"bytes,5,opt,name=callback,proto3" json:"callback,omitempty"`
	StoreMedia           bool     `protobuf:"varint,6,opt,name=store_media,json=storeMedia,proto3" json:"store_media,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Fax) Reset()         { *m = Fax{} }
func (m *Fax) String() string { return proto.CompactTextString(m) }
func (*Fax) ProtoMessage()    {}
func (*Fax) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{37}
}

func (m *Fax) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Fax.Unmarshal(m, b)
}
func (m *Fax) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Fax.Marshal(b, m, deterministic)
}
func (m *Fax) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Fax.Merge(m, src)
}
func (m *Fax) XXX_Size() int {
	return xxx_messageInfo_Fax.Size(m)
}
func (m *Fax) XXX_DiscardUnknown() {
	xxx_messageInfo_Fax.DiscardUnknown(m)
}

var xxx_messageInfo_Fax proto.InternalMessageInfo

func (m *Fax) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *Fax) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *Fax) GetMediaUrl() string {
	if m != nil {
		return m.MediaUrl
	}
	return ""
}

func (m *Fax) GetQuality() string {
	if m != nil {
		return m.Quality
	}
	return ""
}

func (m *Fax) GetCallback() string {
	if m != nil {
		return m.Callback
	}
	return ""
}

func (m *Fax) GetStoreMedia() bool {
	if m != nil {
		return m.StoreMedia
	}
	return false
}

type SlashCommand struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	TeamId               string   `protobuf:"bytes,2,opt,name=team_id,json=teamId,proto3" json:"team_id,omitempty"`
	TeamDomain           string   `protobuf:"bytes,3,opt,name=team_domain,json=teamDomain,proto3" json:"team_domain,omitempty"`
	EnterpriseId         string   `protobuf:"bytes,4,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id,omitempty"`
	EnterpriseName       string   `protobuf:"bytes,6,opt,name=enterprise_name,json=enterpriseName,proto3" json:"enterprise_name,omitempty"`
	ChannelId            string   `protobuf:"bytes,7,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	ChannelName          string   `protobuf:"bytes,8,opt,name=channel_name,json=channelName,proto3" json:"channel_name,omitempty"`
	UserId               string   `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserName             string   `protobuf:"bytes,10,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`
	Command              string   `protobuf:"bytes,11,opt,name=command,proto3" json:"command,omitempty"`
	Text                 string   `protobuf:"bytes,12,opt,name=text,proto3" json:"text,omitempty"`
	ResponseUrl          string   `protobuf:"bytes,13,opt,name=response_url,json=responseUrl,proto3" json:"response_url,omitempty"`
	TriggerId            string   `protobuf:"bytes,14,opt,name=trigger_id,json=triggerId,proto3" json:"trigger_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlashCommand) Reset()         { *m = SlashCommand{} }
func (m *SlashCommand) String() string { return proto.CompactTextString(m) }
func (*SlashCommand) ProtoMessage()    {}
func (*SlashCommand) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{38}
}

func (m *SlashCommand) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlashCommand.Unmarshal(m, b)
}
func (m *SlashCommand) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlashCommand.Marshal(b, m, deterministic)
}
func (m *SlashCommand) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlashCommand.Merge(m, src)
}
func (m *SlashCommand) XXX_Size() int {
	return xxx_messageInfo_SlashCommand.Size(m)
}
func (m *SlashCommand) XXX_DiscardUnknown() {
	xxx_messageInfo_SlashCommand.DiscardUnknown(m)
}

var xxx_messageInfo_SlashCommand proto.InternalMessageInfo

func (m *SlashCommand) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *SlashCommand) GetTeamId() string {
	if m != nil {
		return m.TeamId
	}
	return ""
}

func (m *SlashCommand) GetTeamDomain() string {
	if m != nil {
		return m.TeamDomain
	}
	return ""
}

func (m *SlashCommand) GetEnterpriseId() string {
	if m != nil {
		return m.EnterpriseId
	}
	return ""
}

func (m *SlashCommand) GetEnterpriseName() string {
	if m != nil {
		return m.EnterpriseName
	}
	return ""
}

func (m *SlashCommand) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *SlashCommand) GetChannelName() string {
	if m != nil {
		return m.ChannelName
	}
	return ""
}

func (m *SlashCommand) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *SlashCommand) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *SlashCommand) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *SlashCommand) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *SlashCommand) GetResponseUrl() string {
	if m != nil {
		return m.ResponseUrl
	}
	return ""
}

func (m *SlashCommand) GetTriggerId() string {
	if m != nil {
		return m.TriggerId
	}
	return ""
}

type LogHook struct {
	Author               string   `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	Icon                 string   `protobuf:"bytes,2,opt,name=icon,proto3" json:"icon,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LogHook) Reset()         { *m = LogHook{} }
func (m *LogHook) String() string { return proto.CompactTextString(m) }
func (*LogHook) ProtoMessage()    {}
func (*LogHook) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{39}
}

func (m *LogHook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LogHook.Unmarshal(m, b)
}
func (m *LogHook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LogHook.Marshal(b, m, deterministic)
}
func (m *LogHook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LogHook.Merge(m, src)
}
func (m *LogHook) XXX_Size() int {
	return xxx_messageInfo_LogHook.Size(m)
}
func (m *LogHook) XXX_DiscardUnknown() {
	xxx_messageInfo_LogHook.DiscardUnknown(m)
}

var xxx_messageInfo_LogHook proto.InternalMessageInfo

func (m *LogHook) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *LogHook) GetIcon() string {
	if m != nil {
		return m.Icon
	}
	return ""
}

func (m *LogHook) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

type Attachment struct {
	Color                string             `protobuf:"bytes,1,opt,name=color,proto3" json:"color,omitempty"`
	Fallback             string             `protobuf:"bytes,2,opt,name=fallback,proto3" json:"fallback,omitempty"`
	CallbackId           string             `protobuf:"bytes,3,opt,name=callback_id,json=callbackId,proto3" json:"callback_id,omitempty"`
	Id                   int64              `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	AuthorId             string             `protobuf:"bytes,5,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	AuthorName           string             `protobuf:"bytes,6,opt,name=author_name,json=authorName,proto3" json:"author_name,omitempty"`
	AuthorLink           string             `protobuf:"bytes,7,opt,name=author_link,json=authorLink,proto3" json:"author_link,omitempty"`
	AuthorIcon           string             `protobuf:"bytes,8,opt,name=author_icon,json=authorIcon,proto3" json:"author_icon,omitempty"`
	Title                string             `protobuf:"bytes,9,opt,name=title,proto3" json:"title,omitempty"`
	TitlePrefix          string             `protobuf:"bytes,10,opt,name=title_prefix,json=titlePrefix,proto3" json:"title_prefix,omitempty"`
	Pretext              string             `protobuf:"bytes,11,opt,name=pretext,proto3" json:"pretext,omitempty"`
	Text                 string             `protobuf:"bytes,12,opt,name=text,proto3" json:"text,omitempty"`
	ImageUrl             string             `protobuf:"bytes,13,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	ThumbUrl             string             `protobuf:"bytes,14,opt,name=thumb_url,json=thumbUrl,proto3" json:"thumb_url,omitempty"`
	Fields               []*AttachmentField `protobuf:"bytes,15,rep,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Attachment) Reset()         { *m = Attachment{} }
func (m *Attachment) String() string { return proto.CompactTextString(m) }
func (*Attachment) ProtoMessage()    {}
func (*Attachment) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{40}
}

func (m *Attachment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Attachment.Unmarshal(m, b)
}
func (m *Attachment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Attachment.Marshal(b, m, deterministic)
}
func (m *Attachment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Attachment.Merge(m, src)
}
func (m *Attachment) XXX_Size() int {
	return xxx_messageInfo_Attachment.Size(m)
}
func (m *Attachment) XXX_DiscardUnknown() {
	xxx_messageInfo_Attachment.DiscardUnknown(m)
}

var xxx_messageInfo_Attachment proto.InternalMessageInfo

func (m *Attachment) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *Attachment) GetFallback() string {
	if m != nil {
		return m.Fallback
	}
	return ""
}

func (m *Attachment) GetCallbackId() string {
	if m != nil {
		return m.CallbackId
	}
	return ""
}

func (m *Attachment) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Attachment) GetAuthorId() string {
	if m != nil {
		return m.AuthorId
	}
	return ""
}

func (m *Attachment) GetAuthorName() string {
	if m != nil {
		return m.AuthorName
	}
	return ""
}

func (m *Attachment) GetAuthorLink() string {
	if m != nil {
		return m.AuthorLink
	}
	return ""
}

func (m *Attachment) GetAuthorIcon() string {
	if m != nil {
		return m.AuthorIcon
	}
	return ""
}

func (m *Attachment) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Attachment) GetTitlePrefix() string {
	if m != nil {
		return m.TitlePrefix
	}
	return ""
}

func (m *Attachment) GetPretext() string {
	if m != nil {
		return m.Pretext
	}
	return ""
}

func (m *Attachment) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Attachment) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

func (m *Attachment) GetThumbUrl() string {
	if m != nil {
		return m.ThumbUrl
	}
	return ""
}

func (m *Attachment) GetFields() []*AttachmentField {
	if m != nil {
		return m.Fields
	}
	return nil
}

type AttachmentAction struct {
	Name                 string                         `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Text                 string                         `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Style                string                         `protobuf:"bytes,3,opt,name=style,proto3" json:"style,omitempty"`
	Type                 string                         `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	Value                string                         `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	DataSource           string                         `protobuf:"bytes,6,opt,name=data_source,json=dataSource,proto3" json:"data_source,omitempty"`
	MinQueryLength       int64                          `protobuf:"varint,7,opt,name=min_query_length,json=minQueryLength,proto3" json:"min_query_length,omitempty"`
	Options              []*AttachmentActionOption      `protobuf:"bytes,8,rep,name=options,proto3" json:"options,omitempty"`
	SelectedOptions      []*AttachmentActionOption      `protobuf:"bytes,9,rep,name=selected_options,json=selectedOptions,proto3" json:"selected_options,omitempty"`
	OptionGroups         []*AttachmentActionOptionGroup `protobuf:"bytes,10,rep,name=option_groups,json=optionGroups,proto3" json:"option_groups,omitempty"`
	Confirm              *AttachmentConfirmationField   `protobuf:"bytes,11,opt,name=confirm,proto3" json:"confirm,omitempty"`
	Url                  string                         `protobuf:"bytes,12,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *AttachmentAction) Reset()         { *m = AttachmentAction{} }
func (m *AttachmentAction) String() string { return proto.CompactTextString(m) }
func (*AttachmentAction) ProtoMessage()    {}
func (*AttachmentAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{41}
}

func (m *AttachmentAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachmentAction.Unmarshal(m, b)
}
func (m *AttachmentAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachmentAction.Marshal(b, m, deterministic)
}
func (m *AttachmentAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachmentAction.Merge(m, src)
}
func (m *AttachmentAction) XXX_Size() int {
	return xxx_messageInfo_AttachmentAction.Size(m)
}
func (m *AttachmentAction) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachmentAction.DiscardUnknown(m)
}

var xxx_messageInfo_AttachmentAction proto.InternalMessageInfo

func (m *AttachmentAction) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AttachmentAction) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *AttachmentAction) GetStyle() string {
	if m != nil {
		return m.Style
	}
	return ""
}

func (m *AttachmentAction) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AttachmentAction) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *AttachmentAction) GetDataSource() string {
	if m != nil {
		return m.DataSource
	}
	return ""
}

func (m *AttachmentAction) GetMinQueryLength() int64 {
	if m != nil {
		return m.MinQueryLength
	}
	return 0
}

func (m *AttachmentAction) GetOptions() []*AttachmentActionOption {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *AttachmentAction) GetSelectedOptions() []*AttachmentActionOption {
	if m != nil {
		return m.SelectedOptions
	}
	return nil
}

func (m *AttachmentAction) GetOptionGroups() []*AttachmentActionOptionGroup {
	if m != nil {
		return m.OptionGroups
	}
	return nil
}

func (m *AttachmentAction) GetConfirm() *AttachmentConfirmationField {
	if m != nil {
		return m.Confirm
	}
	return nil
}

func (m *AttachmentAction) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type AttachmentConfirmationField struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	OkText               string   `protobuf:"bytes,3,opt,name=ok_text,json=okText,proto3" json:"ok_text,omitempty"`
	DismissText          string   `protobuf:"bytes,4,opt,name=dismiss_text,json=dismissText,proto3" json:"dismiss_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttachmentConfirmationField) Reset()         { *m = AttachmentConfirmationField{} }
func (m *AttachmentConfirmationField) String() string { return proto.CompactTextString(m) }
func (*AttachmentConfirmationField) ProtoMessage()    {}
func (*AttachmentConfirmationField) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{42}
}

func (m *AttachmentConfirmationField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachmentConfirmationField.Unmarshal(m, b)
}
func (m *AttachmentConfirmationField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachmentConfirmationField.Marshal(b, m, deterministic)
}
func (m *AttachmentConfirmationField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachmentConfirmationField.Merge(m, src)
}
func (m *AttachmentConfirmationField) XXX_Size() int {
	return xxx_messageInfo_AttachmentConfirmationField.Size(m)
}
func (m *AttachmentConfirmationField) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachmentConfirmationField.DiscardUnknown(m)
}

var xxx_messageInfo_AttachmentConfirmationField proto.InternalMessageInfo

func (m *AttachmentConfirmationField) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AttachmentConfirmationField) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *AttachmentConfirmationField) GetOkText() string {
	if m != nil {
		return m.OkText
	}
	return ""
}

func (m *AttachmentConfirmationField) GetDismissText() string {
	if m != nil {
		return m.DismissText
	}
	return ""
}

type AttachmentActionOptionGroup struct {
	Text                 string                    `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Options              []*AttachmentActionOption `protobuf:"bytes,2,rep,name=options,proto3" json:"options,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *AttachmentActionOptionGroup) Reset()         { *m = AttachmentActionOptionGroup{} }
func (m *AttachmentActionOptionGroup) String() string { return proto.CompactTextString(m) }
func (*AttachmentActionOptionGroup) ProtoMessage()    {}
func (*AttachmentActionOptionGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{43}
}

func (m *AttachmentActionOptionGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachmentActionOptionGroup.Unmarshal(m, b)
}
func (m *AttachmentActionOptionGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachmentActionOptionGroup.Marshal(b, m, deterministic)
}
func (m *AttachmentActionOptionGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachmentActionOptionGroup.Merge(m, src)
}
func (m *AttachmentActionOptionGroup) XXX_Size() int {
	return xxx_messageInfo_AttachmentActionOptionGroup.Size(m)
}
func (m *AttachmentActionOptionGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachmentActionOptionGroup.DiscardUnknown(m)
}

var xxx_messageInfo_AttachmentActionOptionGroup proto.InternalMessageInfo

func (m *AttachmentActionOptionGroup) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *AttachmentActionOptionGroup) GetOptions() []*AttachmentActionOption {
	if m != nil {
		return m.Options
	}
	return nil
}

type AttachmentActionOption struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Description          string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttachmentActionOption) Reset()         { *m = AttachmentActionOption{} }
func (m *AttachmentActionOption) String() string { return proto.CompactTextString(m) }
func (*AttachmentActionOption) ProtoMessage()    {}
func (*AttachmentActionOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{44}
}

func (m *AttachmentActionOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachmentActionOption.Unmarshal(m, b)
}
func (m *AttachmentActionOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachmentActionOption.Marshal(b, m, deterministic)
}
func (m *AttachmentActionOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachmentActionOption.Merge(m, src)
}
func (m *AttachmentActionOption) XXX_Size() int {
	return xxx_messageInfo_AttachmentActionOption.Size(m)
}
func (m *AttachmentActionOption) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachmentActionOption.DiscardUnknown(m)
}

var xxx_messageInfo_AttachmentActionOption proto.InternalMessageInfo

func (m *AttachmentActionOption) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AttachmentActionOption) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *AttachmentActionOption) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type AttachmentField struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Short                bool     `protobuf:"varint,3,opt,name=short,proto3" json:"short,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AttachmentField) Reset()         { *m = AttachmentField{} }
func (m *AttachmentField) String() string { return proto.CompactTextString(m) }
func (*AttachmentField) ProtoMessage()    {}
func (*AttachmentField) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{45}
}

func (m *AttachmentField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AttachmentField.Unmarshal(m, b)
}
func (m *AttachmentField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AttachmentField.Marshal(b, m, deterministic)
}
func (m *AttachmentField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AttachmentField.Merge(m, src)
}
func (m *AttachmentField) XXX_Size() int {
	return xxx_messageInfo_AttachmentField.Size(m)
}
func (m *AttachmentField) XXX_DiscardUnknown() {
	xxx_messageInfo_AttachmentField.DiscardUnknown(m)
}

var xxx_messageInfo_AttachmentField proto.InternalMessageInfo

func (m *AttachmentField) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *AttachmentField) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *AttachmentField) GetShort() bool {
	if m != nil {
		return m.Short
	}
	return false
}

type JSON struct {
	Data                 []byte   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Size                 int64    `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JSON) Reset()         { *m = JSON{} }
func (m *JSON) String() string { return proto.CompactTextString(m) }
func (*JSON) ProtoMessage()    {}
func (*JSON) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{46}
}

func (m *JSON) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JSON.Unmarshal(m, b)
}
func (m *JSON) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JSON.Marshal(b, m, deterministic)
}
func (m *JSON) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JSON.Merge(m, src)
}
func (m *JSON) XXX_Size() int {
	return xxx_messageInfo_JSON.Size(m)
}
func (m *JSON) XXX_DiscardUnknown() {
	xxx_messageInfo_JSON.DiscardUnknown(m)
}

var xxx_messageInfo_JSON proto.InternalMessageInfo

func (m *JSON) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *JSON) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

type File struct {
	Data                 []byte            `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Size                 int64             `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Name                 string            `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Tags                 map[string]string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *File) Reset()         { *m = File{} }
func (m *File) String() string { return proto.CompactTextString(m) }
func (*File) ProtoMessage()    {}
func (*File) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{47}
}

func (m *File) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_File.Unmarshal(m, b)
}
func (m *File) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_File.Marshal(b, m, deterministic)
}
func (m *File) XXX_Merge(src proto.Message) {
	xxx_messageInfo_File.Merge(m, src)
}
func (m *File) XXX_Size() int {
	return xxx_messageInfo_File.Size(m)
}
func (m *File) XXX_DiscardUnknown() {
	xxx_messageInfo_File.DiscardUnknown(m)
}

var xxx_messageInfo_File proto.InternalMessageInfo

func (m *File) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *File) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *File) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *File) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type SlackHook struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Channel              string   `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SlackHook) Reset()         { *m = SlackHook{} }
func (m *SlackHook) String() string { return proto.CompactTextString(m) }
func (*SlackHook) ProtoMessage()    {}
func (*SlackHook) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{48}
}

func (m *SlackHook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SlackHook.Unmarshal(m, b)
}
func (m *SlackHook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SlackHook.Marshal(b, m, deterministic)
}
func (m *SlackHook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SlackHook.Merge(m, src)
}
func (m *SlackHook) XXX_Size() int {
	return xxx_messageInfo_SlackHook.Size(m)
}
func (m *SlackHook) XXX_DiscardUnknown() {
	xxx_messageInfo_SlackHook.DiscardUnknown(m)
}

var xxx_messageInfo_SlackHook proto.InternalMessageInfo

func (m *SlackHook) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *SlackHook) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

type Product struct {
	Name                 string            `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Amount               int64             `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	Description          string            `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Files                []*File           `protobuf:"bytes,4,rep,name=files,proto3" json:"files,omitempty"`
	Tags                 map[string]string `protobuf:"bytes,5,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Available            bool              `protobuf:"varint,6,opt,name=available,proto3" json:"available,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Product) Reset()         { *m = Product{} }
func (m *Product) String() string { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()    {}
func (*Product) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{49}
}

func (m *Product) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Product.Unmarshal(m, b)
}
func (m *Product) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Product.Marshal(b, m, deterministic)
}
func (m *Product) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Product.Merge(m, src)
}
func (m *Product) XXX_Size() int {
	return xxx_messageInfo_Product.Size(m)
}
func (m *Product) XXX_DiscardUnknown() {
	xxx_messageInfo_Product.DiscardUnknown(m)
}

var xxx_messageInfo_Product proto.InternalMessageInfo

func (m *Product) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Product) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Product) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Product) GetFiles() []*File {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *Product) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Product) GetAvailable() bool {
	if m != nil {
		return m.Available
	}
	return false
}

type StringMapString struct {
	Map                  map[string]string `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *StringMapString) Reset()         { *m = StringMapString{} }
func (m *StringMapString) String() string { return proto.CompactTextString(m) }
func (*StringMapString) ProtoMessage()    {}
func (*StringMapString) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{50}
}

func (m *StringMapString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StringMapString.Unmarshal(m, b)
}
func (m *StringMapString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StringMapString.Marshal(b, m, deterministic)
}
func (m *StringMapString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StringMapString.Merge(m, src)
}
func (m *StringMapString) XXX_Size() int {
	return xxx_messageInfo_StringMapString.Size(m)
}
func (m *StringMapString) XXX_DiscardUnknown() {
	xxx_messageInfo_StringMapString.DiscardUnknown(m)
}

var xxx_messageInfo_StringMapString proto.InternalMessageInfo

func (m *StringMapString) GetMap() map[string]string {
	if m != nil {
		return m.Map
	}
	return nil
}

type Msg struct {
	Id                   string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Meta                 map[string]string `protobuf:"bytes,2,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Data                 []byte            `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	PublishTime          string            `protobuf:"bytes,4,opt,name=publish_time,json=publishTime,proto3" json:"publish_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Msg) Reset()         { *m = Msg{} }
func (m *Msg) String() string { return proto.CompactTextString(m) }
func (*Msg) ProtoMessage()    {}
func (*Msg) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{51}
}

func (m *Msg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Msg.Unmarshal(m, b)
}
func (m *Msg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Msg.Marshal(b, m, deterministic)
}
func (m *Msg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Msg.Merge(m, src)
}
func (m *Msg) XXX_Size() int {
	return xxx_messageInfo_Msg.Size(m)
}
func (m *Msg) XXX_DiscardUnknown() {
	xxx_messageInfo_Msg.DiscardUnknown(m)
}

var xxx_messageInfo_Msg proto.InternalMessageInfo

func (m *Msg) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Msg) GetMeta() map[string]string {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Msg) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Msg) GetPublishTime() string {
	if m != nil {
		return m.PublishTime
	}
	return ""
}

func init() {
	proto.RegisterEnum("api.CustomerIndex", CustomerIndex_name, CustomerIndex_value)
	proto.RegisterEnum("api.Claim", Claim_name, Claim_value)
	proto.RegisterEnum("api.SigningMethod", SigningMethod_name, SigningMethod_value)
	proto.RegisterEnum("api.CardType", CardType_name, CardType_value)
	proto.RegisterEnum("api.Topic", Topic_name, Topic_value)
	proto.RegisterType((*Id)(nil), "api.Id")
	proto.RegisterType((*ActionHookRequest)(nil), "api.ActionHookRequest")
	proto.RegisterType((*MessageUserRequest)(nil), "api.MessageUserRequest")
	proto.RegisterType((*RefundRequest)(nil), "api.RefundRequest")
	proto.RegisterType((*ChargeRequest)(nil), "api.ChargeRequest")
	proto.RegisterType((*CancelSubscriptionRequest)(nil), "api.CancelSubscriptionRequest")
	proto.RegisterType((*CreatePlanRequest)(nil), "api.CreatePlanRequest")
	proto.RegisterType((*SMSRequest)(nil), "api.SMSRequest")
	proto.RegisterType((*CallRequest)(nil), "api.CallRequest")
	proto.RegisterType((*MMSRequest)(nil), "api.MMSRequest")
	proto.RegisterType((*EmailRequest)(nil), "api.EmailRequest")
	proto.RegisterType((*CustomerRequest)(nil), "api.CustomerRequest")
	proto.RegisterType((*UpdateCustomerRequest)(nil), "api.UpdateCustomerRequest")
	proto.RegisterType((*SubscribeCustomerRequest)(nil), "api.SubscribeCustomerRequest")
	proto.RegisterType((*CreateAccountRequest)(nil), "api.CreateAccountRequest")
	proto.RegisterType((*Account)(nil), "api.Account")
	proto.RegisterType((*User)(nil), "api.User")
	proto.RegisterType((*Profile)(nil), "api.Profile")
	proto.RegisterType((*Empty)(nil), "api.Empty")
	proto.RegisterType((*Customer)(nil), "api.Customer")
	proto.RegisterMapType((map[string]string)(nil), "api.Customer.MetadataEntry")
	proto.RegisterType((*Card)(nil), "api.Card")
	proto.RegisterType((*BankAccount)(nil), "api.BankAccount")
	proto.RegisterType((*Address)(nil), "api.Address")
	proto.RegisterType((*ChannelReminder)(nil), "api.ChannelReminder")
	proto.RegisterType((*UserReminder)(nil), "api.UserReminder")
	proto.RegisterType((*ItemRef)(nil), "api.ItemRef")
	proto.RegisterType((*Star)(nil), "api.Star")
	proto.RegisterType((*Pin)(nil), "api.Pin")
	proto.RegisterType((*SignedKey)(nil), "api.SignedKey")
	proto.RegisterType((*Access)(nil), "api.Access")
	proto.RegisterType((*StandardClaims)(nil), "api.StandardClaims")
	proto.RegisterType((*LogConfig)(nil), "api.LogConfig")
	proto.RegisterType((*EmailAddress)(nil), "api.EmailAddress")
	proto.RegisterType((*Email)(nil), "api.Email")
	proto.RegisterType((*RecipientEmail)(nil), "api.RecipientEmail")
	proto.RegisterType((*SMS)(nil), "api.SMS")
	proto.RegisterType((*Call)(nil), "api.Call")
	proto.RegisterType((*Fax)(nil), "api.Fax")
	proto.RegisterType((*SlashCommand)(nil), "api.SlashCommand")
	proto.RegisterType((*LogHook)(nil), "api.LogHook")
	proto.RegisterType((*Attachment)(nil), "api.Attachment")
	proto.RegisterType((*AttachmentAction)(nil), "api.AttachmentAction")
	proto.RegisterType((*AttachmentConfirmationField)(nil), "api.AttachmentConfirmationField")
	proto.RegisterType((*AttachmentActionOptionGroup)(nil), "api.AttachmentActionOptionGroup")
	proto.RegisterType((*AttachmentActionOption)(nil), "api.AttachmentActionOption")
	proto.RegisterType((*AttachmentField)(nil), "api.AttachmentField")
	proto.RegisterType((*JSON)(nil), "api.JSON")
	proto.RegisterType((*File)(nil), "api.File")
	proto.RegisterMapType((map[string]string)(nil), "api.File.TagsEntry")
	proto.RegisterType((*SlackHook)(nil), "api.SlackHook")
	proto.RegisterType((*Product)(nil), "api.Product")
	proto.RegisterMapType((map[string]string)(nil), "api.Product.TagsEntry")
	proto.RegisterType((*StringMapString)(nil), "api.StringMapString")
	proto.RegisterMapType((map[string]string)(nil), "api.StringMapString.MapEntry")
	proto.RegisterType((*Msg)(nil), "api.Msg")
	proto.RegisterMapType((map[string]string)(nil), "api.Msg.MetaEntry")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 3696 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x5a, 0xcd, 0x6f, 0x24, 0xc9,
	0x52, 0xdf, 0xfe, 0xb0, 0xbb, 0x2b, 0xfa, 0xc3, 0x3d, 0xb5, 0xf3, 0xd1, 0xe3, 0x59, 0xcf, 0x78,
	0x6a, 0xde, 0xec, 0x9b, 0xf5, 0x83, 0xf1, 0xdb, 0x41, 0xb0, 0x1f, 0x6f, 0x05, 0xdb, 0xdb, 0xf6,
	0xcc, 0x34, 0xeb, 0x1e, 0x7b, 0xab, 0xec, 0x7d, 0x6f, 0xc5, 0xa1, 0x95, 0xae, 0x4a, 0x77, 0xd7,
	0x73, 0x7d, 0x6d, 0x55, 0xf6, 0xac, 0xfd, 0x10, 0x12, 0x82, 0x0b, 0x67, 0x40, 0x20, 0x21, 0x71,
	0xe3, 0x82, 0x10, 0x02, 0x89, 0x3b, 0xff, 0x04, 0x08, 0x89, 0x3b, 0x1c, 0xf8, 0x07, 0x38, 0xc0,
	0x05, 0x45, 0x64, 0x66, 0x75, 0x75, 0xbb, 0xed, 0xf1, 0xec, 0x4a, 0xdc, 0x32, 0x22, 0x23, 0x7f,
	0x19, 0x15, 0x11, 0x19, 0x99, 0x91, 0x59, 0x60, 0xb0, 0xc4, 0x7f, 0x9a, 0xa4, 0xb1, 0x88, 0xcd,
	0x0a, 0x4b, 0xfc, 0xf5, 0x7b, 0xe3, 0x38, 0x1e, 0x07, 0x7c, 0x9b, 0x58, 0xc7, 0xd3, 0x93, 0x6d,
	0x1e, 0x26, 0xe2, 0x5c, 0x4a, 0xac, 0xdf, 0x5f, 0xec, 0xf4, 0xa6, 0x29, 0x13, 0x7e, 0x1c, 0xa9,
	0xfe, 0xcd, 0xc5, 0xfe, 0x13, 0x9f, 0x07, 0xde, 0x28, 0x64, 0xd9, 0xa9, 0x92, 0x78, 0x4f, 0x49,
	0xb0, 0xc4, 0xdf, 0x66, 0x51, 0x14, 0x0b, 0x1a, 0x9e, 0xa9, 0xde, 0x5b, 0xc5, 0xde, 0xa9, 0x98,
	0x28, 0xf6, 0x86, 0x86, 0x9d, 0x1e, 0x67, 0xd3, 0xe3, 0xed, 0xd7, 0x1f, 0xaa, 0x96, 0xec, 0xb6,
	0x6e, 0x42, 0x79, 0xe0, 0x99, 0x6d, 0x28, 0xfb, 0x5e, 0xb7, 0xb4, 0x59, 0x7a, 0x62, 0xd8, 0x65,
	0xdf, 0xb3, 0xa6, 0x70, 0xa3, 0xe7, 0x22, 0xf8, 0xcb, 0x38, 0x3e, 0xb5, 0xf9, 0xb7, 0x53, 0x9e,
	0x09, 0x73, 0x1b, 0x80, 0x09, 0xc1, 0xdc, 0x49, 0xc8, 0x23, 0x41, 0xc2, 0x8d, 0x67, 0x6b, 0x4f,
	0xd1, 0x04, 0xbd, 0x9c, 0x6d, 0x17, 0x44, 0xcc, 0x6d, 0xa8, 0x31, 0x42, 0xc9, 0xba, 0x65, 0x92,
	0xbe, 0xb5, 0x20, 0x2d, 0xe7, 0xb0, 0xb5, 0x94, 0xf5, 0xdb, 0x60, 0x0e, 0x79, 0x96, 0xb1, 0x31,
	0x3f, 0xca, 0x78, 0xaa, 0xe7, 0x5d, 0x50, 0xce, 0xec, 0x42, 0x2d, 0x94, 0x52, 0x04, 0x6b, 0xd8,
	0x9a, 0xb4, 0xfe, 0xb4, 0x04, 0x2d, 0x9b, 0x9f, 0x4c, 0x23, 0xef, 0xb2, 0xb1, 0xb7, 0x61, 0x35,
	0xe5, 0x2c, 0x8b, 0x23, 0x35, 0x54, 0x51, 0xc8, 0x67, 0x61, 0x3c, 0x8d, 0x44, 0xb7, 0xb2, 0x59,
	0x7a, 0x52, 0xb1, 0x15, 0x65, 0x7e, 0x00, 0x9d, 0x94, 0xbf, 0xe6, 0x69, 0xc6, 0x47, 0x22, 0x65,
	0x51, 0x76, 0xc2, 0xd3, 0x6e, 0x75, 0xb3, 0xf4, 0xa4, 0x6e, 0xaf, 0x29, 0xfe, 0xa1, 0x62, 0x23,
	0x44, 0x26, 0x98, 0x98, 0x66, 0xdd, 0x15, 0x09, 0x2d, 0x29, 0xeb, 0x05, 0xb4, 0xfa, 0x13, 0x96,
	0x8e, 0xb9, 0xd6, 0xe9, 0x7d, 0xa8, 0x25, 0x69, 0xec, 0x4d, 0x5d, 0x6d, 0xc4, 0x26, 0x99, 0xe5,
	0x40, 0xf2, 0x6c, 0xdd, 0xa9, 0x74, 0x2f, 0xe7, 0x4e, 0xf9, 0x09, 0xdc, 0xed, 0xb3, 0xc8, 0xe5,
	0x81, 0x33, 0x3d, 0xce, 0xdc, 0xd4, 0x4f, 0xc8, 0x78, 0xcb, 0x3f, 0xd4, 0xfa, 0xbb, 0x12, 0xdc,
	0xe8, 0xa7, 0x9c, 0x09, 0x7e, 0x10, 0xb0, 0x5c, 0xea, 0x0e, 0xd4, 0x92, 0x80, 0x45, 0xa3, 0x5c,
	0x74, 0x15, 0xc9, 0x81, 0x57, 0xf8, 0xfe, 0xf2, 0xdc, 0xf7, 0x6f, 0x00, 0x64, 0x3c, 0x7d, 0xed,
	0xbb, 0x1c, 0xc7, 0x54, 0x68, 0x8c, 0xa1, 0x38, 0x03, 0xcf, 0x7c, 0x08, 0x4d, 0xdd, 0x1d, 0xb1,
	0x90, 0x93, 0x69, 0x0c, 0xbb, 0xa1, 0x78, 0xaf, 0x58, 0xc8, 0xcd, 0x47, 0xd0, 0x3a, 0x49, 0x7d,
	0x1e, 0x79, 0xc1, 0xb9, 0x94, 0x91, 0xd6, 0x69, 0x6a, 0x26, 0x0a, 0x59, 0x3f, 0x05, 0x70, 0x86,
	0xce, 0x65, 0x4e, 0x33, 0xa1, 0x7a, 0x1c, 0x7b, 0xe7, 0xca, 0x14, 0xd4, 0xb6, 0x3e, 0x87, 0x46,
	0x9f, 0x05, 0xc1, 0x65, 0x43, 0x1e, 0x42, 0xd3, 0x65, 0x41, 0x70, 0xcc, 0xdc, 0xd3, 0xd1, 0x34,
	0x0d, 0xd4, 0xd0, 0x86, 0xe6, 0x1d, 0xa5, 0x81, 0xb5, 0x07, 0x30, 0x9c, 0xcd, 0xf9, 0x10, 0x2a,
	0x59, 0x98, 0xcd, 0x45, 0xf5, 0x4c, 0x23, 0x1b, 0xfb, 0xcc, 0x7b, 0x60, 0x84, 0xdc, 0xf3, 0x19,
	0x01, 0x4a, 0x53, 0xd4, 0x89, 0x81, 0x68, 0x29, 0x34, 0x77, 0x43, 0xe6, 0x07, 0x57, 0x04, 0x6d,
	0x36, 0x3d, 0xfe, 0x25, 0x77, 0x85, 0x0e, 0x5a, 0x45, 0xa2, 0x89, 0x93, 0x80, 0xf9, 0xd1, 0x48,
	0xf0, 0x33, 0xa1, 0x4d, 0x4c, 0x9c, 0x43, 0x7e, 0x26, 0xcc, 0xbb, 0x50, 0x9f, 0x88, 0x30, 0x18,
	0xb1, 0x40, 0x28, 0xf3, 0xd6, 0x90, 0xee, 0x05, 0xc2, 0xfa, 0x87, 0x12, 0xac, 0xf5, 0xa7, 0x99,
	0x88, 0xc3, 0xd9, 0x62, 0xb9, 0x09, 0x2b, 0x1c, 0xf5, 0x50, 0x53, 0x4b, 0x02, 0x2d, 0x88, 0x8e,
	0xd6, 0x16, 0xc4, 0x36, 0x4a, 0x26, 0x93, 0x38, 0xe2, 0x6a, 0x4a, 0x49, 0xa0, 0x64, 0xc1, 0x93,
	0xd4, 0x36, 0x37, 0xa1, 0xe1, 0xf1, 0x3c, 0xe2, 0xba, 0x35, 0x69, 0xcb, 0x02, 0x0b, 0x43, 0x9a,
	0x79, 0x5e, 0xca, 0xb3, 0xac, 0x5b, 0x2f, 0x84, 0x74, 0x4f, 0xf2, 0x6c, 0xdd, 0x69, 0x7d, 0x03,
	0xb7, 0x8e, 0x12, 0x8f, 0x09, 0xbe, 0xa8, 0xf6, 0xa2, 0xb9, 0x7e, 0x0a, 0x75, 0x57, 0x89, 0xa8,
	0xdc, 0x71, 0x93, 0x10, 0x17, 0xc6, 0xd9, 0xb9, 0x94, 0xf5, 0xb7, 0x25, 0xe8, 0xaa, 0x85, 0x71,
	0xfc, 0x46, 0xf8, 0x65, 0xf6, 0x78, 0x00, 0x0d, 0x97, 0xa5, 0xde, 0x28, 0x9a, 0x86, 0xc7, 0x3c,
	0x55, 0x56, 0x01, 0x64, 0xbd, 0x22, 0x0e, 0xfa, 0x9f, 0x9f, 0x25, 0xa3, 0x30, 0x8e, 0xc4, 0x44,
	0xd9, 0xa7, 0xce, 0xcf, 0x92, 0x21, 0xd2, 0xe8, 0x26, 0xec, 0x3c, 0xe7, 0x2c, 0x55, 0x11, 0x5e,
	0xe3, 0x67, 0xc9, 0x37, 0x9c, 0xa5, 0x66, 0x07, 0x2a, 0xee, 0x6b, 0xb7, 0xbb, 0x4a, 0x5c, 0x6c,
	0x5a, 0x21, 0xdc, 0x94, 0x6b, 0xb3, 0xe7, 0xba, 0xb8, 0xcc, 0xb4, 0x9a, 0xc5, 0xaf, 0x2e, 0x5d,
	0xe7, 0xab, 0xcd, 0x47, 0xb0, 0xca, 0x5c, 0x17, 0xed, 0x2e, 0xad, 0xd4, 0x90, 0x76, 0x27, 0x96,
	0xad, 0xba, 0xac, 0x6f, 0xa0, 0xa6, 0x26, 0x32, 0x3f, 0xb8, 0x30, 0x43, 0x6b, 0x7e, 0x86, 0xb7,
	0x84, 0xfe, 0xcb, 0x0a, 0x54, 0x31, 0x57, 0x5f, 0xb0, 0xf0, 0x1d, 0xa8, 0x09, 0xce, 0xc2, 0x51,
	0x9e, 0xc1, 0x56, 0x91, 0x1c, 0x78, 0x79, 0x80, 0x55, 0x0a, 0x01, 0x96, 0x87, 0x62, 0xb5, 0x18,
	0x8a, 0x32, 0x4f, 0x9e, 0xf8, 0x81, 0xcc, 0x19, 0x85, 0x3c, 0x89, 0x3c, 0x5b, 0x77, 0xe2, 0xd2,
	0xf2, 0x78, 0xc0, 0x05, 0xf7, 0xc8, 0xc6, 0x75, 0x5b, 0x93, 0x88, 0xcb, 0xbc, 0xd0, 0x97, 0x21,
	0x5b, 0xb7, 0x25, 0x81, 0xb9, 0x2e, 0xfe, 0x2e, 0xf2, 0x78, 0x4a, 0xb1, 0x5a, 0xb7, 0x15, 0x85,
	0x99, 0x2a, 0x49, 0xfd, 0x90, 0xa5, 0xe7, 0xa3, 0xf8, 0xbb, 0x88, 0xa7, 0x5d, 0x83, 0xba, 0x9b,
	0x8a, 0xb9, 0x8f, 0x3c, 0xf3, 0x3e, 0x40, 0xca, 0x33, 0x91, 0xfa, 0x2e, 0xce, 0x07, 0x24, 0x51,
	0xe0, 0xe0, 0x86, 0x31, 0x0d, 0x44, 0xca, 0x46, 0x05, 0xa9, 0x86, 0xdc, 0x30, 0x88, 0x6f, 0xcf,
	0x44, 0xd7, 0xa1, 0x9e, 0xe1, 0xa6, 0x32, 0xe6, 0x69, 0xb7, 0x49, 0x22, 0x39, 0x8d, 0x31, 0x73,
	0x1c, 0x8b, 0x6e, 0x8b, 0xd8, 0xd8, 0x44, 0xad, 0x27, 0x2c, 0x7b, 0x76, 0xc2, 0xba, 0x6d, 0xa9,
	0xb5, 0xa4, 0x90, 0x1f, 0xc4, 0x2e, 0x0b, 0x78, 0x77, 0x4d, 0xda, 0x59, 0x52, 0xd6, 0x7f, 0x96,
	0xa0, 0xa6, 0x4c, 0x85, 0xa1, 0xcd, 0x5e, 0x33, 0xc1, 0xd2, 0xd1, 0x84, 0x65, 0x13, 0xe5, 0x25,
	0x90, 0xac, 0x97, 0x2c, 0x9b, 0x14, 0xf6, 0xae, 0x72, 0x71, 0xef, 0xa2, 0xfc, 0x4e, 0xad, 0x11,
	0x0f, 0xe3, 0x5f, 0xfa, 0xca, 0x69, 0x0d, 0xc9, 0xdb, 0x45, 0x16, 0x8a, 0x78, 0x7e, 0x96, 0x04,
	0xec, 0x7c, 0x6e, 0x0b, 0x50, 0x3c, 0xda, 0x02, 0xb4, 0xcb, 0x57, 0xe6, 0x5d, 0x2e, 0xf3, 0xd4,
	0x6a, 0x31, 0x4f, 0x6d, 0x00, 0xf8, 0x21, 0x1b, 0x73, 0x4c, 0xb1, 0x59, 0xb7, 0xb6, 0x59, 0xc1,
	0x5c, 0x48, 0x9c, 0xa3, 0x34, 0xc8, 0x10, 0x08, 0xa3, 0x88, 0xfc, 0x66, 0xd8, 0xd4, 0xb6, 0x6a,
	0xb0, 0xb2, 0x8b, 0xa7, 0x2c, 0xeb, 0xbf, 0xca, 0x50, 0xd7, 0x61, 0x7c, 0xad, 0x05, 0x7f, 0x49,
	0x24, 0x4a, 0xb5, 0xaa, 0x45, 0xb5, 0x16, 0x12, 0xe0, 0xca, 0xc5, 0x04, 0x98, 0x47, 0xf0, 0xea,
	0x42, 0x04, 0x5f, 0x27, 0x2d, 0x9a, 0x1f, 0x41, 0x3d, 0xe4, 0x82, 0x79, 0x4c, 0xb0, 0xae, 0xb1,
	0x59, 0x79, 0xd2, 0x78, 0x76, 0x6f, 0x6e, 0x55, 0x3e, 0x1d, 0xaa, 0xde, 0xdd, 0x48, 0xa4, 0xe7,
	0x76, 0x2e, 0x5c, 0x0c, 0x7d, 0x98, 0x0f, 0x7d, 0xcc, 0x66, 0x94, 0x62, 0x46, 0x98, 0x6e, 0xbb,
	0x37, 0x69, 0x57, 0x07, 0xc9, 0xda, 0x61, 0x82, 0xaf, 0xff, 0x0c, 0x5a, 0x73, 0xa8, 0x18, 0x72,
	0xa7, 0xfc, 0x5c, 0xd9, 0x0c, 0x9b, 0xf8, 0x51, 0xaf, 0x59, 0x30, 0xd5, 0xc7, 0x2c, 0x49, 0x7c,
	0x5a, 0xfe, 0xb8, 0x64, 0xfd, 0x53, 0x09, 0xaa, 0x7d, 0x96, 0x7a, 0xe6, 0x16, 0x18, 0x94, 0x34,
	0xc5, 0x79, 0xc2, 0x69, 0x68, 0x5b, 0x27, 0x14, 0x96, 0x7a, 0x87, 0xe7, 0x09, 0xb7, 0xeb, 0xae,
	0x6a, 0xfd, 0x3f, 0x26, 0x58, 0xd4, 0xdc, 0xe3, 0xc7, 0xbe, 0xd0, 0x0b, 0x9f, 0x08, 0xeb, 0xf7,
	0xa0, 0xf1, 0x05, 0x8b, 0x4e, 0x75, 0x2e, 0x7c, 0x0c, 0x6d, 0x26, 0x9b, 0x5a, 0x25, 0xf9, 0xed,
	0x2d, 0xc5, 0x55, 0x5a, 0x3d, 0x86, 0x76, 0x1a, 0x4f, 0x85, 0x1f, 0x8d, 0xb5, 0x98, 0x34, 0x47,
	0x4b, 0x71, 0xa5, 0x98, 0xf5, 0x57, 0x25, 0xa8, 0x29, 0xc7, 0x62, 0x64, 0xb9, 0xbe, 0xd0, 0xb6,
	0xa4, 0x36, 0xba, 0x8a, 0x50, 0x53, 0x7d, 0x8e, 0xd1, 0x24, 0x2a, 0x1b, 0xf8, 0x11, 0xff, 0x50,
	0x6f, 0xc4, 0x44, 0x68, 0xee, 0x33, 0x1d, 0x89, 0x44, 0xa0, 0x0d, 0x93, 0x38, 0x13, 0x2c, 0x18,
	0xb9, 0xb1, 0xa7, 0x57, 0x14, 0x48, 0x56, 0x3f, 0xf6, 0x28, 0x80, 0x71, 0x75, 0xe6, 0x81, 0x48,
	0x84, 0xf5, 0x0b, 0x58, 0xeb, 0x4f, 0x58, 0x14, 0xf1, 0xc0, 0xe6, 0xa1, 0x4f, 0xd9, 0x6e, 0x03,
	0xc0, 0x95, 0xac, 0xd9, 0x69, 0xd0, 0x50, 0x1c, 0x99, 0xa6, 0xe9, 0x3c, 0x52, 0xd6, 0x4b, 0xed,
	0x4c, 0x10, 0xcf, 0x9f, 0x2d, 0x18, 0x6c, 0x5b, 0x13, 0x68, 0xca, 0xb3, 0xba, 0x82, 0x5d, 0xb2,
	0xf0, 0xae, 0x83, 0x63, 0x6e, 0x42, 0xd5, 0x17, 0x3c, 0xa4, 0xaf, 0xd5, 0xeb, 0x64, 0x20, 0x78,
	0x68, 0xf3, 0x13, 0x9b, 0x7a, 0xac, 0xaf, 0xa0, 0xa6, 0x18, 0x64, 0x4b, 0xa9, 0xa9, 0x9a, 0x49,
	0x93, 0x08, 0x4d, 0x1b, 0x86, 0x9a, 0x4e, 0xef, 0x0f, 0x6e, 0x1c, 0x52, 0xd1, 0x52, 0xd1, 0x96,
	0x27, 0xd2, 0xfa, 0x0c, 0xaa, 0x8e, 0x60, 0x69, 0xae, 0x64, 0xa9, 0xa0, 0xe4, 0x9b, 0x15, 0xfa,
	0x19, 0x54, 0x0e, 0xfc, 0xe8, 0x7b, 0x0e, 0xde, 0x02, 0xc3, 0xf1, 0xc7, 0x11, 0xf7, 0xbe, 0xe4,
	0xe7, 0x74, 0xca, 0x26, 0x62, 0x34, 0x5b, 0x81, 0x46, 0xa6, 0xbb, 0xad, 0x7f, 0xac, 0xc0, 0xaa,
	0xdc, 0x77, 0xcd, 0x9f, 0xc0, 0x0d, 0x36, 0x15, 0x71, 0xf8, 0xb1, 0xe0, 0xe9, 0x48, 0xc5, 0xa9,
	0x1a, 0xd0, 0xc9, 0x3b, 0x74, 0x80, 0x3f, 0x82, 0xd6, 0x4c, 0x18, 0x91, 0xa5, 0x55, 0x9a, 0x39,
	0x13, 0xe7, 0x7e, 0x0c, 0x6d, 0xf1, 0x9d, 0x1f, 0xf8, 0x71, 0x0e, 0x27, 0x8d, 0xd4, 0x92, 0x5c,
	0x8d, 0xb5, 0x01, 0xa0, 0xc4, 0x10, 0x48, 0xc6, 0xa4, 0x21, 0x39, 0x88, 0xf2, 0x01, 0x74, 0x32,
	0x1e, 0x79, 0xe3, 0xd4, 0xf7, 0x72, 0x1c, 0x19, 0x9c, 0x6b, 0x9a, 0xaf, 0x91, 0xa8, 0x66, 0x50,
	0xa2, 0x88, 0xb5, 0xaa, 0x6b, 0x06, 0xc9, 0x53, 0x3a, 0xe1, 0x2e, 0x99, 0xf0, 0x1c, 0x4b, 0x9e,
	0x39, 0x5b, 0x92, 0x5b, 0xd0, 0x49, 0x89, 0x21, 0x4e, 0x5d, 0x99, 0x8d, 0x38, 0x88, 0xf2, 0x08,
	0x5a, 0x59, 0x80, 0x05, 0x80, 0x06, 0x31, 0xe4, 0xe7, 0x13, 0x53, 0x63, 0xdc, 0x03, 0x43, 0x0a,
	0x21, 0x04, 0xc8, 0x9c, 0x43, 0x0c, 0x44, 0x78, 0x00, 0x8d, 0xb1, 0x9b, 0x8c, 0x92, 0x34, 0xa6,
	0x83, 0x7b, 0x43, 0xae, 0xb6, 0xb1, 0x9b, 0x1c, 0x48, 0x0e, 0x9e, 0x72, 0x50, 0x00, 0xc7, 0x36,
	0xe5, 0xc6, 0x39, 0x76, 0x13, 0x74, 0xd9, 0xbf, 0x95, 0xa0, 0xed, 0x08, 0x16, 0x79, 0x2c, 0xf5,
	0xfa, 0x01, 0xf3, 0xc3, 0xac, 0x70, 0x9e, 0x2a, 0x5d, 0x7a, 0x9e, 0xc2, 0x33, 0x01, 0x9b, 0x7a,
	0x3e, 0x8f, 0x5c, 0x1d, 0xc3, 0x39, 0x5d, 0x2c, 0x21, 0x2a, 0x17, 0x4a, 0x08, 0x7e, 0x96, 0xf8,
	0x29, 0xcf, 0x46, 0x4c, 0x56, 0x09, 0x15, 0xdb, 0x50, 0x9c, 0x9e, 0x3e, 0xfd, 0xae, 0xe4, 0x6b,
	0xf2, 0x1e, 0x18, 0x7e, 0x96, 0x4d, 0xb9, 0x87, 0xd2, 0xab, 0x24, 0x5d, 0x97, 0x8c, 0x1e, 0x61,
	0x45, 0xb1, 0x18, 0x1d, 0xf3, 0x93, 0x38, 0xe5, 0x64, 0xf7, 0x8a, 0x6d, 0x44, 0xb1, 0xf8, 0x82,
	0x18, 0x56, 0x0f, 0x8c, 0xbd, 0x78, 0xdc, 0x8f, 0xa3, 0x13, 0x7f, 0x8c, 0xda, 0x4e, 0x33, 0x9e,
	0xd2, 0x2e, 0x2a, 0x83, 0x30, 0xa7, 0x8b, 0x6b, 0xb4, 0x3c, 0xb7, 0x46, 0xad, 0xcf, 0x54, 0xa9,
	0x54, 0xc8, 0x96, 0x05, 0x84, 0xaa, 0x1e, 0xad, 0x77, 0x4e, 0x35, 0x5a, 0x97, 0x10, 0x0c, 0xf7,
	0x7b, 0xdc, 0x94, 0x1f, 0x43, 0xf5, 0x24, 0x8d, 0x43, 0x65, 0xcd, 0x1b, 0x64, 0xcd, 0x22, 0xae,
	0x4d, 0xdd, 0xe6, 0x87, 0x60, 0xa4, 0xdc, 0xf5, 0x13, 0x9f, 0xab, 0xe2, 0xb6, 0xf1, 0xec, 0x5d,
	0x92, 0xb5, 0x35, 0x57, 0xd6, 0x6d, 0x33, 0x29, 0xeb, 0x0f, 0x4b, 0xd0, 0x9e, 0xef, 0x35, 0x1f,
	0x42, 0x59, 0xc4, 0x6a, 0xf8, 0x92, 0xa9, 0xca, 0x22, 0xbe, 0xda, 0x3d, 0x85, 0x0a, 0xaf, 0xba,
	0x58, 0xe1, 0x99, 0x50, 0xc5, 0x8a, 0x4e, 0x1f, 0x8f, 0xb0, 0x6d, 0xfd, 0x49, 0x09, 0x2a, 0xce,
	0xd0, 0x41, 0xd7, 0x89, 0x58, 0xa7, 0x53, 0x11, 0x53, 0x7e, 0xc3, 0x8f, 0xd6, 0xf9, 0x0d, 0xbf,
	0x50, 0x97, 0xc7, 0x95, 0x59, 0x79, 0x3c, 0x5f, 0xab, 0x56, 0xe7, 0x6b, 0x55, 0x74, 0x9b, 0x2e,
	0x84, 0xd5, 0xa4, 0x39, 0x8d, 0x7b, 0x29, 0x4b, 0x12, 0xbd, 0x97, 0xb2, 0x24, 0xb1, 0x9e, 0xe3,
	0x56, 0x1f, 0x04, 0xd7, 0x52, 0xe5, 0x0a, 0x64, 0xeb, 0xaf, 0x4b, 0x50, 0x79, 0xce, 0xce, 0xae,
	0x85, 0x73, 0x55, 0xa9, 0x8d, 0x86, 0xfe, 0x76, 0xca, 0x02, 0xdc, 0x60, 0x55, 0x41, 0xac, 0xc8,
	0x2b, 0x3f, 0xec, 0x01, 0x34, 0x32, 0x11, 0xa7, 0x7c, 0x44, 0x38, 0xaa, 0x52, 0x00, 0x62, 0x0d,
	0x91, 0x63, 0xfd, 0x79, 0x05, 0x9a, 0x4e, 0xc0, 0xb2, 0x49, 0x3f, 0x0e, 0x43, 0x16, 0x51, 0xf5,
	0x20, 0xe2, 0x53, 0x1e, 0xe9, 0x52, 0x9a, 0x88, 0xcb, 0x0b, 0x9b, 0x07, 0xd0, 0xa0, 0x0e, 0x2f,
	0x0e, 0x99, 0x1f, 0xe9, 0xe3, 0x0d, 0xb2, 0x76, 0x88, 0x83, 0xf9, 0x88, 0x47, 0x82, 0xa7, 0x49,
	0xea, 0x67, 0x74, 0x9d, 0x22, 0xb5, 0x6f, 0xce, 0x98, 0x03, 0xcf, 0xfc, 0x31, 0xac, 0x15, 0x84,
	0x68, 0x5d, 0x48, 0x5f, 0xb4, 0x67, 0x6c, 0x3a, 0x54, 0xcf, 0xef, 0xdf, 0xb5, 0xc5, 0xfd, 0xfb,
	0x21, 0x34, 0x75, 0x37, 0x81, 0xd4, 0xd5, 0x05, 0x88, 0xe4, 0x11, 0xc2, 0x1d, 0xa8, 0xe1, 0x6a,
	0xc5, 0xe1, 0x32, 0x33, 0xae, 0x22, 0x39, 0xa0, 0xfc, 0x40, 0x1d, 0x34, 0x10, 0x66, 0xeb, 0xfa,
	0x95, 0x5e, 0xd7, 0xd2, 0x40, 0x2a, 0x1f, 0x6a, 0x32, 0xdf, 0x08, 0x9b, 0x85, 0x8d, 0xf0, 0x21,
	0x34, 0x53, 0x9e, 0x25, 0x71, 0x94, 0xd1, 0x99, 0x9e, 0x0a, 0x1a, 0xc3, 0x6e, 0x68, 0x1e, 0xba,
	0x13, 0x77, 0x96, 0xd4, 0x1f, 0x8f, 0xa5, 0x26, 0x6d, 0xb5, 0xb3, 0x48, 0xce, 0xc0, 0xb3, 0xbe,
	0x84, 0xda, 0x5e, 0x3c, 0x7e, 0x19, 0xc7, 0xa7, 0x74, 0x49, 0x35, 0x15, 0x93, 0x58, 0x1f, 0xd4,
	0x14, 0x85, 0x13, 0xfb, 0x6e, 0x7e, 0xa5, 0x47, 0x6d, 0x72, 0x9e, 0x2f, 0x82, 0xfc, 0x76, 0x83,
	0x08, 0xeb, 0x9f, 0x2b, 0x00, 0xb3, 0xeb, 0x47, 0x14, 0x72, 0xe3, 0x20, 0xc7, 0x93, 0x04, 0x46,
	0xd1, 0x89, 0x8e, 0x22, 0x95, 0x83, 0x4f, 0x0a, 0x51, 0x94, 0xdf, 0x2b, 0xe5, 0x17, 0x62, 0xa0,
	0x59, 0xf9, 0x4d, 0xaa, 0x4c, 0xc1, 0x2a, 0xd7, 0x4a, 0x2d, 0x47, 0x79, 0x0a, 0xae, 0x4b, 0x86,
	0x0c, 0x19, 0xd5, 0x59, 0x70, 0x34, 0x48, 0x16, 0x19, 0x7b, 0x26, 0x10, 0xf8, 0xd1, 0xa9, 0xf2,
	0xb2, 0x12, 0xd8, 0xf3, 0xa3, 0xd3, 0x82, 0x00, 0x59, 0xa0, 0x5e, 0x14, 0x18, 0xcc, 0xd9, 0xc1,
	0x28, 0xd8, 0x01, 0xdd, 0x42, 0x8d, 0x51, 0x92, 0xf2, 0x13, 0xff, 0x4c, 0x39, 0xb9, 0x41, 0xbc,
	0x03, 0x62, 0xa1, 0x9f, 0x93, 0x94, 0x93, 0x43, 0x95, 0x9f, 0x15, 0xb9, 0xd4, 0xcf, 0xb8, 0xa5,
	0xe8, 0xc2, 0x4d, 0x39, 0xb9, 0xae, 0xeb, 0x36, 0xec, 0x14, 0x93, 0x69, 0x78, 0x4c, 0x9d, 0xd2,
	0xc1, 0x75, 0x62, 0x60, 0xe7, 0xaf, 0xc1, 0x2a, 0x5d, 0x74, 0x67, 0xdd, 0x35, 0xaa, 0x7c, 0x6e,
	0x2e, 0xdc, 0x11, 0x3f, 0xc7, 0x4e, 0x5b, 0xc9, 0x58, 0xff, 0x5e, 0x81, 0xce, 0xe2, 0xfd, 0xf1,
	0xd2, 0x0d, 0x64, 0xd9, 0xb9, 0x93, 0xce, 0xc6, 0xe7, 0xb3, 0x98, 0x20, 0x82, 0x24, 0xb1, 0x7a,
	0x51, 0x37, 0x5e, 0xd8, 0x9e, 0x55, 0x3e, 0x2b, 0x85, 0xca, 0x07, 0x8d, 0x8d, 0xe5, 0xd2, 0x28,
	0x8b, 0xa7, 0xa9, 0x9b, 0xbb, 0x0b, 0x59, 0x0e, 0x71, 0xcc, 0x27, 0xd0, 0x09, 0xfd, 0x68, 0xf4,
	0xed, 0x94, 0xa7, 0xe7, 0xa3, 0x80, 0x47, 0x63, 0x31, 0x51, 0x3b, 0x68, 0x3b, 0xf4, 0xa3, 0xaf,
	0x90, 0xbd, 0x47, 0x5c, 0xf3, 0x37, 0xa1, 0x16, 0x27, 0xf2, 0x6a, 0xbc, 0x5e, 0x28, 0xf8, 0x16,
	0x3f, 0x6d, 0x5f, 0xde, 0xf1, 0x6a, 0x59, 0xf3, 0x39, 0x1e, 0xb3, 0x02, 0xee, 0x0a, 0xee, 0x8d,
	0xf4, 0x78, 0xe3, 0xcd, 0xe3, 0xd7, 0xf4, 0xa0, 0x7d, 0x85, 0xb3, 0x0b, 0x2d, 0x39, 0x7c, 0x34,
	0x4e, 0xe3, 0x69, 0x92, 0x75, 0x81, 0x40, 0x36, 0xaf, 0x00, 0x79, 0x81, 0x82, 0x76, 0x33, 0x9e,
	0x11, 0x99, 0xf9, 0x29, 0xe6, 0x82, 0xe8, 0xc4, 0x4f, 0x43, 0x8a, 0x91, 0x8b, 0x00, 0x7d, 0xd9,
	0x4b, 0xef, 0x14, 0xd2, 0x91, 0x7a, 0x00, 0x6e, 0x34, 0x18, 0x0e, 0x32, 0x88, 0xb0, 0x69, 0xfd,
	0x71, 0x09, 0xee, 0x5d, 0x31, 0x74, 0x16, 0xca, 0xa5, 0x62, 0x28, 0x2f, 0x73, 0xf4, 0x1d, 0xa8,
	0xc5, 0xa7, 0xc5, 0xfb, 0xd4, 0xd5, 0xf8, 0xf4, 0x50, 0xa5, 0x23, 0xcf, 0xcf, 0x42, 0x3f, 0xcb,
	0x8a, 0x7b, 0x71, 0x43, 0xf1, 0x50, 0xc4, 0x9a, 0x14, 0x95, 0xb8, 0x60, 0x80, 0xa5, 0xa7, 0xfd,
	0x82, 0x33, 0xcb, 0xd7, 0x77, 0xa6, 0x75, 0x02, 0xb7, 0x97, 0x8b, 0x5c, 0xf2, 0xa5, 0x4b, 0xcb,
	0xf1, 0xc5, 0xbb, 0x89, 0xca, 0x85, 0xbb, 0x09, 0xcb, 0x81, 0xb5, 0x85, 0xe5, 0xf4, 0x56, 0x13,
	0xe0, 0xaa, 0x99, 0xc4, 0xa9, 0x34, 0x65, 0xdd, 0x96, 0x84, 0xf5, 0x14, 0xaa, 0xbf, 0xeb, 0xec,
	0xbf, 0x42, 0x7b, 0xd0, 0xb5, 0x05, 0x02, 0x35, 0x6d, 0x6a, 0x23, 0x2f, 0xf3, 0x7f, 0xc5, 0xd5,
	0x53, 0x02, 0xb5, 0xad, 0xbf, 0x29, 0x41, 0xf5, 0xb9, 0x2f, 0xfd, 0x75, 0x9d, 0x01, 0x4b, 0x6f,
	0x67, 0x7e, 0x0c, 0x55, 0xc1, 0xc6, 0x59, 0xb7, 0x4a, 0x56, 0x96, 0xc7, 0x38, 0x04, 0x7d, 0x7a,
	0xc8, 0xc6, 0x99, 0xbc, 0x1b, 0x21, 0x81, 0xf5, 0x8f, 0xc0, 0xc8, 0x59, 0x6f, 0x75, 0xb1, 0xd1,
	0x03, 0xc3, 0xc1, 0xd3, 0x3f, 0xed, 0x37, 0xdf, 0xef, 0x78, 0xfb, 0xbf, 0xf2, 0xe2, 0x8d, 0x9e,
	0x70, 0x96, 0x65, 0xa6, 0xcb, 0x9e, 0x5a, 0xde, 0xe8, 0x48, 0xf3, 0x01, 0xac, 0x60, 0x41, 0xab,
	0xbf, 0xdf, 0xc8, 0xbf, 0xdf, 0x96, 0x7c, 0x73, 0x4b, 0xd9, 0x67, 0x85, 0xfa, 0x6f, 0x17, 0x9f,
	0x95, 0x16, 0x4d, 0x64, 0xbe, 0x07, 0x06, 0x7b, 0xcd, 0xfc, 0x80, 0x1d, 0x07, 0x5c, 0x9d, 0x86,
	0x66, 0x8c, 0xef, 0x6f, 0xc0, 0x5f, 0xc1, 0x9a, 0x23, 0x52, 0x3f, 0x1a, 0x0f, 0x59, 0x22, 0x1b,
	0xe6, 0x36, 0x54, 0x42, 0x96, 0x74, 0x4b, 0xa4, 0xd4, 0x86, 0x7c, 0x5a, 0x99, 0x17, 0x79, 0x3a,
	0x64, 0x89, 0xd4, 0x0d, 0x25, 0xd7, 0x7f, 0x0b, 0xea, 0x9a, 0xf1, 0x56, 0x73, 0xff, 0x7d, 0x09,
	0x2a, 0xc3, 0x6c, 0x7c, 0xe1, 0x0e, 0xe2, 0x7d, 0xa8, 0x86, 0x5c, 0x30, 0xb5, 0x38, 0x4d, 0xd2,
	0x60, 0x98, 0x8d, 0xe9, 0x56, 0x4d, 0x99, 0x04, 0xfb, 0xf3, 0xd0, 0xac, 0x14, 0x42, 0xf3, 0x21,
	0x34, 0x93, 0xe9, 0x71, 0xe0, 0x67, 0x93, 0x11, 0xdd, 0x59, 0xa8, 0x8c, 0xa1, 0x78, 0x87, 0x7e,
	0x48, 0xb6, 0xca, 0x91, 0xde, 0x46, 0xdf, 0xad, 0x5f, 0x87, 0x96, 0xbe, 0xe1, 0x1b, 0x44, 0x1e,
	0x3f, 0x33, 0x57, 0xa1, 0x3c, 0xd8, 0xe9, 0xbc, 0x63, 0x1a, 0xb0, 0xb2, 0x3b, 0xec, 0x0d, 0xf6,
	0x3a, 0x25, 0x6c, 0x1e, 0xbc, 0xdc, 0x7f, 0xb5, 0xdb, 0x29, 0x6f, 0x1d, 0xc0, 0x0a, 0x95, 0x92,
	0x26, 0xc0, 0xea, 0xe1, 0xcf, 0x07, 0x7b, 0x83, 0xfd, 0xce, 0x3b, 0x66, 0x13, 0xea, 0xce, 0xee,
	0xab, 0x9d, 0x17, 0xf6, 0x60, 0xa7, 0x53, 0xc2, 0x1e, 0xe7, 0xd0, 0x1e, 0x1c, 0xec, 0x76, 0xca,
	0x38, 0xd2, 0xd9, 0xeb, 0xf5, 0xbf, 0xec, 0x54, 0xcc, 0x1a, 0x54, 0x5e, 0xf4, 0x0f, 0x3a, 0x55,
	0xb3, 0x05, 0x46, 0xef, 0xe8, 0x70, 0x7f, 0xf8, 0xf1, 0xe1, 0xae, 0xdd, 0x59, 0xd9, 0xfa, 0x04,
	0x5a, 0x8e, 0x3f, 0x8e, 0xd0, 0x15, 0x5c, 0x4c, 0x62, 0xcf, 0xac, 0x43, 0xf5, 0xe5, 0xb0, 0xd7,
	0x57, 0x2a, 0xf4, 0x77, 0x9c, 0x5e, 0xa7, 0x84, 0xa3, 0x6d, 0xa7, 0xd7, 0x29, 0x23, 0xba, 0xed,
	0xf4, 0x0e, 0x0e, 0x9c, 0x4e, 0x65, 0xeb, 0x33, 0xa8, 0xeb, 0x2b, 0x3e, 0x1c, 0xf5, 0xf5, 0xc0,
	0xe9, 0x75, 0xde, 0x31, 0xdb, 0x00, 0xc3, 0x9e, 0x73, 0xb8, 0x6b, 0xf7, 0x7b, 0x36, 0xea, 0xd3,
	0x84, 0xfa, 0xce, 0xc0, 0xe9, 0xef, 0x7f, 0xbd, 0x6b, 0x77, 0xca, 0x28, 0xd7, 0x1b, 0xee, 0xfe,
	0xa2, 0x53, 0xd9, 0xfa, 0x08, 0x56, 0x0e, 0xe3, 0xc4, 0x77, 0x91, 0x75, 0xe4, 0xec, 0xda, 0x9d,
	0x77, 0xcc, 0x06, 0xd4, 0x7a, 0xfd, 0xfe, 0xfe, 0xd1, 0xab, 0x43, 0x39, 0xae, 0x7f, 0xe4, 0x1c,
	0xee, 0x0f, 0x69, 0x9c, 0x01, 0x2b, 0xfb, 0x87, 0x2f, 0x77, 0xed, 0x4e, 0xe5, 0xd9, 0xff, 0x94,
	0xa1, 0xad, 0x4a, 0x77, 0x47, 0x3e, 0x32, 0x9a, 0xfb, 0xd0, 0x9a, 0x7b, 0x4c, 0x31, 0xef, 0xca,
	0x0b, 0xc8, 0x25, 0x0f, 0x2c, 0xeb, 0x72, 0xc9, 0x60, 0xe2, 0xb2, 0xba, 0x7f, 0xf4, 0x2f, 0xff,
	0xf1, 0x67, 0x65, 0xd3, 0x6a, 0xc9, 0x07, 0x73, 0x29, 0x97, 0x7d, 0x5a, 0xda, 0x32, 0x0f, 0xa0,
	0x25, 0x1f, 0xa9, 0x34, 0x60, 0x53, 0x57, 0xea, 0x48, 0x15, 0x31, 0xde, 0x27, 0x8c, 0x4d, 0xeb,
	0xde, 0x1c, 0xc6, 0xf6, 0xef, 0xeb, 0x37, 0x94, 0xa7, 0xbe, 0xf7, 0x07, 0x88, 0xf8, 0x05, 0xb4,
	0x76, 0xe8, 0x5e, 0x56, 0x23, 0xd6, 0xe4, 0x8d, 0x90, 0x57, 0x04, 0xdb, 0x20, 0xb0, 0x3b, 0x96,
	0xb9, 0x00, 0xa6, 0x30, 0x3e, 0x87, 0x86, 0xcd, 0x99, 0xf7, 0x03, 0x10, 0x7e, 0x07, 0x9a, 0x7b,
	0x7e, 0x26, 0x14, 0x42, 0x66, 0x82, 0xaa, 0x63, 0x13, 0x71, 0x7e, 0x2d, 0xc3, 0x3c, 0xfb, 0x8b,
	0xfa, 0xec, 0xbd, 0x51, 0x5b, 0x7f, 0x0f, 0xda, 0xd2, 0xd2, 0xf9, 0xd5, 0xfb, 0xd2, 0x27, 0xab,
	0xe2, 0x04, 0x77, 0x69, 0x82, 0x77, 0xad, 0x36, 0x4d, 0xa0, 0x6d, 0x45, 0xa6, 0xff, 0x39, 0xb4,
	0xe7, 0xdf, 0x07, 0xcd, 0x75, 0x1a, 0xb7, 0xf4, 0xd1, 0xb0, 0x88, 0x79, 0x9f, 0x30, 0xbb, 0xd6,
	0xbb, 0xf3, 0x98, 0xf9, 0xb7, 0xef, 0x40, 0x5b, 0x7a, 0x20, 0x07, 0x5e, 0x66, 0xc0, 0x37, 0xa1,
	0x3c, 0x87, 0x16, 0x5a, 0x50, 0x63, 0x5c, 0x6a, 0xc2, 0xcb, 0x70, 0x02, 0x3f, 0x13, 0x88, 0xf3,
	0x35, 0xb4, 0xe5, 0x2f, 0x01, 0xb9, 0x36, 0x32, 0x29, 0xcd, 0xfd, 0x27, 0x50, 0x04, 0x7c, 0x4c,
	0x80, 0x0f, 0xac, 0xf5, 0x25, 0x8a, 0x6d, 0xbb, 0x34, 0x4a, 0xe1, 0xca, 0xdf, 0x1f, 0x16, 0x70,
	0xe7, 0xfe, 0x89, 0xb8, 0x36, 0x6e, 0x4a, 0xa3, 0x10, 0x77, 0x0c, 0x37, 0x2e, 0x3c, 0xad, 0x9a,
	0x2a, 0x93, 0x5f, 0xf2, 0xe4, 0x5a, 0x9c, 0xe5, 0x09, 0xcd, 0x62, 0x59, 0x1b, 0xcb, 0x66, 0xc9,
	0x34, 0x00, 0x4e, 0x14, 0xc0, 0xbb, 0x47, 0xd1, 0xc5, 0xa9, 0xee, 0xab, 0x27, 0x85, 0x4b, 0x7e,
	0x7e, 0x28, 0xce, 0xb5, 0x45, 0x73, 0xfd, 0xc8, 0x7a, 0xb0, 0x6c, 0xae, 0x69, 0x34, 0x37, 0xdb,
	0x10, 0x1a, 0xce, 0xd0, 0xc9, 0x67, 0x59, 0x7c, 0xf5, 0x2f, 0xc2, 0x5a, 0x04, 0xfb, 0x9e, 0x75,
	0x67, 0xe9, 0x27, 0x84, 0x2a, 0x6f, 0x34, 0xfb, 0x2c, 0x08, 0x72, 0xbc, 0x8e, 0xd2, 0x3a, 0xff,
	0x4b, 0xa1, 0x08, 0xf8, 0x88, 0x00, 0x37, 0xac, 0xee, 0x52, 0x8f, 0xb2, 0x20, 0x40, 0xc4, 0xaf,
	0xa0, 0x31, 0xbc, 0xa0, 0xe0, 0x70, 0xa9, 0x82, 0xf3, 0xa9, 0xa8, 0x80, 0x97, 0x85, 0x19, 0xa6,
	0xa1, 0xed, 0x50, 0x2a, 0xe9, 0x40, 0x8b, 0x6e, 0xae, 0x72, 0xd0, 0xc2, 0x6d, 0xd6, 0x12, 0xd8,
	0x1f, 0x11, 0xec, 0x7d, 0xeb, 0xee, 0x32, 0x35, 0xe9, 0x71, 0x0c, 0x13, 0x03, 0x83, 0xc6, 0x41,
	0xc0, 0x22, 0x9d, 0x13, 0x6c, 0xb8, 0x2d, 0x73, 0x42, 0xd1, 0x57, 0x28, 0x60, 0xde, 0x2e, 0xa4,
	0xe6, 0xc2, 0x7f, 0x29, 0xc5, 0x19, 0x6f, 0xd1, 0x8c, 0x6b, 0x16, 0xd0, 0x8c, 0x49, 0xc0, 0x22,
	0xca, 0x3d, 0xff, 0x5d, 0x85, 0xc6, 0x51, 0x36, 0xcb, 0x3b, 0x5f, 0x82, 0x41, 0x3a, 0xd3, 0xe3,
	0xf3, 0xd5, 0xdf, 0xb0, 0x49, 0x88, 0xeb, 0xd6, 0x2d, 0x42, 0xc4, 0x13, 0xdc, 0x82, 0xfe, 0xe6,
	0x4b, 0x68, 0x14, 0xfe, 0x3b, 0x32, 0xef, 0x48, 0x3b, 0x5f, 0xf8, 0x13, 0xe9, 0x72, 0x35, 0x09,
	0x14, 0x91, 0x06, 0x50, 0x73, 0x86, 0x0e, 0xa1, 0xfc, 0xd0, 0x70, 0xda, 0xc3, 0x1d, 0x36, 0x90,
	0x1f, 0xf8, 0xc3, 0x43, 0x69, 0x08, 0xb5, 0xe1, 0x9c, 0x62, 0x3f, 0x2c, 0x8c, 0x3e, 0x01, 0x90,
	0x5e, 0x24, 0x44, 0x09, 0x80, 0xcd, 0x6b, 0x98, 0xe8, 0x13, 0x00, 0x99, 0xce, 0xdf, 0x7e, 0xe8,
	0x47, 0x00, 0x32, 0x8b, 0xd3, 0xd0, 0x65, 0x19, 0xfc, 0xd2, 0x39, 0x0d, 0x4c, 0xdc, 0x38, 0xec,
	0xd2, 0xa4, 0xbd, 0x7c, 0xe8, 0xb3, 0x7f, 0x2d, 0x41, 0x03, 0xab, 0x01, 0x1d, 0x78, 0x9f, 0x42,
	0x95, 0x8a, 0x83, 0xc5, 0x3f, 0xdf, 0xd6, 0x0b, 0xb0, 0x0b, 0x58, 0x93, 0x38, 0x3e, 0x25, 0x35,
	0x5e, 0x00, 0xcc, 0x7e, 0xab, 0x53, 0x8b, 0xe1, 0xc2, 0x7f, 0x76, 0xd7, 0x01, 0xfa, 0x1c, 0xea,
	0xf2, 0xaa, 0x32, 0xf4, 0x54, 0xf0, 0x17, 0x6f, 0x2e, 0xaf, 0x81, 0x70, 0xbc, 0x4a, 0xbf, 0xff,
	0xfd, 0xc6, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x2e, 0x06, 0x3d, 0xce, 0xc3, 0x28, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AccountServiceClient is the client API for AccountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountServiceClient interface {
	CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*JSON, error)
	UpdateAccount(ctx context.Context, in *Account, opts ...grpc.CallOption) (*JSON, error)
	DeleteAccount(ctx context.Context, in *Id, opts ...grpc.CallOption) (*JSON, error)
	ReadAccount(ctx context.Context, in *Id, opts ...grpc.CallOption) (*JSON, error)
	ListAccounts(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*JSON, error)
}

type accountServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccountServiceClient(cc *grpc.ClientConn) AccountServiceClient {
	return &accountServiceClient{cc}
}

func (c *accountServiceClient) CreateAccount(ctx context.Context, in *CreateAccountRequest, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.AccountService/CreateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) UpdateAccount(ctx context.Context, in *Account, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.AccountService/UpdateAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) DeleteAccount(ctx context.Context, in *Id, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.AccountService/DeleteAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) ReadAccount(ctx context.Context, in *Id, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.AccountService/ReadAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) ListAccounts(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.AccountService/ListAccounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountServiceServer is the server API for AccountService service.
type AccountServiceServer interface {
	CreateAccount(context.Context, *CreateAccountRequest) (*JSON, error)
	UpdateAccount(context.Context, *Account) (*JSON, error)
	DeleteAccount(context.Context, *Id) (*JSON, error)
	ReadAccount(context.Context, *Id) (*JSON, error)
	ListAccounts(context.Context, *Empty) (*JSON, error)
}

func RegisterAccountServiceServer(s *grpc.Server, srv AccountServiceServer) {
	s.RegisterService(&_AccountService_serviceDesc, srv)
}

func _AccountService_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AccountService/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).CreateAccount(ctx, req.(*CreateAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_UpdateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Account)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).UpdateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AccountService/UpdateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).UpdateAccount(ctx, req.(*Account))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_DeleteAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).DeleteAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AccountService/DeleteAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).DeleteAccount(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_ReadAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).ReadAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AccountService/ReadAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).ReadAccount(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_ListAccounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).ListAccounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.AccountService/ListAccounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).ListAccounts(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.AccountService",
	HandlerType: (*AccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAccount",
			Handler:    _AccountService_CreateAccount_Handler,
		},
		{
			MethodName: "UpdateAccount",
			Handler:    _AccountService_UpdateAccount_Handler,
		},
		{
			MethodName: "DeleteAccount",
			Handler:    _AccountService_DeleteAccount_Handler,
		},
		{
			MethodName: "ReadAccount",
			Handler:    _AccountService_ReadAccount_Handler,
		},
		{
			MethodName: "ListAccounts",
			Handler:    _AccountService_ListAccounts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// CustomerServiceClient is the client API for CustomerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CustomerServiceClient interface {
	CreateCustomer(ctx context.Context, in *CustomerRequest, opts ...grpc.CallOption) (*JSON, error)
	UpdateCustomer(ctx context.Context, in *UpdateCustomerRequest, opts ...grpc.CallOption) (*JSON, error)
	DeleteCustomer(ctx context.Context, in *Id, opts ...grpc.CallOption) (*JSON, error)
	ListCustomers(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*JSON, error)
	ChargeCustomer(ctx context.Context, in *ChargeRequest, opts ...grpc.CallOption) (*JSON, error)
	RefundCustomer(ctx context.Context, in *RefundRequest, opts ...grpc.CallOption) (*JSON, error)
	SubscribeCustomer(ctx context.Context, in *SubscribeCustomerRequest, opts ...grpc.CallOption) (*JSON, error)
	UnSubscribeCustomer(ctx context.Context, in *CancelSubscriptionRequest, opts ...grpc.CallOption) (*JSON, error)
	SMSCustomer(ctx context.Context, in *SMSRequest, opts ...grpc.CallOption) (*JSON, error)
	CallCustomer(ctx context.Context, in *CallRequest, opts ...grpc.CallOption) (*JSON, error)
	MMSCustomer(ctx context.Context, in *MMSRequest, opts ...grpc.CallOption) (*JSON, error)
	EmailCustomer(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*JSON, error)
}

type customerServiceClient struct {
	cc *grpc.ClientConn
}

func NewCustomerServiceClient(cc *grpc.ClientConn) CustomerServiceClient {
	return &customerServiceClient{cc}
}

func (c *customerServiceClient) CreateCustomer(ctx context.Context, in *CustomerRequest, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.CustomerService/CreateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) UpdateCustomer(ctx context.Context, in *UpdateCustomerRequest, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.CustomerService/UpdateCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) DeleteCustomer(ctx context.Context, in *Id, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.CustomerService/DeleteCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) ListCustomers(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.CustomerService/ListCustomers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) ChargeCustomer(ctx context.Context, in *ChargeRequest, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.CustomerService/ChargeCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) RefundCustomer(ctx context.Context, in *RefundRequest, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.CustomerService/RefundCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) SubscribeCustomer(ctx context.Context, in *SubscribeCustomerRequest, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.CustomerService/SubscribeCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) UnSubscribeCustomer(ctx context.Context, in *CancelSubscriptionRequest, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.CustomerService/UnSubscribeCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) SMSCustomer(ctx context.Context, in *SMSRequest, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.CustomerService/SMSCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) CallCustomer(ctx context.Context, in *CallRequest, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.CustomerService/CallCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) MMSCustomer(ctx context.Context, in *MMSRequest, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.CustomerService/MMSCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *customerServiceClient) EmailCustomer(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.CustomerService/EmailCustomer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CustomerServiceServer is the server API for CustomerService service.
type CustomerServiceServer interface {
	CreateCustomer(context.Context, *CustomerRequest) (*JSON, error)
	UpdateCustomer(context.Context, *UpdateCustomerRequest) (*JSON, error)
	DeleteCustomer(context.Context, *Id) (*JSON, error)
	ListCustomers(context.Context, *Empty) (*JSON, error)
	ChargeCustomer(context.Context, *ChargeRequest) (*JSON, error)
	RefundCustomer(context.Context, *RefundRequest) (*JSON, error)
	SubscribeCustomer(context.Context, *SubscribeCustomerRequest) (*JSON, error)
	UnSubscribeCustomer(context.Context, *CancelSubscriptionRequest) (*JSON, error)
	SMSCustomer(context.Context, *SMSRequest) (*JSON, error)
	CallCustomer(context.Context, *CallRequest) (*JSON, error)
	MMSCustomer(context.Context, *MMSRequest) (*JSON, error)
	EmailCustomer(context.Context, *EmailRequest) (*JSON, error)
}

func RegisterCustomerServiceServer(s *grpc.Server, srv CustomerServiceServer) {
	s.RegisterService(&_CustomerService_serviceDesc, srv)
}

func _CustomerService_CreateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).CreateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.CustomerService/CreateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).CreateCustomer(ctx, req.(*CustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_UpdateCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).UpdateCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.CustomerService/UpdateCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).UpdateCustomer(ctx, req.(*UpdateCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_DeleteCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).DeleteCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.CustomerService/DeleteCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).DeleteCustomer(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_ListCustomers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).ListCustomers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.CustomerService/ListCustomers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).ListCustomers(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_ChargeCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChargeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).ChargeCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.CustomerService/ChargeCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).ChargeCustomer(ctx, req.(*ChargeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_RefundCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RefundRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).RefundCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.CustomerService/RefundCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).RefundCustomer(ctx, req.(*RefundRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_SubscribeCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubscribeCustomerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).SubscribeCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.CustomerService/SubscribeCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).SubscribeCustomer(ctx, req.(*SubscribeCustomerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_UnSubscribeCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CancelSubscriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).UnSubscribeCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.CustomerService/UnSubscribeCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).UnSubscribeCustomer(ctx, req.(*CancelSubscriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_SMSCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SMSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).SMSCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.CustomerService/SMSCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).SMSCustomer(ctx, req.(*SMSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_CallCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).CallCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.CustomerService/CallCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).CallCustomer(ctx, req.(*CallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_MMSCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MMSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).MMSCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.CustomerService/MMSCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).MMSCustomer(ctx, req.(*MMSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CustomerService_EmailCustomer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CustomerServiceServer).EmailCustomer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.CustomerService/EmailCustomer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CustomerServiceServer).EmailCustomer(ctx, req.(*EmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CustomerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.CustomerService",
	HandlerType: (*CustomerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCustomer",
			Handler:    _CustomerService_CreateCustomer_Handler,
		},
		{
			MethodName: "UpdateCustomer",
			Handler:    _CustomerService_UpdateCustomer_Handler,
		},
		{
			MethodName: "DeleteCustomer",
			Handler:    _CustomerService_DeleteCustomer_Handler,
		},
		{
			MethodName: "ListCustomers",
			Handler:    _CustomerService_ListCustomers_Handler,
		},
		{
			MethodName: "ChargeCustomer",
			Handler:    _CustomerService_ChargeCustomer_Handler,
		},
		{
			MethodName: "RefundCustomer",
			Handler:    _CustomerService_RefundCustomer_Handler,
		},
		{
			MethodName: "SubscribeCustomer",
			Handler:    _CustomerService_SubscribeCustomer_Handler,
		},
		{
			MethodName: "UnSubscribeCustomer",
			Handler:    _CustomerService_UnSubscribeCustomer_Handler,
		},
		{
			MethodName: "SMSCustomer",
			Handler:    _CustomerService_SMSCustomer_Handler,
		},
		{
			MethodName: "CallCustomer",
			Handler:    _CustomerService_CallCustomer_Handler,
		},
		{
			MethodName: "MMSCustomer",
			Handler:    _CustomerService_MMSCustomer_Handler,
		},
		{
			MethodName: "EmailCustomer",
			Handler:    _CustomerService_EmailCustomer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// PlanServiceClient is the client API for PlanService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlanServiceClient interface {
	CreateSubscriptionPlan(ctx context.Context, in *CreatePlanRequest, opts ...grpc.CallOption) (*JSON, error)
}

type planServiceClient struct {
	cc *grpc.ClientConn
}

func NewPlanServiceClient(cc *grpc.ClientConn) PlanServiceClient {
	return &planServiceClient{cc}
}

func (c *planServiceClient) CreateSubscriptionPlan(ctx context.Context, in *CreatePlanRequest, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.PlanService/CreateSubscriptionPlan", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlanServiceServer is the server API for PlanService service.
type PlanServiceServer interface {
	CreateSubscriptionPlan(context.Context, *CreatePlanRequest) (*JSON, error)
}

func RegisterPlanServiceServer(s *grpc.Server, srv PlanServiceServer) {
	s.RegisterService(&_PlanService_serviceDesc, srv)
}

func _PlanService_CreateSubscriptionPlan_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreatePlanRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlanServiceServer).CreateSubscriptionPlan(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.PlanService/CreateSubscriptionPlan",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlanServiceServer).CreateSubscriptionPlan(ctx, req.(*CreatePlanRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PlanService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.PlanService",
	HandlerType: (*PlanServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSubscriptionPlan",
			Handler:    _PlanService_CreateSubscriptionPlan_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	EmailUser(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*JSON, error)
	MessageUser(ctx context.Context, in *MessageUserRequest, opts ...grpc.CallOption) (*JSON, error)
	SMSUser(ctx context.Context, in *SMSRequest, opts ...grpc.CallOption) (*JSON, error)
	CallUser(ctx context.Context, in *CallRequest, opts ...grpc.CallOption) (*JSON, error)
	MMSUser(ctx context.Context, in *MMSRequest, opts ...grpc.CallOption) (*JSON, error)
	CreateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*JSON, error)
	UpdateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*JSON, error)
	DeleteUser(ctx context.Context, in *Id, opts ...grpc.CallOption) (*JSON, error)
	ListUsers(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*JSON, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) EmailUser(ctx context.Context, in *EmailRequest, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.UserService/EmailUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) MessageUser(ctx context.Context, in *MessageUserRequest, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.UserService/MessageUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) SMSUser(ctx context.Context, in *SMSRequest, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.UserService/SMSUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) CallUser(ctx context.Context, in *CallRequest, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.UserService/CallUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) MMSUser(ctx context.Context, in *MMSRequest, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.UserService/MMSUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) CreateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.UserService/CreateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.UserService/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteUser(ctx context.Context, in *Id, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.UserService/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) ListUsers(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*JSON, error) {
	out := new(JSON)
	err := c.cc.Invoke(ctx, "/api.UserService/ListUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	EmailUser(context.Context, *EmailRequest) (*JSON, error)
	MessageUser(context.Context, *MessageUserRequest) (*JSON, error)
	SMSUser(context.Context, *SMSRequest) (*JSON, error)
	CallUser(context.Context, *CallRequest) (*JSON, error)
	MMSUser(context.Context, *MMSRequest) (*JSON, error)
	CreateUser(context.Context, *User) (*JSON, error)
	UpdateUser(context.Context, *User) (*JSON, error)
	DeleteUser(context.Context, *Id) (*JSON, error)
	ListUsers(context.Context, *Empty) (*JSON, error)
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_EmailUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).EmailUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/EmailUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).EmailUser(ctx, req.(*EmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_MessageUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).MessageUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/MessageUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).MessageUser(ctx, req.(*MessageUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_SMSUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SMSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).SMSUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/SMSUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).SMSUser(ctx, req.(*SMSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_CallUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CallUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/CallUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CallUser(ctx, req.(*CallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_MMSUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MMSRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).MMSUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/MMSUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).MMSUser(ctx, req.(*MMSRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_CreateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).CreateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/CreateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).CreateUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Id)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteUser(ctx, req.(*Id))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_ListUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).ListUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.UserService/ListUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).ListUsers(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EmailUser",
			Handler:    _UserService_EmailUser_Handler,
		},
		{
			MethodName: "MessageUser",
			Handler:    _UserService_MessageUser_Handler,
		},
		{
			MethodName: "SMSUser",
			Handler:    _UserService_SMSUser_Handler,
		},
		{
			MethodName: "CallUser",
			Handler:    _UserService_CallUser_Handler,
		},
		{
			MethodName: "MMSUser",
			Handler:    _UserService_MMSUser_Handler,
		},
		{
			MethodName: "CreateUser",
			Handler:    _UserService_CreateUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _UserService_UpdateUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _UserService_DeleteUser_Handler,
		},
		{
			MethodName: "ListUsers",
			Handler:    _UserService_ListUsers_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

// HookServiceClient is the client API for HookService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HookServiceClient interface {
	Hook(ctx context.Context, in *Attachment, opts ...grpc.CallOption) (*Empty, error)
	ActionHook(ctx context.Context, in *ActionHookRequest, opts ...grpc.CallOption) (*Empty, error)
	SlashCmd(ctx context.Context, in *SlashCommand, opts ...grpc.CallOption) (*Empty, error)
}

type hookServiceClient struct {
	cc *grpc.ClientConn
}

func NewHookServiceClient(cc *grpc.ClientConn) HookServiceClient {
	return &hookServiceClient{cc}
}

func (c *hookServiceClient) Hook(ctx context.Context, in *Attachment, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.HookService/Hook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hookServiceClient) ActionHook(ctx context.Context, in *ActionHookRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.HookService/ActionHook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *hookServiceClient) SlashCmd(ctx context.Context, in *SlashCommand, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/api.HookService/SlashCmd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HookServiceServer is the server API for HookService service.
type HookServiceServer interface {
	Hook(context.Context, *Attachment) (*Empty, error)
	ActionHook(context.Context, *ActionHookRequest) (*Empty, error)
	SlashCmd(context.Context, *SlashCommand) (*Empty, error)
}

func RegisterHookServiceServer(s *grpc.Server, srv HookServiceServer) {
	s.RegisterService(&_HookService_serviceDesc, srv)
}

func _HookService_Hook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Attachment)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HookServiceServer).Hook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HookService/Hook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HookServiceServer).Hook(ctx, req.(*Attachment))
	}
	return interceptor(ctx, in, info, handler)
}

func _HookService_ActionHook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ActionHookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HookServiceServer).ActionHook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HookService/ActionHook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HookServiceServer).ActionHook(ctx, req.(*ActionHookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _HookService_SlashCmd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SlashCommand)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HookServiceServer).SlashCmd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HookService/SlashCmd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HookServiceServer).SlashCmd(ctx, req.(*SlashCommand))
	}
	return interceptor(ctx, in, info, handler)
}

var _HookService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.HookService",
	HandlerType: (*HookServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hook",
			Handler:    _HookService_Hook_Handler,
		},
		{
			MethodName: "ActionHook",
			Handler:    _HookService_ActionHook_Handler,
		},
		{
			MethodName: "SlashCmd",
			Handler:    _HookService_SlashCmd_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
