// Code generated by protoc-gen-go. DO NOT EDIT.
// source: images/images.proto

package images

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Format int32

const (
	Format_JPEG Format = 0
	Format_WEBP Format = 1
	Format_PNG  Format = 2
)

var Format_name = map[int32]string{
	0: "JPEG",
	1: "WEBP",
	2: "PNG",
}

var Format_value = map[string]int32{
	"JPEG": 0,
	"WEBP": 1,
	"PNG":  2,
}

func (x Format) String() string {
	return proto.EnumName(Format_name, int32(x))
}

func (Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_90e0231119e054a5, []int{0}
}

type Image struct {
	VersionName          string   `protobuf:"bytes,1,opt,name=version_name,json=versionName,proto3" json:"version_name,omitempty"`
	Filename             string   `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	Url                  string   `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Image) Reset()         { *m = Image{} }
func (m *Image) String() string { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()    {}
func (*Image) Descriptor() ([]byte, []int) {
	return fileDescriptor_90e0231119e054a5, []int{0}
}

func (m *Image) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Image.Unmarshal(m, b)
}
func (m *Image) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Image.Marshal(b, m, deterministic)
}
func (m *Image) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Image.Merge(m, src)
}
func (m *Image) XXX_Size() int {
	return xxx_messageInfo_Image.Size(m)
}
func (m *Image) XXX_DiscardUnknown() {
	xxx_messageInfo_Image.DiscardUnknown(m)
}

var xxx_messageInfo_Image proto.InternalMessageInfo

func (m *Image) GetVersionName() string {
	if m != nil {
		return m.VersionName
	}
	return ""
}

func (m *Image) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *Image) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type ImageOperation struct {
	VersionName          string   `protobuf:"bytes,1,opt,name=version_name,json=versionName,proto3" json:"version_name,omitempty"`
	Height               int32    `protobuf:"varint,2,opt,name=height,proto3" json:"height,omitempty"`
	Width                int32    `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Quality              int32    `protobuf:"varint,4,opt,name=quality,proto3" json:"quality,omitempty"`
	Compression          int32    `protobuf:"varint,5,opt,name=compression,proto3" json:"compression,omitempty"`
	Crop                 bool     `protobuf:"varint,6,opt,name=crop,proto3" json:"crop,omitempty"`
	Enlarge              bool     `protobuf:"varint,7,opt,name=enlarge,proto3" json:"enlarge,omitempty"`
	Flip                 bool     `protobuf:"varint,8,opt,name=flip,proto3" json:"flip,omitempty"`
	Interlace            bool     `protobuf:"varint,9,opt,name=interlace,proto3" json:"interlace,omitempty"`
	Format               Format   `protobuf:"varint,10,opt,name=format,proto3,enum=images.Format" json:"format,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageOperation) Reset()         { *m = ImageOperation{} }
func (m *ImageOperation) String() string { return proto.CompactTextString(m) }
func (*ImageOperation) ProtoMessage()    {}
func (*ImageOperation) Descriptor() ([]byte, []int) {
	return fileDescriptor_90e0231119e054a5, []int{1}
}

func (m *ImageOperation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageOperation.Unmarshal(m, b)
}
func (m *ImageOperation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageOperation.Marshal(b, m, deterministic)
}
func (m *ImageOperation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageOperation.Merge(m, src)
}
func (m *ImageOperation) XXX_Size() int {
	return xxx_messageInfo_ImageOperation.Size(m)
}
func (m *ImageOperation) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageOperation.DiscardUnknown(m)
}

var xxx_messageInfo_ImageOperation proto.InternalMessageInfo

func (m *ImageOperation) GetVersionName() string {
	if m != nil {
		return m.VersionName
	}
	return ""
}

func (m *ImageOperation) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ImageOperation) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *ImageOperation) GetQuality() int32 {
	if m != nil {
		return m.Quality
	}
	return 0
}

func (m *ImageOperation) GetCompression() int32 {
	if m != nil {
		return m.Compression
	}
	return 0
}

func (m *ImageOperation) GetCrop() bool {
	if m != nil {
		return m.Crop
	}
	return false
}

func (m *ImageOperation) GetEnlarge() bool {
	if m != nil {
		return m.Enlarge
	}
	return false
}

func (m *ImageOperation) GetFlip() bool {
	if m != nil {
		return m.Flip
	}
	return false
}

func (m *ImageOperation) GetInterlace() bool {
	if m != nil {
		return m.Interlace
	}
	return false
}

func (m *ImageOperation) GetFormat() Format {
	if m != nil {
		return m.Format
	}
	return Format_JPEG
}

type ImageStoreRequest struct {
	Filename             string            `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Data                 []byte            `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Ops                  []*ImageOperation `protobuf:"bytes,3,rep,name=ops,proto3" json:"ops,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ImageStoreRequest) Reset()         { *m = ImageStoreRequest{} }
func (m *ImageStoreRequest) String() string { return proto.CompactTextString(m) }
func (*ImageStoreRequest) ProtoMessage()    {}
func (*ImageStoreRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_90e0231119e054a5, []int{2}
}

func (m *ImageStoreRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageStoreRequest.Unmarshal(m, b)
}
func (m *ImageStoreRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageStoreRequest.Marshal(b, m, deterministic)
}
func (m *ImageStoreRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageStoreRequest.Merge(m, src)
}
func (m *ImageStoreRequest) XXX_Size() int {
	return xxx_messageInfo_ImageStoreRequest.Size(m)
}
func (m *ImageStoreRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageStoreRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImageStoreRequest proto.InternalMessageInfo

func (m *ImageStoreRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *ImageStoreRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ImageStoreRequest) GetOps() []*ImageOperation {
	if m != nil {
		return m.Ops
	}
	return nil
}

type ImageSyncResponse struct {
	Images               []*Image `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageSyncResponse) Reset()         { *m = ImageSyncResponse{} }
func (m *ImageSyncResponse) String() string { return proto.CompactTextString(m) }
func (*ImageSyncResponse) ProtoMessage()    {}
func (*ImageSyncResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_90e0231119e054a5, []int{3}
}

func (m *ImageSyncResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageSyncResponse.Unmarshal(m, b)
}
func (m *ImageSyncResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageSyncResponse.Marshal(b, m, deterministic)
}
func (m *ImageSyncResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageSyncResponse.Merge(m, src)
}
func (m *ImageSyncResponse) XXX_Size() int {
	return xxx_messageInfo_ImageSyncResponse.Size(m)
}
func (m *ImageSyncResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageSyncResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImageSyncResponse proto.InternalMessageInfo

func (m *ImageSyncResponse) GetImages() []*Image {
	if m != nil {
		return m.Images
	}
	return nil
}

type DeleteRequest struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_90e0231119e054a5, []int{4}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type DeleteResponse struct {
	Filename             string   `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_90e0231119e054a5, []int{5}
}

func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func init() {
	proto.RegisterEnum("images.Format", Format_name, Format_value)
	proto.RegisterType((*Image)(nil), "images.Image")
	proto.RegisterType((*ImageOperation)(nil), "images.ImageOperation")
	proto.RegisterType((*ImageStoreRequest)(nil), "images.ImageStoreRequest")
	proto.RegisterType((*ImageSyncResponse)(nil), "images.ImageSyncResponse")
	proto.RegisterType((*DeleteRequest)(nil), "images.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "images.DeleteResponse")
}

func init() { proto.RegisterFile("images/images.proto", fileDescriptor_90e0231119e054a5) }

var fileDescriptor_90e0231119e054a5 = []byte{
	// 398 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xc5, 0x71, 0xec, 0x38, 0x93, 0xd6, 0x32, 0x03, 0xaa, 0x56, 0x88, 0x83, 0xb1, 0x54, 0x64,
	0x01, 0x2a, 0x52, 0xb9, 0x71, 0x44, 0x94, 0x0a, 0x0e, 0x25, 0x5a, 0x0e, 0x70, 0x43, 0x8b, 0x3b,
	0x49, 0x56, 0xb2, 0xbd, 0xee, 0x7a, 0x03, 0xea, 0x07, 0xf1, 0x9f, 0x68, 0xc7, 0x36, 0x10, 0x0e,
	0xa8, 0x27, 0xbf, 0xf7, 0x66, 0xf4, 0x9e, 0xf5, 0x76, 0xe0, 0x81, 0x6e, 0xd4, 0x96, 0xfa, 0x97,
	0xc3, 0xe7, 0xac, 0xb3, 0xc6, 0x19, 0x8c, 0x07, 0x56, 0x7c, 0x81, 0xe8, 0xbd, 0x47, 0xf8, 0x04,
	0x8e, 0xbe, 0x93, 0xed, 0xb5, 0x69, 0xbf, 0xb6, 0xaa, 0x21, 0x11, 0xe4, 0x41, 0xb9, 0x94, 0xab,
	0x51, 0xbb, 0x52, 0x0d, 0xe1, 0x23, 0x48, 0x36, 0xba, 0x26, 0x1e, 0xcf, 0x78, 0xfc, 0x9b, 0x63,
	0x06, 0xe1, 0xde, 0xd6, 0x22, 0x64, 0xd9, 0xc3, 0xe2, 0xe7, 0x0c, 0x52, 0xb6, 0xfe, 0xd8, 0x91,
	0x55, 0x4e, 0x9b, 0xf6, 0x2e, 0x19, 0x27, 0x10, 0xef, 0x48, 0x6f, 0x77, 0x8e, 0x13, 0x22, 0x39,
	0x32, 0x7c, 0x08, 0xd1, 0x0f, 0x7d, 0xed, 0x76, 0x9c, 0x10, 0xc9, 0x81, 0xa0, 0x80, 0xc5, 0xcd,
	0x5e, 0xd5, 0xda, 0xdd, 0x8a, 0x39, 0xeb, 0x13, 0xc5, 0x1c, 0x56, 0x95, 0x69, 0x3a, 0x4b, 0xbd,
	0xb7, 0x16, 0x11, 0x4f, 0xff, 0x96, 0x10, 0x61, 0x5e, 0x59, 0xd3, 0x89, 0x38, 0x0f, 0xca, 0x44,
	0x32, 0xf6, 0x7e, 0xd4, 0xd6, 0xca, 0x6e, 0x49, 0x2c, 0x58, 0x9e, 0xa8, 0xdf, 0xde, 0xd4, 0xba,
	0x13, 0xc9, 0xb0, 0xed, 0x31, 0x3e, 0x86, 0xa5, 0x6e, 0x1d, 0xd9, 0x5a, 0x55, 0x24, 0x96, 0x3c,
	0xf8, 0x23, 0xe0, 0x53, 0x88, 0x37, 0xc6, 0x36, 0xca, 0x09, 0xc8, 0x83, 0x32, 0x3d, 0x4f, 0xcf,
	0xc6, 0x07, 0x78, 0xc7, 0xaa, 0x1c, 0xa7, 0x45, 0x03, 0xf7, 0xb9, 0xa6, 0x4f, 0xce, 0x58, 0x92,
	0x74, 0xb3, 0xa7, 0xde, 0x1d, 0x54, 0x1d, 0xfc, 0x53, 0x35, 0xc2, 0xfc, 0x5a, 0x39, 0xc5, 0x05,
	0x1d, 0x49, 0xc6, 0x58, 0x42, 0x68, 0xba, 0x5e, 0x84, 0x79, 0x58, 0xae, 0xce, 0x4f, 0xa6, 0xa4,
	0xc3, 0xfa, 0xa5, 0x5f, 0x29, 0x5e, 0x4f, 0x71, 0xb7, 0x6d, 0x25, 0xa9, 0xef, 0x4c, 0xdb, 0x13,
	0x9e, 0xc2, 0x78, 0x0f, 0x22, 0x60, 0x87, 0xe3, 0x03, 0x07, 0x39, 0x1d, 0xcb, 0x73, 0x38, 0x7e,
	0x4b, 0x35, 0xb9, 0xbb, 0xfc, 0x66, 0xf1, 0x02, 0xd2, 0x69, 0x79, 0x4c, 0xf9, 0xcf, 0xf6, 0xb3,
	0x53, 0x88, 0x87, 0x5e, 0x30, 0x81, 0xf9, 0x87, 0xf5, 0xc5, 0x65, 0x76, 0xcf, 0xa3, 0xcf, 0x17,
	0x6f, 0xd6, 0x59, 0x80, 0x0b, 0x08, 0xd7, 0x57, 0x97, 0xd9, 0xec, 0x5b, 0xcc, 0xd7, 0xfb, 0xea,
	0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0x22, 0x52, 0x84, 0xf8, 0xd4, 0x02, 0x00, 0x00,
}
